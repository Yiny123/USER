// Code generated by Wire protocol buffer compiler, do not edit.
// Source file: AssessModel.proto at 86:1
package com.yijianyi.protocol;

import com.squareup.wire.FieldEncoding;
import com.squareup.wire.Message;
import com.squareup.wire.ProtoAdapter;
import com.squareup.wire.ProtoReader;
import com.squareup.wire.ProtoWriter;
import com.squareup.wire.WireField;
import com.squareup.wire.internal.Internal;
import java.io.IOException;
import java.lang.Integer;
import java.lang.Long;
import java.lang.Object;
import java.lang.Override;
import java.lang.String;
import java.lang.StringBuilder;
import okio.ByteString;

/**
 * 老年人能力评估-生活能力
 */
public final class InsureAssessAbilityADL extends Message<InsureAssessAbilityADL, InsureAssessAbilityADL.Builder> {
  public static final ProtoAdapter<InsureAssessAbilityADL> ADAPTER = new ProtoAdapter_InsureAssessAbilityADL();

  private static final long serialVersionUID = 0L;

  public static final Long DEFAULT_ID = 0L;

  public static final Long DEFAULT_RESULTID = 0L;

  public static final Integer DEFAULT_SCORE = 0;

  public static final Integer DEFAULT_LEVEL = 0;

  public static final Integer DEFAULT_EAT = 0;

  public static final Integer DEFAULT_WATER = 0;

  public static final Integer DEFAULT_FACE = 0;

  public static final Integer DEFAULT_WEAR = 0;

  public static final Integer DEFAULT_FAEC = 0;

  public static final Integer DEFAULT_PEE = 0;

  public static final Integer DEFAULT_TOILET = 0;

  public static final Integer DEFAULT_CARRY = 0;

  public static final Integer DEFAULT_WALK = 0;

  public static final Integer DEFAULT_STAIR = 0;

  public static final Long DEFAULT_CREATETIME = 0L;

  public static final Long DEFAULT_CREATESTAFFID = 0L;

  public static final String DEFAULT_CREATESTAFFNAME = "";

  @WireField(
      tag = 1,
      adapter = "com.squareup.wire.ProtoAdapter#UINT64"
  )
  public final Long id;

  /**
   * 报告id
   */
  @WireField(
      tag = 2,
      adapter = "com.squareup.wire.ProtoAdapter#UINT64"
  )
  public final Long resultId;

  /**
   * 评估分数
   */
  @WireField(
      tag = 3,
      adapter = "com.squareup.wire.ProtoAdapter#UINT32"
  )
  public final Integer score;

  /**
   * 0级-100分 1级-65至95分 2级-45至60分 3级-小于40分
   */
  @WireField(
      tag = 4,
      adapter = "com.squareup.wire.ProtoAdapter#UINT32"
  )
  public final Integer level;

  /**
   * 进食 10-可独立进食 5-需部分帮助 0-需极大帮助
   */
  @WireField(
      tag = 5,
      adapter = "com.squareup.wire.ProtoAdapter#UINT32"
  )
  public final Integer eat;

  /**
   * 洗澡 5-可独立洗澡 0-需帮助
   */
  @WireField(
      tag = 6,
      adapter = "com.squareup.wire.ProtoAdapter#UINT32"
  )
  public final Integer water;

  /**
   * 修饰 5-可独立完成 0-需帮助
   */
  @WireField(
      tag = 7,
      adapter = "com.squareup.wire.ProtoAdapter#UINT32"
  )
  public final Integer face;

  /**
   * 穿衣 10-可独立完成 5-需部分帮助 0-需极大帮助
   */
  @WireField(
      tag = 8,
      adapter = "com.squareup.wire.ProtoAdapter#UINT32"
  )
  public final Integer wear;

  /**
   * 大便控制 10-可控制大便 5-偶尔失控 0-完全失控
   */
  @WireField(
      tag = 9,
      adapter = "com.squareup.wire.ProtoAdapter#UINT32"
  )
  public final Integer faec;

  /**
   * 小便控制 10-可控制大便 5-偶尔失控 0-完全失控
   */
  @WireField(
      tag = 10,
      adapter = "com.squareup.wire.ProtoAdapter#UINT32"
  )
  public final Integer pee;

  /**
   * 如厕 10-可独立完成 5-需部分帮助 0-需极大帮助
   */
  @WireField(
      tag = 11,
      adapter = "com.squareup.wire.ProtoAdapter#UINT32"
  )
  public final Integer toilet;

  /**
   * 床椅转移 15-可独立完成 10-需部分帮助 5-需极大帮助 0-完全依赖
   */
  @WireField(
      tag = 12,
      adapter = "com.squareup.wire.ProtoAdapter#UINT32"
  )
  public final Integer carry;

  /**
   * 平地行走 15-可独立行走 10-需部分帮助 5-需极大帮助 0-完全依赖
   */
  @WireField(
      tag = 13,
      adapter = "com.squareup.wire.ProtoAdapter#UINT32"
  )
  public final Integer walk;

  /**
   * 上下楼梯10-可独立完成 5-需部分帮助 0-需极大帮助
   */
  @WireField(
      tag = 14,
      adapter = "com.squareup.wire.ProtoAdapter#UINT32"
  )
  public final Integer stair;

  /**
   * 本次评估时间
   */
  @WireField(
      tag = 15,
      adapter = "com.squareup.wire.ProtoAdapter#UINT64"
  )
  public final Long createTime;

  /**
   * 操作员工ID
   */
  @WireField(
      tag = 16,
      adapter = "com.squareup.wire.ProtoAdapter#UINT64"
  )
  public final Long createStaffId;

  /**
   * 评估人员
   */
  @WireField(
      tag = 17,
      adapter = "com.squareup.wire.ProtoAdapter#STRING"
  )
  public final String createStaffName;

  public InsureAssessAbilityADL(Long id, Long resultId, Integer score, Integer level, Integer eat, Integer water, Integer face, Integer wear, Integer faec, Integer pee, Integer toilet, Integer carry, Integer walk, Integer stair, Long createTime, Long createStaffId, String createStaffName) {
    this(id, resultId, score, level, eat, water, face, wear, faec, pee, toilet, carry, walk, stair, createTime, createStaffId, createStaffName, ByteString.EMPTY);
  }

  public InsureAssessAbilityADL(Long id, Long resultId, Integer score, Integer level, Integer eat, Integer water, Integer face, Integer wear, Integer faec, Integer pee, Integer toilet, Integer carry, Integer walk, Integer stair, Long createTime, Long createStaffId, String createStaffName, ByteString unknownFields) {
    super(ADAPTER, unknownFields);
    this.id = id;
    this.resultId = resultId;
    this.score = score;
    this.level = level;
    this.eat = eat;
    this.water = water;
    this.face = face;
    this.wear = wear;
    this.faec = faec;
    this.pee = pee;
    this.toilet = toilet;
    this.carry = carry;
    this.walk = walk;
    this.stair = stair;
    this.createTime = createTime;
    this.createStaffId = createStaffId;
    this.createStaffName = createStaffName;
  }

  @Override
  public Builder newBuilder() {
    Builder builder = new Builder();
    builder.id = id;
    builder.resultId = resultId;
    builder.score = score;
    builder.level = level;
    builder.eat = eat;
    builder.water = water;
    builder.face = face;
    builder.wear = wear;
    builder.faec = faec;
    builder.pee = pee;
    builder.toilet = toilet;
    builder.carry = carry;
    builder.walk = walk;
    builder.stair = stair;
    builder.createTime = createTime;
    builder.createStaffId = createStaffId;
    builder.createStaffName = createStaffName;
    builder.addUnknownFields(unknownFields());
    return builder;
  }

  @Override
  public boolean equals(Object other) {
    if (other == this) return true;
    if (!(other instanceof InsureAssessAbilityADL)) return false;
    InsureAssessAbilityADL o = (InsureAssessAbilityADL) other;
    return unknownFields().equals(o.unknownFields())
        && Internal.equals(id, o.id)
        && Internal.equals(resultId, o.resultId)
        && Internal.equals(score, o.score)
        && Internal.equals(level, o.level)
        && Internal.equals(eat, o.eat)
        && Internal.equals(water, o.water)
        && Internal.equals(face, o.face)
        && Internal.equals(wear, o.wear)
        && Internal.equals(faec, o.faec)
        && Internal.equals(pee, o.pee)
        && Internal.equals(toilet, o.toilet)
        && Internal.equals(carry, o.carry)
        && Internal.equals(walk, o.walk)
        && Internal.equals(stair, o.stair)
        && Internal.equals(createTime, o.createTime)
        && Internal.equals(createStaffId, o.createStaffId)
        && Internal.equals(createStaffName, o.createStaffName);
  }

  @Override
  public int hashCode() {
    int result = super.hashCode;
    if (result == 0) {
      result = unknownFields().hashCode();
      result = result * 37 + (id != null ? id.hashCode() : 0);
      result = result * 37 + (resultId != null ? resultId.hashCode() : 0);
      result = result * 37 + (score != null ? score.hashCode() : 0);
      result = result * 37 + (level != null ? level.hashCode() : 0);
      result = result * 37 + (eat != null ? eat.hashCode() : 0);
      result = result * 37 + (water != null ? water.hashCode() : 0);
      result = result * 37 + (face != null ? face.hashCode() : 0);
      result = result * 37 + (wear != null ? wear.hashCode() : 0);
      result = result * 37 + (faec != null ? faec.hashCode() : 0);
      result = result * 37 + (pee != null ? pee.hashCode() : 0);
      result = result * 37 + (toilet != null ? toilet.hashCode() : 0);
      result = result * 37 + (carry != null ? carry.hashCode() : 0);
      result = result * 37 + (walk != null ? walk.hashCode() : 0);
      result = result * 37 + (stair != null ? stair.hashCode() : 0);
      result = result * 37 + (createTime != null ? createTime.hashCode() : 0);
      result = result * 37 + (createStaffId != null ? createStaffId.hashCode() : 0);
      result = result * 37 + (createStaffName != null ? createStaffName.hashCode() : 0);
      super.hashCode = result;
    }
    return result;
  }

  @Override
  public String toString() {
    StringBuilder builder = new StringBuilder();
    if (id != null) builder.append(", id=").append(id);
    if (resultId != null) builder.append(", resultId=").append(resultId);
    if (score != null) builder.append(", score=").append(score);
    if (level != null) builder.append(", level=").append(level);
    if (eat != null) builder.append(", eat=").append(eat);
    if (water != null) builder.append(", water=").append(water);
    if (face != null) builder.append(", face=").append(face);
    if (wear != null) builder.append(", wear=").append(wear);
    if (faec != null) builder.append(", faec=").append(faec);
    if (pee != null) builder.append(", pee=").append(pee);
    if (toilet != null) builder.append(", toilet=").append(toilet);
    if (carry != null) builder.append(", carry=").append(carry);
    if (walk != null) builder.append(", walk=").append(walk);
    if (stair != null) builder.append(", stair=").append(stair);
    if (createTime != null) builder.append(", createTime=").append(createTime);
    if (createStaffId != null) builder.append(", createStaffId=").append(createStaffId);
    if (createStaffName != null) builder.append(", createStaffName=").append(createStaffName);
    return builder.replace(0, 2, "InsureAssessAbilityADL{").append('}').toString();
  }

  public static final class Builder extends Message.Builder<InsureAssessAbilityADL, Builder> {
    public Long id;

    public Long resultId;

    public Integer score;

    public Integer level;

    public Integer eat;

    public Integer water;

    public Integer face;

    public Integer wear;

    public Integer faec;

    public Integer pee;

    public Integer toilet;

    public Integer carry;

    public Integer walk;

    public Integer stair;

    public Long createTime;

    public Long createStaffId;

    public String createStaffName;

    public Builder() {
    }

    public Builder id(Long id) {
      this.id = id;
      return this;
    }

    /**
     * 报告id
     */
    public Builder resultId(Long resultId) {
      this.resultId = resultId;
      return this;
    }

    /**
     * 评估分数
     */
    public Builder score(Integer score) {
      this.score = score;
      return this;
    }

    /**
     * 0级-100分 1级-65至95分 2级-45至60分 3级-小于40分
     */
    public Builder level(Integer level) {
      this.level = level;
      return this;
    }

    /**
     * 进食 10-可独立进食 5-需部分帮助 0-需极大帮助
     */
    public Builder eat(Integer eat) {
      this.eat = eat;
      return this;
    }

    /**
     * 洗澡 5-可独立洗澡 0-需帮助
     */
    public Builder water(Integer water) {
      this.water = water;
      return this;
    }

    /**
     * 修饰 5-可独立完成 0-需帮助
     */
    public Builder face(Integer face) {
      this.face = face;
      return this;
    }

    /**
     * 穿衣 10-可独立完成 5-需部分帮助 0-需极大帮助
     */
    public Builder wear(Integer wear) {
      this.wear = wear;
      return this;
    }

    /**
     * 大便控制 10-可控制大便 5-偶尔失控 0-完全失控
     */
    public Builder faec(Integer faec) {
      this.faec = faec;
      return this;
    }

    /**
     * 小便控制 10-可控制大便 5-偶尔失控 0-完全失控
     */
    public Builder pee(Integer pee) {
      this.pee = pee;
      return this;
    }

    /**
     * 如厕 10-可独立完成 5-需部分帮助 0-需极大帮助
     */
    public Builder toilet(Integer toilet) {
      this.toilet = toilet;
      return this;
    }

    /**
     * 床椅转移 15-可独立完成 10-需部分帮助 5-需极大帮助 0-完全依赖
     */
    public Builder carry(Integer carry) {
      this.carry = carry;
      return this;
    }

    /**
     * 平地行走 15-可独立行走 10-需部分帮助 5-需极大帮助 0-完全依赖
     */
    public Builder walk(Integer walk) {
      this.walk = walk;
      return this;
    }

    /**
     * 上下楼梯10-可独立完成 5-需部分帮助 0-需极大帮助
     */
    public Builder stair(Integer stair) {
      this.stair = stair;
      return this;
    }

    /**
     * 本次评估时间
     */
    public Builder createTime(Long createTime) {
      this.createTime = createTime;
      return this;
    }

    /**
     * 操作员工ID
     */
    public Builder createStaffId(Long createStaffId) {
      this.createStaffId = createStaffId;
      return this;
    }

    /**
     * 评估人员
     */
    public Builder createStaffName(String createStaffName) {
      this.createStaffName = createStaffName;
      return this;
    }

    @Override
    public InsureAssessAbilityADL build() {
      return new InsureAssessAbilityADL(id, resultId, score, level, eat, water, face, wear, faec, pee, toilet, carry, walk, stair, createTime, createStaffId, createStaffName, super.buildUnknownFields());
    }
  }

  private static final class ProtoAdapter_InsureAssessAbilityADL extends ProtoAdapter<InsureAssessAbilityADL> {
    ProtoAdapter_InsureAssessAbilityADL() {
      super(FieldEncoding.LENGTH_DELIMITED, InsureAssessAbilityADL.class);
    }

    @Override
    public int encodedSize(InsureAssessAbilityADL value) {
      return (value.id != null ? ProtoAdapter.UINT64.encodedSizeWithTag(1, value.id) : 0)
          + (value.resultId != null ? ProtoAdapter.UINT64.encodedSizeWithTag(2, value.resultId) : 0)
          + (value.score != null ? ProtoAdapter.UINT32.encodedSizeWithTag(3, value.score) : 0)
          + (value.level != null ? ProtoAdapter.UINT32.encodedSizeWithTag(4, value.level) : 0)
          + (value.eat != null ? ProtoAdapter.UINT32.encodedSizeWithTag(5, value.eat) : 0)
          + (value.water != null ? ProtoAdapter.UINT32.encodedSizeWithTag(6, value.water) : 0)
          + (value.face != null ? ProtoAdapter.UINT32.encodedSizeWithTag(7, value.face) : 0)
          + (value.wear != null ? ProtoAdapter.UINT32.encodedSizeWithTag(8, value.wear) : 0)
          + (value.faec != null ? ProtoAdapter.UINT32.encodedSizeWithTag(9, value.faec) : 0)
          + (value.pee != null ? ProtoAdapter.UINT32.encodedSizeWithTag(10, value.pee) : 0)
          + (value.toilet != null ? ProtoAdapter.UINT32.encodedSizeWithTag(11, value.toilet) : 0)
          + (value.carry != null ? ProtoAdapter.UINT32.encodedSizeWithTag(12, value.carry) : 0)
          + (value.walk != null ? ProtoAdapter.UINT32.encodedSizeWithTag(13, value.walk) : 0)
          + (value.stair != null ? ProtoAdapter.UINT32.encodedSizeWithTag(14, value.stair) : 0)
          + (value.createTime != null ? ProtoAdapter.UINT64.encodedSizeWithTag(15, value.createTime) : 0)
          + (value.createStaffId != null ? ProtoAdapter.UINT64.encodedSizeWithTag(16, value.createStaffId) : 0)
          + (value.createStaffName != null ? ProtoAdapter.STRING.encodedSizeWithTag(17, value.createStaffName) : 0)
          + value.unknownFields().size();
    }

    @Override
    public void encode(ProtoWriter writer, InsureAssessAbilityADL value) throws IOException {
      if (value.id != null) ProtoAdapter.UINT64.encodeWithTag(writer, 1, value.id);
      if (value.resultId != null) ProtoAdapter.UINT64.encodeWithTag(writer, 2, value.resultId);
      if (value.score != null) ProtoAdapter.UINT32.encodeWithTag(writer, 3, value.score);
      if (value.level != null) ProtoAdapter.UINT32.encodeWithTag(writer, 4, value.level);
      if (value.eat != null) ProtoAdapter.UINT32.encodeWithTag(writer, 5, value.eat);
      if (value.water != null) ProtoAdapter.UINT32.encodeWithTag(writer, 6, value.water);
      if (value.face != null) ProtoAdapter.UINT32.encodeWithTag(writer, 7, value.face);
      if (value.wear != null) ProtoAdapter.UINT32.encodeWithTag(writer, 8, value.wear);
      if (value.faec != null) ProtoAdapter.UINT32.encodeWithTag(writer, 9, value.faec);
      if (value.pee != null) ProtoAdapter.UINT32.encodeWithTag(writer, 10, value.pee);
      if (value.toilet != null) ProtoAdapter.UINT32.encodeWithTag(writer, 11, value.toilet);
      if (value.carry != null) ProtoAdapter.UINT32.encodeWithTag(writer, 12, value.carry);
      if (value.walk != null) ProtoAdapter.UINT32.encodeWithTag(writer, 13, value.walk);
      if (value.stair != null) ProtoAdapter.UINT32.encodeWithTag(writer, 14, value.stair);
      if (value.createTime != null) ProtoAdapter.UINT64.encodeWithTag(writer, 15, value.createTime);
      if (value.createStaffId != null) ProtoAdapter.UINT64.encodeWithTag(writer, 16, value.createStaffId);
      if (value.createStaffName != null) ProtoAdapter.STRING.encodeWithTag(writer, 17, value.createStaffName);
      writer.writeBytes(value.unknownFields());
    }

    @Override
    public InsureAssessAbilityADL decode(ProtoReader reader) throws IOException {
      Builder builder = new Builder();
      long token = reader.beginMessage();
      for (int tag; (tag = reader.nextTag()) != -1;) {
        switch (tag) {
          case 1: builder.id(ProtoAdapter.UINT64.decode(reader)); break;
          case 2: builder.resultId(ProtoAdapter.UINT64.decode(reader)); break;
          case 3: builder.score(ProtoAdapter.UINT32.decode(reader)); break;
          case 4: builder.level(ProtoAdapter.UINT32.decode(reader)); break;
          case 5: builder.eat(ProtoAdapter.UINT32.decode(reader)); break;
          case 6: builder.water(ProtoAdapter.UINT32.decode(reader)); break;
          case 7: builder.face(ProtoAdapter.UINT32.decode(reader)); break;
          case 8: builder.wear(ProtoAdapter.UINT32.decode(reader)); break;
          case 9: builder.faec(ProtoAdapter.UINT32.decode(reader)); break;
          case 10: builder.pee(ProtoAdapter.UINT32.decode(reader)); break;
          case 11: builder.toilet(ProtoAdapter.UINT32.decode(reader)); break;
          case 12: builder.carry(ProtoAdapter.UINT32.decode(reader)); break;
          case 13: builder.walk(ProtoAdapter.UINT32.decode(reader)); break;
          case 14: builder.stair(ProtoAdapter.UINT32.decode(reader)); break;
          case 15: builder.createTime(ProtoAdapter.UINT64.decode(reader)); break;
          case 16: builder.createStaffId(ProtoAdapter.UINT64.decode(reader)); break;
          case 17: builder.createStaffName(ProtoAdapter.STRING.decode(reader)); break;
          default: {
            FieldEncoding fieldEncoding = reader.peekFieldEncoding();
            Object value = fieldEncoding.rawProtoAdapter().decode(reader);
            builder.addUnknownField(tag, fieldEncoding, value);
          }
        }
      }
      reader.endMessage(token);
      return builder.build();
    }

    @Override
    public InsureAssessAbilityADL redact(InsureAssessAbilityADL value) {
      Builder builder = value.newBuilder();
      builder.clearUnknownFields();
      return builder.build();
    }
  }
}
