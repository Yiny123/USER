// Code generated by Wire protocol buffer compiler, do not edit.
// Source file: AppInterface.proto at 1737:1
package com.yijianyi.protocol;

import com.squareup.wire.FieldEncoding;
import com.squareup.wire.Message;
import com.squareup.wire.ProtoAdapter;
import com.squareup.wire.ProtoReader;
import com.squareup.wire.ProtoWriter;
import com.squareup.wire.WireField;
import com.squareup.wire.internal.Internal;
import java.io.IOException;
import java.lang.Integer;
import java.lang.Long;
import java.lang.Object;
import java.lang.Override;
import java.lang.String;
import java.lang.StringBuilder;
import java.util.Map;
import okio.ByteString;

/**
 * 新增照护计划
 */
public final class AddInsureOrderTendReq extends Message<AddInsureOrderTendReq, AddInsureOrderTendReq.Builder> {
  public static final ProtoAdapter<AddInsureOrderTendReq> ADAPTER = new ProtoAdapter_AddInsureOrderTendReq();

  private static final long serialVersionUID = 0L;

  public static final String DEFAULT_ORDERID = "";

  public static final Integer DEFAULT_TYPE = 0;

  public static final Long DEFAULT_ORDERTENDID = 0L;

  /**
   * 订单id
   */
  @WireField(
      tag = 1,
      adapter = "com.squareup.wire.ProtoAdapter#STRING"
  )
  public final String orderId;

  /**
   * 新增内容Map《照护类型id, Map《照护明细id(手输为负随机数), 内容》》
   */
  @WireField(
      tag = 2,
      keyAdapter = "com.squareup.wire.ProtoAdapter#UINT64",
      adapter = "com.yijianyi.protocol.AddInsureOrderTendReqVo#ADAPTER"
  )
  public final Map<Long, AddInsureOrderTendReqVo> messages;

  /**
   * 0-保存 1-提交
   */
  @WireField(
      tag = 3,
      adapter = "com.squareup.wire.ProtoAdapter#UINT32"
  )
  public final Integer type;

  /**
   * 计划id
   */
  @WireField(
      tag = 4,
      adapter = "com.squareup.wire.ProtoAdapter#UINT64"
  )
  public final Long orderTendId;

  public AddInsureOrderTendReq(String orderId, Map<Long, AddInsureOrderTendReqVo> messages, Integer type, Long orderTendId) {
    this(orderId, messages, type, orderTendId, ByteString.EMPTY);
  }

  public AddInsureOrderTendReq(String orderId, Map<Long, AddInsureOrderTendReqVo> messages, Integer type, Long orderTendId, ByteString unknownFields) {
    super(ADAPTER, unknownFields);
    this.orderId = orderId;
    this.messages = Internal.immutableCopyOf("messages", messages);
    this.type = type;
    this.orderTendId = orderTendId;
  }

  @Override
  public Builder newBuilder() {
    Builder builder = new Builder();
    builder.orderId = orderId;
    builder.messages = Internal.copyOf("messages", messages);
    builder.type = type;
    builder.orderTendId = orderTendId;
    builder.addUnknownFields(unknownFields());
    return builder;
  }

  @Override
  public boolean equals(Object other) {
    if (other == this) return true;
    if (!(other instanceof AddInsureOrderTendReq)) return false;
    AddInsureOrderTendReq o = (AddInsureOrderTendReq) other;
    return unknownFields().equals(o.unknownFields())
        && Internal.equals(orderId, o.orderId)
        && messages.equals(o.messages)
        && Internal.equals(type, o.type)
        && Internal.equals(orderTendId, o.orderTendId);
  }

  @Override
  public int hashCode() {
    int result = super.hashCode;
    if (result == 0) {
      result = unknownFields().hashCode();
      result = result * 37 + (orderId != null ? orderId.hashCode() : 0);
      result = result * 37 + messages.hashCode();
      result = result * 37 + (type != null ? type.hashCode() : 0);
      result = result * 37 + (orderTendId != null ? orderTendId.hashCode() : 0);
      super.hashCode = result;
    }
    return result;
  }

  @Override
  public String toString() {
    StringBuilder builder = new StringBuilder();
    if (orderId != null) builder.append(", orderId=").append(orderId);
    if (!messages.isEmpty()) builder.append(", messages=").append(messages);
    if (type != null) builder.append(", type=").append(type);
    if (orderTendId != null) builder.append(", orderTendId=").append(orderTendId);
    return builder.replace(0, 2, "AddInsureOrderTendReq{").append('}').toString();
  }

  public static final class Builder extends Message.Builder<AddInsureOrderTendReq, Builder> {
    public String orderId;

    public Map<Long, AddInsureOrderTendReqVo> messages;

    public Integer type;

    public Long orderTendId;

    public Builder() {
      messages = Internal.newMutableMap();
    }

    /**
     * 订单id
     */
    public Builder orderId(String orderId) {
      this.orderId = orderId;
      return this;
    }

    /**
     * 新增内容Map《照护类型id, Map《照护明细id(手输为负随机数), 内容》》
     */
    public Builder messages(Map<Long, AddInsureOrderTendReqVo> messages) {
      Internal.checkElementsNotNull(messages);
      this.messages = messages;
      return this;
    }

    /**
     * 0-保存 1-提交
     */
    public Builder type(Integer type) {
      this.type = type;
      return this;
    }

    /**
     * 计划id
     */
    public Builder orderTendId(Long orderTendId) {
      this.orderTendId = orderTendId;
      return this;
    }

    @Override
    public AddInsureOrderTendReq build() {
      return new AddInsureOrderTendReq(orderId, messages, type, orderTendId, super.buildUnknownFields());
    }
  }

  private static final class ProtoAdapter_AddInsureOrderTendReq extends ProtoAdapter<AddInsureOrderTendReq> {
    private final ProtoAdapter<Map<Long, AddInsureOrderTendReqVo>> messages = ProtoAdapter.newMapAdapter(ProtoAdapter.UINT64, AddInsureOrderTendReqVo.ADAPTER);

    ProtoAdapter_AddInsureOrderTendReq() {
      super(FieldEncoding.LENGTH_DELIMITED, AddInsureOrderTendReq.class);
    }

    @Override
    public int encodedSize(AddInsureOrderTendReq value) {
      return (value.orderId != null ? ProtoAdapter.STRING.encodedSizeWithTag(1, value.orderId) : 0)
          + messages.encodedSizeWithTag(2, value.messages)
          + (value.type != null ? ProtoAdapter.UINT32.encodedSizeWithTag(3, value.type) : 0)
          + (value.orderTendId != null ? ProtoAdapter.UINT64.encodedSizeWithTag(4, value.orderTendId) : 0)
          + value.unknownFields().size();
    }

    @Override
    public void encode(ProtoWriter writer, AddInsureOrderTendReq value) throws IOException {
      if (value.orderId != null) ProtoAdapter.STRING.encodeWithTag(writer, 1, value.orderId);
      messages.encodeWithTag(writer, 2, value.messages);
      if (value.type != null) ProtoAdapter.UINT32.encodeWithTag(writer, 3, value.type);
      if (value.orderTendId != null) ProtoAdapter.UINT64.encodeWithTag(writer, 4, value.orderTendId);
      writer.writeBytes(value.unknownFields());
    }

    @Override
    public AddInsureOrderTendReq decode(ProtoReader reader) throws IOException {
      Builder builder = new Builder();
      long token = reader.beginMessage();
      for (int tag; (tag = reader.nextTag()) != -1;) {
        switch (tag) {
          case 1: builder.orderId(ProtoAdapter.STRING.decode(reader)); break;
          case 2: builder.messages.putAll(messages.decode(reader)); break;
          case 3: builder.type(ProtoAdapter.UINT32.decode(reader)); break;
          case 4: builder.orderTendId(ProtoAdapter.UINT64.decode(reader)); break;
          default: {
            FieldEncoding fieldEncoding = reader.peekFieldEncoding();
            Object value = fieldEncoding.rawProtoAdapter().decode(reader);
            builder.addUnknownField(tag, fieldEncoding, value);
          }
        }
      }
      reader.endMessage(token);
      return builder.build();
    }

    @Override
    public AddInsureOrderTendReq redact(AddInsureOrderTendReq value) {
      Builder builder = value.newBuilder();
      Internal.redactElements(builder.messages, AddInsureOrderTendReqVo.ADAPTER);
      builder.clearUnknownFields();
      return builder.build();
    }
  }
}
