// Code generated by Wire protocol buffer compiler, do not edit.
// Source file: SaasModel.proto at 200:1
package com.yijianyi.protocol;

import com.squareup.wire.FieldEncoding;
import com.squareup.wire.Message;
import com.squareup.wire.ProtoAdapter;
import com.squareup.wire.ProtoReader;
import com.squareup.wire.ProtoWriter;
import com.squareup.wire.WireField;
import com.squareup.wire.internal.Internal;
import java.io.IOException;
import java.lang.Integer;
import java.lang.Long;
import java.lang.Object;
import java.lang.Override;
import java.lang.String;
import java.lang.StringBuilder;
import okio.ByteString;

public final class Price extends Message<Price, Price.Builder> {
  public static final ProtoAdapter<Price> ADAPTER = new ProtoAdapter_Price();

  private static final long serialVersionUID = 0L;

  public static final Long DEFAULT_PRICEID = 0L;

  public static final Long DEFAULT_COMPANYBRANCHID = 0L;

  public static final Long DEFAULT_COMPANYID = 0L;

  public static final Long DEFAULT_ORGID = 0L;

  public static final Long DEFAULT_BRANCHID = 0L;

  public static final Integer DEFAULT_STATE = 0;

  public static final Integer DEFAULT_LONGTERMINSURANCE = 0;

  public static final Integer DEFAULT_SERVICETYPE = 0;

  public static final String DEFAULT_SERVICEITEM = "";

  public static final Integer DEFAULT_SERVICEUNIT = 0;

  public static final Long DEFAULT_PRICE = 0L;

  public static final String DEFAULT_DESCRIPTION = "";

  public static final Long DEFAULT_CREATETIME = 0L;

  public static final Integer DEFAULT_CREATETYPE = 0;

  public static final String DEFAULT_CREATECHANNEL = "";

  public static final Long DEFAULT_CREATESTAFFID = 0L;

  public static final String DEFAULT_CREATESTAFFNAME = "";

  public static final String DEFAULT_PRICESTR = "";

  public static final Integer DEFAULT_ISREQUIRED = 0;

  public static final Integer DEFAULT_DEFAULTSTATUS = 0;

  public static final Long DEFAULT_HGREBATEPRICE = 0L;

  public static final Long DEFAULT_HGKINSREBATEPRICE = 0L;

  public static final Long DEFAULT_PREPAYFEE = 0L;

  public static final String DEFAULT_PREPAYFEESTR = "";

  public static final String DEFAULT_TOTALPRICE = "";

  public static final String DEFAULT_CONSENTTEXT = "";

  public static final Integer DEFAULT_SHOWSCOPE = 0;

  public static final Integer DEFAULT_SERVICESUBJOINTYPE = 0;

  public static final Integer DEFAULT_SUBJOINGROUPINGTYPE = 0;

  public static final Integer DEFAULT_ADLMINSCORE = 0;

  public static final Integer DEFAULT_ADLMAXSCORE = 0;

  public static final Long DEFAULT_SUBSIDY = 0L;

  public static final Integer DEFAULT_ISTENDAPPLY = 0;

  public static final String DEFAULT_FITPEOPLE = "";

  public static final String DEFAULT_SERVICECONTENT = "";

  public static final String DEFAULT_SERVICEPROCESS = "";

  public static final String DEFAULT_SERVICESTATE = "";

  public static final String DEFAULT_BILLINGNOTICE = "";

  public static final String DEFAULT_SERVICEINTRO = "";

  public static final String DEFAULT_QAS = "";

  /**
   * 价格配置ID
   */
  @WireField(
      tag = 1,
      adapter = "com.squareup.wire.ProtoAdapter#UINT64"
  )
  public final Long priceId;

  /**
   * 公司科室ID
   */
  @WireField(
      tag = 2,
      adapter = "com.squareup.wire.ProtoAdapter#UINT64"
  )
  public final Long companyBranchId;

  /**
   * 公司ID
   */
  @WireField(
      tag = 3,
      adapter = "com.squareup.wire.ProtoAdapter#UINT64"
  )
  public final Long companyId;

  /**
   * 机构ID
   */
  @WireField(
      tag = 4,
      adapter = "com.squareup.wire.ProtoAdapter#UINT64"
  )
  public final Long orgId;

  /**
   * 科室ID
   */
  @WireField(
      tag = 5,
      adapter = "com.squareup.wire.ProtoAdapter#UINT64"
  )
  public final Long branchId;

  @WireField(
      tag = 6,
      adapter = "com.squareup.wire.ProtoAdapter#INT32"
  )
  public final Integer state;

  /**
   * 是否可用长护险 1-可用 2不可用
   */
  @WireField(
      tag = 7,
      adapter = "com.squareup.wire.ProtoAdapter#UINT32"
  )
  public final Integer longTermInsurance;

  /**
   * 服务类型 1-1:1  2-1:N  99 机构套餐附加项目  101 居家照护 102家庭护士 103 康复护理 104 中医理疗 105 金牌月嫂 106 就医陪护 107 心理慰藉 108 产后恢复 109 育婴幼教 110 临终关怀 199 居家套餐附加项
   */
  @WireField(
      tag = 8,
      adapter = "com.squareup.wire.ProtoAdapter#UINT32"
  )
  public final Integer serviceType;

  /**
   * 服务项目
   */
  @WireField(
      tag = 9,
      adapter = "com.squareup.wire.ProtoAdapter#STRING"
  )
  public final String serviceItem;

  /**
   * 服务单位 1-次 2-小时 3-天
   */
  @WireField(
      tag = 10,
      adapter = "com.squareup.wire.ProtoAdapter#UINT32"
  )
  public final Integer serviceUnit;

  /**
   * 定价 单位分
   */
  @WireField(
      tag = 11,
      adapter = "com.squareup.wire.ProtoAdapter#INT64"
  )
  public final Long price;

  /**
   * 服务项目描述
   */
  @WireField(
      tag = 12,
      adapter = "com.squareup.wire.ProtoAdapter#STRING"
  )
  public final String description;

  /**
   * 创建时间
   */
  @WireField(
      tag = 13,
      adapter = "com.squareup.wire.ProtoAdapter#UINT64"
  )
  public final Long createTime;

  /**
   * 1-自己注册  2-公司添加
   */
  @WireField(
      tag = 14,
      adapter = "com.squareup.wire.ProtoAdapter#UINT32"
  )
  public final Integer createType;

  /**
   * 创建渠道
   */
  @WireField(
      tag = 15,
      adapter = "com.squareup.wire.ProtoAdapter#STRING"
  )
  public final String createChannel;

  /**
   * 创建员工ID
   */
  @WireField(
      tag = 16,
      adapter = "com.squareup.wire.ProtoAdapter#UINT64"
  )
  public final Long createStaffId;

  /**
   * 创建员工名称
   */
  @WireField(
      tag = 17,
      adapter = "com.squareup.wire.ProtoAdapter#STRING"
  )
  public final String createStaffName;

  /**
   * 定价字符串
   */
  @WireField(
      tag = 18,
      adapter = "com.squareup.wire.ProtoAdapter#STRING"
  )
  public final String priceStr;

  /**
   * 是否必选  1-不必选 2-必选
   */
  @WireField(
      tag = 19,
      adapter = "com.squareup.wire.ProtoAdapter#UINT32"
  )
  public final Integer isrequired;

  /**
   * 机构服务状态 0-非默认，1-默认
   */
  @WireField(
      tag = 20,
      adapter = "com.squareup.wire.ProtoAdapter#UINT32"
  )
  public final Integer defaultStatus;

  /**
   * 职工优惠价定价 单位分
   */
  @WireField(
      tag = 21,
      adapter = "com.squareup.wire.ProtoAdapter#INT64"
  )
  public final Long hgRebatePrice;

  /**
   * 职工家属优惠价定价 单位分
   */
  @WireField(
      tag = 22,
      adapter = "com.squareup.wire.ProtoAdapter#INT64"
  )
  public final Long hgKinsRebatePrice;

  /**
   * 服务定价的预付金 -1即没有配置，按科室的预付金
   */
  @WireField(
      tag = 23,
      adapter = "com.squareup.wire.ProtoAdapter#INT64"
  )
  public final Long prepayFee;

  /**
   * 服务定价的预付金 -1即没有配置，按科室的预付金
   */
  @WireField(
      tag = 24,
      adapter = "com.squareup.wire.ProtoAdapter#STRING"
  )
  public final String prepayFeeStr;

  /**
   * 机构预付金和门禁卡押金的和
   */
  @WireField(
      tag = 25,
      adapter = "com.squareup.wire.ProtoAdapter#STRING"
  )
  public final String totalPrice;

  /**
   * 知情同意书内容
   */
  @WireField(
      tag = 26,
      adapter = "com.squareup.wire.ProtoAdapter#STRING"
  )
  public final String consentText;

  /**
   * 0-全部 1-用户端 2-企业端
   */
  @WireField(
      tag = 27,
      adapter = "com.squareup.wire.ProtoAdapter#UINT32"
  )
  public final Integer showScope;

  /**
   * 附加项类型 0-普通附加项 1-金额调整 2-陪人床
   */
  @WireField(
      tag = 28,
      adapter = "com.squareup.wire.ProtoAdapter#UINT32"
  )
  public final Integer serviceSubjoinType;

  /**
   * 附加项子类型 1-专陪 2-多陪 3-夜陪
   */
  @WireField(
      tag = 29,
      adapter = "com.squareup.wire.ProtoAdapter#UINT32"
  )
  public final Integer subjoinGroupingType;

  /**
   * 长护险服务最低adl分数
   */
  @WireField(
      tag = 30,
      adapter = "com.squareup.wire.ProtoAdapter#UINT32"
  )
  public final Integer adlMinScore;

  /**
   * 长护险服务最高adl分数
   */
  @WireField(
      tag = 31,
      adapter = "com.squareup.wire.ProtoAdapter#UINT32"
  )
  public final Integer adlMaxScore;

  /**
   * 补贴标准（分）
   */
  @WireField(
      tag = 32,
      adapter = "com.squareup.wire.ProtoAdapter#UINT64"
  )
  public final Long subsidy;

  /**
   * 是否需要照护计划 0-不需要 1-需要
   */
  @WireField(
      tag = 33,
      adapter = "com.squareup.wire.ProtoAdapter#UINT32"
  )
  public final Integer isTendApply;

  /**
   * 使用人群
   */
  @WireField(
      tag = 34,
      adapter = "com.squareup.wire.ProtoAdapter#STRING"
  )
  public final String fitPeople;

  /**
   * 服务内容
   */
  @WireField(
      tag = 35,
      adapter = "com.squareup.wire.ProtoAdapter#STRING"
  )
  public final String serviceContent;

  /**
   * 服务流程
   */
  @WireField(
      tag = 36,
      adapter = "com.squareup.wire.ProtoAdapter#STRING"
  )
  public final String serviceProcess;

  /**
   * 服务说明
   */
  @WireField(
      tag = 37,
      adapter = "com.squareup.wire.ProtoAdapter#STRING"
  )
  public final String serviceState;

  /**
   * 计费须知
   */
  @WireField(
      tag = 38,
      adapter = "com.squareup.wire.ProtoAdapter#STRING"
  )
  public final String billingNotice;

  /**
   * 服务简介
   */
  @WireField(
      tag = 39,
      adapter = "com.squareup.wire.ProtoAdapter#STRING"
  )
  public final String serviceIntro;

  /**
   * 常见问题（问答）（json串存入字段）
   */
  @WireField(
      tag = 40,
      adapter = "com.squareup.wire.ProtoAdapter#STRING"
  )
  public final String qas;

  public Price(Long priceId, Long companyBranchId, Long companyId, Long orgId, Long branchId, Integer state, Integer longTermInsurance, Integer serviceType, String serviceItem, Integer serviceUnit, Long price, String description, Long createTime, Integer createType, String createChannel, Long createStaffId, String createStaffName, String priceStr, Integer isrequired, Integer defaultStatus, Long hgRebatePrice, Long hgKinsRebatePrice, Long prepayFee, String prepayFeeStr, String totalPrice, String consentText, Integer showScope, Integer serviceSubjoinType, Integer subjoinGroupingType, Integer adlMinScore, Integer adlMaxScore, Long subsidy, Integer isTendApply, String fitPeople, String serviceContent, String serviceProcess, String serviceState, String billingNotice, String serviceIntro, String qas) {
    this(priceId, companyBranchId, companyId, orgId, branchId, state, longTermInsurance, serviceType, serviceItem, serviceUnit, price, description, createTime, createType, createChannel, createStaffId, createStaffName, priceStr, isrequired, defaultStatus, hgRebatePrice, hgKinsRebatePrice, prepayFee, prepayFeeStr, totalPrice, consentText, showScope, serviceSubjoinType, subjoinGroupingType, adlMinScore, adlMaxScore, subsidy, isTendApply, fitPeople, serviceContent, serviceProcess, serviceState, billingNotice, serviceIntro, qas, ByteString.EMPTY);
  }

  public Price(Long priceId, Long companyBranchId, Long companyId, Long orgId, Long branchId, Integer state, Integer longTermInsurance, Integer serviceType, String serviceItem, Integer serviceUnit, Long price, String description, Long createTime, Integer createType, String createChannel, Long createStaffId, String createStaffName, String priceStr, Integer isrequired, Integer defaultStatus, Long hgRebatePrice, Long hgKinsRebatePrice, Long prepayFee, String prepayFeeStr, String totalPrice, String consentText, Integer showScope, Integer serviceSubjoinType, Integer subjoinGroupingType, Integer adlMinScore, Integer adlMaxScore, Long subsidy, Integer isTendApply, String fitPeople, String serviceContent, String serviceProcess, String serviceState, String billingNotice, String serviceIntro, String qas, ByteString unknownFields) {
    super(ADAPTER, unknownFields);
    this.priceId = priceId;
    this.companyBranchId = companyBranchId;
    this.companyId = companyId;
    this.orgId = orgId;
    this.branchId = branchId;
    this.state = state;
    this.longTermInsurance = longTermInsurance;
    this.serviceType = serviceType;
    this.serviceItem = serviceItem;
    this.serviceUnit = serviceUnit;
    this.price = price;
    this.description = description;
    this.createTime = createTime;
    this.createType = createType;
    this.createChannel = createChannel;
    this.createStaffId = createStaffId;
    this.createStaffName = createStaffName;
    this.priceStr = priceStr;
    this.isrequired = isrequired;
    this.defaultStatus = defaultStatus;
    this.hgRebatePrice = hgRebatePrice;
    this.hgKinsRebatePrice = hgKinsRebatePrice;
    this.prepayFee = prepayFee;
    this.prepayFeeStr = prepayFeeStr;
    this.totalPrice = totalPrice;
    this.consentText = consentText;
    this.showScope = showScope;
    this.serviceSubjoinType = serviceSubjoinType;
    this.subjoinGroupingType = subjoinGroupingType;
    this.adlMinScore = adlMinScore;
    this.adlMaxScore = adlMaxScore;
    this.subsidy = subsidy;
    this.isTendApply = isTendApply;
    this.fitPeople = fitPeople;
    this.serviceContent = serviceContent;
    this.serviceProcess = serviceProcess;
    this.serviceState = serviceState;
    this.billingNotice = billingNotice;
    this.serviceIntro = serviceIntro;
    this.qas = qas;
  }

  @Override
  public Builder newBuilder() {
    Builder builder = new Builder();
    builder.priceId = priceId;
    builder.companyBranchId = companyBranchId;
    builder.companyId = companyId;
    builder.orgId = orgId;
    builder.branchId = branchId;
    builder.state = state;
    builder.longTermInsurance = longTermInsurance;
    builder.serviceType = serviceType;
    builder.serviceItem = serviceItem;
    builder.serviceUnit = serviceUnit;
    builder.price = price;
    builder.description = description;
    builder.createTime = createTime;
    builder.createType = createType;
    builder.createChannel = createChannel;
    builder.createStaffId = createStaffId;
    builder.createStaffName = createStaffName;
    builder.priceStr = priceStr;
    builder.isrequired = isrequired;
    builder.defaultStatus = defaultStatus;
    builder.hgRebatePrice = hgRebatePrice;
    builder.hgKinsRebatePrice = hgKinsRebatePrice;
    builder.prepayFee = prepayFee;
    builder.prepayFeeStr = prepayFeeStr;
    builder.totalPrice = totalPrice;
    builder.consentText = consentText;
    builder.showScope = showScope;
    builder.serviceSubjoinType = serviceSubjoinType;
    builder.subjoinGroupingType = subjoinGroupingType;
    builder.adlMinScore = adlMinScore;
    builder.adlMaxScore = adlMaxScore;
    builder.subsidy = subsidy;
    builder.isTendApply = isTendApply;
    builder.fitPeople = fitPeople;
    builder.serviceContent = serviceContent;
    builder.serviceProcess = serviceProcess;
    builder.serviceState = serviceState;
    builder.billingNotice = billingNotice;
    builder.serviceIntro = serviceIntro;
    builder.qas = qas;
    builder.addUnknownFields(unknownFields());
    return builder;
  }

  @Override
  public boolean equals(Object other) {
    if (other == this) return true;
    if (!(other instanceof Price)) return false;
    Price o = (Price) other;
    return unknownFields().equals(o.unknownFields())
        && Internal.equals(priceId, o.priceId)
        && Internal.equals(companyBranchId, o.companyBranchId)
        && Internal.equals(companyId, o.companyId)
        && Internal.equals(orgId, o.orgId)
        && Internal.equals(branchId, o.branchId)
        && Internal.equals(state, o.state)
        && Internal.equals(longTermInsurance, o.longTermInsurance)
        && Internal.equals(serviceType, o.serviceType)
        && Internal.equals(serviceItem, o.serviceItem)
        && Internal.equals(serviceUnit, o.serviceUnit)
        && Internal.equals(price, o.price)
        && Internal.equals(description, o.description)
        && Internal.equals(createTime, o.createTime)
        && Internal.equals(createType, o.createType)
        && Internal.equals(createChannel, o.createChannel)
        && Internal.equals(createStaffId, o.createStaffId)
        && Internal.equals(createStaffName, o.createStaffName)
        && Internal.equals(priceStr, o.priceStr)
        && Internal.equals(isrequired, o.isrequired)
        && Internal.equals(defaultStatus, o.defaultStatus)
        && Internal.equals(hgRebatePrice, o.hgRebatePrice)
        && Internal.equals(hgKinsRebatePrice, o.hgKinsRebatePrice)
        && Internal.equals(prepayFee, o.prepayFee)
        && Internal.equals(prepayFeeStr, o.prepayFeeStr)
        && Internal.equals(totalPrice, o.totalPrice)
        && Internal.equals(consentText, o.consentText)
        && Internal.equals(showScope, o.showScope)
        && Internal.equals(serviceSubjoinType, o.serviceSubjoinType)
        && Internal.equals(subjoinGroupingType, o.subjoinGroupingType)
        && Internal.equals(adlMinScore, o.adlMinScore)
        && Internal.equals(adlMaxScore, o.adlMaxScore)
        && Internal.equals(subsidy, o.subsidy)
        && Internal.equals(isTendApply, o.isTendApply)
        && Internal.equals(fitPeople, o.fitPeople)
        && Internal.equals(serviceContent, o.serviceContent)
        && Internal.equals(serviceProcess, o.serviceProcess)
        && Internal.equals(serviceState, o.serviceState)
        && Internal.equals(billingNotice, o.billingNotice)
        && Internal.equals(serviceIntro, o.serviceIntro)
        && Internal.equals(qas, o.qas);
  }

  @Override
  public int hashCode() {
    int result = super.hashCode;
    if (result == 0) {
      result = unknownFields().hashCode();
      result = result * 37 + (priceId != null ? priceId.hashCode() : 0);
      result = result * 37 + (companyBranchId != null ? companyBranchId.hashCode() : 0);
      result = result * 37 + (companyId != null ? companyId.hashCode() : 0);
      result = result * 37 + (orgId != null ? orgId.hashCode() : 0);
      result = result * 37 + (branchId != null ? branchId.hashCode() : 0);
      result = result * 37 + (state != null ? state.hashCode() : 0);
      result = result * 37 + (longTermInsurance != null ? longTermInsurance.hashCode() : 0);
      result = result * 37 + (serviceType != null ? serviceType.hashCode() : 0);
      result = result * 37 + (serviceItem != null ? serviceItem.hashCode() : 0);
      result = result * 37 + (serviceUnit != null ? serviceUnit.hashCode() : 0);
      result = result * 37 + (price != null ? price.hashCode() : 0);
      result = result * 37 + (description != null ? description.hashCode() : 0);
      result = result * 37 + (createTime != null ? createTime.hashCode() : 0);
      result = result * 37 + (createType != null ? createType.hashCode() : 0);
      result = result * 37 + (createChannel != null ? createChannel.hashCode() : 0);
      result = result * 37 + (createStaffId != null ? createStaffId.hashCode() : 0);
      result = result * 37 + (createStaffName != null ? createStaffName.hashCode() : 0);
      result = result * 37 + (priceStr != null ? priceStr.hashCode() : 0);
      result = result * 37 + (isrequired != null ? isrequired.hashCode() : 0);
      result = result * 37 + (defaultStatus != null ? defaultStatus.hashCode() : 0);
      result = result * 37 + (hgRebatePrice != null ? hgRebatePrice.hashCode() : 0);
      result = result * 37 + (hgKinsRebatePrice != null ? hgKinsRebatePrice.hashCode() : 0);
      result = result * 37 + (prepayFee != null ? prepayFee.hashCode() : 0);
      result = result * 37 + (prepayFeeStr != null ? prepayFeeStr.hashCode() : 0);
      result = result * 37 + (totalPrice != null ? totalPrice.hashCode() : 0);
      result = result * 37 + (consentText != null ? consentText.hashCode() : 0);
      result = result * 37 + (showScope != null ? showScope.hashCode() : 0);
      result = result * 37 + (serviceSubjoinType != null ? serviceSubjoinType.hashCode() : 0);
      result = result * 37 + (subjoinGroupingType != null ? subjoinGroupingType.hashCode() : 0);
      result = result * 37 + (adlMinScore != null ? adlMinScore.hashCode() : 0);
      result = result * 37 + (adlMaxScore != null ? adlMaxScore.hashCode() : 0);
      result = result * 37 + (subsidy != null ? subsidy.hashCode() : 0);
      result = result * 37 + (isTendApply != null ? isTendApply.hashCode() : 0);
      result = result * 37 + (fitPeople != null ? fitPeople.hashCode() : 0);
      result = result * 37 + (serviceContent != null ? serviceContent.hashCode() : 0);
      result = result * 37 + (serviceProcess != null ? serviceProcess.hashCode() : 0);
      result = result * 37 + (serviceState != null ? serviceState.hashCode() : 0);
      result = result * 37 + (billingNotice != null ? billingNotice.hashCode() : 0);
      result = result * 37 + (serviceIntro != null ? serviceIntro.hashCode() : 0);
      result = result * 37 + (qas != null ? qas.hashCode() : 0);
      super.hashCode = result;
    }
    return result;
  }

  @Override
  public String toString() {
    StringBuilder builder = new StringBuilder();
    if (priceId != null) builder.append(", priceId=").append(priceId);
    if (companyBranchId != null) builder.append(", companyBranchId=").append(companyBranchId);
    if (companyId != null) builder.append(", companyId=").append(companyId);
    if (orgId != null) builder.append(", orgId=").append(orgId);
    if (branchId != null) builder.append(", branchId=").append(branchId);
    if (state != null) builder.append(", state=").append(state);
    if (longTermInsurance != null) builder.append(", longTermInsurance=").append(longTermInsurance);
    if (serviceType != null) builder.append(", serviceType=").append(serviceType);
    if (serviceItem != null) builder.append(", serviceItem=").append(serviceItem);
    if (serviceUnit != null) builder.append(", serviceUnit=").append(serviceUnit);
    if (price != null) builder.append(", price=").append(price);
    if (description != null) builder.append(", description=").append(description);
    if (createTime != null) builder.append(", createTime=").append(createTime);
    if (createType != null) builder.append(", createType=").append(createType);
    if (createChannel != null) builder.append(", createChannel=").append(createChannel);
    if (createStaffId != null) builder.append(", createStaffId=").append(createStaffId);
    if (createStaffName != null) builder.append(", createStaffName=").append(createStaffName);
    if (priceStr != null) builder.append(", priceStr=").append(priceStr);
    if (isrequired != null) builder.append(", isrequired=").append(isrequired);
    if (defaultStatus != null) builder.append(", defaultStatus=").append(defaultStatus);
    if (hgRebatePrice != null) builder.append(", hgRebatePrice=").append(hgRebatePrice);
    if (hgKinsRebatePrice != null) builder.append(", hgKinsRebatePrice=").append(hgKinsRebatePrice);
    if (prepayFee != null) builder.append(", prepayFee=").append(prepayFee);
    if (prepayFeeStr != null) builder.append(", prepayFeeStr=").append(prepayFeeStr);
    if (totalPrice != null) builder.append(", totalPrice=").append(totalPrice);
    if (consentText != null) builder.append(", consentText=").append(consentText);
    if (showScope != null) builder.append(", showScope=").append(showScope);
    if (serviceSubjoinType != null) builder.append(", serviceSubjoinType=").append(serviceSubjoinType);
    if (subjoinGroupingType != null) builder.append(", subjoinGroupingType=").append(subjoinGroupingType);
    if (adlMinScore != null) builder.append(", adlMinScore=").append(adlMinScore);
    if (adlMaxScore != null) builder.append(", adlMaxScore=").append(adlMaxScore);
    if (subsidy != null) builder.append(", subsidy=").append(subsidy);
    if (isTendApply != null) builder.append(", isTendApply=").append(isTendApply);
    if (fitPeople != null) builder.append(", fitPeople=").append(fitPeople);
    if (serviceContent != null) builder.append(", serviceContent=").append(serviceContent);
    if (serviceProcess != null) builder.append(", serviceProcess=").append(serviceProcess);
    if (serviceState != null) builder.append(", serviceState=").append(serviceState);
    if (billingNotice != null) builder.append(", billingNotice=").append(billingNotice);
    if (serviceIntro != null) builder.append(", serviceIntro=").append(serviceIntro);
    if (qas != null) builder.append(", qas=").append(qas);
    return builder.replace(0, 2, "Price{").append('}').toString();
  }

  public static final class Builder extends Message.Builder<Price, Builder> {
    public Long priceId;

    public Long companyBranchId;

    public Long companyId;

    public Long orgId;

    public Long branchId;

    public Integer state;

    public Integer longTermInsurance;

    public Integer serviceType;

    public String serviceItem;

    public Integer serviceUnit;

    public Long price;

    public String description;

    public Long createTime;

    public Integer createType;

    public String createChannel;

    public Long createStaffId;

    public String createStaffName;

    public String priceStr;

    public Integer isrequired;

    public Integer defaultStatus;

    public Long hgRebatePrice;

    public Long hgKinsRebatePrice;

    public Long prepayFee;

    public String prepayFeeStr;

    public String totalPrice;

    public String consentText;

    public Integer showScope;

    public Integer serviceSubjoinType;

    public Integer subjoinGroupingType;

    public Integer adlMinScore;

    public Integer adlMaxScore;

    public Long subsidy;

    public Integer isTendApply;

    public String fitPeople;

    public String serviceContent;

    public String serviceProcess;

    public String serviceState;

    public String billingNotice;

    public String serviceIntro;

    public String qas;

    public Builder() {
    }

    /**
     * 价格配置ID
     */
    public Builder priceId(Long priceId) {
      this.priceId = priceId;
      return this;
    }

    /**
     * 公司科室ID
     */
    public Builder companyBranchId(Long companyBranchId) {
      this.companyBranchId = companyBranchId;
      return this;
    }

    /**
     * 公司ID
     */
    public Builder companyId(Long companyId) {
      this.companyId = companyId;
      return this;
    }

    /**
     * 机构ID
     */
    public Builder orgId(Long orgId) {
      this.orgId = orgId;
      return this;
    }

    /**
     * 科室ID
     */
    public Builder branchId(Long branchId) {
      this.branchId = branchId;
      return this;
    }

    public Builder state(Integer state) {
      this.state = state;
      return this;
    }

    /**
     * 是否可用长护险 1-可用 2不可用
     */
    public Builder longTermInsurance(Integer longTermInsurance) {
      this.longTermInsurance = longTermInsurance;
      return this;
    }

    /**
     * 服务类型 1-1:1  2-1:N  99 机构套餐附加项目  101 居家照护 102家庭护士 103 康复护理 104 中医理疗 105 金牌月嫂 106 就医陪护 107 心理慰藉 108 产后恢复 109 育婴幼教 110 临终关怀 199 居家套餐附加项
     */
    public Builder serviceType(Integer serviceType) {
      this.serviceType = serviceType;
      return this;
    }

    /**
     * 服务项目
     */
    public Builder serviceItem(String serviceItem) {
      this.serviceItem = serviceItem;
      return this;
    }

    /**
     * 服务单位 1-次 2-小时 3-天
     */
    public Builder serviceUnit(Integer serviceUnit) {
      this.serviceUnit = serviceUnit;
      return this;
    }

    /**
     * 定价 单位分
     */
    public Builder price(Long price) {
      this.price = price;
      return this;
    }

    /**
     * 服务项目描述
     */
    public Builder description(String description) {
      this.description = description;
      return this;
    }

    /**
     * 创建时间
     */
    public Builder createTime(Long createTime) {
      this.createTime = createTime;
      return this;
    }

    /**
     * 1-自己注册  2-公司添加
     */
    public Builder createType(Integer createType) {
      this.createType = createType;
      return this;
    }

    /**
     * 创建渠道
     */
    public Builder createChannel(String createChannel) {
      this.createChannel = createChannel;
      return this;
    }

    /**
     * 创建员工ID
     */
    public Builder createStaffId(Long createStaffId) {
      this.createStaffId = createStaffId;
      return this;
    }

    /**
     * 创建员工名称
     */
    public Builder createStaffName(String createStaffName) {
      this.createStaffName = createStaffName;
      return this;
    }

    /**
     * 定价字符串
     */
    public Builder priceStr(String priceStr) {
      this.priceStr = priceStr;
      return this;
    }

    /**
     * 是否必选  1-不必选 2-必选
     */
    public Builder isrequired(Integer isrequired) {
      this.isrequired = isrequired;
      return this;
    }

    /**
     * 机构服务状态 0-非默认，1-默认
     */
    public Builder defaultStatus(Integer defaultStatus) {
      this.defaultStatus = defaultStatus;
      return this;
    }

    /**
     * 职工优惠价定价 单位分
     */
    public Builder hgRebatePrice(Long hgRebatePrice) {
      this.hgRebatePrice = hgRebatePrice;
      return this;
    }

    /**
     * 职工家属优惠价定价 单位分
     */
    public Builder hgKinsRebatePrice(Long hgKinsRebatePrice) {
      this.hgKinsRebatePrice = hgKinsRebatePrice;
      return this;
    }

    /**
     * 服务定价的预付金 -1即没有配置，按科室的预付金
     */
    public Builder prepayFee(Long prepayFee) {
      this.prepayFee = prepayFee;
      return this;
    }

    /**
     * 服务定价的预付金 -1即没有配置，按科室的预付金
     */
    public Builder prepayFeeStr(String prepayFeeStr) {
      this.prepayFeeStr = prepayFeeStr;
      return this;
    }

    /**
     * 机构预付金和门禁卡押金的和
     */
    public Builder totalPrice(String totalPrice) {
      this.totalPrice = totalPrice;
      return this;
    }

    /**
     * 知情同意书内容
     */
    public Builder consentText(String consentText) {
      this.consentText = consentText;
      return this;
    }

    /**
     * 0-全部 1-用户端 2-企业端
     */
    public Builder showScope(Integer showScope) {
      this.showScope = showScope;
      return this;
    }

    /**
     * 附加项类型 0-普通附加项 1-金额调整 2-陪人床
     */
    public Builder serviceSubjoinType(Integer serviceSubjoinType) {
      this.serviceSubjoinType = serviceSubjoinType;
      return this;
    }

    /**
     * 附加项子类型 1-专陪 2-多陪 3-夜陪
     */
    public Builder subjoinGroupingType(Integer subjoinGroupingType) {
      this.subjoinGroupingType = subjoinGroupingType;
      return this;
    }

    /**
     * 长护险服务最低adl分数
     */
    public Builder adlMinScore(Integer adlMinScore) {
      this.adlMinScore = adlMinScore;
      return this;
    }

    /**
     * 长护险服务最高adl分数
     */
    public Builder adlMaxScore(Integer adlMaxScore) {
      this.adlMaxScore = adlMaxScore;
      return this;
    }

    /**
     * 补贴标准（分）
     */
    public Builder subsidy(Long subsidy) {
      this.subsidy = subsidy;
      return this;
    }

    /**
     * 是否需要照护计划 0-不需要 1-需要
     */
    public Builder isTendApply(Integer isTendApply) {
      this.isTendApply = isTendApply;
      return this;
    }

    /**
     * 使用人群
     */
    public Builder fitPeople(String fitPeople) {
      this.fitPeople = fitPeople;
      return this;
    }

    /**
     * 服务内容
     */
    public Builder serviceContent(String serviceContent) {
      this.serviceContent = serviceContent;
      return this;
    }

    /**
     * 服务流程
     */
    public Builder serviceProcess(String serviceProcess) {
      this.serviceProcess = serviceProcess;
      return this;
    }

    /**
     * 服务说明
     */
    public Builder serviceState(String serviceState) {
      this.serviceState = serviceState;
      return this;
    }

    /**
     * 计费须知
     */
    public Builder billingNotice(String billingNotice) {
      this.billingNotice = billingNotice;
      return this;
    }

    /**
     * 服务简介
     */
    public Builder serviceIntro(String serviceIntro) {
      this.serviceIntro = serviceIntro;
      return this;
    }

    /**
     * 常见问题（问答）（json串存入字段）
     */
    public Builder qas(String qas) {
      this.qas = qas;
      return this;
    }

    @Override
    public Price build() {
      return new Price(priceId, companyBranchId, companyId, orgId, branchId, state, longTermInsurance, serviceType, serviceItem, serviceUnit, price, description, createTime, createType, createChannel, createStaffId, createStaffName, priceStr, isrequired, defaultStatus, hgRebatePrice, hgKinsRebatePrice, prepayFee, prepayFeeStr, totalPrice, consentText, showScope, serviceSubjoinType, subjoinGroupingType, adlMinScore, adlMaxScore, subsidy, isTendApply, fitPeople, serviceContent, serviceProcess, serviceState, billingNotice, serviceIntro, qas, super.buildUnknownFields());
    }
  }

  private static final class ProtoAdapter_Price extends ProtoAdapter<Price> {
    ProtoAdapter_Price() {
      super(FieldEncoding.LENGTH_DELIMITED, Price.class);
    }

    @Override
    public int encodedSize(Price value) {
      return (value.priceId != null ? ProtoAdapter.UINT64.encodedSizeWithTag(1, value.priceId) : 0)
          + (value.companyBranchId != null ? ProtoAdapter.UINT64.encodedSizeWithTag(2, value.companyBranchId) : 0)
          + (value.companyId != null ? ProtoAdapter.UINT64.encodedSizeWithTag(3, value.companyId) : 0)
          + (value.orgId != null ? ProtoAdapter.UINT64.encodedSizeWithTag(4, value.orgId) : 0)
          + (value.branchId != null ? ProtoAdapter.UINT64.encodedSizeWithTag(5, value.branchId) : 0)
          + (value.state != null ? ProtoAdapter.INT32.encodedSizeWithTag(6, value.state) : 0)
          + (value.longTermInsurance != null ? ProtoAdapter.UINT32.encodedSizeWithTag(7, value.longTermInsurance) : 0)
          + (value.serviceType != null ? ProtoAdapter.UINT32.encodedSizeWithTag(8, value.serviceType) : 0)
          + (value.serviceItem != null ? ProtoAdapter.STRING.encodedSizeWithTag(9, value.serviceItem) : 0)
          + (value.serviceUnit != null ? ProtoAdapter.UINT32.encodedSizeWithTag(10, value.serviceUnit) : 0)
          + (value.price != null ? ProtoAdapter.INT64.encodedSizeWithTag(11, value.price) : 0)
          + (value.description != null ? ProtoAdapter.STRING.encodedSizeWithTag(12, value.description) : 0)
          + (value.createTime != null ? ProtoAdapter.UINT64.encodedSizeWithTag(13, value.createTime) : 0)
          + (value.createType != null ? ProtoAdapter.UINT32.encodedSizeWithTag(14, value.createType) : 0)
          + (value.createChannel != null ? ProtoAdapter.STRING.encodedSizeWithTag(15, value.createChannel) : 0)
          + (value.createStaffId != null ? ProtoAdapter.UINT64.encodedSizeWithTag(16, value.createStaffId) : 0)
          + (value.createStaffName != null ? ProtoAdapter.STRING.encodedSizeWithTag(17, value.createStaffName) : 0)
          + (value.priceStr != null ? ProtoAdapter.STRING.encodedSizeWithTag(18, value.priceStr) : 0)
          + (value.isrequired != null ? ProtoAdapter.UINT32.encodedSizeWithTag(19, value.isrequired) : 0)
          + (value.defaultStatus != null ? ProtoAdapter.UINT32.encodedSizeWithTag(20, value.defaultStatus) : 0)
          + (value.hgRebatePrice != null ? ProtoAdapter.INT64.encodedSizeWithTag(21, value.hgRebatePrice) : 0)
          + (value.hgKinsRebatePrice != null ? ProtoAdapter.INT64.encodedSizeWithTag(22, value.hgKinsRebatePrice) : 0)
          + (value.prepayFee != null ? ProtoAdapter.INT64.encodedSizeWithTag(23, value.prepayFee) : 0)
          + (value.prepayFeeStr != null ? ProtoAdapter.STRING.encodedSizeWithTag(24, value.prepayFeeStr) : 0)
          + (value.totalPrice != null ? ProtoAdapter.STRING.encodedSizeWithTag(25, value.totalPrice) : 0)
          + (value.consentText != null ? ProtoAdapter.STRING.encodedSizeWithTag(26, value.consentText) : 0)
          + (value.showScope != null ? ProtoAdapter.UINT32.encodedSizeWithTag(27, value.showScope) : 0)
          + (value.serviceSubjoinType != null ? ProtoAdapter.UINT32.encodedSizeWithTag(28, value.serviceSubjoinType) : 0)
          + (value.subjoinGroupingType != null ? ProtoAdapter.UINT32.encodedSizeWithTag(29, value.subjoinGroupingType) : 0)
          + (value.adlMinScore != null ? ProtoAdapter.UINT32.encodedSizeWithTag(30, value.adlMinScore) : 0)
          + (value.adlMaxScore != null ? ProtoAdapter.UINT32.encodedSizeWithTag(31, value.adlMaxScore) : 0)
          + (value.subsidy != null ? ProtoAdapter.UINT64.encodedSizeWithTag(32, value.subsidy) : 0)
          + (value.isTendApply != null ? ProtoAdapter.UINT32.encodedSizeWithTag(33, value.isTendApply) : 0)
          + (value.fitPeople != null ? ProtoAdapter.STRING.encodedSizeWithTag(34, value.fitPeople) : 0)
          + (value.serviceContent != null ? ProtoAdapter.STRING.encodedSizeWithTag(35, value.serviceContent) : 0)
          + (value.serviceProcess != null ? ProtoAdapter.STRING.encodedSizeWithTag(36, value.serviceProcess) : 0)
          + (value.serviceState != null ? ProtoAdapter.STRING.encodedSizeWithTag(37, value.serviceState) : 0)
          + (value.billingNotice != null ? ProtoAdapter.STRING.encodedSizeWithTag(38, value.billingNotice) : 0)
          + (value.serviceIntro != null ? ProtoAdapter.STRING.encodedSizeWithTag(39, value.serviceIntro) : 0)
          + (value.qas != null ? ProtoAdapter.STRING.encodedSizeWithTag(40, value.qas) : 0)
          + value.unknownFields().size();
    }

    @Override
    public void encode(ProtoWriter writer, Price value) throws IOException {
      if (value.priceId != null) ProtoAdapter.UINT64.encodeWithTag(writer, 1, value.priceId);
      if (value.companyBranchId != null) ProtoAdapter.UINT64.encodeWithTag(writer, 2, value.companyBranchId);
      if (value.companyId != null) ProtoAdapter.UINT64.encodeWithTag(writer, 3, value.companyId);
      if (value.orgId != null) ProtoAdapter.UINT64.encodeWithTag(writer, 4, value.orgId);
      if (value.branchId != null) ProtoAdapter.UINT64.encodeWithTag(writer, 5, value.branchId);
      if (value.state != null) ProtoAdapter.INT32.encodeWithTag(writer, 6, value.state);
      if (value.longTermInsurance != null) ProtoAdapter.UINT32.encodeWithTag(writer, 7, value.longTermInsurance);
      if (value.serviceType != null) ProtoAdapter.UINT32.encodeWithTag(writer, 8, value.serviceType);
      if (value.serviceItem != null) ProtoAdapter.STRING.encodeWithTag(writer, 9, value.serviceItem);
      if (value.serviceUnit != null) ProtoAdapter.UINT32.encodeWithTag(writer, 10, value.serviceUnit);
      if (value.price != null) ProtoAdapter.INT64.encodeWithTag(writer, 11, value.price);
      if (value.description != null) ProtoAdapter.STRING.encodeWithTag(writer, 12, value.description);
      if (value.createTime != null) ProtoAdapter.UINT64.encodeWithTag(writer, 13, value.createTime);
      if (value.createType != null) ProtoAdapter.UINT32.encodeWithTag(writer, 14, value.createType);
      if (value.createChannel != null) ProtoAdapter.STRING.encodeWithTag(writer, 15, value.createChannel);
      if (value.createStaffId != null) ProtoAdapter.UINT64.encodeWithTag(writer, 16, value.createStaffId);
      if (value.createStaffName != null) ProtoAdapter.STRING.encodeWithTag(writer, 17, value.createStaffName);
      if (value.priceStr != null) ProtoAdapter.STRING.encodeWithTag(writer, 18, value.priceStr);
      if (value.isrequired != null) ProtoAdapter.UINT32.encodeWithTag(writer, 19, value.isrequired);
      if (value.defaultStatus != null) ProtoAdapter.UINT32.encodeWithTag(writer, 20, value.defaultStatus);
      if (value.hgRebatePrice != null) ProtoAdapter.INT64.encodeWithTag(writer, 21, value.hgRebatePrice);
      if (value.hgKinsRebatePrice != null) ProtoAdapter.INT64.encodeWithTag(writer, 22, value.hgKinsRebatePrice);
      if (value.prepayFee != null) ProtoAdapter.INT64.encodeWithTag(writer, 23, value.prepayFee);
      if (value.prepayFeeStr != null) ProtoAdapter.STRING.encodeWithTag(writer, 24, value.prepayFeeStr);
      if (value.totalPrice != null) ProtoAdapter.STRING.encodeWithTag(writer, 25, value.totalPrice);
      if (value.consentText != null) ProtoAdapter.STRING.encodeWithTag(writer, 26, value.consentText);
      if (value.showScope != null) ProtoAdapter.UINT32.encodeWithTag(writer, 27, value.showScope);
      if (value.serviceSubjoinType != null) ProtoAdapter.UINT32.encodeWithTag(writer, 28, value.serviceSubjoinType);
      if (value.subjoinGroupingType != null) ProtoAdapter.UINT32.encodeWithTag(writer, 29, value.subjoinGroupingType);
      if (value.adlMinScore != null) ProtoAdapter.UINT32.encodeWithTag(writer, 30, value.adlMinScore);
      if (value.adlMaxScore != null) ProtoAdapter.UINT32.encodeWithTag(writer, 31, value.adlMaxScore);
      if (value.subsidy != null) ProtoAdapter.UINT64.encodeWithTag(writer, 32, value.subsidy);
      if (value.isTendApply != null) ProtoAdapter.UINT32.encodeWithTag(writer, 33, value.isTendApply);
      if (value.fitPeople != null) ProtoAdapter.STRING.encodeWithTag(writer, 34, value.fitPeople);
      if (value.serviceContent != null) ProtoAdapter.STRING.encodeWithTag(writer, 35, value.serviceContent);
      if (value.serviceProcess != null) ProtoAdapter.STRING.encodeWithTag(writer, 36, value.serviceProcess);
      if (value.serviceState != null) ProtoAdapter.STRING.encodeWithTag(writer, 37, value.serviceState);
      if (value.billingNotice != null) ProtoAdapter.STRING.encodeWithTag(writer, 38, value.billingNotice);
      if (value.serviceIntro != null) ProtoAdapter.STRING.encodeWithTag(writer, 39, value.serviceIntro);
      if (value.qas != null) ProtoAdapter.STRING.encodeWithTag(writer, 40, value.qas);
      writer.writeBytes(value.unknownFields());
    }

    @Override
    public Price decode(ProtoReader reader) throws IOException {
      Builder builder = new Builder();
      long token = reader.beginMessage();
      for (int tag; (tag = reader.nextTag()) != -1;) {
        switch (tag) {
          case 1: builder.priceId(ProtoAdapter.UINT64.decode(reader)); break;
          case 2: builder.companyBranchId(ProtoAdapter.UINT64.decode(reader)); break;
          case 3: builder.companyId(ProtoAdapter.UINT64.decode(reader)); break;
          case 4: builder.orgId(ProtoAdapter.UINT64.decode(reader)); break;
          case 5: builder.branchId(ProtoAdapter.UINT64.decode(reader)); break;
          case 6: builder.state(ProtoAdapter.INT32.decode(reader)); break;
          case 7: builder.longTermInsurance(ProtoAdapter.UINT32.decode(reader)); break;
          case 8: builder.serviceType(ProtoAdapter.UINT32.decode(reader)); break;
          case 9: builder.serviceItem(ProtoAdapter.STRING.decode(reader)); break;
          case 10: builder.serviceUnit(ProtoAdapter.UINT32.decode(reader)); break;
          case 11: builder.price(ProtoAdapter.INT64.decode(reader)); break;
          case 12: builder.description(ProtoAdapter.STRING.decode(reader)); break;
          case 13: builder.createTime(ProtoAdapter.UINT64.decode(reader)); break;
          case 14: builder.createType(ProtoAdapter.UINT32.decode(reader)); break;
          case 15: builder.createChannel(ProtoAdapter.STRING.decode(reader)); break;
          case 16: builder.createStaffId(ProtoAdapter.UINT64.decode(reader)); break;
          case 17: builder.createStaffName(ProtoAdapter.STRING.decode(reader)); break;
          case 18: builder.priceStr(ProtoAdapter.STRING.decode(reader)); break;
          case 19: builder.isrequired(ProtoAdapter.UINT32.decode(reader)); break;
          case 20: builder.defaultStatus(ProtoAdapter.UINT32.decode(reader)); break;
          case 21: builder.hgRebatePrice(ProtoAdapter.INT64.decode(reader)); break;
          case 22: builder.hgKinsRebatePrice(ProtoAdapter.INT64.decode(reader)); break;
          case 23: builder.prepayFee(ProtoAdapter.INT64.decode(reader)); break;
          case 24: builder.prepayFeeStr(ProtoAdapter.STRING.decode(reader)); break;
          case 25: builder.totalPrice(ProtoAdapter.STRING.decode(reader)); break;
          case 26: builder.consentText(ProtoAdapter.STRING.decode(reader)); break;
          case 27: builder.showScope(ProtoAdapter.UINT32.decode(reader)); break;
          case 28: builder.serviceSubjoinType(ProtoAdapter.UINT32.decode(reader)); break;
          case 29: builder.subjoinGroupingType(ProtoAdapter.UINT32.decode(reader)); break;
          case 30: builder.adlMinScore(ProtoAdapter.UINT32.decode(reader)); break;
          case 31: builder.adlMaxScore(ProtoAdapter.UINT32.decode(reader)); break;
          case 32: builder.subsidy(ProtoAdapter.UINT64.decode(reader)); break;
          case 33: builder.isTendApply(ProtoAdapter.UINT32.decode(reader)); break;
          case 34: builder.fitPeople(ProtoAdapter.STRING.decode(reader)); break;
          case 35: builder.serviceContent(ProtoAdapter.STRING.decode(reader)); break;
          case 36: builder.serviceProcess(ProtoAdapter.STRING.decode(reader)); break;
          case 37: builder.serviceState(ProtoAdapter.STRING.decode(reader)); break;
          case 38: builder.billingNotice(ProtoAdapter.STRING.decode(reader)); break;
          case 39: builder.serviceIntro(ProtoAdapter.STRING.decode(reader)); break;
          case 40: builder.qas(ProtoAdapter.STRING.decode(reader)); break;
          default: {
            FieldEncoding fieldEncoding = reader.peekFieldEncoding();
            Object value = fieldEncoding.rawProtoAdapter().decode(reader);
            builder.addUnknownField(tag, fieldEncoding, value);
          }
        }
      }
      reader.endMessage(token);
      return builder.build();
    }

    @Override
    public Price redact(Price value) {
      Builder builder = value.newBuilder();
      builder.clearUnknownFields();
      return builder.build();
    }
  }
}
