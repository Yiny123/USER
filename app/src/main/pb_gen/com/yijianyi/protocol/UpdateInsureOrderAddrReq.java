// Code generated by Wire protocol buffer compiler, do not edit.
// Source file: AppInterface.proto at 1897:1
package com.yijianyi.protocol;

import com.squareup.wire.FieldEncoding;
import com.squareup.wire.Message;
import com.squareup.wire.ProtoAdapter;
import com.squareup.wire.ProtoReader;
import com.squareup.wire.ProtoWriter;
import com.squareup.wire.WireField;
import com.squareup.wire.internal.Internal;
import java.io.IOException;
import java.lang.Double;
import java.lang.Integer;
import java.lang.Object;
import java.lang.Override;
import java.lang.String;
import java.lang.StringBuilder;
import okio.ByteString;

/**
 * 变更订单联系方式
 */
public final class UpdateInsureOrderAddrReq extends Message<UpdateInsureOrderAddrReq, UpdateInsureOrderAddrReq.Builder> {
  public static final ProtoAdapter<UpdateInsureOrderAddrReq> ADAPTER = new ProtoAdapter_UpdateInsureOrderAddrReq();

  private static final long serialVersionUID = 0L;

  public static final String DEFAULT_PROVINCE = "";

  public static final String DEFAULT_CITY = "";

  public static final String DEFAULT_CITYCODE = "";

  public static final String DEFAULT_DISTRICT = "";

  public static final String DEFAULT_ADCODE = "";

  public static final String DEFAULT_STREET = "";

  public static final String DEFAULT_BUILDING = "";

  public static final String DEFAULT_ADDRDETAIL = "";

  public static final String DEFAULT_PHONE = "";

  public static final String DEFAULT_CONTACTS = "";

  public static final String DEFAULT_ORDERID = "";

  public static final Integer DEFAULT_GPSTYPE = 0;

  public static final Double DEFAULT_LNG = 0.0d;

  public static final Double DEFAULT_LAT = 0.0d;

  /**
   * 省
   */
  @WireField(
      tag = 1,
      adapter = "com.squareup.wire.ProtoAdapter#STRING"
  )
  public final String province;

  /**
   * 市
   */
  @WireField(
      tag = 2,
      adapter = "com.squareup.wire.ProtoAdapter#STRING"
  )
  public final String city;

  /**
   * 城市编码
   */
  @WireField(
      tag = 3,
      adapter = "com.squareup.wire.ProtoAdapter#STRING"
  )
  public final String cityCode;

  /**
   * 区
   */
  @WireField(
      tag = 4,
      adapter = "com.squareup.wire.ProtoAdapter#STRING"
  )
  public final String district;

  /**
   * 高德 区编码
   */
  @WireField(
      tag = 5,
      adapter = "com.squareup.wire.ProtoAdapter#STRING"
  )
  public final String adCode;

  /**
   * 街道
   */
  @WireField(
      tag = 6,
      adapter = "com.squareup.wire.ProtoAdapter#STRING"
  )
  public final String street;

  /**
   * 小区
   */
  @WireField(
      tag = 7,
      adapter = "com.squareup.wire.ProtoAdapter#STRING"
  )
  public final String building;

  /**
   * 详细地址
   */
  @WireField(
      tag = 8,
      adapter = "com.squareup.wire.ProtoAdapter#STRING"
  )
  public final String addrDetail;

  /**
   * 第一联系人手机号
   */
  @WireField(
      tag = 9,
      adapter = "com.squareup.wire.ProtoAdapter#STRING"
  )
  public final String phone;

  /**
   * 第一联系人
   */
  @WireField(
      tag = 10,
      adapter = "com.squareup.wire.ProtoAdapter#STRING"
  )
  public final String contacts;

  /**
   * 订单id
   */
  @WireField(
      tag = 11,
      adapter = "com.squareup.wire.ProtoAdapter#STRING"
  )
  public final String orderId;

  /**
   * 经纬度类型 1-百度  2-高德
   */
  @WireField(
      tag = 12,
      adapter = "com.squareup.wire.ProtoAdapter#UINT32"
  )
  public final Integer gpsType;

  /**
   * 经度
   */
  @WireField(
      tag = 13,
      adapter = "com.squareup.wire.ProtoAdapter#DOUBLE"
  )
  public final Double lng;

  /**
   * 纬度
   */
  @WireField(
      tag = 14,
      adapter = "com.squareup.wire.ProtoAdapter#DOUBLE"
  )
  public final Double lat;

  public UpdateInsureOrderAddrReq(String province, String city, String cityCode, String district, String adCode, String street, String building, String addrDetail, String phone, String contacts, String orderId, Integer gpsType, Double lng, Double lat) {
    this(province, city, cityCode, district, adCode, street, building, addrDetail, phone, contacts, orderId, gpsType, lng, lat, ByteString.EMPTY);
  }

  public UpdateInsureOrderAddrReq(String province, String city, String cityCode, String district, String adCode, String street, String building, String addrDetail, String phone, String contacts, String orderId, Integer gpsType, Double lng, Double lat, ByteString unknownFields) {
    super(ADAPTER, unknownFields);
    this.province = province;
    this.city = city;
    this.cityCode = cityCode;
    this.district = district;
    this.adCode = adCode;
    this.street = street;
    this.building = building;
    this.addrDetail = addrDetail;
    this.phone = phone;
    this.contacts = contacts;
    this.orderId = orderId;
    this.gpsType = gpsType;
    this.lng = lng;
    this.lat = lat;
  }

  @Override
  public Builder newBuilder() {
    Builder builder = new Builder();
    builder.province = province;
    builder.city = city;
    builder.cityCode = cityCode;
    builder.district = district;
    builder.adCode = adCode;
    builder.street = street;
    builder.building = building;
    builder.addrDetail = addrDetail;
    builder.phone = phone;
    builder.contacts = contacts;
    builder.orderId = orderId;
    builder.gpsType = gpsType;
    builder.lng = lng;
    builder.lat = lat;
    builder.addUnknownFields(unknownFields());
    return builder;
  }

  @Override
  public boolean equals(Object other) {
    if (other == this) return true;
    if (!(other instanceof UpdateInsureOrderAddrReq)) return false;
    UpdateInsureOrderAddrReq o = (UpdateInsureOrderAddrReq) other;
    return unknownFields().equals(o.unknownFields())
        && Internal.equals(province, o.province)
        && Internal.equals(city, o.city)
        && Internal.equals(cityCode, o.cityCode)
        && Internal.equals(district, o.district)
        && Internal.equals(adCode, o.adCode)
        && Internal.equals(street, o.street)
        && Internal.equals(building, o.building)
        && Internal.equals(addrDetail, o.addrDetail)
        && Internal.equals(phone, o.phone)
        && Internal.equals(contacts, o.contacts)
        && Internal.equals(orderId, o.orderId)
        && Internal.equals(gpsType, o.gpsType)
        && Internal.equals(lng, o.lng)
        && Internal.equals(lat, o.lat);
  }

  @Override
  public int hashCode() {
    int result = super.hashCode;
    if (result == 0) {
      result = unknownFields().hashCode();
      result = result * 37 + (province != null ? province.hashCode() : 0);
      result = result * 37 + (city != null ? city.hashCode() : 0);
      result = result * 37 + (cityCode != null ? cityCode.hashCode() : 0);
      result = result * 37 + (district != null ? district.hashCode() : 0);
      result = result * 37 + (adCode != null ? adCode.hashCode() : 0);
      result = result * 37 + (street != null ? street.hashCode() : 0);
      result = result * 37 + (building != null ? building.hashCode() : 0);
      result = result * 37 + (addrDetail != null ? addrDetail.hashCode() : 0);
      result = result * 37 + (phone != null ? phone.hashCode() : 0);
      result = result * 37 + (contacts != null ? contacts.hashCode() : 0);
      result = result * 37 + (orderId != null ? orderId.hashCode() : 0);
      result = result * 37 + (gpsType != null ? gpsType.hashCode() : 0);
      result = result * 37 + (lng != null ? lng.hashCode() : 0);
      result = result * 37 + (lat != null ? lat.hashCode() : 0);
      super.hashCode = result;
    }
    return result;
  }

  @Override
  public String toString() {
    StringBuilder builder = new StringBuilder();
    if (province != null) builder.append(", province=").append(province);
    if (city != null) builder.append(", city=").append(city);
    if (cityCode != null) builder.append(", cityCode=").append(cityCode);
    if (district != null) builder.append(", district=").append(district);
    if (adCode != null) builder.append(", adCode=").append(adCode);
    if (street != null) builder.append(", street=").append(street);
    if (building != null) builder.append(", building=").append(building);
    if (addrDetail != null) builder.append(", addrDetail=").append(addrDetail);
    if (phone != null) builder.append(", phone=").append(phone);
    if (contacts != null) builder.append(", contacts=").append(contacts);
    if (orderId != null) builder.append(", orderId=").append(orderId);
    if (gpsType != null) builder.append(", gpsType=").append(gpsType);
    if (lng != null) builder.append(", lng=").append(lng);
    if (lat != null) builder.append(", lat=").append(lat);
    return builder.replace(0, 2, "UpdateInsureOrderAddrReq{").append('}').toString();
  }

  public static final class Builder extends Message.Builder<UpdateInsureOrderAddrReq, Builder> {
    public String province;

    public String city;

    public String cityCode;

    public String district;

    public String adCode;

    public String street;

    public String building;

    public String addrDetail;

    public String phone;

    public String contacts;

    public String orderId;

    public Integer gpsType;

    public Double lng;

    public Double lat;

    public Builder() {
    }

    /**
     * 省
     */
    public Builder province(String province) {
      this.province = province;
      return this;
    }

    /**
     * 市
     */
    public Builder city(String city) {
      this.city = city;
      return this;
    }

    /**
     * 城市编码
     */
    public Builder cityCode(String cityCode) {
      this.cityCode = cityCode;
      return this;
    }

    /**
     * 区
     */
    public Builder district(String district) {
      this.district = district;
      return this;
    }

    /**
     * 高德 区编码
     */
    public Builder adCode(String adCode) {
      this.adCode = adCode;
      return this;
    }

    /**
     * 街道
     */
    public Builder street(String street) {
      this.street = street;
      return this;
    }

    /**
     * 小区
     */
    public Builder building(String building) {
      this.building = building;
      return this;
    }

    /**
     * 详细地址
     */
    public Builder addrDetail(String addrDetail) {
      this.addrDetail = addrDetail;
      return this;
    }

    /**
     * 第一联系人手机号
     */
    public Builder phone(String phone) {
      this.phone = phone;
      return this;
    }

    /**
     * 第一联系人
     */
    public Builder contacts(String contacts) {
      this.contacts = contacts;
      return this;
    }

    /**
     * 订单id
     */
    public Builder orderId(String orderId) {
      this.orderId = orderId;
      return this;
    }

    /**
     * 经纬度类型 1-百度  2-高德
     */
    public Builder gpsType(Integer gpsType) {
      this.gpsType = gpsType;
      return this;
    }

    /**
     * 经度
     */
    public Builder lng(Double lng) {
      this.lng = lng;
      return this;
    }

    /**
     * 纬度
     */
    public Builder lat(Double lat) {
      this.lat = lat;
      return this;
    }

    @Override
    public UpdateInsureOrderAddrReq build() {
      return new UpdateInsureOrderAddrReq(province, city, cityCode, district, adCode, street, building, addrDetail, phone, contacts, orderId, gpsType, lng, lat, super.buildUnknownFields());
    }
  }

  private static final class ProtoAdapter_UpdateInsureOrderAddrReq extends ProtoAdapter<UpdateInsureOrderAddrReq> {
    ProtoAdapter_UpdateInsureOrderAddrReq() {
      super(FieldEncoding.LENGTH_DELIMITED, UpdateInsureOrderAddrReq.class);
    }

    @Override
    public int encodedSize(UpdateInsureOrderAddrReq value) {
      return (value.province != null ? ProtoAdapter.STRING.encodedSizeWithTag(1, value.province) : 0)
          + (value.city != null ? ProtoAdapter.STRING.encodedSizeWithTag(2, value.city) : 0)
          + (value.cityCode != null ? ProtoAdapter.STRING.encodedSizeWithTag(3, value.cityCode) : 0)
          + (value.district != null ? ProtoAdapter.STRING.encodedSizeWithTag(4, value.district) : 0)
          + (value.adCode != null ? ProtoAdapter.STRING.encodedSizeWithTag(5, value.adCode) : 0)
          + (value.street != null ? ProtoAdapter.STRING.encodedSizeWithTag(6, value.street) : 0)
          + (value.building != null ? ProtoAdapter.STRING.encodedSizeWithTag(7, value.building) : 0)
          + (value.addrDetail != null ? ProtoAdapter.STRING.encodedSizeWithTag(8, value.addrDetail) : 0)
          + (value.phone != null ? ProtoAdapter.STRING.encodedSizeWithTag(9, value.phone) : 0)
          + (value.contacts != null ? ProtoAdapter.STRING.encodedSizeWithTag(10, value.contacts) : 0)
          + (value.orderId != null ? ProtoAdapter.STRING.encodedSizeWithTag(11, value.orderId) : 0)
          + (value.gpsType != null ? ProtoAdapter.UINT32.encodedSizeWithTag(12, value.gpsType) : 0)
          + (value.lng != null ? ProtoAdapter.DOUBLE.encodedSizeWithTag(13, value.lng) : 0)
          + (value.lat != null ? ProtoAdapter.DOUBLE.encodedSizeWithTag(14, value.lat) : 0)
          + value.unknownFields().size();
    }

    @Override
    public void encode(ProtoWriter writer, UpdateInsureOrderAddrReq value) throws IOException {
      if (value.province != null) ProtoAdapter.STRING.encodeWithTag(writer, 1, value.province);
      if (value.city != null) ProtoAdapter.STRING.encodeWithTag(writer, 2, value.city);
      if (value.cityCode != null) ProtoAdapter.STRING.encodeWithTag(writer, 3, value.cityCode);
      if (value.district != null) ProtoAdapter.STRING.encodeWithTag(writer, 4, value.district);
      if (value.adCode != null) ProtoAdapter.STRING.encodeWithTag(writer, 5, value.adCode);
      if (value.street != null) ProtoAdapter.STRING.encodeWithTag(writer, 6, value.street);
      if (value.building != null) ProtoAdapter.STRING.encodeWithTag(writer, 7, value.building);
      if (value.addrDetail != null) ProtoAdapter.STRING.encodeWithTag(writer, 8, value.addrDetail);
      if (value.phone != null) ProtoAdapter.STRING.encodeWithTag(writer, 9, value.phone);
      if (value.contacts != null) ProtoAdapter.STRING.encodeWithTag(writer, 10, value.contacts);
      if (value.orderId != null) ProtoAdapter.STRING.encodeWithTag(writer, 11, value.orderId);
      if (value.gpsType != null) ProtoAdapter.UINT32.encodeWithTag(writer, 12, value.gpsType);
      if (value.lng != null) ProtoAdapter.DOUBLE.encodeWithTag(writer, 13, value.lng);
      if (value.lat != null) ProtoAdapter.DOUBLE.encodeWithTag(writer, 14, value.lat);
      writer.writeBytes(value.unknownFields());
    }

    @Override
    public UpdateInsureOrderAddrReq decode(ProtoReader reader) throws IOException {
      Builder builder = new Builder();
      long token = reader.beginMessage();
      for (int tag; (tag = reader.nextTag()) != -1;) {
        switch (tag) {
          case 1: builder.province(ProtoAdapter.STRING.decode(reader)); break;
          case 2: builder.city(ProtoAdapter.STRING.decode(reader)); break;
          case 3: builder.cityCode(ProtoAdapter.STRING.decode(reader)); break;
          case 4: builder.district(ProtoAdapter.STRING.decode(reader)); break;
          case 5: builder.adCode(ProtoAdapter.STRING.decode(reader)); break;
          case 6: builder.street(ProtoAdapter.STRING.decode(reader)); break;
          case 7: builder.building(ProtoAdapter.STRING.decode(reader)); break;
          case 8: builder.addrDetail(ProtoAdapter.STRING.decode(reader)); break;
          case 9: builder.phone(ProtoAdapter.STRING.decode(reader)); break;
          case 10: builder.contacts(ProtoAdapter.STRING.decode(reader)); break;
          case 11: builder.orderId(ProtoAdapter.STRING.decode(reader)); break;
          case 12: builder.gpsType(ProtoAdapter.UINT32.decode(reader)); break;
          case 13: builder.lng(ProtoAdapter.DOUBLE.decode(reader)); break;
          case 14: builder.lat(ProtoAdapter.DOUBLE.decode(reader)); break;
          default: {
            FieldEncoding fieldEncoding = reader.peekFieldEncoding();
            Object value = fieldEncoding.rawProtoAdapter().decode(reader);
            builder.addUnknownField(tag, fieldEncoding, value);
          }
        }
      }
      reader.endMessage(token);
      return builder.build();
    }

    @Override
    public UpdateInsureOrderAddrReq redact(UpdateInsureOrderAddrReq value) {
      Builder builder = value.newBuilder();
      builder.clearUnknownFields();
      return builder.build();
    }
  }
}
