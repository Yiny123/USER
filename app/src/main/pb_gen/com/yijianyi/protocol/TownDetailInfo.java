// Code generated by Wire protocol buffer compiler, do not edit.
// Source file: Area.proto at 51:1
package com.yijianyi.protocol;

import com.squareup.wire.FieldEncoding;
import com.squareup.wire.Message;
import com.squareup.wire.ProtoAdapter;
import com.squareup.wire.ProtoReader;
import com.squareup.wire.ProtoWriter;
import com.squareup.wire.WireField;
import com.squareup.wire.internal.Internal;
import java.io.IOException;
import java.lang.Integer;
import java.lang.Object;
import java.lang.Override;
import java.lang.String;
import java.lang.StringBuilder;
import okio.ByteString;

public final class TownDetailInfo extends Message<TownDetailInfo, TownDetailInfo.Builder> {
  public static final ProtoAdapter<TownDetailInfo> ADAPTER = new ProtoAdapter_TownDetailInfo();

  private static final long serialVersionUID = 0L;

  public static final Integer DEFAULT_PROVINCEID = 0;

  public static final String DEFAULT_PROVINCENAME = "";

  public static final Integer DEFAULT_CITYID = 0;

  public static final String DEFAULT_CITYNAME = "";

  public static final Integer DEFAULT_COUNTYID = 0;

  public static final String DEFAULT_COUNTYNAME = "";

  public static final Integer DEFAULT_TOWNID = 0;

  public static final String DEFAULT_TOWNNAME = "";

  @WireField(
      tag = 1,
      adapter = "com.squareup.wire.ProtoAdapter#UINT32"
  )
  public final Integer provinceId;

  @WireField(
      tag = 2,
      adapter = "com.squareup.wire.ProtoAdapter#STRING"
  )
  public final String provinceName;

  @WireField(
      tag = 3,
      adapter = "com.squareup.wire.ProtoAdapter#UINT32"
  )
  public final Integer cityId;

  @WireField(
      tag = 4,
      adapter = "com.squareup.wire.ProtoAdapter#STRING"
  )
  public final String cityName;

  @WireField(
      tag = 5,
      adapter = "com.squareup.wire.ProtoAdapter#UINT32"
  )
  public final Integer countyId;

  @WireField(
      tag = 6,
      adapter = "com.squareup.wire.ProtoAdapter#STRING"
  )
  public final String countyName;

  @WireField(
      tag = 7,
      adapter = "com.squareup.wire.ProtoAdapter#UINT32"
  )
  public final Integer townId;

  @WireField(
      tag = 8,
      adapter = "com.squareup.wire.ProtoAdapter#STRING"
  )
  public final String townName;

  public TownDetailInfo(Integer provinceId, String provinceName, Integer cityId, String cityName, Integer countyId, String countyName, Integer townId, String townName) {
    this(provinceId, provinceName, cityId, cityName, countyId, countyName, townId, townName, ByteString.EMPTY);
  }

  public TownDetailInfo(Integer provinceId, String provinceName, Integer cityId, String cityName, Integer countyId, String countyName, Integer townId, String townName, ByteString unknownFields) {
    super(ADAPTER, unknownFields);
    this.provinceId = provinceId;
    this.provinceName = provinceName;
    this.cityId = cityId;
    this.cityName = cityName;
    this.countyId = countyId;
    this.countyName = countyName;
    this.townId = townId;
    this.townName = townName;
  }

  @Override
  public Builder newBuilder() {
    Builder builder = new Builder();
    builder.provinceId = provinceId;
    builder.provinceName = provinceName;
    builder.cityId = cityId;
    builder.cityName = cityName;
    builder.countyId = countyId;
    builder.countyName = countyName;
    builder.townId = townId;
    builder.townName = townName;
    builder.addUnknownFields(unknownFields());
    return builder;
  }

  @Override
  public boolean equals(Object other) {
    if (other == this) return true;
    if (!(other instanceof TownDetailInfo)) return false;
    TownDetailInfo o = (TownDetailInfo) other;
    return unknownFields().equals(o.unknownFields())
        && Internal.equals(provinceId, o.provinceId)
        && Internal.equals(provinceName, o.provinceName)
        && Internal.equals(cityId, o.cityId)
        && Internal.equals(cityName, o.cityName)
        && Internal.equals(countyId, o.countyId)
        && Internal.equals(countyName, o.countyName)
        && Internal.equals(townId, o.townId)
        && Internal.equals(townName, o.townName);
  }

  @Override
  public int hashCode() {
    int result = super.hashCode;
    if (result == 0) {
      result = unknownFields().hashCode();
      result = result * 37 + (provinceId != null ? provinceId.hashCode() : 0);
      result = result * 37 + (provinceName != null ? provinceName.hashCode() : 0);
      result = result * 37 + (cityId != null ? cityId.hashCode() : 0);
      result = result * 37 + (cityName != null ? cityName.hashCode() : 0);
      result = result * 37 + (countyId != null ? countyId.hashCode() : 0);
      result = result * 37 + (countyName != null ? countyName.hashCode() : 0);
      result = result * 37 + (townId != null ? townId.hashCode() : 0);
      result = result * 37 + (townName != null ? townName.hashCode() : 0);
      super.hashCode = result;
    }
    return result;
  }

  @Override
  public String toString() {
    StringBuilder builder = new StringBuilder();
    if (provinceId != null) builder.append(", provinceId=").append(provinceId);
    if (provinceName != null) builder.append(", provinceName=").append(provinceName);
    if (cityId != null) builder.append(", cityId=").append(cityId);
    if (cityName != null) builder.append(", cityName=").append(cityName);
    if (countyId != null) builder.append(", countyId=").append(countyId);
    if (countyName != null) builder.append(", countyName=").append(countyName);
    if (townId != null) builder.append(", townId=").append(townId);
    if (townName != null) builder.append(", townName=").append(townName);
    return builder.replace(0, 2, "TownDetailInfo{").append('}').toString();
  }

  public static final class Builder extends Message.Builder<TownDetailInfo, Builder> {
    public Integer provinceId;

    public String provinceName;

    public Integer cityId;

    public String cityName;

    public Integer countyId;

    public String countyName;

    public Integer townId;

    public String townName;

    public Builder() {
    }

    public Builder provinceId(Integer provinceId) {
      this.provinceId = provinceId;
      return this;
    }

    public Builder provinceName(String provinceName) {
      this.provinceName = provinceName;
      return this;
    }

    public Builder cityId(Integer cityId) {
      this.cityId = cityId;
      return this;
    }

    public Builder cityName(String cityName) {
      this.cityName = cityName;
      return this;
    }

    public Builder countyId(Integer countyId) {
      this.countyId = countyId;
      return this;
    }

    public Builder countyName(String countyName) {
      this.countyName = countyName;
      return this;
    }

    public Builder townId(Integer townId) {
      this.townId = townId;
      return this;
    }

    public Builder townName(String townName) {
      this.townName = townName;
      return this;
    }

    @Override
    public TownDetailInfo build() {
      return new TownDetailInfo(provinceId, provinceName, cityId, cityName, countyId, countyName, townId, townName, super.buildUnknownFields());
    }
  }

  private static final class ProtoAdapter_TownDetailInfo extends ProtoAdapter<TownDetailInfo> {
    ProtoAdapter_TownDetailInfo() {
      super(FieldEncoding.LENGTH_DELIMITED, TownDetailInfo.class);
    }

    @Override
    public int encodedSize(TownDetailInfo value) {
      return (value.provinceId != null ? ProtoAdapter.UINT32.encodedSizeWithTag(1, value.provinceId) : 0)
          + (value.provinceName != null ? ProtoAdapter.STRING.encodedSizeWithTag(2, value.provinceName) : 0)
          + (value.cityId != null ? ProtoAdapter.UINT32.encodedSizeWithTag(3, value.cityId) : 0)
          + (value.cityName != null ? ProtoAdapter.STRING.encodedSizeWithTag(4, value.cityName) : 0)
          + (value.countyId != null ? ProtoAdapter.UINT32.encodedSizeWithTag(5, value.countyId) : 0)
          + (value.countyName != null ? ProtoAdapter.STRING.encodedSizeWithTag(6, value.countyName) : 0)
          + (value.townId != null ? ProtoAdapter.UINT32.encodedSizeWithTag(7, value.townId) : 0)
          + (value.townName != null ? ProtoAdapter.STRING.encodedSizeWithTag(8, value.townName) : 0)
          + value.unknownFields().size();
    }

    @Override
    public void encode(ProtoWriter writer, TownDetailInfo value) throws IOException {
      if (value.provinceId != null) ProtoAdapter.UINT32.encodeWithTag(writer, 1, value.provinceId);
      if (value.provinceName != null) ProtoAdapter.STRING.encodeWithTag(writer, 2, value.provinceName);
      if (value.cityId != null) ProtoAdapter.UINT32.encodeWithTag(writer, 3, value.cityId);
      if (value.cityName != null) ProtoAdapter.STRING.encodeWithTag(writer, 4, value.cityName);
      if (value.countyId != null) ProtoAdapter.UINT32.encodeWithTag(writer, 5, value.countyId);
      if (value.countyName != null) ProtoAdapter.STRING.encodeWithTag(writer, 6, value.countyName);
      if (value.townId != null) ProtoAdapter.UINT32.encodeWithTag(writer, 7, value.townId);
      if (value.townName != null) ProtoAdapter.STRING.encodeWithTag(writer, 8, value.townName);
      writer.writeBytes(value.unknownFields());
    }

    @Override
    public TownDetailInfo decode(ProtoReader reader) throws IOException {
      Builder builder = new Builder();
      long token = reader.beginMessage();
      for (int tag; (tag = reader.nextTag()) != -1;) {
        switch (tag) {
          case 1: builder.provinceId(ProtoAdapter.UINT32.decode(reader)); break;
          case 2: builder.provinceName(ProtoAdapter.STRING.decode(reader)); break;
          case 3: builder.cityId(ProtoAdapter.UINT32.decode(reader)); break;
          case 4: builder.cityName(ProtoAdapter.STRING.decode(reader)); break;
          case 5: builder.countyId(ProtoAdapter.UINT32.decode(reader)); break;
          case 6: builder.countyName(ProtoAdapter.STRING.decode(reader)); break;
          case 7: builder.townId(ProtoAdapter.UINT32.decode(reader)); break;
          case 8: builder.townName(ProtoAdapter.STRING.decode(reader)); break;
          default: {
            FieldEncoding fieldEncoding = reader.peekFieldEncoding();
            Object value = fieldEncoding.rawProtoAdapter().decode(reader);
            builder.addUnknownField(tag, fieldEncoding, value);
          }
        }
      }
      reader.endMessage(token);
      return builder.build();
    }

    @Override
    public TownDetailInfo redact(TownDetailInfo value) {
      Builder builder = value.newBuilder();
      builder.clearUnknownFields();
      return builder.build();
    }
  }
}
