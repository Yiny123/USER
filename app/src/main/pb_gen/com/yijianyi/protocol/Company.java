// Code generated by Wire protocol buffer compiler, do not edit.
// Source file: SaasModel.proto at 113:1
package com.yijianyi.protocol;

import com.squareup.wire.FieldEncoding;
import com.squareup.wire.Message;
import com.squareup.wire.ProtoAdapter;
import com.squareup.wire.ProtoReader;
import com.squareup.wire.ProtoWriter;
import com.squareup.wire.WireField;
import com.squareup.wire.internal.Internal;
import java.io.IOException;
import java.lang.Integer;
import java.lang.Long;
import java.lang.Object;
import java.lang.Override;
import java.lang.String;
import java.lang.StringBuilder;
import okio.ByteString;

public final class Company extends Message<Company, Company.Builder> {
  public static final ProtoAdapter<Company> ADAPTER = new ProtoAdapter_Company();

  private static final long serialVersionUID = 0L;

  public static final Long DEFAULT_ID = 0L;

  public static final String DEFAULT_COMPANYNAME = "";

  public static final Long DEFAULT_ADMINID = 0L;

  public static final String DEFAULT_ADMINPHONE = "";

  public static final String DEFAULT_LEGALMANNAME = "";

  public static final String DEFAULT_PROVINCE = "";

  public static final String DEFAULT_CITY = "";

  public static final String DEFAULT_ADDRESS = "";

  public static final Integer DEFAULT_STATE = 0;

  public static final String DEFAULT_BUSINESSLICENCE = "";

  public static final String DEFAULT_LEGALMANLICENCE = "";

  public static final String DEFAULT_OFFICIALWEBSITE = "";

  public static final String DEFAULT_LINKMAN = "";

  public static final Long DEFAULT_CREATETIME = 0L;

  public static final Integer DEFAULT_CREATETYPE = 0;

  public static final String DEFAULT_CREATECHANNEL = "";

  public static final Long DEFAULT_CREATESTAFFID = 0L;

  public static final String DEFAULT_CREATESTAFFNAME = "";

  public static final String DEFAULT_COUNTY = "";

  public static final Long DEFAULT_PROVINCEID = 0L;

  public static final Long DEFAULT_CITYID = 0L;

  public static final Long DEFAULT_COUNTYID = 0L;

  /**
   * 公司ID
   */
  @WireField(
      tag = 1,
      adapter = "com.squareup.wire.ProtoAdapter#UINT64"
  )
  public final Long id;

  /**
   *  公司名称
   */
  @WireField(
      tag = 2,
      adapter = "com.squareup.wire.ProtoAdapter#STRING"
  )
  public final String companyName;

  /**
   *  主管理员id
   */
  @WireField(
      tag = 3,
      adapter = "com.squareup.wire.ProtoAdapter#UINT64"
  )
  public final Long adminId;

  /**
   *  主管理员手机号
   */
  @WireField(
      tag = 4,
      adapter = "com.squareup.wire.ProtoAdapter#STRING"
  )
  public final String adminPhone;

  /**
   *  法人姓名
   */
  @WireField(
      tag = 5,
      adapter = "com.squareup.wire.ProtoAdapter#STRING"
  )
  public final String legalManName;

  /**
   *  省份
   */
  @WireField(
      tag = 6,
      adapter = "com.squareup.wire.ProtoAdapter#STRING"
  )
  public final String province;

  /**
   *  城市
   */
  @WireField(
      tag = 7,
      adapter = "com.squareup.wire.ProtoAdapter#STRING"
  )
  public final String city;

  /**
   *  地址
   */
  @WireField(
      tag = 8,
      adapter = "com.squareup.wire.ProtoAdapter#STRING"
  )
  public final String address;

  /**
   *  科室的状态 -1已删除  0正在审核 1审核通过
   */
  @WireField(
      tag = 9,
      adapter = "com.squareup.wire.ProtoAdapter#UINT32"
  )
  public final Integer state;

  /**
   *  营业执照照片
   */
  @WireField(
      tag = 10,
      adapter = "com.squareup.wire.ProtoAdapter#STRING"
  )
  public final String businessLicence;

  /**
   * 法人证件
   */
  @WireField(
      tag = 11,
      adapter = "com.squareup.wire.ProtoAdapter#STRING"
  )
  public final String legalManLicence;

  /**
   * 官方网站
   */
  @WireField(
      tag = 12,
      adapter = "com.squareup.wire.ProtoAdapter#STRING"
  )
  public final String officialWebsite;

  /**
   * 联系人
   */
  @WireField(
      tag = 13,
      adapter = "com.squareup.wire.ProtoAdapter#STRING"
  )
  public final String linkman;

  /**
   * 创建时间
   */
  @WireField(
      tag = 14,
      adapter = "com.squareup.wire.ProtoAdapter#UINT64"
  )
  public final Long createTime;

  /**
   * 1-自己注册  2-公司添加
   */
  @WireField(
      tag = 15,
      adapter = "com.squareup.wire.ProtoAdapter#UINT32"
  )
  public final Integer createType;

  /**
   * 创建渠道
   */
  @WireField(
      tag = 16,
      adapter = "com.squareup.wire.ProtoAdapter#STRING"
  )
  public final String createChannel;

  /**
   * 创建员工ID
   */
  @WireField(
      tag = 17,
      adapter = "com.squareup.wire.ProtoAdapter#UINT64"
  )
  public final Long createStaffId;

  /**
   * 创建员工名称
   */
  @WireField(
      tag = 18,
      adapter = "com.squareup.wire.ProtoAdapter#STRING"
  )
  public final String createStaffName;

  /**
   * 县的id
   */
  @WireField(
      tag = 19,
      adapter = "com.squareup.wire.ProtoAdapter#STRING"
  )
  public final String county;

  /**
   * 省份的id
   */
  @WireField(
      tag = 20,
      adapter = "com.squareup.wire.ProtoAdapter#UINT64"
  )
  public final Long provinceId;

  /**
   * 省份的id
   */
  @WireField(
      tag = 21,
      adapter = "com.squareup.wire.ProtoAdapter#UINT64"
  )
  public final Long cityId;

  /**
   * 县的id
   */
  @WireField(
      tag = 22,
      adapter = "com.squareup.wire.ProtoAdapter#UINT64"
  )
  public final Long countyId;

  public Company(Long id, String companyName, Long adminId, String adminPhone, String legalManName, String province, String city, String address, Integer state, String businessLicence, String legalManLicence, String officialWebsite, String linkman, Long createTime, Integer createType, String createChannel, Long createStaffId, String createStaffName, String county, Long provinceId, Long cityId, Long countyId) {
    this(id, companyName, adminId, adminPhone, legalManName, province, city, address, state, businessLicence, legalManLicence, officialWebsite, linkman, createTime, createType, createChannel, createStaffId, createStaffName, county, provinceId, cityId, countyId, ByteString.EMPTY);
  }

  public Company(Long id, String companyName, Long adminId, String adminPhone, String legalManName, String province, String city, String address, Integer state, String businessLicence, String legalManLicence, String officialWebsite, String linkman, Long createTime, Integer createType, String createChannel, Long createStaffId, String createStaffName, String county, Long provinceId, Long cityId, Long countyId, ByteString unknownFields) {
    super(ADAPTER, unknownFields);
    this.id = id;
    this.companyName = companyName;
    this.adminId = adminId;
    this.adminPhone = adminPhone;
    this.legalManName = legalManName;
    this.province = province;
    this.city = city;
    this.address = address;
    this.state = state;
    this.businessLicence = businessLicence;
    this.legalManLicence = legalManLicence;
    this.officialWebsite = officialWebsite;
    this.linkman = linkman;
    this.createTime = createTime;
    this.createType = createType;
    this.createChannel = createChannel;
    this.createStaffId = createStaffId;
    this.createStaffName = createStaffName;
    this.county = county;
    this.provinceId = provinceId;
    this.cityId = cityId;
    this.countyId = countyId;
  }

  @Override
  public Builder newBuilder() {
    Builder builder = new Builder();
    builder.id = id;
    builder.companyName = companyName;
    builder.adminId = adminId;
    builder.adminPhone = adminPhone;
    builder.legalManName = legalManName;
    builder.province = province;
    builder.city = city;
    builder.address = address;
    builder.state = state;
    builder.businessLicence = businessLicence;
    builder.legalManLicence = legalManLicence;
    builder.officialWebsite = officialWebsite;
    builder.linkman = linkman;
    builder.createTime = createTime;
    builder.createType = createType;
    builder.createChannel = createChannel;
    builder.createStaffId = createStaffId;
    builder.createStaffName = createStaffName;
    builder.county = county;
    builder.provinceId = provinceId;
    builder.cityId = cityId;
    builder.countyId = countyId;
    builder.addUnknownFields(unknownFields());
    return builder;
  }

  @Override
  public boolean equals(Object other) {
    if (other == this) return true;
    if (!(other instanceof Company)) return false;
    Company o = (Company) other;
    return unknownFields().equals(o.unknownFields())
        && Internal.equals(id, o.id)
        && Internal.equals(companyName, o.companyName)
        && Internal.equals(adminId, o.adminId)
        && Internal.equals(adminPhone, o.adminPhone)
        && Internal.equals(legalManName, o.legalManName)
        && Internal.equals(province, o.province)
        && Internal.equals(city, o.city)
        && Internal.equals(address, o.address)
        && Internal.equals(state, o.state)
        && Internal.equals(businessLicence, o.businessLicence)
        && Internal.equals(legalManLicence, o.legalManLicence)
        && Internal.equals(officialWebsite, o.officialWebsite)
        && Internal.equals(linkman, o.linkman)
        && Internal.equals(createTime, o.createTime)
        && Internal.equals(createType, o.createType)
        && Internal.equals(createChannel, o.createChannel)
        && Internal.equals(createStaffId, o.createStaffId)
        && Internal.equals(createStaffName, o.createStaffName)
        && Internal.equals(county, o.county)
        && Internal.equals(provinceId, o.provinceId)
        && Internal.equals(cityId, o.cityId)
        && Internal.equals(countyId, o.countyId);
  }

  @Override
  public int hashCode() {
    int result = super.hashCode;
    if (result == 0) {
      result = unknownFields().hashCode();
      result = result * 37 + (id != null ? id.hashCode() : 0);
      result = result * 37 + (companyName != null ? companyName.hashCode() : 0);
      result = result * 37 + (adminId != null ? adminId.hashCode() : 0);
      result = result * 37 + (adminPhone != null ? adminPhone.hashCode() : 0);
      result = result * 37 + (legalManName != null ? legalManName.hashCode() : 0);
      result = result * 37 + (province != null ? province.hashCode() : 0);
      result = result * 37 + (city != null ? city.hashCode() : 0);
      result = result * 37 + (address != null ? address.hashCode() : 0);
      result = result * 37 + (state != null ? state.hashCode() : 0);
      result = result * 37 + (businessLicence != null ? businessLicence.hashCode() : 0);
      result = result * 37 + (legalManLicence != null ? legalManLicence.hashCode() : 0);
      result = result * 37 + (officialWebsite != null ? officialWebsite.hashCode() : 0);
      result = result * 37 + (linkman != null ? linkman.hashCode() : 0);
      result = result * 37 + (createTime != null ? createTime.hashCode() : 0);
      result = result * 37 + (createType != null ? createType.hashCode() : 0);
      result = result * 37 + (createChannel != null ? createChannel.hashCode() : 0);
      result = result * 37 + (createStaffId != null ? createStaffId.hashCode() : 0);
      result = result * 37 + (createStaffName != null ? createStaffName.hashCode() : 0);
      result = result * 37 + (county != null ? county.hashCode() : 0);
      result = result * 37 + (provinceId != null ? provinceId.hashCode() : 0);
      result = result * 37 + (cityId != null ? cityId.hashCode() : 0);
      result = result * 37 + (countyId != null ? countyId.hashCode() : 0);
      super.hashCode = result;
    }
    return result;
  }

  @Override
  public String toString() {
    StringBuilder builder = new StringBuilder();
    if (id != null) builder.append(", id=").append(id);
    if (companyName != null) builder.append(", companyName=").append(companyName);
    if (adminId != null) builder.append(", adminId=").append(adminId);
    if (adminPhone != null) builder.append(", adminPhone=").append(adminPhone);
    if (legalManName != null) builder.append(", legalManName=").append(legalManName);
    if (province != null) builder.append(", province=").append(province);
    if (city != null) builder.append(", city=").append(city);
    if (address != null) builder.append(", address=").append(address);
    if (state != null) builder.append(", state=").append(state);
    if (businessLicence != null) builder.append(", businessLicence=").append(businessLicence);
    if (legalManLicence != null) builder.append(", legalManLicence=").append(legalManLicence);
    if (officialWebsite != null) builder.append(", officialWebsite=").append(officialWebsite);
    if (linkman != null) builder.append(", linkman=").append(linkman);
    if (createTime != null) builder.append(", createTime=").append(createTime);
    if (createType != null) builder.append(", createType=").append(createType);
    if (createChannel != null) builder.append(", createChannel=").append(createChannel);
    if (createStaffId != null) builder.append(", createStaffId=").append(createStaffId);
    if (createStaffName != null) builder.append(", createStaffName=").append(createStaffName);
    if (county != null) builder.append(", county=").append(county);
    if (provinceId != null) builder.append(", provinceId=").append(provinceId);
    if (cityId != null) builder.append(", cityId=").append(cityId);
    if (countyId != null) builder.append(", countyId=").append(countyId);
    return builder.replace(0, 2, "Company{").append('}').toString();
  }

  public static final class Builder extends Message.Builder<Company, Builder> {
    public Long id;

    public String companyName;

    public Long adminId;

    public String adminPhone;

    public String legalManName;

    public String province;

    public String city;

    public String address;

    public Integer state;

    public String businessLicence;

    public String legalManLicence;

    public String officialWebsite;

    public String linkman;

    public Long createTime;

    public Integer createType;

    public String createChannel;

    public Long createStaffId;

    public String createStaffName;

    public String county;

    public Long provinceId;

    public Long cityId;

    public Long countyId;

    public Builder() {
    }

    /**
     * 公司ID
     */
    public Builder id(Long id) {
      this.id = id;
      return this;
    }

    /**
     *  公司名称
     */
    public Builder companyName(String companyName) {
      this.companyName = companyName;
      return this;
    }

    /**
     *  主管理员id
     */
    public Builder adminId(Long adminId) {
      this.adminId = adminId;
      return this;
    }

    /**
     *  主管理员手机号
     */
    public Builder adminPhone(String adminPhone) {
      this.adminPhone = adminPhone;
      return this;
    }

    /**
     *  法人姓名
     */
    public Builder legalManName(String legalManName) {
      this.legalManName = legalManName;
      return this;
    }

    /**
     *  省份
     */
    public Builder province(String province) {
      this.province = province;
      return this;
    }

    /**
     *  城市
     */
    public Builder city(String city) {
      this.city = city;
      return this;
    }

    /**
     *  地址
     */
    public Builder address(String address) {
      this.address = address;
      return this;
    }

    /**
     *  科室的状态 -1已删除  0正在审核 1审核通过
     */
    public Builder state(Integer state) {
      this.state = state;
      return this;
    }

    /**
     *  营业执照照片
     */
    public Builder businessLicence(String businessLicence) {
      this.businessLicence = businessLicence;
      return this;
    }

    /**
     * 法人证件
     */
    public Builder legalManLicence(String legalManLicence) {
      this.legalManLicence = legalManLicence;
      return this;
    }

    /**
     * 官方网站
     */
    public Builder officialWebsite(String officialWebsite) {
      this.officialWebsite = officialWebsite;
      return this;
    }

    /**
     * 联系人
     */
    public Builder linkman(String linkman) {
      this.linkman = linkman;
      return this;
    }

    /**
     * 创建时间
     */
    public Builder createTime(Long createTime) {
      this.createTime = createTime;
      return this;
    }

    /**
     * 1-自己注册  2-公司添加
     */
    public Builder createType(Integer createType) {
      this.createType = createType;
      return this;
    }

    /**
     * 创建渠道
     */
    public Builder createChannel(String createChannel) {
      this.createChannel = createChannel;
      return this;
    }

    /**
     * 创建员工ID
     */
    public Builder createStaffId(Long createStaffId) {
      this.createStaffId = createStaffId;
      return this;
    }

    /**
     * 创建员工名称
     */
    public Builder createStaffName(String createStaffName) {
      this.createStaffName = createStaffName;
      return this;
    }

    /**
     * 县的id
     */
    public Builder county(String county) {
      this.county = county;
      return this;
    }

    /**
     * 省份的id
     */
    public Builder provinceId(Long provinceId) {
      this.provinceId = provinceId;
      return this;
    }

    /**
     * 省份的id
     */
    public Builder cityId(Long cityId) {
      this.cityId = cityId;
      return this;
    }

    /**
     * 县的id
     */
    public Builder countyId(Long countyId) {
      this.countyId = countyId;
      return this;
    }

    @Override
    public Company build() {
      return new Company(id, companyName, adminId, adminPhone, legalManName, province, city, address, state, businessLicence, legalManLicence, officialWebsite, linkman, createTime, createType, createChannel, createStaffId, createStaffName, county, provinceId, cityId, countyId, super.buildUnknownFields());
    }
  }

  private static final class ProtoAdapter_Company extends ProtoAdapter<Company> {
    ProtoAdapter_Company() {
      super(FieldEncoding.LENGTH_DELIMITED, Company.class);
    }

    @Override
    public int encodedSize(Company value) {
      return (value.id != null ? ProtoAdapter.UINT64.encodedSizeWithTag(1, value.id) : 0)
          + (value.companyName != null ? ProtoAdapter.STRING.encodedSizeWithTag(2, value.companyName) : 0)
          + (value.adminId != null ? ProtoAdapter.UINT64.encodedSizeWithTag(3, value.adminId) : 0)
          + (value.adminPhone != null ? ProtoAdapter.STRING.encodedSizeWithTag(4, value.adminPhone) : 0)
          + (value.legalManName != null ? ProtoAdapter.STRING.encodedSizeWithTag(5, value.legalManName) : 0)
          + (value.province != null ? ProtoAdapter.STRING.encodedSizeWithTag(6, value.province) : 0)
          + (value.city != null ? ProtoAdapter.STRING.encodedSizeWithTag(7, value.city) : 0)
          + (value.address != null ? ProtoAdapter.STRING.encodedSizeWithTag(8, value.address) : 0)
          + (value.state != null ? ProtoAdapter.UINT32.encodedSizeWithTag(9, value.state) : 0)
          + (value.businessLicence != null ? ProtoAdapter.STRING.encodedSizeWithTag(10, value.businessLicence) : 0)
          + (value.legalManLicence != null ? ProtoAdapter.STRING.encodedSizeWithTag(11, value.legalManLicence) : 0)
          + (value.officialWebsite != null ? ProtoAdapter.STRING.encodedSizeWithTag(12, value.officialWebsite) : 0)
          + (value.linkman != null ? ProtoAdapter.STRING.encodedSizeWithTag(13, value.linkman) : 0)
          + (value.createTime != null ? ProtoAdapter.UINT64.encodedSizeWithTag(14, value.createTime) : 0)
          + (value.createType != null ? ProtoAdapter.UINT32.encodedSizeWithTag(15, value.createType) : 0)
          + (value.createChannel != null ? ProtoAdapter.STRING.encodedSizeWithTag(16, value.createChannel) : 0)
          + (value.createStaffId != null ? ProtoAdapter.UINT64.encodedSizeWithTag(17, value.createStaffId) : 0)
          + (value.createStaffName != null ? ProtoAdapter.STRING.encodedSizeWithTag(18, value.createStaffName) : 0)
          + (value.county != null ? ProtoAdapter.STRING.encodedSizeWithTag(19, value.county) : 0)
          + (value.provinceId != null ? ProtoAdapter.UINT64.encodedSizeWithTag(20, value.provinceId) : 0)
          + (value.cityId != null ? ProtoAdapter.UINT64.encodedSizeWithTag(21, value.cityId) : 0)
          + (value.countyId != null ? ProtoAdapter.UINT64.encodedSizeWithTag(22, value.countyId) : 0)
          + value.unknownFields().size();
    }

    @Override
    public void encode(ProtoWriter writer, Company value) throws IOException {
      if (value.id != null) ProtoAdapter.UINT64.encodeWithTag(writer, 1, value.id);
      if (value.companyName != null) ProtoAdapter.STRING.encodeWithTag(writer, 2, value.companyName);
      if (value.adminId != null) ProtoAdapter.UINT64.encodeWithTag(writer, 3, value.adminId);
      if (value.adminPhone != null) ProtoAdapter.STRING.encodeWithTag(writer, 4, value.adminPhone);
      if (value.legalManName != null) ProtoAdapter.STRING.encodeWithTag(writer, 5, value.legalManName);
      if (value.province != null) ProtoAdapter.STRING.encodeWithTag(writer, 6, value.province);
      if (value.city != null) ProtoAdapter.STRING.encodeWithTag(writer, 7, value.city);
      if (value.address != null) ProtoAdapter.STRING.encodeWithTag(writer, 8, value.address);
      if (value.state != null) ProtoAdapter.UINT32.encodeWithTag(writer, 9, value.state);
      if (value.businessLicence != null) ProtoAdapter.STRING.encodeWithTag(writer, 10, value.businessLicence);
      if (value.legalManLicence != null) ProtoAdapter.STRING.encodeWithTag(writer, 11, value.legalManLicence);
      if (value.officialWebsite != null) ProtoAdapter.STRING.encodeWithTag(writer, 12, value.officialWebsite);
      if (value.linkman != null) ProtoAdapter.STRING.encodeWithTag(writer, 13, value.linkman);
      if (value.createTime != null) ProtoAdapter.UINT64.encodeWithTag(writer, 14, value.createTime);
      if (value.createType != null) ProtoAdapter.UINT32.encodeWithTag(writer, 15, value.createType);
      if (value.createChannel != null) ProtoAdapter.STRING.encodeWithTag(writer, 16, value.createChannel);
      if (value.createStaffId != null) ProtoAdapter.UINT64.encodeWithTag(writer, 17, value.createStaffId);
      if (value.createStaffName != null) ProtoAdapter.STRING.encodeWithTag(writer, 18, value.createStaffName);
      if (value.county != null) ProtoAdapter.STRING.encodeWithTag(writer, 19, value.county);
      if (value.provinceId != null) ProtoAdapter.UINT64.encodeWithTag(writer, 20, value.provinceId);
      if (value.cityId != null) ProtoAdapter.UINT64.encodeWithTag(writer, 21, value.cityId);
      if (value.countyId != null) ProtoAdapter.UINT64.encodeWithTag(writer, 22, value.countyId);
      writer.writeBytes(value.unknownFields());
    }

    @Override
    public Company decode(ProtoReader reader) throws IOException {
      Builder builder = new Builder();
      long token = reader.beginMessage();
      for (int tag; (tag = reader.nextTag()) != -1;) {
        switch (tag) {
          case 1: builder.id(ProtoAdapter.UINT64.decode(reader)); break;
          case 2: builder.companyName(ProtoAdapter.STRING.decode(reader)); break;
          case 3: builder.adminId(ProtoAdapter.UINT64.decode(reader)); break;
          case 4: builder.adminPhone(ProtoAdapter.STRING.decode(reader)); break;
          case 5: builder.legalManName(ProtoAdapter.STRING.decode(reader)); break;
          case 6: builder.province(ProtoAdapter.STRING.decode(reader)); break;
          case 7: builder.city(ProtoAdapter.STRING.decode(reader)); break;
          case 8: builder.address(ProtoAdapter.STRING.decode(reader)); break;
          case 9: builder.state(ProtoAdapter.UINT32.decode(reader)); break;
          case 10: builder.businessLicence(ProtoAdapter.STRING.decode(reader)); break;
          case 11: builder.legalManLicence(ProtoAdapter.STRING.decode(reader)); break;
          case 12: builder.officialWebsite(ProtoAdapter.STRING.decode(reader)); break;
          case 13: builder.linkman(ProtoAdapter.STRING.decode(reader)); break;
          case 14: builder.createTime(ProtoAdapter.UINT64.decode(reader)); break;
          case 15: builder.createType(ProtoAdapter.UINT32.decode(reader)); break;
          case 16: builder.createChannel(ProtoAdapter.STRING.decode(reader)); break;
          case 17: builder.createStaffId(ProtoAdapter.UINT64.decode(reader)); break;
          case 18: builder.createStaffName(ProtoAdapter.STRING.decode(reader)); break;
          case 19: builder.county(ProtoAdapter.STRING.decode(reader)); break;
          case 20: builder.provinceId(ProtoAdapter.UINT64.decode(reader)); break;
          case 21: builder.cityId(ProtoAdapter.UINT64.decode(reader)); break;
          case 22: builder.countyId(ProtoAdapter.UINT64.decode(reader)); break;
          default: {
            FieldEncoding fieldEncoding = reader.peekFieldEncoding();
            Object value = fieldEncoding.rawProtoAdapter().decode(reader);
            builder.addUnknownField(tag, fieldEncoding, value);
          }
        }
      }
      reader.endMessage(token);
      return builder.build();
    }

    @Override
    public Company redact(Company value) {
      Builder builder = value.newBuilder();
      builder.clearUnknownFields();
      return builder.build();
    }
  }
}
