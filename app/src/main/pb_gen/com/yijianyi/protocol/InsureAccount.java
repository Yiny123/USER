// Code generated by Wire protocol buffer compiler, do not edit.
// Source file: SaasModel.proto at 946:1
package com.yijianyi.protocol;

import com.squareup.wire.FieldEncoding;
import com.squareup.wire.Message;
import com.squareup.wire.ProtoAdapter;
import com.squareup.wire.ProtoReader;
import com.squareup.wire.ProtoWriter;
import com.squareup.wire.WireField;
import com.squareup.wire.internal.Internal;
import java.io.IOException;
import java.lang.Long;
import java.lang.Object;
import java.lang.Override;
import java.lang.String;
import java.lang.StringBuilder;
import okio.ByteString;

public final class InsureAccount extends Message<InsureAccount, InsureAccount.Builder> {
  public static final ProtoAdapter<InsureAccount> ADAPTER = new ProtoAdapter_InsureAccount();

  private static final long serialVersionUID = 0L;

  public static final String DEFAULT_IDCARD = "";

  public static final Long DEFAULT_COMPANYID = 0L;

  public static final String DEFAULT_ORDERID = "";

  public static final Long DEFAULT_ACCOUNT = 0L;

  public static final Long DEFAULT_TOTALACCOUNT = 0L;

  public static final Long DEFAULT_CREATETIME = 0L;

  /**
   * 身份证号
   */
  @WireField(
      tag = 1,
      adapter = "com.squareup.wire.ProtoAdapter#STRING"
  )
  public final String idcard;

  /**
   * 公司id
   */
  @WireField(
      tag = 2,
      adapter = "com.squareup.wire.ProtoAdapter#UINT64"
  )
  public final Long companyId;

  /**
   * 订单id
   */
  @WireField(
      tag = 3,
      adapter = "com.squareup.wire.ProtoAdapter#STRING"
  )
  public final String orderId;

  /**
   * 账户金额 单位 分
   */
  @WireField(
      tag = 4,
      adapter = "com.squareup.wire.ProtoAdapter#UINT64"
  )
  public final Long account;

  /**
   * 历史总金额（只增不减）
   */
  @WireField(
      tag = 5,
      adapter = "com.squareup.wire.ProtoAdapter#UINT64"
  )
  public final Long totalAccount;

  /**
   * 时间
   */
  @WireField(
      tag = 6,
      adapter = "com.squareup.wire.ProtoAdapter#UINT64"
  )
  public final Long createTime;

  public InsureAccount(String idcard, Long companyId, String orderId, Long account, Long totalAccount, Long createTime) {
    this(idcard, companyId, orderId, account, totalAccount, createTime, ByteString.EMPTY);
  }

  public InsureAccount(String idcard, Long companyId, String orderId, Long account, Long totalAccount, Long createTime, ByteString unknownFields) {
    super(ADAPTER, unknownFields);
    this.idcard = idcard;
    this.companyId = companyId;
    this.orderId = orderId;
    this.account = account;
    this.totalAccount = totalAccount;
    this.createTime = createTime;
  }

  @Override
  public Builder newBuilder() {
    Builder builder = new Builder();
    builder.idcard = idcard;
    builder.companyId = companyId;
    builder.orderId = orderId;
    builder.account = account;
    builder.totalAccount = totalAccount;
    builder.createTime = createTime;
    builder.addUnknownFields(unknownFields());
    return builder;
  }

  @Override
  public boolean equals(Object other) {
    if (other == this) return true;
    if (!(other instanceof InsureAccount)) return false;
    InsureAccount o = (InsureAccount) other;
    return unknownFields().equals(o.unknownFields())
        && Internal.equals(idcard, o.idcard)
        && Internal.equals(companyId, o.companyId)
        && Internal.equals(orderId, o.orderId)
        && Internal.equals(account, o.account)
        && Internal.equals(totalAccount, o.totalAccount)
        && Internal.equals(createTime, o.createTime);
  }

  @Override
  public int hashCode() {
    int result = super.hashCode;
    if (result == 0) {
      result = unknownFields().hashCode();
      result = result * 37 + (idcard != null ? idcard.hashCode() : 0);
      result = result * 37 + (companyId != null ? companyId.hashCode() : 0);
      result = result * 37 + (orderId != null ? orderId.hashCode() : 0);
      result = result * 37 + (account != null ? account.hashCode() : 0);
      result = result * 37 + (totalAccount != null ? totalAccount.hashCode() : 0);
      result = result * 37 + (createTime != null ? createTime.hashCode() : 0);
      super.hashCode = result;
    }
    return result;
  }

  @Override
  public String toString() {
    StringBuilder builder = new StringBuilder();
    if (idcard != null) builder.append(", idcard=").append(idcard);
    if (companyId != null) builder.append(", companyId=").append(companyId);
    if (orderId != null) builder.append(", orderId=").append(orderId);
    if (account != null) builder.append(", account=").append(account);
    if (totalAccount != null) builder.append(", totalAccount=").append(totalAccount);
    if (createTime != null) builder.append(", createTime=").append(createTime);
    return builder.replace(0, 2, "InsureAccount{").append('}').toString();
  }

  public static final class Builder extends Message.Builder<InsureAccount, Builder> {
    public String idcard;

    public Long companyId;

    public String orderId;

    public Long account;

    public Long totalAccount;

    public Long createTime;

    public Builder() {
    }

    /**
     * 身份证号
     */
    public Builder idcard(String idcard) {
      this.idcard = idcard;
      return this;
    }

    /**
     * 公司id
     */
    public Builder companyId(Long companyId) {
      this.companyId = companyId;
      return this;
    }

    /**
     * 订单id
     */
    public Builder orderId(String orderId) {
      this.orderId = orderId;
      return this;
    }

    /**
     * 账户金额 单位 分
     */
    public Builder account(Long account) {
      this.account = account;
      return this;
    }

    /**
     * 历史总金额（只增不减）
     */
    public Builder totalAccount(Long totalAccount) {
      this.totalAccount = totalAccount;
      return this;
    }

    /**
     * 时间
     */
    public Builder createTime(Long createTime) {
      this.createTime = createTime;
      return this;
    }

    @Override
    public InsureAccount build() {
      return new InsureAccount(idcard, companyId, orderId, account, totalAccount, createTime, super.buildUnknownFields());
    }
  }

  private static final class ProtoAdapter_InsureAccount extends ProtoAdapter<InsureAccount> {
    ProtoAdapter_InsureAccount() {
      super(FieldEncoding.LENGTH_DELIMITED, InsureAccount.class);
    }

    @Override
    public int encodedSize(InsureAccount value) {
      return (value.idcard != null ? ProtoAdapter.STRING.encodedSizeWithTag(1, value.idcard) : 0)
          + (value.companyId != null ? ProtoAdapter.UINT64.encodedSizeWithTag(2, value.companyId) : 0)
          + (value.orderId != null ? ProtoAdapter.STRING.encodedSizeWithTag(3, value.orderId) : 0)
          + (value.account != null ? ProtoAdapter.UINT64.encodedSizeWithTag(4, value.account) : 0)
          + (value.totalAccount != null ? ProtoAdapter.UINT64.encodedSizeWithTag(5, value.totalAccount) : 0)
          + (value.createTime != null ? ProtoAdapter.UINT64.encodedSizeWithTag(6, value.createTime) : 0)
          + value.unknownFields().size();
    }

    @Override
    public void encode(ProtoWriter writer, InsureAccount value) throws IOException {
      if (value.idcard != null) ProtoAdapter.STRING.encodeWithTag(writer, 1, value.idcard);
      if (value.companyId != null) ProtoAdapter.UINT64.encodeWithTag(writer, 2, value.companyId);
      if (value.orderId != null) ProtoAdapter.STRING.encodeWithTag(writer, 3, value.orderId);
      if (value.account != null) ProtoAdapter.UINT64.encodeWithTag(writer, 4, value.account);
      if (value.totalAccount != null) ProtoAdapter.UINT64.encodeWithTag(writer, 5, value.totalAccount);
      if (value.createTime != null) ProtoAdapter.UINT64.encodeWithTag(writer, 6, value.createTime);
      writer.writeBytes(value.unknownFields());
    }

    @Override
    public InsureAccount decode(ProtoReader reader) throws IOException {
      Builder builder = new Builder();
      long token = reader.beginMessage();
      for (int tag; (tag = reader.nextTag()) != -1;) {
        switch (tag) {
          case 1: builder.idcard(ProtoAdapter.STRING.decode(reader)); break;
          case 2: builder.companyId(ProtoAdapter.UINT64.decode(reader)); break;
          case 3: builder.orderId(ProtoAdapter.STRING.decode(reader)); break;
          case 4: builder.account(ProtoAdapter.UINT64.decode(reader)); break;
          case 5: builder.totalAccount(ProtoAdapter.UINT64.decode(reader)); break;
          case 6: builder.createTime(ProtoAdapter.UINT64.decode(reader)); break;
          default: {
            FieldEncoding fieldEncoding = reader.peekFieldEncoding();
            Object value = fieldEncoding.rawProtoAdapter().decode(reader);
            builder.addUnknownField(tag, fieldEncoding, value);
          }
        }
      }
      reader.endMessage(token);
      return builder.build();
    }

    @Override
    public InsureAccount redact(InsureAccount value) {
      Builder builder = value.newBuilder();
      builder.clearUnknownFields();
      return builder.build();
    }
  }
}
