// Code generated by Wire protocol buffer compiler, do not edit.
// Source file: AppInterface.proto at 1325:1
package com.yijianyi.protocol;

import com.squareup.wire.FieldEncoding;
import com.squareup.wire.Message;
import com.squareup.wire.ProtoAdapter;
import com.squareup.wire.ProtoReader;
import com.squareup.wire.ProtoWriter;
import com.squareup.wire.WireField;
import com.squareup.wire.internal.Internal;
import java.io.IOException;
import java.lang.Integer;
import java.lang.Object;
import java.lang.Override;
import java.lang.String;
import java.lang.StringBuilder;
import okio.ByteString;

/**
 * 长护险申请单添加数据及修改
 */
public final class SaveOrUpdateInsureReq extends Message<SaveOrUpdateInsureReq, SaveOrUpdateInsureReq.Builder> {
  public static final ProtoAdapter<SaveOrUpdateInsureReq> ADAPTER = new ProtoAdapter_SaveOrUpdateInsureReq();

  private static final long serialVersionUID = 0L;

  public static final String DEFAULT_INSURENO = "";

  public static final String DEFAULT_PROVINCE = "";

  public static final String DEFAULT_CITY = "";

  public static final String DEFAULT_DISTRICT = "";

  public static final String DEFAULT_BUILDING = "";

  public static final String DEFAULT_ADDRDETAIL = "";

  public static final String DEFAULT_PHONE = "";

  public static final String DEFAULT_NAME = "";

  public static final Integer DEFAULT_STAFFTYPE = 0;

  public static final String DEFAULT_HEALTHCARENO = "";

  public static final String DEFAULT_AGENCYNAME = "";

  public static final String DEFAULT_AGENCYRELATION = "";

  public static final String DEFAULT_AGENCYPHONE = "";

  public static final Integer DEFAULT_APPLYTREATMENTTYPE = 0;

  public static final Integer DEFAULT_TREATMENTTYPE = 0;

  public static final Integer DEFAULT_INSUREGETTYPE = 0;

  public static final String DEFAULT_USERSIGNPIC = "";

  public static final String DEFAULT_ENTRUSTPIC = "";

  public static final String DEFAULT_HEALTHCAREPIC = "";

  public static final String DEFAULT_KINSFOLKPIC = "";

  public static final String DEFAULT_IDCARDPIC = "";

  public static final String DEFAULT_IDCARDPIC2 = "";

  public static final Integer DEFAULT_ASSESSTYPE = 0;

  /**
   * 申请批号
   */
  @WireField(
      tag = 1,
      adapter = "com.squareup.wire.ProtoAdapter#STRING"
  )
  public final String insureNO;

  /**
   * 省
   */
  @WireField(
      tag = 2,
      adapter = "com.squareup.wire.ProtoAdapter#STRING"
  )
  public final String province;

  /**
   * 市
   */
  @WireField(
      tag = 3,
      adapter = "com.squareup.wire.ProtoAdapter#STRING"
  )
  public final String city;

  /**
   * 区县
   */
  @WireField(
      tag = 4,
      adapter = "com.squareup.wire.ProtoAdapter#STRING"
  )
  public final String district;

  /**
   * 小区
   */
  @WireField(
      tag = 5,
      adapter = "com.squareup.wire.ProtoAdapter#STRING"
  )
  public final String building;

  /**
   * 详细地址
   */
  @WireField(
      tag = 6,
      adapter = "com.squareup.wire.ProtoAdapter#STRING"
  )
  public final String addrDetail;

  /**
   * 地址联系电话
   */
  @WireField(
      tag = 7,
      adapter = "com.squareup.wire.ProtoAdapter#STRING"
  )
  public final String phone;

  /**
   * 地址联系人
   */
  @WireField(
      tag = 8,
      adapter = "com.squareup.wire.ProtoAdapter#STRING"
  )
  public final String name;

  /**
   * 人员类别
   */
  @WireField(
      tag = 9,
      adapter = "com.squareup.wire.ProtoAdapter#UINT32"
  )
  public final Integer staffType;

  /**
   * 医保卡号
   */
  @WireField(
      tag = 10,
      adapter = "com.squareup.wire.ProtoAdapter#STRING"
  )
  public final String healthCareNO;

  /**
   * 代理人昵称
   */
  @WireField(
      tag = 11,
      adapter = "com.squareup.wire.ProtoAdapter#STRING"
  )
  public final String agencyName;

  /**
   * 代理人关系
   */
  @WireField(
      tag = 12,
      adapter = "com.squareup.wire.ProtoAdapter#STRING"
  )
  public final String agencyRelation;

  /**
   * 代理人电话
   */
  @WireField(
      tag = 13,
      adapter = "com.squareup.wire.ProtoAdapter#STRING"
  )
  public final String agencyPhone;

  /**
   * 申请待遇类别 1-生活照料 2-生活照料+医疗护理
   */
  @WireField(
      tag = 14,
      adapter = "com.squareup.wire.ProtoAdapter#UINT32"
  )
  public final Integer applyTreatmentType;

  /**
   * 待遇类型 1-机构护理 2-居家护理
   */
  @WireField(
      tag = 15,
      adapter = "com.squareup.wire.ProtoAdapter#UINT32"
  )
  public final Integer treatmentType;

  /**
   * 领取方式 1 邮寄 2 自行领取
   */
  @WireField(
      tag = 16,
      adapter = "com.squareup.wire.ProtoAdapter#UINT32"
  )
  public final Integer insureGetType;

  /**
   * 申请人签名
   */
  @WireField(
      tag = 17,
      adapter = "com.squareup.wire.ProtoAdapter#STRING"
  )
  public final String userSignPic;

  /**
   * 用户委托书
   */
  @WireField(
      tag = 18,
      adapter = "com.squareup.wire.ProtoAdapter#STRING"
  )
  public final String entrustPic;

  /**
   * 医保卡信息照片
   */
  @WireField(
      tag = 19,
      adapter = "com.squareup.wire.ProtoAdapter#STRING"
  )
  public final String healthCarePic;

  /**
   * 参保人照片
   */
  @WireField(
      tag = 20,
      adapter = "com.squareup.wire.ProtoAdapter#STRING"
  )
  public final String kinsfolkPic;

  /**
   * 身份证正面照
   */
  @WireField(
      tag = 21,
      adapter = "com.squareup.wire.ProtoAdapter#STRING"
  )
  public final String idcardpic;

  /**
   * 身份证反面照
   */
  @WireField(
      tag = 22,
      adapter = "com.squareup.wire.ProtoAdapter#STRING"
  )
  public final String idcardpic2;

  /**
   * 评估类别 1-首次评估 2-复检评估 3-变更评估
   */
  @WireField(
      tag = 23,
      adapter = "com.squareup.wire.ProtoAdapter#UINT32"
  )
  public final Integer assessType;

  public SaveOrUpdateInsureReq(String insureNO, String province, String city, String district, String building, String addrDetail, String phone, String name, Integer staffType, String healthCareNO, String agencyName, String agencyRelation, String agencyPhone, Integer applyTreatmentType, Integer treatmentType, Integer insureGetType, String userSignPic, String entrustPic, String healthCarePic, String kinsfolkPic, String idcardpic, String idcardpic2, Integer assessType) {
    this(insureNO, province, city, district, building, addrDetail, phone, name, staffType, healthCareNO, agencyName, agencyRelation, agencyPhone, applyTreatmentType, treatmentType, insureGetType, userSignPic, entrustPic, healthCarePic, kinsfolkPic, idcardpic, idcardpic2, assessType, ByteString.EMPTY);
  }

  public SaveOrUpdateInsureReq(String insureNO, String province, String city, String district, String building, String addrDetail, String phone, String name, Integer staffType, String healthCareNO, String agencyName, String agencyRelation, String agencyPhone, Integer applyTreatmentType, Integer treatmentType, Integer insureGetType, String userSignPic, String entrustPic, String healthCarePic, String kinsfolkPic, String idcardpic, String idcardpic2, Integer assessType, ByteString unknownFields) {
    super(ADAPTER, unknownFields);
    this.insureNO = insureNO;
    this.province = province;
    this.city = city;
    this.district = district;
    this.building = building;
    this.addrDetail = addrDetail;
    this.phone = phone;
    this.name = name;
    this.staffType = staffType;
    this.healthCareNO = healthCareNO;
    this.agencyName = agencyName;
    this.agencyRelation = agencyRelation;
    this.agencyPhone = agencyPhone;
    this.applyTreatmentType = applyTreatmentType;
    this.treatmentType = treatmentType;
    this.insureGetType = insureGetType;
    this.userSignPic = userSignPic;
    this.entrustPic = entrustPic;
    this.healthCarePic = healthCarePic;
    this.kinsfolkPic = kinsfolkPic;
    this.idcardpic = idcardpic;
    this.idcardpic2 = idcardpic2;
    this.assessType = assessType;
  }

  @Override
  public Builder newBuilder() {
    Builder builder = new Builder();
    builder.insureNO = insureNO;
    builder.province = province;
    builder.city = city;
    builder.district = district;
    builder.building = building;
    builder.addrDetail = addrDetail;
    builder.phone = phone;
    builder.name = name;
    builder.staffType = staffType;
    builder.healthCareNO = healthCareNO;
    builder.agencyName = agencyName;
    builder.agencyRelation = agencyRelation;
    builder.agencyPhone = agencyPhone;
    builder.applyTreatmentType = applyTreatmentType;
    builder.treatmentType = treatmentType;
    builder.insureGetType = insureGetType;
    builder.userSignPic = userSignPic;
    builder.entrustPic = entrustPic;
    builder.healthCarePic = healthCarePic;
    builder.kinsfolkPic = kinsfolkPic;
    builder.idcardpic = idcardpic;
    builder.idcardpic2 = idcardpic2;
    builder.assessType = assessType;
    builder.addUnknownFields(unknownFields());
    return builder;
  }

  @Override
  public boolean equals(Object other) {
    if (other == this) return true;
    if (!(other instanceof SaveOrUpdateInsureReq)) return false;
    SaveOrUpdateInsureReq o = (SaveOrUpdateInsureReq) other;
    return unknownFields().equals(o.unknownFields())
        && Internal.equals(insureNO, o.insureNO)
        && Internal.equals(province, o.province)
        && Internal.equals(city, o.city)
        && Internal.equals(district, o.district)
        && Internal.equals(building, o.building)
        && Internal.equals(addrDetail, o.addrDetail)
        && Internal.equals(phone, o.phone)
        && Internal.equals(name, o.name)
        && Internal.equals(staffType, o.staffType)
        && Internal.equals(healthCareNO, o.healthCareNO)
        && Internal.equals(agencyName, o.agencyName)
        && Internal.equals(agencyRelation, o.agencyRelation)
        && Internal.equals(agencyPhone, o.agencyPhone)
        && Internal.equals(applyTreatmentType, o.applyTreatmentType)
        && Internal.equals(treatmentType, o.treatmentType)
        && Internal.equals(insureGetType, o.insureGetType)
        && Internal.equals(userSignPic, o.userSignPic)
        && Internal.equals(entrustPic, o.entrustPic)
        && Internal.equals(healthCarePic, o.healthCarePic)
        && Internal.equals(kinsfolkPic, o.kinsfolkPic)
        && Internal.equals(idcardpic, o.idcardpic)
        && Internal.equals(idcardpic2, o.idcardpic2)
        && Internal.equals(assessType, o.assessType);
  }

  @Override
  public int hashCode() {
    int result = super.hashCode;
    if (result == 0) {
      result = unknownFields().hashCode();
      result = result * 37 + (insureNO != null ? insureNO.hashCode() : 0);
      result = result * 37 + (province != null ? province.hashCode() : 0);
      result = result * 37 + (city != null ? city.hashCode() : 0);
      result = result * 37 + (district != null ? district.hashCode() : 0);
      result = result * 37 + (building != null ? building.hashCode() : 0);
      result = result * 37 + (addrDetail != null ? addrDetail.hashCode() : 0);
      result = result * 37 + (phone != null ? phone.hashCode() : 0);
      result = result * 37 + (name != null ? name.hashCode() : 0);
      result = result * 37 + (staffType != null ? staffType.hashCode() : 0);
      result = result * 37 + (healthCareNO != null ? healthCareNO.hashCode() : 0);
      result = result * 37 + (agencyName != null ? agencyName.hashCode() : 0);
      result = result * 37 + (agencyRelation != null ? agencyRelation.hashCode() : 0);
      result = result * 37 + (agencyPhone != null ? agencyPhone.hashCode() : 0);
      result = result * 37 + (applyTreatmentType != null ? applyTreatmentType.hashCode() : 0);
      result = result * 37 + (treatmentType != null ? treatmentType.hashCode() : 0);
      result = result * 37 + (insureGetType != null ? insureGetType.hashCode() : 0);
      result = result * 37 + (userSignPic != null ? userSignPic.hashCode() : 0);
      result = result * 37 + (entrustPic != null ? entrustPic.hashCode() : 0);
      result = result * 37 + (healthCarePic != null ? healthCarePic.hashCode() : 0);
      result = result * 37 + (kinsfolkPic != null ? kinsfolkPic.hashCode() : 0);
      result = result * 37 + (idcardpic != null ? idcardpic.hashCode() : 0);
      result = result * 37 + (idcardpic2 != null ? idcardpic2.hashCode() : 0);
      result = result * 37 + (assessType != null ? assessType.hashCode() : 0);
      super.hashCode = result;
    }
    return result;
  }

  @Override
  public String toString() {
    StringBuilder builder = new StringBuilder();
    if (insureNO != null) builder.append(", insureNO=").append(insureNO);
    if (province != null) builder.append(", province=").append(province);
    if (city != null) builder.append(", city=").append(city);
    if (district != null) builder.append(", district=").append(district);
    if (building != null) builder.append(", building=").append(building);
    if (addrDetail != null) builder.append(", addrDetail=").append(addrDetail);
    if (phone != null) builder.append(", phone=").append(phone);
    if (name != null) builder.append(", name=").append(name);
    if (staffType != null) builder.append(", staffType=").append(staffType);
    if (healthCareNO != null) builder.append(", healthCareNO=").append(healthCareNO);
    if (agencyName != null) builder.append(", agencyName=").append(agencyName);
    if (agencyRelation != null) builder.append(", agencyRelation=").append(agencyRelation);
    if (agencyPhone != null) builder.append(", agencyPhone=").append(agencyPhone);
    if (applyTreatmentType != null) builder.append(", applyTreatmentType=").append(applyTreatmentType);
    if (treatmentType != null) builder.append(", treatmentType=").append(treatmentType);
    if (insureGetType != null) builder.append(", insureGetType=").append(insureGetType);
    if (userSignPic != null) builder.append(", userSignPic=").append(userSignPic);
    if (entrustPic != null) builder.append(", entrustPic=").append(entrustPic);
    if (healthCarePic != null) builder.append(", healthCarePic=").append(healthCarePic);
    if (kinsfolkPic != null) builder.append(", kinsfolkPic=").append(kinsfolkPic);
    if (idcardpic != null) builder.append(", idcardpic=").append(idcardpic);
    if (idcardpic2 != null) builder.append(", idcardpic2=").append(idcardpic2);
    if (assessType != null) builder.append(", assessType=").append(assessType);
    return builder.replace(0, 2, "SaveOrUpdateInsureReq{").append('}').toString();
  }

  public static final class Builder extends Message.Builder<SaveOrUpdateInsureReq, Builder> {
    public String insureNO;

    public String province;

    public String city;

    public String district;

    public String building;

    public String addrDetail;

    public String phone;

    public String name;

    public Integer staffType;

    public String healthCareNO;

    public String agencyName;

    public String agencyRelation;

    public String agencyPhone;

    public Integer applyTreatmentType;

    public Integer treatmentType;

    public Integer insureGetType;

    public String userSignPic;

    public String entrustPic;

    public String healthCarePic;

    public String kinsfolkPic;

    public String idcardpic;

    public String idcardpic2;

    public Integer assessType;

    public Builder() {
    }

    /**
     * 申请批号
     */
    public Builder insureNO(String insureNO) {
      this.insureNO = insureNO;
      return this;
    }

    /**
     * 省
     */
    public Builder province(String province) {
      this.province = province;
      return this;
    }

    /**
     * 市
     */
    public Builder city(String city) {
      this.city = city;
      return this;
    }

    /**
     * 区县
     */
    public Builder district(String district) {
      this.district = district;
      return this;
    }

    /**
     * 小区
     */
    public Builder building(String building) {
      this.building = building;
      return this;
    }

    /**
     * 详细地址
     */
    public Builder addrDetail(String addrDetail) {
      this.addrDetail = addrDetail;
      return this;
    }

    /**
     * 地址联系电话
     */
    public Builder phone(String phone) {
      this.phone = phone;
      return this;
    }

    /**
     * 地址联系人
     */
    public Builder name(String name) {
      this.name = name;
      return this;
    }

    /**
     * 人员类别
     */
    public Builder staffType(Integer staffType) {
      this.staffType = staffType;
      return this;
    }

    /**
     * 医保卡号
     */
    public Builder healthCareNO(String healthCareNO) {
      this.healthCareNO = healthCareNO;
      return this;
    }

    /**
     * 代理人昵称
     */
    public Builder agencyName(String agencyName) {
      this.agencyName = agencyName;
      return this;
    }

    /**
     * 代理人关系
     */
    public Builder agencyRelation(String agencyRelation) {
      this.agencyRelation = agencyRelation;
      return this;
    }

    /**
     * 代理人电话
     */
    public Builder agencyPhone(String agencyPhone) {
      this.agencyPhone = agencyPhone;
      return this;
    }

    /**
     * 申请待遇类别 1-生活照料 2-生活照料+医疗护理
     */
    public Builder applyTreatmentType(Integer applyTreatmentType) {
      this.applyTreatmentType = applyTreatmentType;
      return this;
    }

    /**
     * 待遇类型 1-机构护理 2-居家护理
     */
    public Builder treatmentType(Integer treatmentType) {
      this.treatmentType = treatmentType;
      return this;
    }

    /**
     * 领取方式 1 邮寄 2 自行领取
     */
    public Builder insureGetType(Integer insureGetType) {
      this.insureGetType = insureGetType;
      return this;
    }

    /**
     * 申请人签名
     */
    public Builder userSignPic(String userSignPic) {
      this.userSignPic = userSignPic;
      return this;
    }

    /**
     * 用户委托书
     */
    public Builder entrustPic(String entrustPic) {
      this.entrustPic = entrustPic;
      return this;
    }

    /**
     * 医保卡信息照片
     */
    public Builder healthCarePic(String healthCarePic) {
      this.healthCarePic = healthCarePic;
      return this;
    }

    /**
     * 参保人照片
     */
    public Builder kinsfolkPic(String kinsfolkPic) {
      this.kinsfolkPic = kinsfolkPic;
      return this;
    }

    /**
     * 身份证正面照
     */
    public Builder idcardpic(String idcardpic) {
      this.idcardpic = idcardpic;
      return this;
    }

    /**
     * 身份证反面照
     */
    public Builder idcardpic2(String idcardpic2) {
      this.idcardpic2 = idcardpic2;
      return this;
    }

    /**
     * 评估类别 1-首次评估 2-复检评估 3-变更评估
     */
    public Builder assessType(Integer assessType) {
      this.assessType = assessType;
      return this;
    }

    @Override
    public SaveOrUpdateInsureReq build() {
      return new SaveOrUpdateInsureReq(insureNO, province, city, district, building, addrDetail, phone, name, staffType, healthCareNO, agencyName, agencyRelation, agencyPhone, applyTreatmentType, treatmentType, insureGetType, userSignPic, entrustPic, healthCarePic, kinsfolkPic, idcardpic, idcardpic2, assessType, super.buildUnknownFields());
    }
  }

  private static final class ProtoAdapter_SaveOrUpdateInsureReq extends ProtoAdapter<SaveOrUpdateInsureReq> {
    ProtoAdapter_SaveOrUpdateInsureReq() {
      super(FieldEncoding.LENGTH_DELIMITED, SaveOrUpdateInsureReq.class);
    }

    @Override
    public int encodedSize(SaveOrUpdateInsureReq value) {
      return (value.insureNO != null ? ProtoAdapter.STRING.encodedSizeWithTag(1, value.insureNO) : 0)
          + (value.province != null ? ProtoAdapter.STRING.encodedSizeWithTag(2, value.province) : 0)
          + (value.city != null ? ProtoAdapter.STRING.encodedSizeWithTag(3, value.city) : 0)
          + (value.district != null ? ProtoAdapter.STRING.encodedSizeWithTag(4, value.district) : 0)
          + (value.building != null ? ProtoAdapter.STRING.encodedSizeWithTag(5, value.building) : 0)
          + (value.addrDetail != null ? ProtoAdapter.STRING.encodedSizeWithTag(6, value.addrDetail) : 0)
          + (value.phone != null ? ProtoAdapter.STRING.encodedSizeWithTag(7, value.phone) : 0)
          + (value.name != null ? ProtoAdapter.STRING.encodedSizeWithTag(8, value.name) : 0)
          + (value.staffType != null ? ProtoAdapter.UINT32.encodedSizeWithTag(9, value.staffType) : 0)
          + (value.healthCareNO != null ? ProtoAdapter.STRING.encodedSizeWithTag(10, value.healthCareNO) : 0)
          + (value.agencyName != null ? ProtoAdapter.STRING.encodedSizeWithTag(11, value.agencyName) : 0)
          + (value.agencyRelation != null ? ProtoAdapter.STRING.encodedSizeWithTag(12, value.agencyRelation) : 0)
          + (value.agencyPhone != null ? ProtoAdapter.STRING.encodedSizeWithTag(13, value.agencyPhone) : 0)
          + (value.applyTreatmentType != null ? ProtoAdapter.UINT32.encodedSizeWithTag(14, value.applyTreatmentType) : 0)
          + (value.treatmentType != null ? ProtoAdapter.UINT32.encodedSizeWithTag(15, value.treatmentType) : 0)
          + (value.insureGetType != null ? ProtoAdapter.UINT32.encodedSizeWithTag(16, value.insureGetType) : 0)
          + (value.userSignPic != null ? ProtoAdapter.STRING.encodedSizeWithTag(17, value.userSignPic) : 0)
          + (value.entrustPic != null ? ProtoAdapter.STRING.encodedSizeWithTag(18, value.entrustPic) : 0)
          + (value.healthCarePic != null ? ProtoAdapter.STRING.encodedSizeWithTag(19, value.healthCarePic) : 0)
          + (value.kinsfolkPic != null ? ProtoAdapter.STRING.encodedSizeWithTag(20, value.kinsfolkPic) : 0)
          + (value.idcardpic != null ? ProtoAdapter.STRING.encodedSizeWithTag(21, value.idcardpic) : 0)
          + (value.idcardpic2 != null ? ProtoAdapter.STRING.encodedSizeWithTag(22, value.idcardpic2) : 0)
          + (value.assessType != null ? ProtoAdapter.UINT32.encodedSizeWithTag(23, value.assessType) : 0)
          + value.unknownFields().size();
    }

    @Override
    public void encode(ProtoWriter writer, SaveOrUpdateInsureReq value) throws IOException {
      if (value.insureNO != null) ProtoAdapter.STRING.encodeWithTag(writer, 1, value.insureNO);
      if (value.province != null) ProtoAdapter.STRING.encodeWithTag(writer, 2, value.province);
      if (value.city != null) ProtoAdapter.STRING.encodeWithTag(writer, 3, value.city);
      if (value.district != null) ProtoAdapter.STRING.encodeWithTag(writer, 4, value.district);
      if (value.building != null) ProtoAdapter.STRING.encodeWithTag(writer, 5, value.building);
      if (value.addrDetail != null) ProtoAdapter.STRING.encodeWithTag(writer, 6, value.addrDetail);
      if (value.phone != null) ProtoAdapter.STRING.encodeWithTag(writer, 7, value.phone);
      if (value.name != null) ProtoAdapter.STRING.encodeWithTag(writer, 8, value.name);
      if (value.staffType != null) ProtoAdapter.UINT32.encodeWithTag(writer, 9, value.staffType);
      if (value.healthCareNO != null) ProtoAdapter.STRING.encodeWithTag(writer, 10, value.healthCareNO);
      if (value.agencyName != null) ProtoAdapter.STRING.encodeWithTag(writer, 11, value.agencyName);
      if (value.agencyRelation != null) ProtoAdapter.STRING.encodeWithTag(writer, 12, value.agencyRelation);
      if (value.agencyPhone != null) ProtoAdapter.STRING.encodeWithTag(writer, 13, value.agencyPhone);
      if (value.applyTreatmentType != null) ProtoAdapter.UINT32.encodeWithTag(writer, 14, value.applyTreatmentType);
      if (value.treatmentType != null) ProtoAdapter.UINT32.encodeWithTag(writer, 15, value.treatmentType);
      if (value.insureGetType != null) ProtoAdapter.UINT32.encodeWithTag(writer, 16, value.insureGetType);
      if (value.userSignPic != null) ProtoAdapter.STRING.encodeWithTag(writer, 17, value.userSignPic);
      if (value.entrustPic != null) ProtoAdapter.STRING.encodeWithTag(writer, 18, value.entrustPic);
      if (value.healthCarePic != null) ProtoAdapter.STRING.encodeWithTag(writer, 19, value.healthCarePic);
      if (value.kinsfolkPic != null) ProtoAdapter.STRING.encodeWithTag(writer, 20, value.kinsfolkPic);
      if (value.idcardpic != null) ProtoAdapter.STRING.encodeWithTag(writer, 21, value.idcardpic);
      if (value.idcardpic2 != null) ProtoAdapter.STRING.encodeWithTag(writer, 22, value.idcardpic2);
      if (value.assessType != null) ProtoAdapter.UINT32.encodeWithTag(writer, 23, value.assessType);
      writer.writeBytes(value.unknownFields());
    }

    @Override
    public SaveOrUpdateInsureReq decode(ProtoReader reader) throws IOException {
      Builder builder = new Builder();
      long token = reader.beginMessage();
      for (int tag; (tag = reader.nextTag()) != -1;) {
        switch (tag) {
          case 1: builder.insureNO(ProtoAdapter.STRING.decode(reader)); break;
          case 2: builder.province(ProtoAdapter.STRING.decode(reader)); break;
          case 3: builder.city(ProtoAdapter.STRING.decode(reader)); break;
          case 4: builder.district(ProtoAdapter.STRING.decode(reader)); break;
          case 5: builder.building(ProtoAdapter.STRING.decode(reader)); break;
          case 6: builder.addrDetail(ProtoAdapter.STRING.decode(reader)); break;
          case 7: builder.phone(ProtoAdapter.STRING.decode(reader)); break;
          case 8: builder.name(ProtoAdapter.STRING.decode(reader)); break;
          case 9: builder.staffType(ProtoAdapter.UINT32.decode(reader)); break;
          case 10: builder.healthCareNO(ProtoAdapter.STRING.decode(reader)); break;
          case 11: builder.agencyName(ProtoAdapter.STRING.decode(reader)); break;
          case 12: builder.agencyRelation(ProtoAdapter.STRING.decode(reader)); break;
          case 13: builder.agencyPhone(ProtoAdapter.STRING.decode(reader)); break;
          case 14: builder.applyTreatmentType(ProtoAdapter.UINT32.decode(reader)); break;
          case 15: builder.treatmentType(ProtoAdapter.UINT32.decode(reader)); break;
          case 16: builder.insureGetType(ProtoAdapter.UINT32.decode(reader)); break;
          case 17: builder.userSignPic(ProtoAdapter.STRING.decode(reader)); break;
          case 18: builder.entrustPic(ProtoAdapter.STRING.decode(reader)); break;
          case 19: builder.healthCarePic(ProtoAdapter.STRING.decode(reader)); break;
          case 20: builder.kinsfolkPic(ProtoAdapter.STRING.decode(reader)); break;
          case 21: builder.idcardpic(ProtoAdapter.STRING.decode(reader)); break;
          case 22: builder.idcardpic2(ProtoAdapter.STRING.decode(reader)); break;
          case 23: builder.assessType(ProtoAdapter.UINT32.decode(reader)); break;
          default: {
            FieldEncoding fieldEncoding = reader.peekFieldEncoding();
            Object value = fieldEncoding.rawProtoAdapter().decode(reader);
            builder.addUnknownField(tag, fieldEncoding, value);
          }
        }
      }
      reader.endMessage(token);
      return builder.build();
    }

    @Override
    public SaveOrUpdateInsureReq redact(SaveOrUpdateInsureReq value) {
      Builder builder = value.newBuilder();
      builder.clearUnknownFields();
      return builder.build();
    }
  }
}
