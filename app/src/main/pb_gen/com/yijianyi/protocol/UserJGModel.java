// Code generated by Wire protocol buffer compiler, do not edit.
// Source file: Model.proto at 190:1
package com.yijianyi.protocol;

import com.squareup.wire.FieldEncoding;
import com.squareup.wire.Message;
import com.squareup.wire.ProtoAdapter;
import com.squareup.wire.ProtoReader;
import com.squareup.wire.ProtoWriter;
import com.squareup.wire.WireField;
import com.squareup.wire.internal.Internal;
import java.io.IOException;
import java.lang.Integer;
import java.lang.Long;
import java.lang.Object;
import java.lang.Override;
import java.lang.String;
import java.lang.StringBuilder;
import okio.ByteString;

/**
 * 极光用户表
 */
public final class UserJGModel extends Message<UserJGModel, UserJGModel.Builder> {
  public static final ProtoAdapter<UserJGModel> ADAPTER = new ProtoAdapter_UserJGModel();

  private static final long serialVersionUID = 0L;

  public static final String DEFAULT_JPUSHID = "";

  public static final Integer DEFAULT_JGAPPID = 0;

  public static final Long DEFAULT_USERID = 0L;

  public static final Long DEFAULT_HGID = 0L;

  public static final Long DEFAULT_CREATETIME = 0L;

  public static final Integer DEFAULT_DEVICETYPE = 0;

  /**
   * 极光推送设备ID
   */
  @WireField(
      tag = 1,
      adapter = "com.squareup.wire.ProtoAdapter#STRING"
  )
  public final String jpushId;

  /**
   * 1-用户端 2-企业端
   */
  @WireField(
      tag = 2,
      adapter = "com.squareup.wire.ProtoAdapter#UINT32"
  )
  public final Integer jgAppId;

  /**
   * 用户ID
   */
  @WireField(
      tag = 3,
      adapter = "com.squareup.wire.ProtoAdapter#UINT64"
  )
  public final Long userId;

  /**
   * 护工ID
   */
  @WireField(
      tag = 4,
      adapter = "com.squareup.wire.ProtoAdapter#UINT64"
  )
  public final Long hgId;

  /**
   * 登陆时间
   */
  @WireField(
      tag = 5,
      adapter = "com.squareup.wire.ProtoAdapter#UINT64"
  )
  public final Long createTime;

  /**
   * 设备类型 1-安卓 2-IOS
   */
  @WireField(
      tag = 6,
      adapter = "com.squareup.wire.ProtoAdapter#UINT32"
  )
  public final Integer deviceType;

  public UserJGModel(String jpushId, Integer jgAppId, Long userId, Long hgId, Long createTime, Integer deviceType) {
    this(jpushId, jgAppId, userId, hgId, createTime, deviceType, ByteString.EMPTY);
  }

  public UserJGModel(String jpushId, Integer jgAppId, Long userId, Long hgId, Long createTime, Integer deviceType, ByteString unknownFields) {
    super(ADAPTER, unknownFields);
    this.jpushId = jpushId;
    this.jgAppId = jgAppId;
    this.userId = userId;
    this.hgId = hgId;
    this.createTime = createTime;
    this.deviceType = deviceType;
  }

  @Override
  public Builder newBuilder() {
    Builder builder = new Builder();
    builder.jpushId = jpushId;
    builder.jgAppId = jgAppId;
    builder.userId = userId;
    builder.hgId = hgId;
    builder.createTime = createTime;
    builder.deviceType = deviceType;
    builder.addUnknownFields(unknownFields());
    return builder;
  }

  @Override
  public boolean equals(Object other) {
    if (other == this) return true;
    if (!(other instanceof UserJGModel)) return false;
    UserJGModel o = (UserJGModel) other;
    return unknownFields().equals(o.unknownFields())
        && Internal.equals(jpushId, o.jpushId)
        && Internal.equals(jgAppId, o.jgAppId)
        && Internal.equals(userId, o.userId)
        && Internal.equals(hgId, o.hgId)
        && Internal.equals(createTime, o.createTime)
        && Internal.equals(deviceType, o.deviceType);
  }

  @Override
  public int hashCode() {
    int result = super.hashCode;
    if (result == 0) {
      result = unknownFields().hashCode();
      result = result * 37 + (jpushId != null ? jpushId.hashCode() : 0);
      result = result * 37 + (jgAppId != null ? jgAppId.hashCode() : 0);
      result = result * 37 + (userId != null ? userId.hashCode() : 0);
      result = result * 37 + (hgId != null ? hgId.hashCode() : 0);
      result = result * 37 + (createTime != null ? createTime.hashCode() : 0);
      result = result * 37 + (deviceType != null ? deviceType.hashCode() : 0);
      super.hashCode = result;
    }
    return result;
  }

  @Override
  public String toString() {
    StringBuilder builder = new StringBuilder();
    if (jpushId != null) builder.append(", jpushId=").append(jpushId);
    if (jgAppId != null) builder.append(", jgAppId=").append(jgAppId);
    if (userId != null) builder.append(", userId=").append(userId);
    if (hgId != null) builder.append(", hgId=").append(hgId);
    if (createTime != null) builder.append(", createTime=").append(createTime);
    if (deviceType != null) builder.append(", deviceType=").append(deviceType);
    return builder.replace(0, 2, "UserJGModel{").append('}').toString();
  }

  public static final class Builder extends Message.Builder<UserJGModel, Builder> {
    public String jpushId;

    public Integer jgAppId;

    public Long userId;

    public Long hgId;

    public Long createTime;

    public Integer deviceType;

    public Builder() {
    }

    /**
     * 极光推送设备ID
     */
    public Builder jpushId(String jpushId) {
      this.jpushId = jpushId;
      return this;
    }

    /**
     * 1-用户端 2-企业端
     */
    public Builder jgAppId(Integer jgAppId) {
      this.jgAppId = jgAppId;
      return this;
    }

    /**
     * 用户ID
     */
    public Builder userId(Long userId) {
      this.userId = userId;
      return this;
    }

    /**
     * 护工ID
     */
    public Builder hgId(Long hgId) {
      this.hgId = hgId;
      return this;
    }

    /**
     * 登陆时间
     */
    public Builder createTime(Long createTime) {
      this.createTime = createTime;
      return this;
    }

    /**
     * 设备类型 1-安卓 2-IOS
     */
    public Builder deviceType(Integer deviceType) {
      this.deviceType = deviceType;
      return this;
    }

    @Override
    public UserJGModel build() {
      return new UserJGModel(jpushId, jgAppId, userId, hgId, createTime, deviceType, super.buildUnknownFields());
    }
  }

  private static final class ProtoAdapter_UserJGModel extends ProtoAdapter<UserJGModel> {
    ProtoAdapter_UserJGModel() {
      super(FieldEncoding.LENGTH_DELIMITED, UserJGModel.class);
    }

    @Override
    public int encodedSize(UserJGModel value) {
      return (value.jpushId != null ? ProtoAdapter.STRING.encodedSizeWithTag(1, value.jpushId) : 0)
          + (value.jgAppId != null ? ProtoAdapter.UINT32.encodedSizeWithTag(2, value.jgAppId) : 0)
          + (value.userId != null ? ProtoAdapter.UINT64.encodedSizeWithTag(3, value.userId) : 0)
          + (value.hgId != null ? ProtoAdapter.UINT64.encodedSizeWithTag(4, value.hgId) : 0)
          + (value.createTime != null ? ProtoAdapter.UINT64.encodedSizeWithTag(5, value.createTime) : 0)
          + (value.deviceType != null ? ProtoAdapter.UINT32.encodedSizeWithTag(6, value.deviceType) : 0)
          + value.unknownFields().size();
    }

    @Override
    public void encode(ProtoWriter writer, UserJGModel value) throws IOException {
      if (value.jpushId != null) ProtoAdapter.STRING.encodeWithTag(writer, 1, value.jpushId);
      if (value.jgAppId != null) ProtoAdapter.UINT32.encodeWithTag(writer, 2, value.jgAppId);
      if (value.userId != null) ProtoAdapter.UINT64.encodeWithTag(writer, 3, value.userId);
      if (value.hgId != null) ProtoAdapter.UINT64.encodeWithTag(writer, 4, value.hgId);
      if (value.createTime != null) ProtoAdapter.UINT64.encodeWithTag(writer, 5, value.createTime);
      if (value.deviceType != null) ProtoAdapter.UINT32.encodeWithTag(writer, 6, value.deviceType);
      writer.writeBytes(value.unknownFields());
    }

    @Override
    public UserJGModel decode(ProtoReader reader) throws IOException {
      Builder builder = new Builder();
      long token = reader.beginMessage();
      for (int tag; (tag = reader.nextTag()) != -1;) {
        switch (tag) {
          case 1: builder.jpushId(ProtoAdapter.STRING.decode(reader)); break;
          case 2: builder.jgAppId(ProtoAdapter.UINT32.decode(reader)); break;
          case 3: builder.userId(ProtoAdapter.UINT64.decode(reader)); break;
          case 4: builder.hgId(ProtoAdapter.UINT64.decode(reader)); break;
          case 5: builder.createTime(ProtoAdapter.UINT64.decode(reader)); break;
          case 6: builder.deviceType(ProtoAdapter.UINT32.decode(reader)); break;
          default: {
            FieldEncoding fieldEncoding = reader.peekFieldEncoding();
            Object value = fieldEncoding.rawProtoAdapter().decode(reader);
            builder.addUnknownField(tag, fieldEncoding, value);
          }
        }
      }
      reader.endMessage(token);
      return builder.build();
    }

    @Override
    public UserJGModel redact(UserJGModel value) {
      Builder builder = value.newBuilder();
      builder.clearUnknownFields();
      return builder.build();
    }
  }
}
