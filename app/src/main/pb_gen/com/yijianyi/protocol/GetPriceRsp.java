// Code generated by Wire protocol buffer compiler, do not edit.
// Source file: AppInterface.proto at 227:1
package com.yijianyi.protocol;

import com.squareup.wire.FieldEncoding;
import com.squareup.wire.Message;
import com.squareup.wire.ProtoAdapter;
import com.squareup.wire.ProtoReader;
import com.squareup.wire.ProtoWriter;
import com.squareup.wire.WireField;
import com.squareup.wire.internal.Internal;
import java.io.IOException;
import java.lang.Long;
import java.lang.Object;
import java.lang.Override;
import java.lang.String;
import java.lang.StringBuilder;
import java.util.List;
import okio.ByteString;

public final class GetPriceRsp extends Message<GetPriceRsp, GetPriceRsp.Builder> {
  public static final ProtoAdapter<GetPriceRsp> ADAPTER = new ProtoAdapter_GetPriceRsp();

  private static final long serialVersionUID = 0L;

  public static final String DEFAULT_PHONE = "";

  public static final String DEFAULT_PREPAYAMOUNT = "";

  public static final Long DEFAULT_ENTRANCECARDPRICE = 0L;

  public static final String DEFAULT_ENTRANCECARDPRICESTR = "";

  public static final String DEFAULT_TOTALPRICE = "";

  /**
   * 一对多套餐列表
   */
  @WireField(
      tag = 1,
      adapter = "com.yijianyi.protocol.Price#ADAPTER",
      label = WireField.Label.REPEATED
  )
  public final List<Price> pList12N;

  /**
   * 一对一套餐列表
   */
  @WireField(
      tag = 2,
      adapter = "com.yijianyi.protocol.Price#ADAPTER",
      label = WireField.Label.REPEATED
  )
  public final List<Price> pList121;

  /**
   * 用户的手机号码
   */
  @WireField(
      tag = 3,
      adapter = "com.squareup.wire.ProtoAdapter#STRING"
  )
  public final String phone;

  /**
   * 下面两个字段加起来的数值 就是app端页面展示的预付款
   * 预付金
   */
  @WireField(
      tag = 4,
      adapter = "com.squareup.wire.ProtoAdapter#STRING"
  )
  public final String prepayAmount;

  /**
   * 门禁卡押金
   */
  @WireField(
      tag = 5,
      adapter = "com.squareup.wire.ProtoAdapter#UINT64"
  )
  public final Long entranceCardPrice;

  /**
   * 居家套餐列表 每个套餐都有不同的预付金 在CompanyPriceVO中
   */
  @WireField(
      tag = 6,
      adapter = "com.yijianyi.protocol.CompanyPriceVO#ADAPTER",
      label = WireField.Label.REPEATED
  )
  public final List<CompanyPriceVO> familyPriceVOList;

  /**
   * 门禁卡押金（转化后）
   */
  @WireField(
      tag = 7,
      adapter = "com.squareup.wire.ProtoAdapter#STRING"
  )
  public final String entranceCardPriceStr;

  /**
   * 机构预付金和门禁卡押金的和
   */
  @WireField(
      tag = 8,
      adapter = "com.squareup.wire.ProtoAdapter#STRING"
  )
  public final String totalPrice;

  public GetPriceRsp(List<Price> pList12N, List<Price> pList121, String phone, String prepayAmount, Long entranceCardPrice, List<CompanyPriceVO> familyPriceVOList, String entranceCardPriceStr, String totalPrice) {
    this(pList12N, pList121, phone, prepayAmount, entranceCardPrice, familyPriceVOList, entranceCardPriceStr, totalPrice, ByteString.EMPTY);
  }

  public GetPriceRsp(List<Price> pList12N, List<Price> pList121, String phone, String prepayAmount, Long entranceCardPrice, List<CompanyPriceVO> familyPriceVOList, String entranceCardPriceStr, String totalPrice, ByteString unknownFields) {
    super(ADAPTER, unknownFields);
    this.pList12N = Internal.immutableCopyOf("pList12N", pList12N);
    this.pList121 = Internal.immutableCopyOf("pList121", pList121);
    this.phone = phone;
    this.prepayAmount = prepayAmount;
    this.entranceCardPrice = entranceCardPrice;
    this.familyPriceVOList = Internal.immutableCopyOf("familyPriceVOList", familyPriceVOList);
    this.entranceCardPriceStr = entranceCardPriceStr;
    this.totalPrice = totalPrice;
  }

  @Override
  public Builder newBuilder() {
    Builder builder = new Builder();
    builder.pList12N = Internal.copyOf("pList12N", pList12N);
    builder.pList121 = Internal.copyOf("pList121", pList121);
    builder.phone = phone;
    builder.prepayAmount = prepayAmount;
    builder.entranceCardPrice = entranceCardPrice;
    builder.familyPriceVOList = Internal.copyOf("familyPriceVOList", familyPriceVOList);
    builder.entranceCardPriceStr = entranceCardPriceStr;
    builder.totalPrice = totalPrice;
    builder.addUnknownFields(unknownFields());
    return builder;
  }

  @Override
  public boolean equals(Object other) {
    if (other == this) return true;
    if (!(other instanceof GetPriceRsp)) return false;
    GetPriceRsp o = (GetPriceRsp) other;
    return unknownFields().equals(o.unknownFields())
        && pList12N.equals(o.pList12N)
        && pList121.equals(o.pList121)
        && Internal.equals(phone, o.phone)
        && Internal.equals(prepayAmount, o.prepayAmount)
        && Internal.equals(entranceCardPrice, o.entranceCardPrice)
        && familyPriceVOList.equals(o.familyPriceVOList)
        && Internal.equals(entranceCardPriceStr, o.entranceCardPriceStr)
        && Internal.equals(totalPrice, o.totalPrice);
  }

  @Override
  public int hashCode() {
    int result = super.hashCode;
    if (result == 0) {
      result = unknownFields().hashCode();
      result = result * 37 + pList12N.hashCode();
      result = result * 37 + pList121.hashCode();
      result = result * 37 + (phone != null ? phone.hashCode() : 0);
      result = result * 37 + (prepayAmount != null ? prepayAmount.hashCode() : 0);
      result = result * 37 + (entranceCardPrice != null ? entranceCardPrice.hashCode() : 0);
      result = result * 37 + familyPriceVOList.hashCode();
      result = result * 37 + (entranceCardPriceStr != null ? entranceCardPriceStr.hashCode() : 0);
      result = result * 37 + (totalPrice != null ? totalPrice.hashCode() : 0);
      super.hashCode = result;
    }
    return result;
  }

  @Override
  public String toString() {
    StringBuilder builder = new StringBuilder();
    if (!pList12N.isEmpty()) builder.append(", pList12N=").append(pList12N);
    if (!pList121.isEmpty()) builder.append(", pList121=").append(pList121);
    if (phone != null) builder.append(", phone=").append(phone);
    if (prepayAmount != null) builder.append(", prepayAmount=").append(prepayAmount);
    if (entranceCardPrice != null) builder.append(", entranceCardPrice=").append(entranceCardPrice);
    if (!familyPriceVOList.isEmpty()) builder.append(", familyPriceVOList=").append(familyPriceVOList);
    if (entranceCardPriceStr != null) builder.append(", entranceCardPriceStr=").append(entranceCardPriceStr);
    if (totalPrice != null) builder.append(", totalPrice=").append(totalPrice);
    return builder.replace(0, 2, "GetPriceRsp{").append('}').toString();
  }

  public static final class Builder extends Message.Builder<GetPriceRsp, Builder> {
    public List<Price> pList12N;

    public List<Price> pList121;

    public String phone;

    public String prepayAmount;

    public Long entranceCardPrice;

    public List<CompanyPriceVO> familyPriceVOList;

    public String entranceCardPriceStr;

    public String totalPrice;

    public Builder() {
      pList12N = Internal.newMutableList();
      pList121 = Internal.newMutableList();
      familyPriceVOList = Internal.newMutableList();
    }

    /**
     * 一对多套餐列表
     */
    public Builder pList12N(List<Price> pList12N) {
      Internal.checkElementsNotNull(pList12N);
      this.pList12N = pList12N;
      return this;
    }

    /**
     * 一对一套餐列表
     */
    public Builder pList121(List<Price> pList121) {
      Internal.checkElementsNotNull(pList121);
      this.pList121 = pList121;
      return this;
    }

    /**
     * 用户的手机号码
     */
    public Builder phone(String phone) {
      this.phone = phone;
      return this;
    }

    /**
     * 下面两个字段加起来的数值 就是app端页面展示的预付款
     * 预付金
     */
    public Builder prepayAmount(String prepayAmount) {
      this.prepayAmount = prepayAmount;
      return this;
    }

    /**
     * 门禁卡押金
     */
    public Builder entranceCardPrice(Long entranceCardPrice) {
      this.entranceCardPrice = entranceCardPrice;
      return this;
    }

    /**
     * 居家套餐列表 每个套餐都有不同的预付金 在CompanyPriceVO中
     */
    public Builder familyPriceVOList(List<CompanyPriceVO> familyPriceVOList) {
      Internal.checkElementsNotNull(familyPriceVOList);
      this.familyPriceVOList = familyPriceVOList;
      return this;
    }

    /**
     * 门禁卡押金（转化后）
     */
    public Builder entranceCardPriceStr(String entranceCardPriceStr) {
      this.entranceCardPriceStr = entranceCardPriceStr;
      return this;
    }

    /**
     * 机构预付金和门禁卡押金的和
     */
    public Builder totalPrice(String totalPrice) {
      this.totalPrice = totalPrice;
      return this;
    }

    @Override
    public GetPriceRsp build() {
      return new GetPriceRsp(pList12N, pList121, phone, prepayAmount, entranceCardPrice, familyPriceVOList, entranceCardPriceStr, totalPrice, super.buildUnknownFields());
    }
  }

  private static final class ProtoAdapter_GetPriceRsp extends ProtoAdapter<GetPriceRsp> {
    ProtoAdapter_GetPriceRsp() {
      super(FieldEncoding.LENGTH_DELIMITED, GetPriceRsp.class);
    }

    @Override
    public int encodedSize(GetPriceRsp value) {
      return Price.ADAPTER.asRepeated().encodedSizeWithTag(1, value.pList12N)
          + Price.ADAPTER.asRepeated().encodedSizeWithTag(2, value.pList121)
          + (value.phone != null ? ProtoAdapter.STRING.encodedSizeWithTag(3, value.phone) : 0)
          + (value.prepayAmount != null ? ProtoAdapter.STRING.encodedSizeWithTag(4, value.prepayAmount) : 0)
          + (value.entranceCardPrice != null ? ProtoAdapter.UINT64.encodedSizeWithTag(5, value.entranceCardPrice) : 0)
          + CompanyPriceVO.ADAPTER.asRepeated().encodedSizeWithTag(6, value.familyPriceVOList)
          + (value.entranceCardPriceStr != null ? ProtoAdapter.STRING.encodedSizeWithTag(7, value.entranceCardPriceStr) : 0)
          + (value.totalPrice != null ? ProtoAdapter.STRING.encodedSizeWithTag(8, value.totalPrice) : 0)
          + value.unknownFields().size();
    }

    @Override
    public void encode(ProtoWriter writer, GetPriceRsp value) throws IOException {
      Price.ADAPTER.asRepeated().encodeWithTag(writer, 1, value.pList12N);
      Price.ADAPTER.asRepeated().encodeWithTag(writer, 2, value.pList121);
      if (value.phone != null) ProtoAdapter.STRING.encodeWithTag(writer, 3, value.phone);
      if (value.prepayAmount != null) ProtoAdapter.STRING.encodeWithTag(writer, 4, value.prepayAmount);
      if (value.entranceCardPrice != null) ProtoAdapter.UINT64.encodeWithTag(writer, 5, value.entranceCardPrice);
      CompanyPriceVO.ADAPTER.asRepeated().encodeWithTag(writer, 6, value.familyPriceVOList);
      if (value.entranceCardPriceStr != null) ProtoAdapter.STRING.encodeWithTag(writer, 7, value.entranceCardPriceStr);
      if (value.totalPrice != null) ProtoAdapter.STRING.encodeWithTag(writer, 8, value.totalPrice);
      writer.writeBytes(value.unknownFields());
    }

    @Override
    public GetPriceRsp decode(ProtoReader reader) throws IOException {
      Builder builder = new Builder();
      long token = reader.beginMessage();
      for (int tag; (tag = reader.nextTag()) != -1;) {
        switch (tag) {
          case 1: builder.pList12N.add(Price.ADAPTER.decode(reader)); break;
          case 2: builder.pList121.add(Price.ADAPTER.decode(reader)); break;
          case 3: builder.phone(ProtoAdapter.STRING.decode(reader)); break;
          case 4: builder.prepayAmount(ProtoAdapter.STRING.decode(reader)); break;
          case 5: builder.entranceCardPrice(ProtoAdapter.UINT64.decode(reader)); break;
          case 6: builder.familyPriceVOList.add(CompanyPriceVO.ADAPTER.decode(reader)); break;
          case 7: builder.entranceCardPriceStr(ProtoAdapter.STRING.decode(reader)); break;
          case 8: builder.totalPrice(ProtoAdapter.STRING.decode(reader)); break;
          default: {
            FieldEncoding fieldEncoding = reader.peekFieldEncoding();
            Object value = fieldEncoding.rawProtoAdapter().decode(reader);
            builder.addUnknownField(tag, fieldEncoding, value);
          }
        }
      }
      reader.endMessage(token);
      return builder.build();
    }

    @Override
    public GetPriceRsp redact(GetPriceRsp value) {
      Builder builder = value.newBuilder();
      Internal.redactElements(builder.pList12N, Price.ADAPTER);
      Internal.redactElements(builder.pList121, Price.ADAPTER);
      Internal.redactElements(builder.familyPriceVOList, CompanyPriceVO.ADAPTER);
      builder.clearUnknownFields();
      return builder.build();
    }
  }
}
