// Code generated by Wire protocol buffer compiler, do not edit.
// Source file: SaasModel.proto at 396:1
package com.yijianyi.protocol;

import com.squareup.wire.FieldEncoding;
import com.squareup.wire.Message;
import com.squareup.wire.ProtoAdapter;
import com.squareup.wire.ProtoReader;
import com.squareup.wire.ProtoWriter;
import com.squareup.wire.WireField;
import com.squareup.wire.internal.Internal;
import java.io.IOException;
import java.lang.Object;
import java.lang.Override;
import java.lang.String;
import java.lang.StringBuilder;
import okio.ByteString;

/**
 * 用户银行卡显示
 */
public final class UserBankVO extends Message<UserBankVO, UserBankVO.Builder> {
  public static final ProtoAdapter<UserBankVO> ADAPTER = new ProtoAdapter_UserBankVO();

  private static final long serialVersionUID = 0L;

  public static final String DEFAULT_CARDNOSTR = "";

  public static final String DEFAULT_BANKTYPESTR = "";

  @WireField(
      tag = 1,
      adapter = "com.yijianyi.protocol.UserBank#ADAPTER"
  )
  public final UserBank bank;

  /**
   * 银行卡号（只显示后4位）
   */
  @WireField(
      tag = 2,
      adapter = "com.squareup.wire.ProtoAdapter#STRING"
  )
  public final String cardNOStr;

  /**
   * 银行卡类型
   */
  @WireField(
      tag = 3,
      adapter = "com.squareup.wire.ProtoAdapter#STRING"
  )
  public final String bankTypeStr;

  public UserBankVO(UserBank bank, String cardNOStr, String bankTypeStr) {
    this(bank, cardNOStr, bankTypeStr, ByteString.EMPTY);
  }

  public UserBankVO(UserBank bank, String cardNOStr, String bankTypeStr, ByteString unknownFields) {
    super(ADAPTER, unknownFields);
    this.bank = bank;
    this.cardNOStr = cardNOStr;
    this.bankTypeStr = bankTypeStr;
  }

  @Override
  public Builder newBuilder() {
    Builder builder = new Builder();
    builder.bank = bank;
    builder.cardNOStr = cardNOStr;
    builder.bankTypeStr = bankTypeStr;
    builder.addUnknownFields(unknownFields());
    return builder;
  }

  @Override
  public boolean equals(Object other) {
    if (other == this) return true;
    if (!(other instanceof UserBankVO)) return false;
    UserBankVO o = (UserBankVO) other;
    return unknownFields().equals(o.unknownFields())
        && Internal.equals(bank, o.bank)
        && Internal.equals(cardNOStr, o.cardNOStr)
        && Internal.equals(bankTypeStr, o.bankTypeStr);
  }

  @Override
  public int hashCode() {
    int result = super.hashCode;
    if (result == 0) {
      result = unknownFields().hashCode();
      result = result * 37 + (bank != null ? bank.hashCode() : 0);
      result = result * 37 + (cardNOStr != null ? cardNOStr.hashCode() : 0);
      result = result * 37 + (bankTypeStr != null ? bankTypeStr.hashCode() : 0);
      super.hashCode = result;
    }
    return result;
  }

  @Override
  public String toString() {
    StringBuilder builder = new StringBuilder();
    if (bank != null) builder.append(", bank=").append(bank);
    if (cardNOStr != null) builder.append(", cardNOStr=").append(cardNOStr);
    if (bankTypeStr != null) builder.append(", bankTypeStr=").append(bankTypeStr);
    return builder.replace(0, 2, "UserBankVO{").append('}').toString();
  }

  public static final class Builder extends Message.Builder<UserBankVO, Builder> {
    public UserBank bank;

    public String cardNOStr;

    public String bankTypeStr;

    public Builder() {
    }

    public Builder bank(UserBank bank) {
      this.bank = bank;
      return this;
    }

    /**
     * 银行卡号（只显示后4位）
     */
    public Builder cardNOStr(String cardNOStr) {
      this.cardNOStr = cardNOStr;
      return this;
    }

    /**
     * 银行卡类型
     */
    public Builder bankTypeStr(String bankTypeStr) {
      this.bankTypeStr = bankTypeStr;
      return this;
    }

    @Override
    public UserBankVO build() {
      return new UserBankVO(bank, cardNOStr, bankTypeStr, super.buildUnknownFields());
    }
  }

  private static final class ProtoAdapter_UserBankVO extends ProtoAdapter<UserBankVO> {
    ProtoAdapter_UserBankVO() {
      super(FieldEncoding.LENGTH_DELIMITED, UserBankVO.class);
    }

    @Override
    public int encodedSize(UserBankVO value) {
      return (value.bank != null ? UserBank.ADAPTER.encodedSizeWithTag(1, value.bank) : 0)
          + (value.cardNOStr != null ? ProtoAdapter.STRING.encodedSizeWithTag(2, value.cardNOStr) : 0)
          + (value.bankTypeStr != null ? ProtoAdapter.STRING.encodedSizeWithTag(3, value.bankTypeStr) : 0)
          + value.unknownFields().size();
    }

    @Override
    public void encode(ProtoWriter writer, UserBankVO value) throws IOException {
      if (value.bank != null) UserBank.ADAPTER.encodeWithTag(writer, 1, value.bank);
      if (value.cardNOStr != null) ProtoAdapter.STRING.encodeWithTag(writer, 2, value.cardNOStr);
      if (value.bankTypeStr != null) ProtoAdapter.STRING.encodeWithTag(writer, 3, value.bankTypeStr);
      writer.writeBytes(value.unknownFields());
    }

    @Override
    public UserBankVO decode(ProtoReader reader) throws IOException {
      Builder builder = new Builder();
      long token = reader.beginMessage();
      for (int tag; (tag = reader.nextTag()) != -1;) {
        switch (tag) {
          case 1: builder.bank(UserBank.ADAPTER.decode(reader)); break;
          case 2: builder.cardNOStr(ProtoAdapter.STRING.decode(reader)); break;
          case 3: builder.bankTypeStr(ProtoAdapter.STRING.decode(reader)); break;
          default: {
            FieldEncoding fieldEncoding = reader.peekFieldEncoding();
            Object value = fieldEncoding.rawProtoAdapter().decode(reader);
            builder.addUnknownField(tag, fieldEncoding, value);
          }
        }
      }
      reader.endMessage(token);
      return builder.build();
    }

    @Override
    public UserBankVO redact(UserBankVO value) {
      Builder builder = value.newBuilder();
      if (builder.bank != null) builder.bank = UserBank.ADAPTER.redact(builder.bank);
      builder.clearUnknownFields();
      return builder.build();
    }
  }
}
