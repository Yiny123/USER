// Code generated by Wire protocol buffer compiler, do not edit.
// Source file: Interface.proto at 59:1
package com.yijianyi.protocol;

import com.squareup.wire.FieldEncoding;
import com.squareup.wire.Message;
import com.squareup.wire.ProtoAdapter;
import com.squareup.wire.ProtoReader;
import com.squareup.wire.ProtoWriter;
import com.squareup.wire.WireField;
import com.squareup.wire.internal.Internal;
import java.io.IOException;
import java.lang.Integer;
import java.lang.Long;
import java.lang.Object;
import java.lang.Override;
import java.lang.String;
import java.lang.StringBuilder;
import java.util.List;
import okio.ByteString;

public final class AppResponse extends Message<AppResponse, AppResponse.Builder> {
  public static final ProtoAdapter<AppResponse> ADAPTER = new ProtoAdapter_AppResponse();

  private static final long serialVersionUID = 0L;

  public static final Integer DEFAULT_REQUESTID = 0;

  public static final Long DEFAULT_SYSTIMESTAMP = 0L;

  @WireField(
      tag = 1,
      adapter = "com.yijianyi.protocol.RspHead#ADAPTER"
  )
  public final RspHead head;

  /**
   * 框架级别的错误码，只有当该错误码为APP_ERROR_CODE.AEC_SUCCESS的时候，binBody中的数据才有意义
   */
  @WireField(
      tag = 2,
      adapter = "com.yijianyi.protocol.AppError#ADAPTER"
  )
  public final AppError errInfo;

  /**
   * 请求序列号，与对应的请求中的RequestId相同
   */
  @WireField(
      tag = 3,
      adapter = "com.squareup.wire.ProtoAdapter#UINT32"
  )
  public final Integer requestId;

  /**
   * 服务器时间戳
   */
  @WireField(
      tag = 4,
      adapter = "com.squareup.wire.ProtoAdapter#UINT64"
  )
  public final Long sysTimeStamp;

  /**
   * 返回数据
   */
  @WireField(
      tag = 5,
      adapter = "com.yijianyi.protocol.ResponseItem#ADAPTER",
      label = WireField.Label.REPEATED
  )
  public final List<ResponseItem> rsps;

  public AppResponse(RspHead head, AppError errInfo, Integer requestId, Long sysTimeStamp, List<ResponseItem> rsps) {
    this(head, errInfo, requestId, sysTimeStamp, rsps, ByteString.EMPTY);
  }

  public AppResponse(RspHead head, AppError errInfo, Integer requestId, Long sysTimeStamp, List<ResponseItem> rsps, ByteString unknownFields) {
    super(ADAPTER, unknownFields);
    this.head = head;
    this.errInfo = errInfo;
    this.requestId = requestId;
    this.sysTimeStamp = sysTimeStamp;
    this.rsps = Internal.immutableCopyOf("rsps", rsps);
  }

  @Override
  public Builder newBuilder() {
    Builder builder = new Builder();
    builder.head = head;
    builder.errInfo = errInfo;
    builder.requestId = requestId;
    builder.sysTimeStamp = sysTimeStamp;
    builder.rsps = Internal.copyOf("rsps", rsps);
    builder.addUnknownFields(unknownFields());
    return builder;
  }

  @Override
  public boolean equals(Object other) {
    if (other == this) return true;
    if (!(other instanceof AppResponse)) return false;
    AppResponse o = (AppResponse) other;
    return unknownFields().equals(o.unknownFields())
        && Internal.equals(head, o.head)
        && Internal.equals(errInfo, o.errInfo)
        && Internal.equals(requestId, o.requestId)
        && Internal.equals(sysTimeStamp, o.sysTimeStamp)
        && rsps.equals(o.rsps);
  }

  @Override
  public int hashCode() {
    int result = super.hashCode;
    if (result == 0) {
      result = unknownFields().hashCode();
      result = result * 37 + (head != null ? head.hashCode() : 0);
      result = result * 37 + (errInfo != null ? errInfo.hashCode() : 0);
      result = result * 37 + (requestId != null ? requestId.hashCode() : 0);
      result = result * 37 + (sysTimeStamp != null ? sysTimeStamp.hashCode() : 0);
      result = result * 37 + rsps.hashCode();
      super.hashCode = result;
    }
    return result;
  }

  @Override
  public String toString() {
    StringBuilder builder = new StringBuilder();
    if (head != null) builder.append(", head=").append(head);
    if (errInfo != null) builder.append(", errInfo=").append(errInfo);
    if (requestId != null) builder.append(", requestId=").append(requestId);
    if (sysTimeStamp != null) builder.append(", sysTimeStamp=").append(sysTimeStamp);
    if (!rsps.isEmpty()) builder.append(", rsps=").append(rsps);
    return builder.replace(0, 2, "AppResponse{").append('}').toString();
  }

  public static final class Builder extends Message.Builder<AppResponse, Builder> {
    public RspHead head;

    public AppError errInfo;

    public Integer requestId;

    public Long sysTimeStamp;

    public List<ResponseItem> rsps;

    public Builder() {
      rsps = Internal.newMutableList();
    }

    public Builder head(RspHead head) {
      this.head = head;
      return this;
    }

    /**
     * 框架级别的错误码，只有当该错误码为APP_ERROR_CODE.AEC_SUCCESS的时候，binBody中的数据才有意义
     */
    public Builder errInfo(AppError errInfo) {
      this.errInfo = errInfo;
      return this;
    }

    /**
     * 请求序列号，与对应的请求中的RequestId相同
     */
    public Builder requestId(Integer requestId) {
      this.requestId = requestId;
      return this;
    }

    /**
     * 服务器时间戳
     */
    public Builder sysTimeStamp(Long sysTimeStamp) {
      this.sysTimeStamp = sysTimeStamp;
      return this;
    }

    /**
     * 返回数据
     */
    public Builder rsps(List<ResponseItem> rsps) {
      Internal.checkElementsNotNull(rsps);
      this.rsps = rsps;
      return this;
    }

    @Override
    public AppResponse build() {
      return new AppResponse(head, errInfo, requestId, sysTimeStamp, rsps, super.buildUnknownFields());
    }
  }

  private static final class ProtoAdapter_AppResponse extends ProtoAdapter<AppResponse> {
    ProtoAdapter_AppResponse() {
      super(FieldEncoding.LENGTH_DELIMITED, AppResponse.class);
    }

    @Override
    public int encodedSize(AppResponse value) {
      return (value.head != null ? RspHead.ADAPTER.encodedSizeWithTag(1, value.head) : 0)
          + (value.errInfo != null ? AppError.ADAPTER.encodedSizeWithTag(2, value.errInfo) : 0)
          + (value.requestId != null ? ProtoAdapter.UINT32.encodedSizeWithTag(3, value.requestId) : 0)
          + (value.sysTimeStamp != null ? ProtoAdapter.UINT64.encodedSizeWithTag(4, value.sysTimeStamp) : 0)
          + ResponseItem.ADAPTER.asRepeated().encodedSizeWithTag(5, value.rsps)
          + value.unknownFields().size();
    }

    @Override
    public void encode(ProtoWriter writer, AppResponse value) throws IOException {
      if (value.head != null) RspHead.ADAPTER.encodeWithTag(writer, 1, value.head);
      if (value.errInfo != null) AppError.ADAPTER.encodeWithTag(writer, 2, value.errInfo);
      if (value.requestId != null) ProtoAdapter.UINT32.encodeWithTag(writer, 3, value.requestId);
      if (value.sysTimeStamp != null) ProtoAdapter.UINT64.encodeWithTag(writer, 4, value.sysTimeStamp);
      ResponseItem.ADAPTER.asRepeated().encodeWithTag(writer, 5, value.rsps);
      writer.writeBytes(value.unknownFields());
    }

    @Override
    public AppResponse decode(ProtoReader reader) throws IOException {
      Builder builder = new Builder();
      long token = reader.beginMessage();
      for (int tag; (tag = reader.nextTag()) != -1;) {
        switch (tag) {
          case 1: builder.head(RspHead.ADAPTER.decode(reader)); break;
          case 2: builder.errInfo(AppError.ADAPTER.decode(reader)); break;
          case 3: builder.requestId(ProtoAdapter.UINT32.decode(reader)); break;
          case 4: builder.sysTimeStamp(ProtoAdapter.UINT64.decode(reader)); break;
          case 5: builder.rsps.add(ResponseItem.ADAPTER.decode(reader)); break;
          default: {
            FieldEncoding fieldEncoding = reader.peekFieldEncoding();
            Object value = fieldEncoding.rawProtoAdapter().decode(reader);
            builder.addUnknownField(tag, fieldEncoding, value);
          }
        }
      }
      reader.endMessage(token);
      return builder.build();
    }

    @Override
    public AppResponse redact(AppResponse value) {
      Builder builder = value.newBuilder();
      if (builder.head != null) builder.head = RspHead.ADAPTER.redact(builder.head);
      if (builder.errInfo != null) builder.errInfo = AppError.ADAPTER.redact(builder.errInfo);
      Internal.redactElements(builder.rsps, ResponseItem.ADAPTER);
      builder.clearUnknownFields();
      return builder.build();
    }
  }
}
