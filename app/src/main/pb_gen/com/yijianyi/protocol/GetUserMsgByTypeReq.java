// Code generated by Wire protocol buffer compiler, do not edit.
// Source file: AppInterface.proto at 628:1
package com.yijianyi.protocol;

import com.squareup.wire.FieldEncoding;
import com.squareup.wire.Message;
import com.squareup.wire.ProtoAdapter;
import com.squareup.wire.ProtoReader;
import com.squareup.wire.ProtoWriter;
import com.squareup.wire.WireField;
import com.squareup.wire.internal.Internal;
import java.io.IOException;
import java.lang.Integer;
import java.lang.Object;
import java.lang.Override;
import java.lang.String;
import java.lang.StringBuilder;
import okio.ByteString;

/**
 * 获取用户某类消息列表
 */
public final class GetUserMsgByTypeReq extends Message<GetUserMsgByTypeReq, GetUserMsgByTypeReq.Builder> {
  public static final ProtoAdapter<GetUserMsgByTypeReq> ADAPTER = new ProtoAdapter_GetUserMsgByTypeReq();

  private static final long serialVersionUID = 0L;

  public static final Integer DEFAULT_MSGTYPE = 0;

  public static final Integer DEFAULT_PAGENO = 0;

  public static final Integer DEFAULT_PAGESIZE = 0;

  /**
   * 消息类型 1-待服务通知 2-服务开启通知 3-服务变更通知 4-缴费通知 5-提现受理通知 6-每日服务确认通知
   */
  @WireField(
      tag = 1,
      adapter = "com.squareup.wire.ProtoAdapter#UINT32"
  )
  public final Integer msgType;

  @WireField(
      tag = 2,
      adapter = "com.squareup.wire.ProtoAdapter#UINT32"
  )
  public final Integer pageNo;

  @WireField(
      tag = 3,
      adapter = "com.squareup.wire.ProtoAdapter#UINT32"
  )
  public final Integer pageSize;

  public GetUserMsgByTypeReq(Integer msgType, Integer pageNo, Integer pageSize) {
    this(msgType, pageNo, pageSize, ByteString.EMPTY);
  }

  public GetUserMsgByTypeReq(Integer msgType, Integer pageNo, Integer pageSize, ByteString unknownFields) {
    super(ADAPTER, unknownFields);
    this.msgType = msgType;
    this.pageNo = pageNo;
    this.pageSize = pageSize;
  }

  @Override
  public Builder newBuilder() {
    Builder builder = new Builder();
    builder.msgType = msgType;
    builder.pageNo = pageNo;
    builder.pageSize = pageSize;
    builder.addUnknownFields(unknownFields());
    return builder;
  }

  @Override
  public boolean equals(Object other) {
    if (other == this) return true;
    if (!(other instanceof GetUserMsgByTypeReq)) return false;
    GetUserMsgByTypeReq o = (GetUserMsgByTypeReq) other;
    return unknownFields().equals(o.unknownFields())
        && Internal.equals(msgType, o.msgType)
        && Internal.equals(pageNo, o.pageNo)
        && Internal.equals(pageSize, o.pageSize);
  }

  @Override
  public int hashCode() {
    int result = super.hashCode;
    if (result == 0) {
      result = unknownFields().hashCode();
      result = result * 37 + (msgType != null ? msgType.hashCode() : 0);
      result = result * 37 + (pageNo != null ? pageNo.hashCode() : 0);
      result = result * 37 + (pageSize != null ? pageSize.hashCode() : 0);
      super.hashCode = result;
    }
    return result;
  }

  @Override
  public String toString() {
    StringBuilder builder = new StringBuilder();
    if (msgType != null) builder.append(", msgType=").append(msgType);
    if (pageNo != null) builder.append(", pageNo=").append(pageNo);
    if (pageSize != null) builder.append(", pageSize=").append(pageSize);
    return builder.replace(0, 2, "GetUserMsgByTypeReq{").append('}').toString();
  }

  public static final class Builder extends Message.Builder<GetUserMsgByTypeReq, Builder> {
    public Integer msgType;

    public Integer pageNo;

    public Integer pageSize;

    public Builder() {
    }

    /**
     * 消息类型 1-待服务通知 2-服务开启通知 3-服务变更通知 4-缴费通知 5-提现受理通知 6-每日服务确认通知
     */
    public Builder msgType(Integer msgType) {
      this.msgType = msgType;
      return this;
    }

    public Builder pageNo(Integer pageNo) {
      this.pageNo = pageNo;
      return this;
    }

    public Builder pageSize(Integer pageSize) {
      this.pageSize = pageSize;
      return this;
    }

    @Override
    public GetUserMsgByTypeReq build() {
      return new GetUserMsgByTypeReq(msgType, pageNo, pageSize, super.buildUnknownFields());
    }
  }

  private static final class ProtoAdapter_GetUserMsgByTypeReq extends ProtoAdapter<GetUserMsgByTypeReq> {
    ProtoAdapter_GetUserMsgByTypeReq() {
      super(FieldEncoding.LENGTH_DELIMITED, GetUserMsgByTypeReq.class);
    }

    @Override
    public int encodedSize(GetUserMsgByTypeReq value) {
      return (value.msgType != null ? ProtoAdapter.UINT32.encodedSizeWithTag(1, value.msgType) : 0)
          + (value.pageNo != null ? ProtoAdapter.UINT32.encodedSizeWithTag(2, value.pageNo) : 0)
          + (value.pageSize != null ? ProtoAdapter.UINT32.encodedSizeWithTag(3, value.pageSize) : 0)
          + value.unknownFields().size();
    }

    @Override
    public void encode(ProtoWriter writer, GetUserMsgByTypeReq value) throws IOException {
      if (value.msgType != null) ProtoAdapter.UINT32.encodeWithTag(writer, 1, value.msgType);
      if (value.pageNo != null) ProtoAdapter.UINT32.encodeWithTag(writer, 2, value.pageNo);
      if (value.pageSize != null) ProtoAdapter.UINT32.encodeWithTag(writer, 3, value.pageSize);
      writer.writeBytes(value.unknownFields());
    }

    @Override
    public GetUserMsgByTypeReq decode(ProtoReader reader) throws IOException {
      Builder builder = new Builder();
      long token = reader.beginMessage();
      for (int tag; (tag = reader.nextTag()) != -1;) {
        switch (tag) {
          case 1: builder.msgType(ProtoAdapter.UINT32.decode(reader)); break;
          case 2: builder.pageNo(ProtoAdapter.UINT32.decode(reader)); break;
          case 3: builder.pageSize(ProtoAdapter.UINT32.decode(reader)); break;
          default: {
            FieldEncoding fieldEncoding = reader.peekFieldEncoding();
            Object value = fieldEncoding.rawProtoAdapter().decode(reader);
            builder.addUnknownField(tag, fieldEncoding, value);
          }
        }
      }
      reader.endMessage(token);
      return builder.build();
    }

    @Override
    public GetUserMsgByTypeReq redact(GetUserMsgByTypeReq value) {
      Builder builder = value.newBuilder();
      builder.clearUnknownFields();
      return builder.build();
    }
  }
}
