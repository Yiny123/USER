// Code generated by Wire protocol buffer compiler, do not edit.
// Source file: CommonData.proto at 192:1
package com.yijianyi.protocol;

import com.squareup.wire.ProtoAdapter;
import com.squareup.wire.WireEnum;
import java.lang.Override;

/**
 * 企业端按钮定义
 */
public enum OrderButton implements WireEnum {
  /**
   * 取消订单
   */
  CANCEL_ORDER(0),

  /**
   * 接单
   */
  JIEDAN(1),

  /**
   * 安排带教
   */
  TEACH(2),

  /**
   * 修改订单
   */
  UPDATE_ORDER(3),

  /**
   * 发放资质
   */
  SEND_CERT(4),

  /**
   * 变更陪护家属
   */
  UPDATE_KINS(5),

  /**
   * 开启服务
   */
  START_SERVICE(6),

  /**
   * 结束服务
   */
  END_SERVICE(7),

  /**
   * 补贴估算
   */
  SUBSIDY(8),

  /**
   * 再次下单
   */
  AGAIN_ORDER(9),

  /**
   * 服务确认
   */
  SERVICE_CONFIRM(10),

  /**
   * 申请结束服务
   */
  APPLY_END_SERVICE(11),

  /**
   * 指派护士
   */
  ASSIGN_HS(12),

  /**
   * 更换护士
   */
  UPDATE_HS(13),

  /**
   * 照护计划审核
   */
  CHECK_TEND(14),

  /**
   * 照护计划管理
   */
  TEND_MANAGE(15),

  /**
   * 回访记录
   */
  VISIT_RECORD(16),

  /**
   * 自照考核
   */
  SELF_ASSESS(17),

  /**
   * 指派带教人员
   */
  ASSIGN_TEACH(18),

  /**
   * 转出订单
   */
  TRANSFER_ORDER(19),

  /**
   * 更换带教人员
   */
  UPDATE_HG_TEACH(20),

  /**
   * 记录带教
   */
  TEACH_RECORD(21);

  public static final ProtoAdapter<OrderButton> ADAPTER = ProtoAdapter.newEnumAdapter(OrderButton.class);

  private final int value;

  OrderButton(int value) {
    this.value = value;
  }

  /**
   * Return the constant for {@code value} or null.
   */
  public static OrderButton fromValue(int value) {
    switch (value) {
      case 0: return CANCEL_ORDER;
      case 1: return JIEDAN;
      case 2: return TEACH;
      case 3: return UPDATE_ORDER;
      case 4: return SEND_CERT;
      case 5: return UPDATE_KINS;
      case 6: return START_SERVICE;
      case 7: return END_SERVICE;
      case 8: return SUBSIDY;
      case 9: return AGAIN_ORDER;
      case 10: return SERVICE_CONFIRM;
      case 11: return APPLY_END_SERVICE;
      case 12: return ASSIGN_HS;
      case 13: return UPDATE_HS;
      case 14: return CHECK_TEND;
      case 15: return TEND_MANAGE;
      case 16: return VISIT_RECORD;
      case 17: return SELF_ASSESS;
      case 18: return ASSIGN_TEACH;
      case 19: return TRANSFER_ORDER;
      case 20: return UPDATE_HG_TEACH;
      case 21: return TEACH_RECORD;
      default: return null;
    }
  }

  @Override
  public int getValue() {
    return value;
  }
}
