// Code generated by Wire protocol buffer compiler, do not edit.
// Source file: AppInterface.proto at 856:1
package com.yijianyi.protocol;

import com.squareup.wire.FieldEncoding;
import com.squareup.wire.Message;
import com.squareup.wire.ProtoAdapter;
import com.squareup.wire.ProtoReader;
import com.squareup.wire.ProtoWriter;
import com.squareup.wire.WireField;
import com.squareup.wire.internal.Internal;
import java.io.IOException;
import java.lang.Integer;
import java.lang.Long;
import java.lang.Object;
import java.lang.Override;
import java.lang.String;
import java.lang.StringBuilder;
import okio.ByteString;

public final class OrderSAAS extends Message<OrderSAAS, OrderSAAS.Builder> {
  public static final ProtoAdapter<OrderSAAS> ADAPTER = new ProtoAdapter_OrderSAAS();

  private static final long serialVersionUID = 0L;

  public static final String DEFAULT_CREATETIMESTR = "";

  public static final Long DEFAULT_CREATETIME = 0L;

  public static final Integer DEFAULT_ORDERSTATUS = 0;

  public static final String DEFAULT_ORDERSTATUSSTR = "";

  @WireField(
      tag = 1,
      adapter = "com.yijianyi.protocol.Order#ADAPTER"
  )
  public final Order orders;

  /**
   * 下单时间
   */
  @WireField(
      tag = 2,
      adapter = "com.squareup.wire.ProtoAdapter#STRING"
  )
  public final String createTimestr;

  /**
   * 下单时间
   */
  @WireField(
      tag = 3,
      adapter = "com.squareup.wire.ProtoAdapter#UINT64"
  )
  public final Long createTime;

  /**
   * 状态  1-待指派 2-等待服务 ，3-服务中 ， 4-待结算 ，6-已完成
   */
  @WireField(
      tag = 4,
      adapter = "com.squareup.wire.ProtoAdapter#UINT32"
  )
  public final Integer orderStatus;

  @WireField(
      tag = 5,
      adapter = "com.squareup.wire.ProtoAdapter#STRING"
  )
  public final String orderStatusStr;

  public OrderSAAS(Order orders, String createTimestr, Long createTime, Integer orderStatus, String orderStatusStr) {
    this(orders, createTimestr, createTime, orderStatus, orderStatusStr, ByteString.EMPTY);
  }

  public OrderSAAS(Order orders, String createTimestr, Long createTime, Integer orderStatus, String orderStatusStr, ByteString unknownFields) {
    super(ADAPTER, unknownFields);
    this.orders = orders;
    this.createTimestr = createTimestr;
    this.createTime = createTime;
    this.orderStatus = orderStatus;
    this.orderStatusStr = orderStatusStr;
  }

  @Override
  public Builder newBuilder() {
    Builder builder = new Builder();
    builder.orders = orders;
    builder.createTimestr = createTimestr;
    builder.createTime = createTime;
    builder.orderStatus = orderStatus;
    builder.orderStatusStr = orderStatusStr;
    builder.addUnknownFields(unknownFields());
    return builder;
  }

  @Override
  public boolean equals(Object other) {
    if (other == this) return true;
    if (!(other instanceof OrderSAAS)) return false;
    OrderSAAS o = (OrderSAAS) other;
    return unknownFields().equals(o.unknownFields())
        && Internal.equals(orders, o.orders)
        && Internal.equals(createTimestr, o.createTimestr)
        && Internal.equals(createTime, o.createTime)
        && Internal.equals(orderStatus, o.orderStatus)
        && Internal.equals(orderStatusStr, o.orderStatusStr);
  }

  @Override
  public int hashCode() {
    int result = super.hashCode;
    if (result == 0) {
      result = unknownFields().hashCode();
      result = result * 37 + (orders != null ? orders.hashCode() : 0);
      result = result * 37 + (createTimestr != null ? createTimestr.hashCode() : 0);
      result = result * 37 + (createTime != null ? createTime.hashCode() : 0);
      result = result * 37 + (orderStatus != null ? orderStatus.hashCode() : 0);
      result = result * 37 + (orderStatusStr != null ? orderStatusStr.hashCode() : 0);
      super.hashCode = result;
    }
    return result;
  }

  @Override
  public String toString() {
    StringBuilder builder = new StringBuilder();
    if (orders != null) builder.append(", orders=").append(orders);
    if (createTimestr != null) builder.append(", createTimestr=").append(createTimestr);
    if (createTime != null) builder.append(", createTime=").append(createTime);
    if (orderStatus != null) builder.append(", orderStatus=").append(orderStatus);
    if (orderStatusStr != null) builder.append(", orderStatusStr=").append(orderStatusStr);
    return builder.replace(0, 2, "OrderSAAS{").append('}').toString();
  }

  public static final class Builder extends Message.Builder<OrderSAAS, Builder> {
    public Order orders;

    public String createTimestr;

    public Long createTime;

    public Integer orderStatus;

    public String orderStatusStr;

    public Builder() {
    }

    public Builder orders(Order orders) {
      this.orders = orders;
      return this;
    }

    /**
     * 下单时间
     */
    public Builder createTimestr(String createTimestr) {
      this.createTimestr = createTimestr;
      return this;
    }

    /**
     * 下单时间
     */
    public Builder createTime(Long createTime) {
      this.createTime = createTime;
      return this;
    }

    /**
     * 状态  1-待指派 2-等待服务 ，3-服务中 ， 4-待结算 ，6-已完成
     */
    public Builder orderStatus(Integer orderStatus) {
      this.orderStatus = orderStatus;
      return this;
    }

    public Builder orderStatusStr(String orderStatusStr) {
      this.orderStatusStr = orderStatusStr;
      return this;
    }

    @Override
    public OrderSAAS build() {
      return new OrderSAAS(orders, createTimestr, createTime, orderStatus, orderStatusStr, super.buildUnknownFields());
    }
  }

  private static final class ProtoAdapter_OrderSAAS extends ProtoAdapter<OrderSAAS> {
    ProtoAdapter_OrderSAAS() {
      super(FieldEncoding.LENGTH_DELIMITED, OrderSAAS.class);
    }

    @Override
    public int encodedSize(OrderSAAS value) {
      return (value.orders != null ? Order.ADAPTER.encodedSizeWithTag(1, value.orders) : 0)
          + (value.createTimestr != null ? ProtoAdapter.STRING.encodedSizeWithTag(2, value.createTimestr) : 0)
          + (value.createTime != null ? ProtoAdapter.UINT64.encodedSizeWithTag(3, value.createTime) : 0)
          + (value.orderStatus != null ? ProtoAdapter.UINT32.encodedSizeWithTag(4, value.orderStatus) : 0)
          + (value.orderStatusStr != null ? ProtoAdapter.STRING.encodedSizeWithTag(5, value.orderStatusStr) : 0)
          + value.unknownFields().size();
    }

    @Override
    public void encode(ProtoWriter writer, OrderSAAS value) throws IOException {
      if (value.orders != null) Order.ADAPTER.encodeWithTag(writer, 1, value.orders);
      if (value.createTimestr != null) ProtoAdapter.STRING.encodeWithTag(writer, 2, value.createTimestr);
      if (value.createTime != null) ProtoAdapter.UINT64.encodeWithTag(writer, 3, value.createTime);
      if (value.orderStatus != null) ProtoAdapter.UINT32.encodeWithTag(writer, 4, value.orderStatus);
      if (value.orderStatusStr != null) ProtoAdapter.STRING.encodeWithTag(writer, 5, value.orderStatusStr);
      writer.writeBytes(value.unknownFields());
    }

    @Override
    public OrderSAAS decode(ProtoReader reader) throws IOException {
      Builder builder = new Builder();
      long token = reader.beginMessage();
      for (int tag; (tag = reader.nextTag()) != -1;) {
        switch (tag) {
          case 1: builder.orders(Order.ADAPTER.decode(reader)); break;
          case 2: builder.createTimestr(ProtoAdapter.STRING.decode(reader)); break;
          case 3: builder.createTime(ProtoAdapter.UINT64.decode(reader)); break;
          case 4: builder.orderStatus(ProtoAdapter.UINT32.decode(reader)); break;
          case 5: builder.orderStatusStr(ProtoAdapter.STRING.decode(reader)); break;
          default: {
            FieldEncoding fieldEncoding = reader.peekFieldEncoding();
            Object value = fieldEncoding.rawProtoAdapter().decode(reader);
            builder.addUnknownField(tag, fieldEncoding, value);
          }
        }
      }
      reader.endMessage(token);
      return builder.build();
    }

    @Override
    public OrderSAAS redact(OrderSAAS value) {
      Builder builder = value.newBuilder();
      if (builder.orders != null) builder.orders = Order.ADAPTER.redact(builder.orders);
      builder.clearUnknownFields();
      return builder.build();
    }
  }
}
