// Code generated by Wire protocol buffer compiler, do not edit.
// Source file: AppInterface.proto at 498:1
package com.yijianyi.protocol;

import com.squareup.wire.FieldEncoding;
import com.squareup.wire.Message;
import com.squareup.wire.ProtoAdapter;
import com.squareup.wire.ProtoReader;
import com.squareup.wire.ProtoWriter;
import com.squareup.wire.WireField;
import com.squareup.wire.internal.Internal;
import java.io.IOException;
import java.lang.Integer;
import java.lang.Object;
import java.lang.Override;
import java.lang.String;
import java.lang.StringBuilder;
import java.util.List;
import okio.ByteString;

/**
 * 支付详情页Req
 */
public final class SettlPayDetailReq extends Message<SettlPayDetailReq, SettlPayDetailReq.Builder> {
  public static final ProtoAdapter<SettlPayDetailReq> ADAPTER = new ProtoAdapter_SettlPayDetailReq();

  private static final long serialVersionUID = 0L;

  public static final String DEFAULT_ORDERID = "";

  public static final Integer DEFAULT_STATUS = 0;

  @WireField(
      tag = 1,
      adapter = "com.squareup.wire.ProtoAdapter#STRING"
  )
  public final String orderId;

  /**
   * 当结束或结算订单时可不传
   */
  @WireField(
      tag = 2,
      adapter = "com.squareup.wire.ProtoAdapter#STRING",
      label = WireField.Label.REPEATED
  )
  public final List<String> settDate;

  /**
   * 请求途径 0-付款时 1-结束订单或结算时(不用settDate)
   */
  @WireField(
      tag = 3,
      adapter = "com.squareup.wire.ProtoAdapter#UINT32"
  )
  public final Integer status;

  public SettlPayDetailReq(String orderId, List<String> settDate, Integer status) {
    this(orderId, settDate, status, ByteString.EMPTY);
  }

  public SettlPayDetailReq(String orderId, List<String> settDate, Integer status, ByteString unknownFields) {
    super(ADAPTER, unknownFields);
    this.orderId = orderId;
    this.settDate = Internal.immutableCopyOf("settDate", settDate);
    this.status = status;
  }

  @Override
  public Builder newBuilder() {
    Builder builder = new Builder();
    builder.orderId = orderId;
    builder.settDate = Internal.copyOf("settDate", settDate);
    builder.status = status;
    builder.addUnknownFields(unknownFields());
    return builder;
  }

  @Override
  public boolean equals(Object other) {
    if (other == this) return true;
    if (!(other instanceof SettlPayDetailReq)) return false;
    SettlPayDetailReq o = (SettlPayDetailReq) other;
    return unknownFields().equals(o.unknownFields())
        && Internal.equals(orderId, o.orderId)
        && settDate.equals(o.settDate)
        && Internal.equals(status, o.status);
  }

  @Override
  public int hashCode() {
    int result = super.hashCode;
    if (result == 0) {
      result = unknownFields().hashCode();
      result = result * 37 + (orderId != null ? orderId.hashCode() : 0);
      result = result * 37 + settDate.hashCode();
      result = result * 37 + (status != null ? status.hashCode() : 0);
      super.hashCode = result;
    }
    return result;
  }

  @Override
  public String toString() {
    StringBuilder builder = new StringBuilder();
    if (orderId != null) builder.append(", orderId=").append(orderId);
    if (!settDate.isEmpty()) builder.append(", settDate=").append(settDate);
    if (status != null) builder.append(", status=").append(status);
    return builder.replace(0, 2, "SettlPayDetailReq{").append('}').toString();
  }

  public static final class Builder extends Message.Builder<SettlPayDetailReq, Builder> {
    public String orderId;

    public List<String> settDate;

    public Integer status;

    public Builder() {
      settDate = Internal.newMutableList();
    }

    public Builder orderId(String orderId) {
      this.orderId = orderId;
      return this;
    }

    /**
     * 当结束或结算订单时可不传
     */
    public Builder settDate(List<String> settDate) {
      Internal.checkElementsNotNull(settDate);
      this.settDate = settDate;
      return this;
    }

    /**
     * 请求途径 0-付款时 1-结束订单或结算时(不用settDate)
     */
    public Builder status(Integer status) {
      this.status = status;
      return this;
    }

    @Override
    public SettlPayDetailReq build() {
      return new SettlPayDetailReq(orderId, settDate, status, super.buildUnknownFields());
    }
  }

  private static final class ProtoAdapter_SettlPayDetailReq extends ProtoAdapter<SettlPayDetailReq> {
    ProtoAdapter_SettlPayDetailReq() {
      super(FieldEncoding.LENGTH_DELIMITED, SettlPayDetailReq.class);
    }

    @Override
    public int encodedSize(SettlPayDetailReq value) {
      return (value.orderId != null ? ProtoAdapter.STRING.encodedSizeWithTag(1, value.orderId) : 0)
          + ProtoAdapter.STRING.asRepeated().encodedSizeWithTag(2, value.settDate)
          + (value.status != null ? ProtoAdapter.UINT32.encodedSizeWithTag(3, value.status) : 0)
          + value.unknownFields().size();
    }

    @Override
    public void encode(ProtoWriter writer, SettlPayDetailReq value) throws IOException {
      if (value.orderId != null) ProtoAdapter.STRING.encodeWithTag(writer, 1, value.orderId);
      ProtoAdapter.STRING.asRepeated().encodeWithTag(writer, 2, value.settDate);
      if (value.status != null) ProtoAdapter.UINT32.encodeWithTag(writer, 3, value.status);
      writer.writeBytes(value.unknownFields());
    }

    @Override
    public SettlPayDetailReq decode(ProtoReader reader) throws IOException {
      Builder builder = new Builder();
      long token = reader.beginMessage();
      for (int tag; (tag = reader.nextTag()) != -1;) {
        switch (tag) {
          case 1: builder.orderId(ProtoAdapter.STRING.decode(reader)); break;
          case 2: builder.settDate.add(ProtoAdapter.STRING.decode(reader)); break;
          case 3: builder.status(ProtoAdapter.UINT32.decode(reader)); break;
          default: {
            FieldEncoding fieldEncoding = reader.peekFieldEncoding();
            Object value = fieldEncoding.rawProtoAdapter().decode(reader);
            builder.addUnknownField(tag, fieldEncoding, value);
          }
        }
      }
      reader.endMessage(token);
      return builder.build();
    }

    @Override
    public SettlPayDetailReq redact(SettlPayDetailReq value) {
      Builder builder = value.newBuilder();
      builder.clearUnknownFields();
      return builder.build();
    }
  }
}
