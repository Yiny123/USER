// Code generated by Wire protocol buffer compiler, do not edit.
// Source file: AppInterface.proto at 971:1
package com.yijianyi.protocol;

import com.squareup.wire.FieldEncoding;
import com.squareup.wire.Message;
import com.squareup.wire.ProtoAdapter;
import com.squareup.wire.ProtoReader;
import com.squareup.wire.ProtoWriter;
import com.squareup.wire.WireField;
import com.squareup.wire.internal.Internal;
import java.io.IOException;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.Long;
import java.lang.Object;
import java.lang.Override;
import java.lang.String;
import java.lang.StringBuilder;
import java.util.List;
import okio.ByteString;

/**
 * 获取护工、护士、护士长、健康经理、督导信息、客户经理
 */
public final class GetHgInfoRsp extends Message<GetHgInfoRsp, GetHgInfoRsp.Builder> {
  public static final ProtoAdapter<GetHgInfoRsp> ADAPTER = new ProtoAdapter_GetHgInfoRsp();

  private static final long serialVersionUID = 0L;

  public static final Long DEFAULT_ID = 0L;

  public static final String DEFAULT_PHONE = "";

  public static final Integer DEFAULT_STATE = 0;

  public static final String DEFAULT_FULLNAME = "";

  public static final String DEFAULT_PICURL = "";

  public static final Integer DEFAULT_SEX = 0;

  public static final String DEFAULT_NATIVEPLACE = "";

  public static final String DEFAULT_NATION = "";

  public static final String DEFAULT_PROVINCE = "";

  public static final String DEFAULT_CITY = "";

  public static final String DEFAULT_DISTRICT = "";

  public static final String DEFAULT_ADDRESS = "";

  public static final String DEFAULT_BUILDING = "";

  public static final String DEFAULT_EMERGENCYCONTACT = "";

  public static final String DEFAULT_EMERGENCYCONTACTPHONE = "";

  public static final Long DEFAULT_ASSESSNUMBER = 0L;

  public static final Long DEFAULT_ORDERNUMBER = 0L;

  public static final String DEFAULT_JOINTIMESTR = "";

  public static final String DEFAULT_CAREERSTARTTIME = "";

  public static final Long DEFAULT_BRANCHID = 0L;

  public static final String DEFAULT_BRANCHNAME = "";

  public static final String DEFAULT_SUPERIORID = "";

  public static final String DEFAULT_SUPERIORNAME = "";

  public static final String DEFAULT_NURSINGCERTIFICATEURL = "";

  public static final String DEFAULT_HGNO = "";

  public static final Integer DEFAULT_WORKTYPE = 0;

  public static final Long DEFAULT_ROLEID = 0L;

  public static final Long DEFAULT_HGNUMBSER = 0L;

  public static final Integer DEFAULT_MSGNUM = 0;

  public static final String DEFAULT_MPQRCODE = "";

  public static final Boolean DEFAULT_HASDIFFNO = false;

  public static final Boolean DEFAULT_ONDUTY = false;

  public static final String DEFAULT_SERVICETYPESTR = "";

  public static final String DEFAULT_BANKNO = "";

  public static final String DEFAULT_BANKNAME = "";

  public static final String DEFAULT_SUPERIORPHONE = "";

  public static final Integer DEFAULT_EXP = 0;

  /**
   * 护工id
   */
  @WireField(
      tag = 1,
      adapter = "com.squareup.wire.ProtoAdapter#UINT64"
  )
  public final Long id;

  /**
   * 手机号
   */
  @WireField(
      tag = 2,
      adapter = "com.squareup.wire.ProtoAdapter#STRING"
  )
  public final String phone;

  /**
   * 护工的状态  1- 在职 2-离职
   */
  @WireField(
      tag = 3,
      adapter = "com.squareup.wire.ProtoAdapter#UINT32"
  )
  public final Integer state;

  /**
   * 全名
   */
  @WireField(
      tag = 4,
      adapter = "com.squareup.wire.ProtoAdapter#STRING"
  )
  public final String fullName;

  /**
   * 个人照片
   */
  @WireField(
      tag = 5,
      adapter = "com.squareup.wire.ProtoAdapter#STRING"
  )
  public final String picUrl;

  /**
   * 0未设置 1男 2 女
   */
  @WireField(
      tag = 6,
      adapter = "com.squareup.wire.ProtoAdapter#UINT32"
  )
  public final Integer sex;

  /**
   * 籍贯
   */
  @WireField(
      tag = 7,
      adapter = "com.squareup.wire.ProtoAdapter#STRING"
  )
  public final String nativeplace;

  /**
   * 民族
   */
  @WireField(
      tag = 8,
      adapter = "com.squareup.wire.ProtoAdapter#STRING"
  )
  public final String nation;

  /**
   * 省份
   */
  @WireField(
      tag = 9,
      adapter = "com.squareup.wire.ProtoAdapter#STRING"
  )
  public final String province;

  /**
   * 城市
   */
  @WireField(
      tag = 10,
      adapter = "com.squareup.wire.ProtoAdapter#STRING"
  )
  public final String city;

  /**
   * 区
   */
  @WireField(
      tag = 11,
      adapter = "com.squareup.wire.ProtoAdapter#STRING"
  )
  public final String district;

  /**
   * 详细居住地址
   */
  @WireField(
      tag = 12,
      adapter = "com.squareup.wire.ProtoAdapter#STRING"
  )
  public final String address;

  /**
   * 居住地址
   */
  @WireField(
      tag = 13,
      adapter = "com.squareup.wire.ProtoAdapter#STRING"
  )
  public final String building;

  /**
   * 多种语言 以
   */
  @WireField(
      tag = 14,
      adapter = "com.squareup.wire.ProtoAdapter#UINT32",
      label = WireField.Label.REPEATED
  )
  public final List<Integer> language;

  /**
   * 紧急联系人
   */
  @WireField(
      tag = 15,
      adapter = "com.squareup.wire.ProtoAdapter#STRING"
  )
  public final String emergencyContact;

  /**
   * 紧急联系人手机号
   */
  @WireField(
      tag = 16,
      adapter = "com.squareup.wire.ProtoAdapter#STRING"
  )
  public final String emergencyContactPhone;

  /**
   * 评估
   */
  @WireField(
      tag = 17,
      adapter = "com.squareup.wire.ProtoAdapter#UINT64"
  )
  public final Long assessNumber;

  /**
   * 订单
   */
  @WireField(
      tag = 18,
      adapter = "com.squareup.wire.ProtoAdapter#UINT64"
  )
  public final Long orderNumber;

  /**
   * 健康经理与督导没有以下该信息
   * 入职时间
   */
  @WireField(
      tag = 19,
      adapter = "com.squareup.wire.ProtoAdapter#STRING"
  )
  public final String joinTimeStr;

  /**
   * 入行时间
   */
  @WireField(
      tag = 20,
      adapter = "com.squareup.wire.ProtoAdapter#STRING"
  )
  public final String careerStartTime;

  /**
   * 科室id
   */
  @WireField(
      tag = 21,
      adapter = "com.squareup.wire.ProtoAdapter#UINT64"
  )
  public final Long branchId;

  /**
   * 科室名称
   */
  @WireField(
      tag = 22,
      adapter = "com.squareup.wire.ProtoAdapter#STRING"
  )
  public final String branchName;

  /**
   * 直属上级id
   */
  @WireField(
      tag = 23,
      adapter = "com.squareup.wire.ProtoAdapter#STRING"
  )
  public final String superiorId;

  /**
   * 直属上级昵称
   */
  @WireField(
      tag = 24,
      adapter = "com.squareup.wire.ProtoAdapter#STRING"
  )
  public final String superiorName;

  /**
   * 护理证
   */
  @WireField(
      tag = 25,
      adapter = "com.squareup.wire.ProtoAdapter#STRING"
  )
  public final String nursingCertificateUrl;

  /**
   * 工号
   */
  @WireField(
      tag = 26,
      adapter = "com.squareup.wire.ProtoAdapter#STRING"
  )
  public final String hgno;

  /**
   * 1-多陪 2-专陪 3-两种都可以
   */
  @WireField(
      tag = 27,
      adapter = "com.squareup.wire.ProtoAdapter#UINT32"
  )
  public final Integer workType;

  /**
   * 角色 0-无角色 10003-健康经理 10006-督导 10004-护士长  10001-护工 10002-护士 6-其他 10100-客户经理
   */
  @WireField(
      tag = 28,
      adapter = "com.squareup.wire.ProtoAdapter#UINT64"
  )
  public final Long roleId;

  /**
   * 健康经理与督导有的
   * 护工人数
   */
  @WireField(
      tag = 29,
      adapter = "com.squareup.wire.ProtoAdapter#UINT64"
  )
  public final Long hgNumbser;

  /**
   * 未读消息数
   */
  @WireField(
      tag = 30,
      adapter = "com.squareup.wire.ProtoAdapter#UINT32"
  )
  public final Integer msgNum;

  /**
   * 公众号二维码
   */
  @WireField(
      tag = 31,
      adapter = "com.squareup.wire.ProtoAdapter#STRING"
  )
  public final String mpQRCode;

  /**
   * 是否有异号下单功能
   */
  @WireField(
      tag = 32,
      adapter = "com.squareup.wire.ProtoAdapter#BOOL"
  )
  public final Boolean hasDiffno;

  /**
   * 是否在值班中 false-未值班 true-值班中
   */
  @WireField(
      tag = 33,
      adapter = "com.squareup.wire.ProtoAdapter#BOOL"
  )
  public final Boolean onduty;

  /**
   * 负责的服务
   */
  @WireField(
      tag = 34,
      adapter = "com.squareup.wire.ProtoAdapter#STRING"
  )
  public final String serviceTypeStr;

  /**
   * 银行卡号
   */
  @WireField(
      tag = 35,
      adapter = "com.squareup.wire.ProtoAdapter#STRING"
  )
  public final String bankNO;

  /**
   * 开户支行
   */
  @WireField(
      tag = 36,
      adapter = "com.squareup.wire.ProtoAdapter#STRING"
  )
  public final String bankName;

  /**
   * 上级电话
   */
  @WireField(
      tag = 37,
      adapter = "com.squareup.wire.ProtoAdapter#STRING"
  )
  public final String superiorPhone;

  /**
   * 经验值
   */
  @WireField(
      tag = 38,
      adapter = "com.squareup.wire.ProtoAdapter#UINT32"
  )
  public final Integer exp;

  public GetHgInfoRsp(Long id, String phone, Integer state, String fullName, String picUrl, Integer sex, String nativeplace, String nation, String province, String city, String district, String address, String building, List<Integer> language, String emergencyContact, String emergencyContactPhone, Long assessNumber, Long orderNumber, String joinTimeStr, String careerStartTime, Long branchId, String branchName, String superiorId, String superiorName, String nursingCertificateUrl, String hgno, Integer workType, Long roleId, Long hgNumbser, Integer msgNum, String mpQRCode, Boolean hasDiffno, Boolean onduty, String serviceTypeStr, String bankNO, String bankName, String superiorPhone, Integer exp) {
    this(id, phone, state, fullName, picUrl, sex, nativeplace, nation, province, city, district, address, building, language, emergencyContact, emergencyContactPhone, assessNumber, orderNumber, joinTimeStr, careerStartTime, branchId, branchName, superiorId, superiorName, nursingCertificateUrl, hgno, workType, roleId, hgNumbser, msgNum, mpQRCode, hasDiffno, onduty, serviceTypeStr, bankNO, bankName, superiorPhone, exp, ByteString.EMPTY);
  }

  public GetHgInfoRsp(Long id, String phone, Integer state, String fullName, String picUrl, Integer sex, String nativeplace, String nation, String province, String city, String district, String address, String building, List<Integer> language, String emergencyContact, String emergencyContactPhone, Long assessNumber, Long orderNumber, String joinTimeStr, String careerStartTime, Long branchId, String branchName, String superiorId, String superiorName, String nursingCertificateUrl, String hgno, Integer workType, Long roleId, Long hgNumbser, Integer msgNum, String mpQRCode, Boolean hasDiffno, Boolean onduty, String serviceTypeStr, String bankNO, String bankName, String superiorPhone, Integer exp, ByteString unknownFields) {
    super(ADAPTER, unknownFields);
    this.id = id;
    this.phone = phone;
    this.state = state;
    this.fullName = fullName;
    this.picUrl = picUrl;
    this.sex = sex;
    this.nativeplace = nativeplace;
    this.nation = nation;
    this.province = province;
    this.city = city;
    this.district = district;
    this.address = address;
    this.building = building;
    this.language = Internal.immutableCopyOf("language", language);
    this.emergencyContact = emergencyContact;
    this.emergencyContactPhone = emergencyContactPhone;
    this.assessNumber = assessNumber;
    this.orderNumber = orderNumber;
    this.joinTimeStr = joinTimeStr;
    this.careerStartTime = careerStartTime;
    this.branchId = branchId;
    this.branchName = branchName;
    this.superiorId = superiorId;
    this.superiorName = superiorName;
    this.nursingCertificateUrl = nursingCertificateUrl;
    this.hgno = hgno;
    this.workType = workType;
    this.roleId = roleId;
    this.hgNumbser = hgNumbser;
    this.msgNum = msgNum;
    this.mpQRCode = mpQRCode;
    this.hasDiffno = hasDiffno;
    this.onduty = onduty;
    this.serviceTypeStr = serviceTypeStr;
    this.bankNO = bankNO;
    this.bankName = bankName;
    this.superiorPhone = superiorPhone;
    this.exp = exp;
  }

  @Override
  public Builder newBuilder() {
    Builder builder = new Builder();
    builder.id = id;
    builder.phone = phone;
    builder.state = state;
    builder.fullName = fullName;
    builder.picUrl = picUrl;
    builder.sex = sex;
    builder.nativeplace = nativeplace;
    builder.nation = nation;
    builder.province = province;
    builder.city = city;
    builder.district = district;
    builder.address = address;
    builder.building = building;
    builder.language = Internal.copyOf("language", language);
    builder.emergencyContact = emergencyContact;
    builder.emergencyContactPhone = emergencyContactPhone;
    builder.assessNumber = assessNumber;
    builder.orderNumber = orderNumber;
    builder.joinTimeStr = joinTimeStr;
    builder.careerStartTime = careerStartTime;
    builder.branchId = branchId;
    builder.branchName = branchName;
    builder.superiorId = superiorId;
    builder.superiorName = superiorName;
    builder.nursingCertificateUrl = nursingCertificateUrl;
    builder.hgno = hgno;
    builder.workType = workType;
    builder.roleId = roleId;
    builder.hgNumbser = hgNumbser;
    builder.msgNum = msgNum;
    builder.mpQRCode = mpQRCode;
    builder.hasDiffno = hasDiffno;
    builder.onduty = onduty;
    builder.serviceTypeStr = serviceTypeStr;
    builder.bankNO = bankNO;
    builder.bankName = bankName;
    builder.superiorPhone = superiorPhone;
    builder.exp = exp;
    builder.addUnknownFields(unknownFields());
    return builder;
  }

  @Override
  public boolean equals(Object other) {
    if (other == this) return true;
    if (!(other instanceof GetHgInfoRsp)) return false;
    GetHgInfoRsp o = (GetHgInfoRsp) other;
    return unknownFields().equals(o.unknownFields())
        && Internal.equals(id, o.id)
        && Internal.equals(phone, o.phone)
        && Internal.equals(state, o.state)
        && Internal.equals(fullName, o.fullName)
        && Internal.equals(picUrl, o.picUrl)
        && Internal.equals(sex, o.sex)
        && Internal.equals(nativeplace, o.nativeplace)
        && Internal.equals(nation, o.nation)
        && Internal.equals(province, o.province)
        && Internal.equals(city, o.city)
        && Internal.equals(district, o.district)
        && Internal.equals(address, o.address)
        && Internal.equals(building, o.building)
        && language.equals(o.language)
        && Internal.equals(emergencyContact, o.emergencyContact)
        && Internal.equals(emergencyContactPhone, o.emergencyContactPhone)
        && Internal.equals(assessNumber, o.assessNumber)
        && Internal.equals(orderNumber, o.orderNumber)
        && Internal.equals(joinTimeStr, o.joinTimeStr)
        && Internal.equals(careerStartTime, o.careerStartTime)
        && Internal.equals(branchId, o.branchId)
        && Internal.equals(branchName, o.branchName)
        && Internal.equals(superiorId, o.superiorId)
        && Internal.equals(superiorName, o.superiorName)
        && Internal.equals(nursingCertificateUrl, o.nursingCertificateUrl)
        && Internal.equals(hgno, o.hgno)
        && Internal.equals(workType, o.workType)
        && Internal.equals(roleId, o.roleId)
        && Internal.equals(hgNumbser, o.hgNumbser)
        && Internal.equals(msgNum, o.msgNum)
        && Internal.equals(mpQRCode, o.mpQRCode)
        && Internal.equals(hasDiffno, o.hasDiffno)
        && Internal.equals(onduty, o.onduty)
        && Internal.equals(serviceTypeStr, o.serviceTypeStr)
        && Internal.equals(bankNO, o.bankNO)
        && Internal.equals(bankName, o.bankName)
        && Internal.equals(superiorPhone, o.superiorPhone)
        && Internal.equals(exp, o.exp);
  }

  @Override
  public int hashCode() {
    int result = super.hashCode;
    if (result == 0) {
      result = unknownFields().hashCode();
      result = result * 37 + (id != null ? id.hashCode() : 0);
      result = result * 37 + (phone != null ? phone.hashCode() : 0);
      result = result * 37 + (state != null ? state.hashCode() : 0);
      result = result * 37 + (fullName != null ? fullName.hashCode() : 0);
      result = result * 37 + (picUrl != null ? picUrl.hashCode() : 0);
      result = result * 37 + (sex != null ? sex.hashCode() : 0);
      result = result * 37 + (nativeplace != null ? nativeplace.hashCode() : 0);
      result = result * 37 + (nation != null ? nation.hashCode() : 0);
      result = result * 37 + (province != null ? province.hashCode() : 0);
      result = result * 37 + (city != null ? city.hashCode() : 0);
      result = result * 37 + (district != null ? district.hashCode() : 0);
      result = result * 37 + (address != null ? address.hashCode() : 0);
      result = result * 37 + (building != null ? building.hashCode() : 0);
      result = result * 37 + language.hashCode();
      result = result * 37 + (emergencyContact != null ? emergencyContact.hashCode() : 0);
      result = result * 37 + (emergencyContactPhone != null ? emergencyContactPhone.hashCode() : 0);
      result = result * 37 + (assessNumber != null ? assessNumber.hashCode() : 0);
      result = result * 37 + (orderNumber != null ? orderNumber.hashCode() : 0);
      result = result * 37 + (joinTimeStr != null ? joinTimeStr.hashCode() : 0);
      result = result * 37 + (careerStartTime != null ? careerStartTime.hashCode() : 0);
      result = result * 37 + (branchId != null ? branchId.hashCode() : 0);
      result = result * 37 + (branchName != null ? branchName.hashCode() : 0);
      result = result * 37 + (superiorId != null ? superiorId.hashCode() : 0);
      result = result * 37 + (superiorName != null ? superiorName.hashCode() : 0);
      result = result * 37 + (nursingCertificateUrl != null ? nursingCertificateUrl.hashCode() : 0);
      result = result * 37 + (hgno != null ? hgno.hashCode() : 0);
      result = result * 37 + (workType != null ? workType.hashCode() : 0);
      result = result * 37 + (roleId != null ? roleId.hashCode() : 0);
      result = result * 37 + (hgNumbser != null ? hgNumbser.hashCode() : 0);
      result = result * 37 + (msgNum != null ? msgNum.hashCode() : 0);
      result = result * 37 + (mpQRCode != null ? mpQRCode.hashCode() : 0);
      result = result * 37 + (hasDiffno != null ? hasDiffno.hashCode() : 0);
      result = result * 37 + (onduty != null ? onduty.hashCode() : 0);
      result = result * 37 + (serviceTypeStr != null ? serviceTypeStr.hashCode() : 0);
      result = result * 37 + (bankNO != null ? bankNO.hashCode() : 0);
      result = result * 37 + (bankName != null ? bankName.hashCode() : 0);
      result = result * 37 + (superiorPhone != null ? superiorPhone.hashCode() : 0);
      result = result * 37 + (exp != null ? exp.hashCode() : 0);
      super.hashCode = result;
    }
    return result;
  }

  @Override
  public String toString() {
    StringBuilder builder = new StringBuilder();
    if (id != null) builder.append(", id=").append(id);
    if (phone != null) builder.append(", phone=").append(phone);
    if (state != null) builder.append(", state=").append(state);
    if (fullName != null) builder.append(", fullName=").append(fullName);
    if (picUrl != null) builder.append(", picUrl=").append(picUrl);
    if (sex != null) builder.append(", sex=").append(sex);
    if (nativeplace != null) builder.append(", nativeplace=").append(nativeplace);
    if (nation != null) builder.append(", nation=").append(nation);
    if (province != null) builder.append(", province=").append(province);
    if (city != null) builder.append(", city=").append(city);
    if (district != null) builder.append(", district=").append(district);
    if (address != null) builder.append(", address=").append(address);
    if (building != null) builder.append(", building=").append(building);
    if (!language.isEmpty()) builder.append(", language=").append(language);
    if (emergencyContact != null) builder.append(", emergencyContact=").append(emergencyContact);
    if (emergencyContactPhone != null) builder.append(", emergencyContactPhone=").append(emergencyContactPhone);
    if (assessNumber != null) builder.append(", assessNumber=").append(assessNumber);
    if (orderNumber != null) builder.append(", orderNumber=").append(orderNumber);
    if (joinTimeStr != null) builder.append(", joinTimeStr=").append(joinTimeStr);
    if (careerStartTime != null) builder.append(", careerStartTime=").append(careerStartTime);
    if (branchId != null) builder.append(", branchId=").append(branchId);
    if (branchName != null) builder.append(", branchName=").append(branchName);
    if (superiorId != null) builder.append(", superiorId=").append(superiorId);
    if (superiorName != null) builder.append(", superiorName=").append(superiorName);
    if (nursingCertificateUrl != null) builder.append(", nursingCertificateUrl=").append(nursingCertificateUrl);
    if (hgno != null) builder.append(", hgno=").append(hgno);
    if (workType != null) builder.append(", workType=").append(workType);
    if (roleId != null) builder.append(", roleId=").append(roleId);
    if (hgNumbser != null) builder.append(", hgNumbser=").append(hgNumbser);
    if (msgNum != null) builder.append(", msgNum=").append(msgNum);
    if (mpQRCode != null) builder.append(", mpQRCode=").append(mpQRCode);
    if (hasDiffno != null) builder.append(", hasDiffno=").append(hasDiffno);
    if (onduty != null) builder.append(", onduty=").append(onduty);
    if (serviceTypeStr != null) builder.append(", serviceTypeStr=").append(serviceTypeStr);
    if (bankNO != null) builder.append(", bankNO=").append(bankNO);
    if (bankName != null) builder.append(", bankName=").append(bankName);
    if (superiorPhone != null) builder.append(", superiorPhone=").append(superiorPhone);
    if (exp != null) builder.append(", exp=").append(exp);
    return builder.replace(0, 2, "GetHgInfoRsp{").append('}').toString();
  }

  public static final class Builder extends Message.Builder<GetHgInfoRsp, Builder> {
    public Long id;

    public String phone;

    public Integer state;

    public String fullName;

    public String picUrl;

    public Integer sex;

    public String nativeplace;

    public String nation;

    public String province;

    public String city;

    public String district;

    public String address;

    public String building;

    public List<Integer> language;

    public String emergencyContact;

    public String emergencyContactPhone;

    public Long assessNumber;

    public Long orderNumber;

    public String joinTimeStr;

    public String careerStartTime;

    public Long branchId;

    public String branchName;

    public String superiorId;

    public String superiorName;

    public String nursingCertificateUrl;

    public String hgno;

    public Integer workType;

    public Long roleId;

    public Long hgNumbser;

    public Integer msgNum;

    public String mpQRCode;

    public Boolean hasDiffno;

    public Boolean onduty;

    public String serviceTypeStr;

    public String bankNO;

    public String bankName;

    public String superiorPhone;

    public Integer exp;

    public Builder() {
      language = Internal.newMutableList();
    }

    /**
     * 护工id
     */
    public Builder id(Long id) {
      this.id = id;
      return this;
    }

    /**
     * 手机号
     */
    public Builder phone(String phone) {
      this.phone = phone;
      return this;
    }

    /**
     * 护工的状态  1- 在职 2-离职
     */
    public Builder state(Integer state) {
      this.state = state;
      return this;
    }

    /**
     * 全名
     */
    public Builder fullName(String fullName) {
      this.fullName = fullName;
      return this;
    }

    /**
     * 个人照片
     */
    public Builder picUrl(String picUrl) {
      this.picUrl = picUrl;
      return this;
    }

    /**
     * 0未设置 1男 2 女
     */
    public Builder sex(Integer sex) {
      this.sex = sex;
      return this;
    }

    /**
     * 籍贯
     */
    public Builder nativeplace(String nativeplace) {
      this.nativeplace = nativeplace;
      return this;
    }

    /**
     * 民族
     */
    public Builder nation(String nation) {
      this.nation = nation;
      return this;
    }

    /**
     * 省份
     */
    public Builder province(String province) {
      this.province = province;
      return this;
    }

    /**
     * 城市
     */
    public Builder city(String city) {
      this.city = city;
      return this;
    }

    /**
     * 区
     */
    public Builder district(String district) {
      this.district = district;
      return this;
    }

    /**
     * 详细居住地址
     */
    public Builder address(String address) {
      this.address = address;
      return this;
    }

    /**
     * 居住地址
     */
    public Builder building(String building) {
      this.building = building;
      return this;
    }

    /**
     * 多种语言 以
     */
    public Builder language(List<Integer> language) {
      Internal.checkElementsNotNull(language);
      this.language = language;
      return this;
    }

    /**
     * 紧急联系人
     */
    public Builder emergencyContact(String emergencyContact) {
      this.emergencyContact = emergencyContact;
      return this;
    }

    /**
     * 紧急联系人手机号
     */
    public Builder emergencyContactPhone(String emergencyContactPhone) {
      this.emergencyContactPhone = emergencyContactPhone;
      return this;
    }

    /**
     * 评估
     */
    public Builder assessNumber(Long assessNumber) {
      this.assessNumber = assessNumber;
      return this;
    }

    /**
     * 订单
     */
    public Builder orderNumber(Long orderNumber) {
      this.orderNumber = orderNumber;
      return this;
    }

    /**
     * 健康经理与督导没有以下该信息
     * 入职时间
     */
    public Builder joinTimeStr(String joinTimeStr) {
      this.joinTimeStr = joinTimeStr;
      return this;
    }

    /**
     * 入行时间
     */
    public Builder careerStartTime(String careerStartTime) {
      this.careerStartTime = careerStartTime;
      return this;
    }

    /**
     * 科室id
     */
    public Builder branchId(Long branchId) {
      this.branchId = branchId;
      return this;
    }

    /**
     * 科室名称
     */
    public Builder branchName(String branchName) {
      this.branchName = branchName;
      return this;
    }

    /**
     * 直属上级id
     */
    public Builder superiorId(String superiorId) {
      this.superiorId = superiorId;
      return this;
    }

    /**
     * 直属上级昵称
     */
    public Builder superiorName(String superiorName) {
      this.superiorName = superiorName;
      return this;
    }

    /**
     * 护理证
     */
    public Builder nursingCertificateUrl(String nursingCertificateUrl) {
      this.nursingCertificateUrl = nursingCertificateUrl;
      return this;
    }

    /**
     * 工号
     */
    public Builder hgno(String hgno) {
      this.hgno = hgno;
      return this;
    }

    /**
     * 1-多陪 2-专陪 3-两种都可以
     */
    public Builder workType(Integer workType) {
      this.workType = workType;
      return this;
    }

    /**
     * 角色 0-无角色 10003-健康经理 10006-督导 10004-护士长  10001-护工 10002-护士 6-其他 10100-客户经理
     */
    public Builder roleId(Long roleId) {
      this.roleId = roleId;
      return this;
    }

    /**
     * 健康经理与督导有的
     * 护工人数
     */
    public Builder hgNumbser(Long hgNumbser) {
      this.hgNumbser = hgNumbser;
      return this;
    }

    /**
     * 未读消息数
     */
    public Builder msgNum(Integer msgNum) {
      this.msgNum = msgNum;
      return this;
    }

    /**
     * 公众号二维码
     */
    public Builder mpQRCode(String mpQRCode) {
      this.mpQRCode = mpQRCode;
      return this;
    }

    /**
     * 是否有异号下单功能
     */
    public Builder hasDiffno(Boolean hasDiffno) {
      this.hasDiffno = hasDiffno;
      return this;
    }

    /**
     * 是否在值班中 false-未值班 true-值班中
     */
    public Builder onduty(Boolean onduty) {
      this.onduty = onduty;
      return this;
    }

    /**
     * 负责的服务
     */
    public Builder serviceTypeStr(String serviceTypeStr) {
      this.serviceTypeStr = serviceTypeStr;
      return this;
    }

    /**
     * 银行卡号
     */
    public Builder bankNO(String bankNO) {
      this.bankNO = bankNO;
      return this;
    }

    /**
     * 开户支行
     */
    public Builder bankName(String bankName) {
      this.bankName = bankName;
      return this;
    }

    /**
     * 上级电话
     */
    public Builder superiorPhone(String superiorPhone) {
      this.superiorPhone = superiorPhone;
      return this;
    }

    /**
     * 经验值
     */
    public Builder exp(Integer exp) {
      this.exp = exp;
      return this;
    }

    @Override
    public GetHgInfoRsp build() {
      return new GetHgInfoRsp(id, phone, state, fullName, picUrl, sex, nativeplace, nation, province, city, district, address, building, language, emergencyContact, emergencyContactPhone, assessNumber, orderNumber, joinTimeStr, careerStartTime, branchId, branchName, superiorId, superiorName, nursingCertificateUrl, hgno, workType, roleId, hgNumbser, msgNum, mpQRCode, hasDiffno, onduty, serviceTypeStr, bankNO, bankName, superiorPhone, exp, super.buildUnknownFields());
    }
  }

  private static final class ProtoAdapter_GetHgInfoRsp extends ProtoAdapter<GetHgInfoRsp> {
    ProtoAdapter_GetHgInfoRsp() {
      super(FieldEncoding.LENGTH_DELIMITED, GetHgInfoRsp.class);
    }

    @Override
    public int encodedSize(GetHgInfoRsp value) {
      return (value.id != null ? ProtoAdapter.UINT64.encodedSizeWithTag(1, value.id) : 0)
          + (value.phone != null ? ProtoAdapter.STRING.encodedSizeWithTag(2, value.phone) : 0)
          + (value.state != null ? ProtoAdapter.UINT32.encodedSizeWithTag(3, value.state) : 0)
          + (value.fullName != null ? ProtoAdapter.STRING.encodedSizeWithTag(4, value.fullName) : 0)
          + (value.picUrl != null ? ProtoAdapter.STRING.encodedSizeWithTag(5, value.picUrl) : 0)
          + (value.sex != null ? ProtoAdapter.UINT32.encodedSizeWithTag(6, value.sex) : 0)
          + (value.nativeplace != null ? ProtoAdapter.STRING.encodedSizeWithTag(7, value.nativeplace) : 0)
          + (value.nation != null ? ProtoAdapter.STRING.encodedSizeWithTag(8, value.nation) : 0)
          + (value.province != null ? ProtoAdapter.STRING.encodedSizeWithTag(9, value.province) : 0)
          + (value.city != null ? ProtoAdapter.STRING.encodedSizeWithTag(10, value.city) : 0)
          + (value.district != null ? ProtoAdapter.STRING.encodedSizeWithTag(11, value.district) : 0)
          + (value.address != null ? ProtoAdapter.STRING.encodedSizeWithTag(12, value.address) : 0)
          + (value.building != null ? ProtoAdapter.STRING.encodedSizeWithTag(13, value.building) : 0)
          + ProtoAdapter.UINT32.asRepeated().encodedSizeWithTag(14, value.language)
          + (value.emergencyContact != null ? ProtoAdapter.STRING.encodedSizeWithTag(15, value.emergencyContact) : 0)
          + (value.emergencyContactPhone != null ? ProtoAdapter.STRING.encodedSizeWithTag(16, value.emergencyContactPhone) : 0)
          + (value.assessNumber != null ? ProtoAdapter.UINT64.encodedSizeWithTag(17, value.assessNumber) : 0)
          + (value.orderNumber != null ? ProtoAdapter.UINT64.encodedSizeWithTag(18, value.orderNumber) : 0)
          + (value.joinTimeStr != null ? ProtoAdapter.STRING.encodedSizeWithTag(19, value.joinTimeStr) : 0)
          + (value.careerStartTime != null ? ProtoAdapter.STRING.encodedSizeWithTag(20, value.careerStartTime) : 0)
          + (value.branchId != null ? ProtoAdapter.UINT64.encodedSizeWithTag(21, value.branchId) : 0)
          + (value.branchName != null ? ProtoAdapter.STRING.encodedSizeWithTag(22, value.branchName) : 0)
          + (value.superiorId != null ? ProtoAdapter.STRING.encodedSizeWithTag(23, value.superiorId) : 0)
          + (value.superiorName != null ? ProtoAdapter.STRING.encodedSizeWithTag(24, value.superiorName) : 0)
          + (value.nursingCertificateUrl != null ? ProtoAdapter.STRING.encodedSizeWithTag(25, value.nursingCertificateUrl) : 0)
          + (value.hgno != null ? ProtoAdapter.STRING.encodedSizeWithTag(26, value.hgno) : 0)
          + (value.workType != null ? ProtoAdapter.UINT32.encodedSizeWithTag(27, value.workType) : 0)
          + (value.roleId != null ? ProtoAdapter.UINT64.encodedSizeWithTag(28, value.roleId) : 0)
          + (value.hgNumbser != null ? ProtoAdapter.UINT64.encodedSizeWithTag(29, value.hgNumbser) : 0)
          + (value.msgNum != null ? ProtoAdapter.UINT32.encodedSizeWithTag(30, value.msgNum) : 0)
          + (value.mpQRCode != null ? ProtoAdapter.STRING.encodedSizeWithTag(31, value.mpQRCode) : 0)
          + (value.hasDiffno != null ? ProtoAdapter.BOOL.encodedSizeWithTag(32, value.hasDiffno) : 0)
          + (value.onduty != null ? ProtoAdapter.BOOL.encodedSizeWithTag(33, value.onduty) : 0)
          + (value.serviceTypeStr != null ? ProtoAdapter.STRING.encodedSizeWithTag(34, value.serviceTypeStr) : 0)
          + (value.bankNO != null ? ProtoAdapter.STRING.encodedSizeWithTag(35, value.bankNO) : 0)
          + (value.bankName != null ? ProtoAdapter.STRING.encodedSizeWithTag(36, value.bankName) : 0)
          + (value.superiorPhone != null ? ProtoAdapter.STRING.encodedSizeWithTag(37, value.superiorPhone) : 0)
          + (value.exp != null ? ProtoAdapter.UINT32.encodedSizeWithTag(38, value.exp) : 0)
          + value.unknownFields().size();
    }

    @Override
    public void encode(ProtoWriter writer, GetHgInfoRsp value) throws IOException {
      if (value.id != null) ProtoAdapter.UINT64.encodeWithTag(writer, 1, value.id);
      if (value.phone != null) ProtoAdapter.STRING.encodeWithTag(writer, 2, value.phone);
      if (value.state != null) ProtoAdapter.UINT32.encodeWithTag(writer, 3, value.state);
      if (value.fullName != null) ProtoAdapter.STRING.encodeWithTag(writer, 4, value.fullName);
      if (value.picUrl != null) ProtoAdapter.STRING.encodeWithTag(writer, 5, value.picUrl);
      if (value.sex != null) ProtoAdapter.UINT32.encodeWithTag(writer, 6, value.sex);
      if (value.nativeplace != null) ProtoAdapter.STRING.encodeWithTag(writer, 7, value.nativeplace);
      if (value.nation != null) ProtoAdapter.STRING.encodeWithTag(writer, 8, value.nation);
      if (value.province != null) ProtoAdapter.STRING.encodeWithTag(writer, 9, value.province);
      if (value.city != null) ProtoAdapter.STRING.encodeWithTag(writer, 10, value.city);
      if (value.district != null) ProtoAdapter.STRING.encodeWithTag(writer, 11, value.district);
      if (value.address != null) ProtoAdapter.STRING.encodeWithTag(writer, 12, value.address);
      if (value.building != null) ProtoAdapter.STRING.encodeWithTag(writer, 13, value.building);
      ProtoAdapter.UINT32.asRepeated().encodeWithTag(writer, 14, value.language);
      if (value.emergencyContact != null) ProtoAdapter.STRING.encodeWithTag(writer, 15, value.emergencyContact);
      if (value.emergencyContactPhone != null) ProtoAdapter.STRING.encodeWithTag(writer, 16, value.emergencyContactPhone);
      if (value.assessNumber != null) ProtoAdapter.UINT64.encodeWithTag(writer, 17, value.assessNumber);
      if (value.orderNumber != null) ProtoAdapter.UINT64.encodeWithTag(writer, 18, value.orderNumber);
      if (value.joinTimeStr != null) ProtoAdapter.STRING.encodeWithTag(writer, 19, value.joinTimeStr);
      if (value.careerStartTime != null) ProtoAdapter.STRING.encodeWithTag(writer, 20, value.careerStartTime);
      if (value.branchId != null) ProtoAdapter.UINT64.encodeWithTag(writer, 21, value.branchId);
      if (value.branchName != null) ProtoAdapter.STRING.encodeWithTag(writer, 22, value.branchName);
      if (value.superiorId != null) ProtoAdapter.STRING.encodeWithTag(writer, 23, value.superiorId);
      if (value.superiorName != null) ProtoAdapter.STRING.encodeWithTag(writer, 24, value.superiorName);
      if (value.nursingCertificateUrl != null) ProtoAdapter.STRING.encodeWithTag(writer, 25, value.nursingCertificateUrl);
      if (value.hgno != null) ProtoAdapter.STRING.encodeWithTag(writer, 26, value.hgno);
      if (value.workType != null) ProtoAdapter.UINT32.encodeWithTag(writer, 27, value.workType);
      if (value.roleId != null) ProtoAdapter.UINT64.encodeWithTag(writer, 28, value.roleId);
      if (value.hgNumbser != null) ProtoAdapter.UINT64.encodeWithTag(writer, 29, value.hgNumbser);
      if (value.msgNum != null) ProtoAdapter.UINT32.encodeWithTag(writer, 30, value.msgNum);
      if (value.mpQRCode != null) ProtoAdapter.STRING.encodeWithTag(writer, 31, value.mpQRCode);
      if (value.hasDiffno != null) ProtoAdapter.BOOL.encodeWithTag(writer, 32, value.hasDiffno);
      if (value.onduty != null) ProtoAdapter.BOOL.encodeWithTag(writer, 33, value.onduty);
      if (value.serviceTypeStr != null) ProtoAdapter.STRING.encodeWithTag(writer, 34, value.serviceTypeStr);
      if (value.bankNO != null) ProtoAdapter.STRING.encodeWithTag(writer, 35, value.bankNO);
      if (value.bankName != null) ProtoAdapter.STRING.encodeWithTag(writer, 36, value.bankName);
      if (value.superiorPhone != null) ProtoAdapter.STRING.encodeWithTag(writer, 37, value.superiorPhone);
      if (value.exp != null) ProtoAdapter.UINT32.encodeWithTag(writer, 38, value.exp);
      writer.writeBytes(value.unknownFields());
    }

    @Override
    public GetHgInfoRsp decode(ProtoReader reader) throws IOException {
      Builder builder = new Builder();
      long token = reader.beginMessage();
      for (int tag; (tag = reader.nextTag()) != -1;) {
        switch (tag) {
          case 1: builder.id(ProtoAdapter.UINT64.decode(reader)); break;
          case 2: builder.phone(ProtoAdapter.STRING.decode(reader)); break;
          case 3: builder.state(ProtoAdapter.UINT32.decode(reader)); break;
          case 4: builder.fullName(ProtoAdapter.STRING.decode(reader)); break;
          case 5: builder.picUrl(ProtoAdapter.STRING.decode(reader)); break;
          case 6: builder.sex(ProtoAdapter.UINT32.decode(reader)); break;
          case 7: builder.nativeplace(ProtoAdapter.STRING.decode(reader)); break;
          case 8: builder.nation(ProtoAdapter.STRING.decode(reader)); break;
          case 9: builder.province(ProtoAdapter.STRING.decode(reader)); break;
          case 10: builder.city(ProtoAdapter.STRING.decode(reader)); break;
          case 11: builder.district(ProtoAdapter.STRING.decode(reader)); break;
          case 12: builder.address(ProtoAdapter.STRING.decode(reader)); break;
          case 13: builder.building(ProtoAdapter.STRING.decode(reader)); break;
          case 14: builder.language.add(ProtoAdapter.UINT32.decode(reader)); break;
          case 15: builder.emergencyContact(ProtoAdapter.STRING.decode(reader)); break;
          case 16: builder.emergencyContactPhone(ProtoAdapter.STRING.decode(reader)); break;
          case 17: builder.assessNumber(ProtoAdapter.UINT64.decode(reader)); break;
          case 18: builder.orderNumber(ProtoAdapter.UINT64.decode(reader)); break;
          case 19: builder.joinTimeStr(ProtoAdapter.STRING.decode(reader)); break;
          case 20: builder.careerStartTime(ProtoAdapter.STRING.decode(reader)); break;
          case 21: builder.branchId(ProtoAdapter.UINT64.decode(reader)); break;
          case 22: builder.branchName(ProtoAdapter.STRING.decode(reader)); break;
          case 23: builder.superiorId(ProtoAdapter.STRING.decode(reader)); break;
          case 24: builder.superiorName(ProtoAdapter.STRING.decode(reader)); break;
          case 25: builder.nursingCertificateUrl(ProtoAdapter.STRING.decode(reader)); break;
          case 26: builder.hgno(ProtoAdapter.STRING.decode(reader)); break;
          case 27: builder.workType(ProtoAdapter.UINT32.decode(reader)); break;
          case 28: builder.roleId(ProtoAdapter.UINT64.decode(reader)); break;
          case 29: builder.hgNumbser(ProtoAdapter.UINT64.decode(reader)); break;
          case 30: builder.msgNum(ProtoAdapter.UINT32.decode(reader)); break;
          case 31: builder.mpQRCode(ProtoAdapter.STRING.decode(reader)); break;
          case 32: builder.hasDiffno(ProtoAdapter.BOOL.decode(reader)); break;
          case 33: builder.onduty(ProtoAdapter.BOOL.decode(reader)); break;
          case 34: builder.serviceTypeStr(ProtoAdapter.STRING.decode(reader)); break;
          case 35: builder.bankNO(ProtoAdapter.STRING.decode(reader)); break;
          case 36: builder.bankName(ProtoAdapter.STRING.decode(reader)); break;
          case 37: builder.superiorPhone(ProtoAdapter.STRING.decode(reader)); break;
          case 38: builder.exp(ProtoAdapter.UINT32.decode(reader)); break;
          default: {
            FieldEncoding fieldEncoding = reader.peekFieldEncoding();
            Object value = fieldEncoding.rawProtoAdapter().decode(reader);
            builder.addUnknownField(tag, fieldEncoding, value);
          }
        }
      }
      reader.endMessage(token);
      return builder.build();
    }

    @Override
    public GetHgInfoRsp redact(GetHgInfoRsp value) {
      Builder builder = value.newBuilder();
      builder.clearUnknownFields();
      return builder.build();
    }
  }
}
