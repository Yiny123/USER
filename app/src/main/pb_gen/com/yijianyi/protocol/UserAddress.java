// Code generated by Wire protocol buffer compiler, do not edit.
// Source file: SaasModel.proto at 336:1
package com.yijianyi.protocol;

import com.squareup.wire.FieldEncoding;
import com.squareup.wire.Message;
import com.squareup.wire.ProtoAdapter;
import com.squareup.wire.ProtoReader;
import com.squareup.wire.ProtoWriter;
import com.squareup.wire.WireField;
import com.squareup.wire.internal.Internal;
import java.io.IOException;
import java.lang.Double;
import java.lang.Integer;
import java.lang.Long;
import java.lang.Object;
import java.lang.Override;
import java.lang.String;
import java.lang.StringBuilder;
import okio.ByteString;

/**
 * 用户地址
 */
public final class UserAddress extends Message<UserAddress, UserAddress.Builder> {
  public static final ProtoAdapter<UserAddress> ADAPTER = new ProtoAdapter_UserAddress();

  private static final long serialVersionUID = 0L;

  public static final Long DEFAULT_ADDRID = 0L;

  public static final Long DEFAULT_USERID = 0L;

  public static final String DEFAULT_PROVINCE = "";

  public static final String DEFAULT_CITY = "";

  public static final String DEFAULT_CITYCODE = "";

  public static final String DEFAULT_DISTRICT = "";

  public static final String DEFAULT_ADCODE = "";

  public static final String DEFAULT_STREET = "";

  public static final String DEFAULT_BUILDING = "";

  public static final String DEFAULT_ADDRDETAIL = "";

  public static final String DEFAULT_BUSINESSNAME = "";

  public static final String DEFAULT_BUSINESSCODE = "";

  public static final String DEFAULT_PHONE = "";

  public static final String DEFAULT_CONTACTS = "";

  public static final String DEFAULT_PHONE2 = "";

  public static final String DEFAULT_CONTACTS2 = "";

  public static final Integer DEFAULT_GPSTYPE = 0;

  public static final Double DEFAULT_LNG = 0.0d;

  public static final Double DEFAULT_LAT = 0.0d;

  public static final String DEFAULT_CREATETIME = "";

  public static final Integer DEFAULT_CREATETYPE = 0;

  public static final String DEFAULT_CREATECHANNEL = "";

  public static final Long DEFAULT_CREATESTAFFID = 0L;

  public static final String DEFAULT_CREATESTAFFNAME = "";

  public static final Long DEFAULT_DEFAULTUSE = 0L;

  public static final Integer DEFAULT_ENABLED = 0;

  @WireField(
      tag = 1,
      adapter = "com.squareup.wire.ProtoAdapter#UINT64"
  )
  public final Long addrId;

  @WireField(
      tag = 2,
      adapter = "com.squareup.wire.ProtoAdapter#UINT64"
  )
  public final Long userId;

  @WireField(
      tag = 3,
      adapter = "com.squareup.wire.ProtoAdapter#STRING"
  )
  public final String province;

  @WireField(
      tag = 4,
      adapter = "com.squareup.wire.ProtoAdapter#STRING"
  )
  public final String city;

  /**
   * 城市编码
   */
  @WireField(
      tag = 5,
      adapter = "com.squareup.wire.ProtoAdapter#STRING"
  )
  public final String cityCode;

  /**
   * 区
   */
  @WireField(
      tag = 6,
      adapter = "com.squareup.wire.ProtoAdapter#STRING"
  )
  public final String district;

  /**
   * 高德城市编码
   */
  @WireField(
      tag = 7,
      adapter = "com.squareup.wire.ProtoAdapter#STRING"
  )
  public final String adCode;

  @WireField(
      tag = 8,
      adapter = "com.squareup.wire.ProtoAdapter#STRING"
  )
  public final String street;

  /**
   * 小区
   */
  @WireField(
      tag = 9,
      adapter = "com.squareup.wire.ProtoAdapter#STRING"
  )
  public final String building;

  /**
   * 详细地址
   */
  @WireField(
      tag = 10,
      adapter = "com.squareup.wire.ProtoAdapter#STRING"
  )
  public final String addrDetail;

  /**
   * 商区
   */
  @WireField(
      tag = 11,
      adapter = "com.squareup.wire.ProtoAdapter#STRING"
  )
  public final String businessName;

  /**
   * 商区编码
   */
  @WireField(
      tag = 12,
      adapter = "com.squareup.wire.ProtoAdapter#STRING"
  )
  public final String businessCode;

  @WireField(
      tag = 13,
      adapter = "com.squareup.wire.ProtoAdapter#STRING"
  )
  public final String phone;

  @WireField(
      tag = 14,
      adapter = "com.squareup.wire.ProtoAdapter#STRING"
  )
  public final String contacts;

  @WireField(
      tag = 15,
      adapter = "com.squareup.wire.ProtoAdapter#STRING"
  )
  public final String phone2;

  @WireField(
      tag = 16,
      adapter = "com.squareup.wire.ProtoAdapter#STRING"
  )
  public final String contacts2;

  /**
   * 经纬度类型 1-百度 2-高德
   */
  @WireField(
      tag = 17,
      adapter = "com.squareup.wire.ProtoAdapter#UINT32"
  )
  public final Integer gpsType;

  @WireField(
      tag = 18,
      adapter = "com.squareup.wire.ProtoAdapter#DOUBLE"
  )
  public final Double lng;

  @WireField(
      tag = 19,
      adapter = "com.squareup.wire.ProtoAdapter#DOUBLE"
  )
  public final Double lat;

  @WireField(
      tag = 20,
      adapter = "com.squareup.wire.ProtoAdapter#STRING"
  )
  public final String createTime;

  @WireField(
      tag = 21,
      adapter = "com.squareup.wire.ProtoAdapter#UINT32"
  )
  public final Integer createType;

  /**
   * 创建渠道
   */
  @WireField(
      tag = 22,
      adapter = "com.squareup.wire.ProtoAdapter#STRING"
  )
  public final String createChannel;

  @WireField(
      tag = 23,
      adapter = "com.squareup.wire.ProtoAdapter#UINT64"
  )
  public final Long createStaffId;

  @WireField(
      tag = 24,
      adapter = "com.squareup.wire.ProtoAdapter#STRING"
  )
  public final String createStaffName;

  @WireField(
      tag = 25,
      adapter = "com.squareup.wire.ProtoAdapter#UINT64"
  )
  public final Long defaultUse;

  @WireField(
      tag = 26,
      adapter = "com.squareup.wire.ProtoAdapter#UINT32"
  )
  public final Integer enabled;

  public UserAddress(Long addrId, Long userId, String province, String city, String cityCode, String district, String adCode, String street, String building, String addrDetail, String businessName, String businessCode, String phone, String contacts, String phone2, String contacts2, Integer gpsType, Double lng, Double lat, String createTime, Integer createType, String createChannel, Long createStaffId, String createStaffName, Long defaultUse, Integer enabled) {
    this(addrId, userId, province, city, cityCode, district, adCode, street, building, addrDetail, businessName, businessCode, phone, contacts, phone2, contacts2, gpsType, lng, lat, createTime, createType, createChannel, createStaffId, createStaffName, defaultUse, enabled, ByteString.EMPTY);
  }

  public UserAddress(Long addrId, Long userId, String province, String city, String cityCode, String district, String adCode, String street, String building, String addrDetail, String businessName, String businessCode, String phone, String contacts, String phone2, String contacts2, Integer gpsType, Double lng, Double lat, String createTime, Integer createType, String createChannel, Long createStaffId, String createStaffName, Long defaultUse, Integer enabled, ByteString unknownFields) {
    super(ADAPTER, unknownFields);
    this.addrId = addrId;
    this.userId = userId;
    this.province = province;
    this.city = city;
    this.cityCode = cityCode;
    this.district = district;
    this.adCode = adCode;
    this.street = street;
    this.building = building;
    this.addrDetail = addrDetail;
    this.businessName = businessName;
    this.businessCode = businessCode;
    this.phone = phone;
    this.contacts = contacts;
    this.phone2 = phone2;
    this.contacts2 = contacts2;
    this.gpsType = gpsType;
    this.lng = lng;
    this.lat = lat;
    this.createTime = createTime;
    this.createType = createType;
    this.createChannel = createChannel;
    this.createStaffId = createStaffId;
    this.createStaffName = createStaffName;
    this.defaultUse = defaultUse;
    this.enabled = enabled;
  }

  @Override
  public Builder newBuilder() {
    Builder builder = new Builder();
    builder.addrId = addrId;
    builder.userId = userId;
    builder.province = province;
    builder.city = city;
    builder.cityCode = cityCode;
    builder.district = district;
    builder.adCode = adCode;
    builder.street = street;
    builder.building = building;
    builder.addrDetail = addrDetail;
    builder.businessName = businessName;
    builder.businessCode = businessCode;
    builder.phone = phone;
    builder.contacts = contacts;
    builder.phone2 = phone2;
    builder.contacts2 = contacts2;
    builder.gpsType = gpsType;
    builder.lng = lng;
    builder.lat = lat;
    builder.createTime = createTime;
    builder.createType = createType;
    builder.createChannel = createChannel;
    builder.createStaffId = createStaffId;
    builder.createStaffName = createStaffName;
    builder.defaultUse = defaultUse;
    builder.enabled = enabled;
    builder.addUnknownFields(unknownFields());
    return builder;
  }

  @Override
  public boolean equals(Object other) {
    if (other == this) return true;
    if (!(other instanceof UserAddress)) return false;
    UserAddress o = (UserAddress) other;
    return unknownFields().equals(o.unknownFields())
        && Internal.equals(addrId, o.addrId)
        && Internal.equals(userId, o.userId)
        && Internal.equals(province, o.province)
        && Internal.equals(city, o.city)
        && Internal.equals(cityCode, o.cityCode)
        && Internal.equals(district, o.district)
        && Internal.equals(adCode, o.adCode)
        && Internal.equals(street, o.street)
        && Internal.equals(building, o.building)
        && Internal.equals(addrDetail, o.addrDetail)
        && Internal.equals(businessName, o.businessName)
        && Internal.equals(businessCode, o.businessCode)
        && Internal.equals(phone, o.phone)
        && Internal.equals(contacts, o.contacts)
        && Internal.equals(phone2, o.phone2)
        && Internal.equals(contacts2, o.contacts2)
        && Internal.equals(gpsType, o.gpsType)
        && Internal.equals(lng, o.lng)
        && Internal.equals(lat, o.lat)
        && Internal.equals(createTime, o.createTime)
        && Internal.equals(createType, o.createType)
        && Internal.equals(createChannel, o.createChannel)
        && Internal.equals(createStaffId, o.createStaffId)
        && Internal.equals(createStaffName, o.createStaffName)
        && Internal.equals(defaultUse, o.defaultUse)
        && Internal.equals(enabled, o.enabled);
  }

  @Override
  public int hashCode() {
    int result = super.hashCode;
    if (result == 0) {
      result = unknownFields().hashCode();
      result = result * 37 + (addrId != null ? addrId.hashCode() : 0);
      result = result * 37 + (userId != null ? userId.hashCode() : 0);
      result = result * 37 + (province != null ? province.hashCode() : 0);
      result = result * 37 + (city != null ? city.hashCode() : 0);
      result = result * 37 + (cityCode != null ? cityCode.hashCode() : 0);
      result = result * 37 + (district != null ? district.hashCode() : 0);
      result = result * 37 + (adCode != null ? adCode.hashCode() : 0);
      result = result * 37 + (street != null ? street.hashCode() : 0);
      result = result * 37 + (building != null ? building.hashCode() : 0);
      result = result * 37 + (addrDetail != null ? addrDetail.hashCode() : 0);
      result = result * 37 + (businessName != null ? businessName.hashCode() : 0);
      result = result * 37 + (businessCode != null ? businessCode.hashCode() : 0);
      result = result * 37 + (phone != null ? phone.hashCode() : 0);
      result = result * 37 + (contacts != null ? contacts.hashCode() : 0);
      result = result * 37 + (phone2 != null ? phone2.hashCode() : 0);
      result = result * 37 + (contacts2 != null ? contacts2.hashCode() : 0);
      result = result * 37 + (gpsType != null ? gpsType.hashCode() : 0);
      result = result * 37 + (lng != null ? lng.hashCode() : 0);
      result = result * 37 + (lat != null ? lat.hashCode() : 0);
      result = result * 37 + (createTime != null ? createTime.hashCode() : 0);
      result = result * 37 + (createType != null ? createType.hashCode() : 0);
      result = result * 37 + (createChannel != null ? createChannel.hashCode() : 0);
      result = result * 37 + (createStaffId != null ? createStaffId.hashCode() : 0);
      result = result * 37 + (createStaffName != null ? createStaffName.hashCode() : 0);
      result = result * 37 + (defaultUse != null ? defaultUse.hashCode() : 0);
      result = result * 37 + (enabled != null ? enabled.hashCode() : 0);
      super.hashCode = result;
    }
    return result;
  }

  @Override
  public String toString() {
    StringBuilder builder = new StringBuilder();
    if (addrId != null) builder.append(", addrId=").append(addrId);
    if (userId != null) builder.append(", userId=").append(userId);
    if (province != null) builder.append(", province=").append(province);
    if (city != null) builder.append(", city=").append(city);
    if (cityCode != null) builder.append(", cityCode=").append(cityCode);
    if (district != null) builder.append(", district=").append(district);
    if (adCode != null) builder.append(", adCode=").append(adCode);
    if (street != null) builder.append(", street=").append(street);
    if (building != null) builder.append(", building=").append(building);
    if (addrDetail != null) builder.append(", addrDetail=").append(addrDetail);
    if (businessName != null) builder.append(", businessName=").append(businessName);
    if (businessCode != null) builder.append(", businessCode=").append(businessCode);
    if (phone != null) builder.append(", phone=").append(phone);
    if (contacts != null) builder.append(", contacts=").append(contacts);
    if (phone2 != null) builder.append(", phone2=").append(phone2);
    if (contacts2 != null) builder.append(", contacts2=").append(contacts2);
    if (gpsType != null) builder.append(", gpsType=").append(gpsType);
    if (lng != null) builder.append(", lng=").append(lng);
    if (lat != null) builder.append(", lat=").append(lat);
    if (createTime != null) builder.append(", createTime=").append(createTime);
    if (createType != null) builder.append(", createType=").append(createType);
    if (createChannel != null) builder.append(", createChannel=").append(createChannel);
    if (createStaffId != null) builder.append(", createStaffId=").append(createStaffId);
    if (createStaffName != null) builder.append(", createStaffName=").append(createStaffName);
    if (defaultUse != null) builder.append(", defaultUse=").append(defaultUse);
    if (enabled != null) builder.append(", enabled=").append(enabled);
    return builder.replace(0, 2, "UserAddress{").append('}').toString();
  }

  public static final class Builder extends Message.Builder<UserAddress, Builder> {
    public Long addrId;

    public Long userId;

    public String province;

    public String city;

    public String cityCode;

    public String district;

    public String adCode;

    public String street;

    public String building;

    public String addrDetail;

    public String businessName;

    public String businessCode;

    public String phone;

    public String contacts;

    public String phone2;

    public String contacts2;

    public Integer gpsType;

    public Double lng;

    public Double lat;

    public String createTime;

    public Integer createType;

    public String createChannel;

    public Long createStaffId;

    public String createStaffName;

    public Long defaultUse;

    public Integer enabled;

    public Builder() {
    }

    public Builder addrId(Long addrId) {
      this.addrId = addrId;
      return this;
    }

    public Builder userId(Long userId) {
      this.userId = userId;
      return this;
    }

    public Builder province(String province) {
      this.province = province;
      return this;
    }

    public Builder city(String city) {
      this.city = city;
      return this;
    }

    /**
     * 城市编码
     */
    public Builder cityCode(String cityCode) {
      this.cityCode = cityCode;
      return this;
    }

    /**
     * 区
     */
    public Builder district(String district) {
      this.district = district;
      return this;
    }

    /**
     * 高德城市编码
     */
    public Builder adCode(String adCode) {
      this.adCode = adCode;
      return this;
    }

    public Builder street(String street) {
      this.street = street;
      return this;
    }

    /**
     * 小区
     */
    public Builder building(String building) {
      this.building = building;
      return this;
    }

    /**
     * 详细地址
     */
    public Builder addrDetail(String addrDetail) {
      this.addrDetail = addrDetail;
      return this;
    }

    /**
     * 商区
     */
    public Builder businessName(String businessName) {
      this.businessName = businessName;
      return this;
    }

    /**
     * 商区编码
     */
    public Builder businessCode(String businessCode) {
      this.businessCode = businessCode;
      return this;
    }

    public Builder phone(String phone) {
      this.phone = phone;
      return this;
    }

    public Builder contacts(String contacts) {
      this.contacts = contacts;
      return this;
    }

    public Builder phone2(String phone2) {
      this.phone2 = phone2;
      return this;
    }

    public Builder contacts2(String contacts2) {
      this.contacts2 = contacts2;
      return this;
    }

    /**
     * 经纬度类型 1-百度 2-高德
     */
    public Builder gpsType(Integer gpsType) {
      this.gpsType = gpsType;
      return this;
    }

    public Builder lng(Double lng) {
      this.lng = lng;
      return this;
    }

    public Builder lat(Double lat) {
      this.lat = lat;
      return this;
    }

    public Builder createTime(String createTime) {
      this.createTime = createTime;
      return this;
    }

    public Builder createType(Integer createType) {
      this.createType = createType;
      return this;
    }

    /**
     * 创建渠道
     */
    public Builder createChannel(String createChannel) {
      this.createChannel = createChannel;
      return this;
    }

    public Builder createStaffId(Long createStaffId) {
      this.createStaffId = createStaffId;
      return this;
    }

    public Builder createStaffName(String createStaffName) {
      this.createStaffName = createStaffName;
      return this;
    }

    public Builder defaultUse(Long defaultUse) {
      this.defaultUse = defaultUse;
      return this;
    }

    public Builder enabled(Integer enabled) {
      this.enabled = enabled;
      return this;
    }

    @Override
    public UserAddress build() {
      return new UserAddress(addrId, userId, province, city, cityCode, district, adCode, street, building, addrDetail, businessName, businessCode, phone, contacts, phone2, contacts2, gpsType, lng, lat, createTime, createType, createChannel, createStaffId, createStaffName, defaultUse, enabled, super.buildUnknownFields());
    }
  }

  private static final class ProtoAdapter_UserAddress extends ProtoAdapter<UserAddress> {
    ProtoAdapter_UserAddress() {
      super(FieldEncoding.LENGTH_DELIMITED, UserAddress.class);
    }

    @Override
    public int encodedSize(UserAddress value) {
      return (value.addrId != null ? ProtoAdapter.UINT64.encodedSizeWithTag(1, value.addrId) : 0)
          + (value.userId != null ? ProtoAdapter.UINT64.encodedSizeWithTag(2, value.userId) : 0)
          + (value.province != null ? ProtoAdapter.STRING.encodedSizeWithTag(3, value.province) : 0)
          + (value.city != null ? ProtoAdapter.STRING.encodedSizeWithTag(4, value.city) : 0)
          + (value.cityCode != null ? ProtoAdapter.STRING.encodedSizeWithTag(5, value.cityCode) : 0)
          + (value.district != null ? ProtoAdapter.STRING.encodedSizeWithTag(6, value.district) : 0)
          + (value.adCode != null ? ProtoAdapter.STRING.encodedSizeWithTag(7, value.adCode) : 0)
          + (value.street != null ? ProtoAdapter.STRING.encodedSizeWithTag(8, value.street) : 0)
          + (value.building != null ? ProtoAdapter.STRING.encodedSizeWithTag(9, value.building) : 0)
          + (value.addrDetail != null ? ProtoAdapter.STRING.encodedSizeWithTag(10, value.addrDetail) : 0)
          + (value.businessName != null ? ProtoAdapter.STRING.encodedSizeWithTag(11, value.businessName) : 0)
          + (value.businessCode != null ? ProtoAdapter.STRING.encodedSizeWithTag(12, value.businessCode) : 0)
          + (value.phone != null ? ProtoAdapter.STRING.encodedSizeWithTag(13, value.phone) : 0)
          + (value.contacts != null ? ProtoAdapter.STRING.encodedSizeWithTag(14, value.contacts) : 0)
          + (value.phone2 != null ? ProtoAdapter.STRING.encodedSizeWithTag(15, value.phone2) : 0)
          + (value.contacts2 != null ? ProtoAdapter.STRING.encodedSizeWithTag(16, value.contacts2) : 0)
          + (value.gpsType != null ? ProtoAdapter.UINT32.encodedSizeWithTag(17, value.gpsType) : 0)
          + (value.lng != null ? ProtoAdapter.DOUBLE.encodedSizeWithTag(18, value.lng) : 0)
          + (value.lat != null ? ProtoAdapter.DOUBLE.encodedSizeWithTag(19, value.lat) : 0)
          + (value.createTime != null ? ProtoAdapter.STRING.encodedSizeWithTag(20, value.createTime) : 0)
          + (value.createType != null ? ProtoAdapter.UINT32.encodedSizeWithTag(21, value.createType) : 0)
          + (value.createChannel != null ? ProtoAdapter.STRING.encodedSizeWithTag(22, value.createChannel) : 0)
          + (value.createStaffId != null ? ProtoAdapter.UINT64.encodedSizeWithTag(23, value.createStaffId) : 0)
          + (value.createStaffName != null ? ProtoAdapter.STRING.encodedSizeWithTag(24, value.createStaffName) : 0)
          + (value.defaultUse != null ? ProtoAdapter.UINT64.encodedSizeWithTag(25, value.defaultUse) : 0)
          + (value.enabled != null ? ProtoAdapter.UINT32.encodedSizeWithTag(26, value.enabled) : 0)
          + value.unknownFields().size();
    }

    @Override
    public void encode(ProtoWriter writer, UserAddress value) throws IOException {
      if (value.addrId != null) ProtoAdapter.UINT64.encodeWithTag(writer, 1, value.addrId);
      if (value.userId != null) ProtoAdapter.UINT64.encodeWithTag(writer, 2, value.userId);
      if (value.province != null) ProtoAdapter.STRING.encodeWithTag(writer, 3, value.province);
      if (value.city != null) ProtoAdapter.STRING.encodeWithTag(writer, 4, value.city);
      if (value.cityCode != null) ProtoAdapter.STRING.encodeWithTag(writer, 5, value.cityCode);
      if (value.district != null) ProtoAdapter.STRING.encodeWithTag(writer, 6, value.district);
      if (value.adCode != null) ProtoAdapter.STRING.encodeWithTag(writer, 7, value.adCode);
      if (value.street != null) ProtoAdapter.STRING.encodeWithTag(writer, 8, value.street);
      if (value.building != null) ProtoAdapter.STRING.encodeWithTag(writer, 9, value.building);
      if (value.addrDetail != null) ProtoAdapter.STRING.encodeWithTag(writer, 10, value.addrDetail);
      if (value.businessName != null) ProtoAdapter.STRING.encodeWithTag(writer, 11, value.businessName);
      if (value.businessCode != null) ProtoAdapter.STRING.encodeWithTag(writer, 12, value.businessCode);
      if (value.phone != null) ProtoAdapter.STRING.encodeWithTag(writer, 13, value.phone);
      if (value.contacts != null) ProtoAdapter.STRING.encodeWithTag(writer, 14, value.contacts);
      if (value.phone2 != null) ProtoAdapter.STRING.encodeWithTag(writer, 15, value.phone2);
      if (value.contacts2 != null) ProtoAdapter.STRING.encodeWithTag(writer, 16, value.contacts2);
      if (value.gpsType != null) ProtoAdapter.UINT32.encodeWithTag(writer, 17, value.gpsType);
      if (value.lng != null) ProtoAdapter.DOUBLE.encodeWithTag(writer, 18, value.lng);
      if (value.lat != null) ProtoAdapter.DOUBLE.encodeWithTag(writer, 19, value.lat);
      if (value.createTime != null) ProtoAdapter.STRING.encodeWithTag(writer, 20, value.createTime);
      if (value.createType != null) ProtoAdapter.UINT32.encodeWithTag(writer, 21, value.createType);
      if (value.createChannel != null) ProtoAdapter.STRING.encodeWithTag(writer, 22, value.createChannel);
      if (value.createStaffId != null) ProtoAdapter.UINT64.encodeWithTag(writer, 23, value.createStaffId);
      if (value.createStaffName != null) ProtoAdapter.STRING.encodeWithTag(writer, 24, value.createStaffName);
      if (value.defaultUse != null) ProtoAdapter.UINT64.encodeWithTag(writer, 25, value.defaultUse);
      if (value.enabled != null) ProtoAdapter.UINT32.encodeWithTag(writer, 26, value.enabled);
      writer.writeBytes(value.unknownFields());
    }

    @Override
    public UserAddress decode(ProtoReader reader) throws IOException {
      Builder builder = new Builder();
      long token = reader.beginMessage();
      for (int tag; (tag = reader.nextTag()) != -1;) {
        switch (tag) {
          case 1: builder.addrId(ProtoAdapter.UINT64.decode(reader)); break;
          case 2: builder.userId(ProtoAdapter.UINT64.decode(reader)); break;
          case 3: builder.province(ProtoAdapter.STRING.decode(reader)); break;
          case 4: builder.city(ProtoAdapter.STRING.decode(reader)); break;
          case 5: builder.cityCode(ProtoAdapter.STRING.decode(reader)); break;
          case 6: builder.district(ProtoAdapter.STRING.decode(reader)); break;
          case 7: builder.adCode(ProtoAdapter.STRING.decode(reader)); break;
          case 8: builder.street(ProtoAdapter.STRING.decode(reader)); break;
          case 9: builder.building(ProtoAdapter.STRING.decode(reader)); break;
          case 10: builder.addrDetail(ProtoAdapter.STRING.decode(reader)); break;
          case 11: builder.businessName(ProtoAdapter.STRING.decode(reader)); break;
          case 12: builder.businessCode(ProtoAdapter.STRING.decode(reader)); break;
          case 13: builder.phone(ProtoAdapter.STRING.decode(reader)); break;
          case 14: builder.contacts(ProtoAdapter.STRING.decode(reader)); break;
          case 15: builder.phone2(ProtoAdapter.STRING.decode(reader)); break;
          case 16: builder.contacts2(ProtoAdapter.STRING.decode(reader)); break;
          case 17: builder.gpsType(ProtoAdapter.UINT32.decode(reader)); break;
          case 18: builder.lng(ProtoAdapter.DOUBLE.decode(reader)); break;
          case 19: builder.lat(ProtoAdapter.DOUBLE.decode(reader)); break;
          case 20: builder.createTime(ProtoAdapter.STRING.decode(reader)); break;
          case 21: builder.createType(ProtoAdapter.UINT32.decode(reader)); break;
          case 22: builder.createChannel(ProtoAdapter.STRING.decode(reader)); break;
          case 23: builder.createStaffId(ProtoAdapter.UINT64.decode(reader)); break;
          case 24: builder.createStaffName(ProtoAdapter.STRING.decode(reader)); break;
          case 25: builder.defaultUse(ProtoAdapter.UINT64.decode(reader)); break;
          case 26: builder.enabled(ProtoAdapter.UINT32.decode(reader)); break;
          default: {
            FieldEncoding fieldEncoding = reader.peekFieldEncoding();
            Object value = fieldEncoding.rawProtoAdapter().decode(reader);
            builder.addUnknownField(tag, fieldEncoding, value);
          }
        }
      }
      reader.endMessage(token);
      return builder.build();
    }

    @Override
    public UserAddress redact(UserAddress value) {
      Builder builder = value.newBuilder();
      builder.clearUnknownFields();
      return builder.build();
    }
  }
}
