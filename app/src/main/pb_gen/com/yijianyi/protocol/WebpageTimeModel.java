// Code generated by Wire protocol buffer compiler, do not edit.
// Source file: SaasModel.proto at 1356:1
package com.yijianyi.protocol;

import com.squareup.wire.FieldEncoding;
import com.squareup.wire.Message;
import com.squareup.wire.ProtoAdapter;
import com.squareup.wire.ProtoReader;
import com.squareup.wire.ProtoWriter;
import com.squareup.wire.WireField;
import com.squareup.wire.internal.Internal;
import java.io.IOException;
import java.lang.Long;
import java.lang.Object;
import java.lang.Override;
import java.lang.String;
import java.lang.StringBuilder;
import okio.ByteString;

/**
 * 记录页面打开耗时
 */
public final class WebpageTimeModel extends Message<WebpageTimeModel, WebpageTimeModel.Builder> {
  public static final ProtoAdapter<WebpageTimeModel> ADAPTER = new ProtoAdapter_WebpageTimeModel();

  private static final long serialVersionUID = 0L;

  public static final Long DEFAULT_ID = 0L;

  public static final Long DEFAULT_EXPENDTIME = 0L;

  public static final Long DEFAULT_BPTIME = 0L;

  public static final Long DEFAULT_ZYTIME = 0L;

  public static final Long DEFAULT_HTTPTIME = 0L;

  public static final Long DEFAULT_STARTDOMTIME = 0L;

  public static final Long DEFAULT_ENDDOMTIME = 0L;

  public static final Long DEFAULT_CREATETIME = 0L;

  public static final String DEFAULT_URL = "";

  public static final String DEFAULT_STARTTIME = "";

  public static final String DEFAULT_NETTYPE = "";

  public static final String DEFAULT_USERAGENT = "";

  public static final Long DEFAULT_WXTIME = 0L;

  /**
   * id
   */
  @WireField(
      tag = 1,
      adapter = "com.squareup.wire.ProtoAdapter#UINT64"
  )
  public final Long id;

  /**
   * 总耗时,毫秒为单位
   */
  @WireField(
      tag = 2,
      adapter = "com.squareup.wire.ProtoAdapter#UINT64"
  )
  public final Long expendTime;

  /**
   * 白屏时间,毫秒为单位
   */
  @WireField(
      tag = 3,
      adapter = "com.squareup.wire.ProtoAdapter#UINT64"
  )
  public final Long bpTime;

  /**
   * 资源加载,毫秒为单位
   */
  @WireField(
      tag = 4,
      adapter = "com.squareup.wire.ProtoAdapter#UINT64"
  )
  public final Long zyTime;

  /**
   * HTTP响应全部接收完成,毫秒为单位
   */
  @WireField(
      tag = 5,
      adapter = "com.squareup.wire.ProtoAdapter#UINT64"
  )
  public final Long httpTime;

  /**
   * 开始解析渲染DOM树,毫秒为单位
   */
  @WireField(
      tag = 6,
      adapter = "com.squareup.wire.ProtoAdapter#UINT64"
  )
  public final Long startDOMTime;

  /**
   * DOM树解析完成,毫秒为单位
   */
  @WireField(
      tag = 7,
      adapter = "com.squareup.wire.ProtoAdapter#UINT64"
  )
  public final Long endDOMTime;

  /**
   * 创建时间
   */
  @WireField(
      tag = 8,
      adapter = "com.squareup.wire.ProtoAdapter#UINT64"
  )
  public final Long createTime;

  /**
   * 页面路径
   */
  @WireField(
      tag = 9,
      adapter = "com.squareup.wire.ProtoAdapter#STRING"
  )
  public final String url;

  /**
   * 开始时间
   */
  @WireField(
      tag = 10,
      adapter = "com.squareup.wire.ProtoAdapter#STRING"
  )
  public final String startTime;

  /**
   * 网络类型
   */
  @WireField(
      tag = 11,
      adapter = "com.squareup.wire.ProtoAdapter#STRING"
  )
  public final String netType;

  /**
   * userAgent
   */
  @WireField(
      tag = 12,
      adapter = "com.squareup.wire.ProtoAdapter#STRING"
  )
  public final String userAgent;

  /**
   * 微信加载时间,毫秒为单位
   */
  @WireField(
      tag = 13,
      adapter = "com.squareup.wire.ProtoAdapter#UINT64"
  )
  public final Long wxTime;

  public WebpageTimeModel(Long id, Long expendTime, Long bpTime, Long zyTime, Long httpTime, Long startDOMTime, Long endDOMTime, Long createTime, String url, String startTime, String netType, String userAgent, Long wxTime) {
    this(id, expendTime, bpTime, zyTime, httpTime, startDOMTime, endDOMTime, createTime, url, startTime, netType, userAgent, wxTime, ByteString.EMPTY);
  }

  public WebpageTimeModel(Long id, Long expendTime, Long bpTime, Long zyTime, Long httpTime, Long startDOMTime, Long endDOMTime, Long createTime, String url, String startTime, String netType, String userAgent, Long wxTime, ByteString unknownFields) {
    super(ADAPTER, unknownFields);
    this.id = id;
    this.expendTime = expendTime;
    this.bpTime = bpTime;
    this.zyTime = zyTime;
    this.httpTime = httpTime;
    this.startDOMTime = startDOMTime;
    this.endDOMTime = endDOMTime;
    this.createTime = createTime;
    this.url = url;
    this.startTime = startTime;
    this.netType = netType;
    this.userAgent = userAgent;
    this.wxTime = wxTime;
  }

  @Override
  public Builder newBuilder() {
    Builder builder = new Builder();
    builder.id = id;
    builder.expendTime = expendTime;
    builder.bpTime = bpTime;
    builder.zyTime = zyTime;
    builder.httpTime = httpTime;
    builder.startDOMTime = startDOMTime;
    builder.endDOMTime = endDOMTime;
    builder.createTime = createTime;
    builder.url = url;
    builder.startTime = startTime;
    builder.netType = netType;
    builder.userAgent = userAgent;
    builder.wxTime = wxTime;
    builder.addUnknownFields(unknownFields());
    return builder;
  }

  @Override
  public boolean equals(Object other) {
    if (other == this) return true;
    if (!(other instanceof WebpageTimeModel)) return false;
    WebpageTimeModel o = (WebpageTimeModel) other;
    return unknownFields().equals(o.unknownFields())
        && Internal.equals(id, o.id)
        && Internal.equals(expendTime, o.expendTime)
        && Internal.equals(bpTime, o.bpTime)
        && Internal.equals(zyTime, o.zyTime)
        && Internal.equals(httpTime, o.httpTime)
        && Internal.equals(startDOMTime, o.startDOMTime)
        && Internal.equals(endDOMTime, o.endDOMTime)
        && Internal.equals(createTime, o.createTime)
        && Internal.equals(url, o.url)
        && Internal.equals(startTime, o.startTime)
        && Internal.equals(netType, o.netType)
        && Internal.equals(userAgent, o.userAgent)
        && Internal.equals(wxTime, o.wxTime);
  }

  @Override
  public int hashCode() {
    int result = super.hashCode;
    if (result == 0) {
      result = unknownFields().hashCode();
      result = result * 37 + (id != null ? id.hashCode() : 0);
      result = result * 37 + (expendTime != null ? expendTime.hashCode() : 0);
      result = result * 37 + (bpTime != null ? bpTime.hashCode() : 0);
      result = result * 37 + (zyTime != null ? zyTime.hashCode() : 0);
      result = result * 37 + (httpTime != null ? httpTime.hashCode() : 0);
      result = result * 37 + (startDOMTime != null ? startDOMTime.hashCode() : 0);
      result = result * 37 + (endDOMTime != null ? endDOMTime.hashCode() : 0);
      result = result * 37 + (createTime != null ? createTime.hashCode() : 0);
      result = result * 37 + (url != null ? url.hashCode() : 0);
      result = result * 37 + (startTime != null ? startTime.hashCode() : 0);
      result = result * 37 + (netType != null ? netType.hashCode() : 0);
      result = result * 37 + (userAgent != null ? userAgent.hashCode() : 0);
      result = result * 37 + (wxTime != null ? wxTime.hashCode() : 0);
      super.hashCode = result;
    }
    return result;
  }

  @Override
  public String toString() {
    StringBuilder builder = new StringBuilder();
    if (id != null) builder.append(", id=").append(id);
    if (expendTime != null) builder.append(", expendTime=").append(expendTime);
    if (bpTime != null) builder.append(", bpTime=").append(bpTime);
    if (zyTime != null) builder.append(", zyTime=").append(zyTime);
    if (httpTime != null) builder.append(", httpTime=").append(httpTime);
    if (startDOMTime != null) builder.append(", startDOMTime=").append(startDOMTime);
    if (endDOMTime != null) builder.append(", endDOMTime=").append(endDOMTime);
    if (createTime != null) builder.append(", createTime=").append(createTime);
    if (url != null) builder.append(", url=").append(url);
    if (startTime != null) builder.append(", startTime=").append(startTime);
    if (netType != null) builder.append(", netType=").append(netType);
    if (userAgent != null) builder.append(", userAgent=").append(userAgent);
    if (wxTime != null) builder.append(", wxTime=").append(wxTime);
    return builder.replace(0, 2, "WebpageTimeModel{").append('}').toString();
  }

  public static final class Builder extends Message.Builder<WebpageTimeModel, Builder> {
    public Long id;

    public Long expendTime;

    public Long bpTime;

    public Long zyTime;

    public Long httpTime;

    public Long startDOMTime;

    public Long endDOMTime;

    public Long createTime;

    public String url;

    public String startTime;

    public String netType;

    public String userAgent;

    public Long wxTime;

    public Builder() {
    }

    /**
     * id
     */
    public Builder id(Long id) {
      this.id = id;
      return this;
    }

    /**
     * 总耗时,毫秒为单位
     */
    public Builder expendTime(Long expendTime) {
      this.expendTime = expendTime;
      return this;
    }

    /**
     * 白屏时间,毫秒为单位
     */
    public Builder bpTime(Long bpTime) {
      this.bpTime = bpTime;
      return this;
    }

    /**
     * 资源加载,毫秒为单位
     */
    public Builder zyTime(Long zyTime) {
      this.zyTime = zyTime;
      return this;
    }

    /**
     * HTTP响应全部接收完成,毫秒为单位
     */
    public Builder httpTime(Long httpTime) {
      this.httpTime = httpTime;
      return this;
    }

    /**
     * 开始解析渲染DOM树,毫秒为单位
     */
    public Builder startDOMTime(Long startDOMTime) {
      this.startDOMTime = startDOMTime;
      return this;
    }

    /**
     * DOM树解析完成,毫秒为单位
     */
    public Builder endDOMTime(Long endDOMTime) {
      this.endDOMTime = endDOMTime;
      return this;
    }

    /**
     * 创建时间
     */
    public Builder createTime(Long createTime) {
      this.createTime = createTime;
      return this;
    }

    /**
     * 页面路径
     */
    public Builder url(String url) {
      this.url = url;
      return this;
    }

    /**
     * 开始时间
     */
    public Builder startTime(String startTime) {
      this.startTime = startTime;
      return this;
    }

    /**
     * 网络类型
     */
    public Builder netType(String netType) {
      this.netType = netType;
      return this;
    }

    /**
     * userAgent
     */
    public Builder userAgent(String userAgent) {
      this.userAgent = userAgent;
      return this;
    }

    /**
     * 微信加载时间,毫秒为单位
     */
    public Builder wxTime(Long wxTime) {
      this.wxTime = wxTime;
      return this;
    }

    @Override
    public WebpageTimeModel build() {
      return new WebpageTimeModel(id, expendTime, bpTime, zyTime, httpTime, startDOMTime, endDOMTime, createTime, url, startTime, netType, userAgent, wxTime, super.buildUnknownFields());
    }
  }

  private static final class ProtoAdapter_WebpageTimeModel extends ProtoAdapter<WebpageTimeModel> {
    ProtoAdapter_WebpageTimeModel() {
      super(FieldEncoding.LENGTH_DELIMITED, WebpageTimeModel.class);
    }

    @Override
    public int encodedSize(WebpageTimeModel value) {
      return (value.id != null ? ProtoAdapter.UINT64.encodedSizeWithTag(1, value.id) : 0)
          + (value.expendTime != null ? ProtoAdapter.UINT64.encodedSizeWithTag(2, value.expendTime) : 0)
          + (value.bpTime != null ? ProtoAdapter.UINT64.encodedSizeWithTag(3, value.bpTime) : 0)
          + (value.zyTime != null ? ProtoAdapter.UINT64.encodedSizeWithTag(4, value.zyTime) : 0)
          + (value.httpTime != null ? ProtoAdapter.UINT64.encodedSizeWithTag(5, value.httpTime) : 0)
          + (value.startDOMTime != null ? ProtoAdapter.UINT64.encodedSizeWithTag(6, value.startDOMTime) : 0)
          + (value.endDOMTime != null ? ProtoAdapter.UINT64.encodedSizeWithTag(7, value.endDOMTime) : 0)
          + (value.createTime != null ? ProtoAdapter.UINT64.encodedSizeWithTag(8, value.createTime) : 0)
          + (value.url != null ? ProtoAdapter.STRING.encodedSizeWithTag(9, value.url) : 0)
          + (value.startTime != null ? ProtoAdapter.STRING.encodedSizeWithTag(10, value.startTime) : 0)
          + (value.netType != null ? ProtoAdapter.STRING.encodedSizeWithTag(11, value.netType) : 0)
          + (value.userAgent != null ? ProtoAdapter.STRING.encodedSizeWithTag(12, value.userAgent) : 0)
          + (value.wxTime != null ? ProtoAdapter.UINT64.encodedSizeWithTag(13, value.wxTime) : 0)
          + value.unknownFields().size();
    }

    @Override
    public void encode(ProtoWriter writer, WebpageTimeModel value) throws IOException {
      if (value.id != null) ProtoAdapter.UINT64.encodeWithTag(writer, 1, value.id);
      if (value.expendTime != null) ProtoAdapter.UINT64.encodeWithTag(writer, 2, value.expendTime);
      if (value.bpTime != null) ProtoAdapter.UINT64.encodeWithTag(writer, 3, value.bpTime);
      if (value.zyTime != null) ProtoAdapter.UINT64.encodeWithTag(writer, 4, value.zyTime);
      if (value.httpTime != null) ProtoAdapter.UINT64.encodeWithTag(writer, 5, value.httpTime);
      if (value.startDOMTime != null) ProtoAdapter.UINT64.encodeWithTag(writer, 6, value.startDOMTime);
      if (value.endDOMTime != null) ProtoAdapter.UINT64.encodeWithTag(writer, 7, value.endDOMTime);
      if (value.createTime != null) ProtoAdapter.UINT64.encodeWithTag(writer, 8, value.createTime);
      if (value.url != null) ProtoAdapter.STRING.encodeWithTag(writer, 9, value.url);
      if (value.startTime != null) ProtoAdapter.STRING.encodeWithTag(writer, 10, value.startTime);
      if (value.netType != null) ProtoAdapter.STRING.encodeWithTag(writer, 11, value.netType);
      if (value.userAgent != null) ProtoAdapter.STRING.encodeWithTag(writer, 12, value.userAgent);
      if (value.wxTime != null) ProtoAdapter.UINT64.encodeWithTag(writer, 13, value.wxTime);
      writer.writeBytes(value.unknownFields());
    }

    @Override
    public WebpageTimeModel decode(ProtoReader reader) throws IOException {
      Builder builder = new Builder();
      long token = reader.beginMessage();
      for (int tag; (tag = reader.nextTag()) != -1;) {
        switch (tag) {
          case 1: builder.id(ProtoAdapter.UINT64.decode(reader)); break;
          case 2: builder.expendTime(ProtoAdapter.UINT64.decode(reader)); break;
          case 3: builder.bpTime(ProtoAdapter.UINT64.decode(reader)); break;
          case 4: builder.zyTime(ProtoAdapter.UINT64.decode(reader)); break;
          case 5: builder.httpTime(ProtoAdapter.UINT64.decode(reader)); break;
          case 6: builder.startDOMTime(ProtoAdapter.UINT64.decode(reader)); break;
          case 7: builder.endDOMTime(ProtoAdapter.UINT64.decode(reader)); break;
          case 8: builder.createTime(ProtoAdapter.UINT64.decode(reader)); break;
          case 9: builder.url(ProtoAdapter.STRING.decode(reader)); break;
          case 10: builder.startTime(ProtoAdapter.STRING.decode(reader)); break;
          case 11: builder.netType(ProtoAdapter.STRING.decode(reader)); break;
          case 12: builder.userAgent(ProtoAdapter.STRING.decode(reader)); break;
          case 13: builder.wxTime(ProtoAdapter.UINT64.decode(reader)); break;
          default: {
            FieldEncoding fieldEncoding = reader.peekFieldEncoding();
            Object value = fieldEncoding.rawProtoAdapter().decode(reader);
            builder.addUnknownField(tag, fieldEncoding, value);
          }
        }
      }
      reader.endMessage(token);
      return builder.build();
    }

    @Override
    public WebpageTimeModel redact(WebpageTimeModel value) {
      Builder builder = value.newBuilder();
      builder.clearUnknownFields();
      return builder.build();
    }
  }
}
