// Code generated by Wire protocol buffer compiler, do not edit.
// Source file: OrderModel.proto at 767:1
package com.yijianyi.protocol;

import com.squareup.wire.FieldEncoding;
import com.squareup.wire.Message;
import com.squareup.wire.ProtoAdapter;
import com.squareup.wire.ProtoReader;
import com.squareup.wire.ProtoWriter;
import com.squareup.wire.WireField;
import com.squareup.wire.internal.Internal;
import java.io.IOException;
import java.lang.Long;
import java.lang.Object;
import java.lang.Override;
import java.lang.String;
import java.lang.StringBuilder;
import okio.ByteString;

/**
 * 长护险订单回访生命体征
 */
public final class InsureOrderVisitVita extends Message<InsureOrderVisitVita, InsureOrderVisitVita.Builder> {
  public static final ProtoAdapter<InsureOrderVisitVita> ADAPTER = new ProtoAdapter_InsureOrderVisitVita();

  private static final long serialVersionUID = 0L;

  public static final Long DEFAULT_ID = 0L;

  public static final Long DEFAULT_VISITID = 0L;

  public static final String DEFAULT_ANIMALHEAT = "";

  public static final String DEFAULT_PULSE = "";

  public static final String DEFAULT_BREATHE = "";

  public static final String DEFAULT_BLOODPRESSURE = "";

  public static final Long DEFAULT_CREATESTAFFID = 0L;

  public static final String DEFAULT_CREATESTAFFNAME = "";

  public static final Long DEFAULT_CREATETIME = 0L;

  /**
   * id
   */
  @WireField(
      tag = 1,
      adapter = "com.squareup.wire.ProtoAdapter#UINT64"
  )
  public final Long id;

  /**
   * 回访id
   */
  @WireField(
      tag = 2,
      adapter = "com.squareup.wire.ProtoAdapter#UINT64"
  )
  public final Long visitId;

  /**
   * 体温
   */
  @WireField(
      tag = 3,
      adapter = "com.squareup.wire.ProtoAdapter#STRING"
  )
  public final String animalHeat;

  /**
   * 脉搏
   */
  @WireField(
      tag = 4,
      adapter = "com.squareup.wire.ProtoAdapter#STRING"
  )
  public final String pulse;

  /**
   * 呼吸
   */
  @WireField(
      tag = 5,
      adapter = "com.squareup.wire.ProtoAdapter#STRING"
  )
  public final String breathe;

  /**
   * 血压
   */
  @WireField(
      tag = 6,
      adapter = "com.squareup.wire.ProtoAdapter#STRING"
  )
  public final String bloodPressure;

  /**
   * 创建员工ID
   */
  @WireField(
      tag = 7,
      adapter = "com.squareup.wire.ProtoAdapter#UINT64"
  )
  public final Long createStaffId;

  /**
   * 创建员工名称
   */
  @WireField(
      tag = 8,
      adapter = "com.squareup.wire.ProtoAdapter#STRING"
  )
  public final String createStaffName;

  /**
   * 创建时间
   */
  @WireField(
      tag = 9,
      adapter = "com.squareup.wire.ProtoAdapter#UINT64"
  )
  public final Long createTime;

  public InsureOrderVisitVita(Long id, Long visitId, String animalHeat, String pulse, String breathe, String bloodPressure, Long createStaffId, String createStaffName, Long createTime) {
    this(id, visitId, animalHeat, pulse, breathe, bloodPressure, createStaffId, createStaffName, createTime, ByteString.EMPTY);
  }

  public InsureOrderVisitVita(Long id, Long visitId, String animalHeat, String pulse, String breathe, String bloodPressure, Long createStaffId, String createStaffName, Long createTime, ByteString unknownFields) {
    super(ADAPTER, unknownFields);
    this.id = id;
    this.visitId = visitId;
    this.animalHeat = animalHeat;
    this.pulse = pulse;
    this.breathe = breathe;
    this.bloodPressure = bloodPressure;
    this.createStaffId = createStaffId;
    this.createStaffName = createStaffName;
    this.createTime = createTime;
  }

  @Override
  public Builder newBuilder() {
    Builder builder = new Builder();
    builder.id = id;
    builder.visitId = visitId;
    builder.animalHeat = animalHeat;
    builder.pulse = pulse;
    builder.breathe = breathe;
    builder.bloodPressure = bloodPressure;
    builder.createStaffId = createStaffId;
    builder.createStaffName = createStaffName;
    builder.createTime = createTime;
    builder.addUnknownFields(unknownFields());
    return builder;
  }

  @Override
  public boolean equals(Object other) {
    if (other == this) return true;
    if (!(other instanceof InsureOrderVisitVita)) return false;
    InsureOrderVisitVita o = (InsureOrderVisitVita) other;
    return unknownFields().equals(o.unknownFields())
        && Internal.equals(id, o.id)
        && Internal.equals(visitId, o.visitId)
        && Internal.equals(animalHeat, o.animalHeat)
        && Internal.equals(pulse, o.pulse)
        && Internal.equals(breathe, o.breathe)
        && Internal.equals(bloodPressure, o.bloodPressure)
        && Internal.equals(createStaffId, o.createStaffId)
        && Internal.equals(createStaffName, o.createStaffName)
        && Internal.equals(createTime, o.createTime);
  }

  @Override
  public int hashCode() {
    int result = super.hashCode;
    if (result == 0) {
      result = unknownFields().hashCode();
      result = result * 37 + (id != null ? id.hashCode() : 0);
      result = result * 37 + (visitId != null ? visitId.hashCode() : 0);
      result = result * 37 + (animalHeat != null ? animalHeat.hashCode() : 0);
      result = result * 37 + (pulse != null ? pulse.hashCode() : 0);
      result = result * 37 + (breathe != null ? breathe.hashCode() : 0);
      result = result * 37 + (bloodPressure != null ? bloodPressure.hashCode() : 0);
      result = result * 37 + (createStaffId != null ? createStaffId.hashCode() : 0);
      result = result * 37 + (createStaffName != null ? createStaffName.hashCode() : 0);
      result = result * 37 + (createTime != null ? createTime.hashCode() : 0);
      super.hashCode = result;
    }
    return result;
  }

  @Override
  public String toString() {
    StringBuilder builder = new StringBuilder();
    if (id != null) builder.append(", id=").append(id);
    if (visitId != null) builder.append(", visitId=").append(visitId);
    if (animalHeat != null) builder.append(", animalHeat=").append(animalHeat);
    if (pulse != null) builder.append(", pulse=").append(pulse);
    if (breathe != null) builder.append(", breathe=").append(breathe);
    if (bloodPressure != null) builder.append(", bloodPressure=").append(bloodPressure);
    if (createStaffId != null) builder.append(", createStaffId=").append(createStaffId);
    if (createStaffName != null) builder.append(", createStaffName=").append(createStaffName);
    if (createTime != null) builder.append(", createTime=").append(createTime);
    return builder.replace(0, 2, "InsureOrderVisitVita{").append('}').toString();
  }

  public static final class Builder extends Message.Builder<InsureOrderVisitVita, Builder> {
    public Long id;

    public Long visitId;

    public String animalHeat;

    public String pulse;

    public String breathe;

    public String bloodPressure;

    public Long createStaffId;

    public String createStaffName;

    public Long createTime;

    public Builder() {
    }

    /**
     * id
     */
    public Builder id(Long id) {
      this.id = id;
      return this;
    }

    /**
     * 回访id
     */
    public Builder visitId(Long visitId) {
      this.visitId = visitId;
      return this;
    }

    /**
     * 体温
     */
    public Builder animalHeat(String animalHeat) {
      this.animalHeat = animalHeat;
      return this;
    }

    /**
     * 脉搏
     */
    public Builder pulse(String pulse) {
      this.pulse = pulse;
      return this;
    }

    /**
     * 呼吸
     */
    public Builder breathe(String breathe) {
      this.breathe = breathe;
      return this;
    }

    /**
     * 血压
     */
    public Builder bloodPressure(String bloodPressure) {
      this.bloodPressure = bloodPressure;
      return this;
    }

    /**
     * 创建员工ID
     */
    public Builder createStaffId(Long createStaffId) {
      this.createStaffId = createStaffId;
      return this;
    }

    /**
     * 创建员工名称
     */
    public Builder createStaffName(String createStaffName) {
      this.createStaffName = createStaffName;
      return this;
    }

    /**
     * 创建时间
     */
    public Builder createTime(Long createTime) {
      this.createTime = createTime;
      return this;
    }

    @Override
    public InsureOrderVisitVita build() {
      return new InsureOrderVisitVita(id, visitId, animalHeat, pulse, breathe, bloodPressure, createStaffId, createStaffName, createTime, super.buildUnknownFields());
    }
  }

  private static final class ProtoAdapter_InsureOrderVisitVita extends ProtoAdapter<InsureOrderVisitVita> {
    ProtoAdapter_InsureOrderVisitVita() {
      super(FieldEncoding.LENGTH_DELIMITED, InsureOrderVisitVita.class);
    }

    @Override
    public int encodedSize(InsureOrderVisitVita value) {
      return (value.id != null ? ProtoAdapter.UINT64.encodedSizeWithTag(1, value.id) : 0)
          + (value.visitId != null ? ProtoAdapter.UINT64.encodedSizeWithTag(2, value.visitId) : 0)
          + (value.animalHeat != null ? ProtoAdapter.STRING.encodedSizeWithTag(3, value.animalHeat) : 0)
          + (value.pulse != null ? ProtoAdapter.STRING.encodedSizeWithTag(4, value.pulse) : 0)
          + (value.breathe != null ? ProtoAdapter.STRING.encodedSizeWithTag(5, value.breathe) : 0)
          + (value.bloodPressure != null ? ProtoAdapter.STRING.encodedSizeWithTag(6, value.bloodPressure) : 0)
          + (value.createStaffId != null ? ProtoAdapter.UINT64.encodedSizeWithTag(7, value.createStaffId) : 0)
          + (value.createStaffName != null ? ProtoAdapter.STRING.encodedSizeWithTag(8, value.createStaffName) : 0)
          + (value.createTime != null ? ProtoAdapter.UINT64.encodedSizeWithTag(9, value.createTime) : 0)
          + value.unknownFields().size();
    }

    @Override
    public void encode(ProtoWriter writer, InsureOrderVisitVita value) throws IOException {
      if (value.id != null) ProtoAdapter.UINT64.encodeWithTag(writer, 1, value.id);
      if (value.visitId != null) ProtoAdapter.UINT64.encodeWithTag(writer, 2, value.visitId);
      if (value.animalHeat != null) ProtoAdapter.STRING.encodeWithTag(writer, 3, value.animalHeat);
      if (value.pulse != null) ProtoAdapter.STRING.encodeWithTag(writer, 4, value.pulse);
      if (value.breathe != null) ProtoAdapter.STRING.encodeWithTag(writer, 5, value.breathe);
      if (value.bloodPressure != null) ProtoAdapter.STRING.encodeWithTag(writer, 6, value.bloodPressure);
      if (value.createStaffId != null) ProtoAdapter.UINT64.encodeWithTag(writer, 7, value.createStaffId);
      if (value.createStaffName != null) ProtoAdapter.STRING.encodeWithTag(writer, 8, value.createStaffName);
      if (value.createTime != null) ProtoAdapter.UINT64.encodeWithTag(writer, 9, value.createTime);
      writer.writeBytes(value.unknownFields());
    }

    @Override
    public InsureOrderVisitVita decode(ProtoReader reader) throws IOException {
      Builder builder = new Builder();
      long token = reader.beginMessage();
      for (int tag; (tag = reader.nextTag()) != -1;) {
        switch (tag) {
          case 1: builder.id(ProtoAdapter.UINT64.decode(reader)); break;
          case 2: builder.visitId(ProtoAdapter.UINT64.decode(reader)); break;
          case 3: builder.animalHeat(ProtoAdapter.STRING.decode(reader)); break;
          case 4: builder.pulse(ProtoAdapter.STRING.decode(reader)); break;
          case 5: builder.breathe(ProtoAdapter.STRING.decode(reader)); break;
          case 6: builder.bloodPressure(ProtoAdapter.STRING.decode(reader)); break;
          case 7: builder.createStaffId(ProtoAdapter.UINT64.decode(reader)); break;
          case 8: builder.createStaffName(ProtoAdapter.STRING.decode(reader)); break;
          case 9: builder.createTime(ProtoAdapter.UINT64.decode(reader)); break;
          default: {
            FieldEncoding fieldEncoding = reader.peekFieldEncoding();
            Object value = fieldEncoding.rawProtoAdapter().decode(reader);
            builder.addUnknownField(tag, fieldEncoding, value);
          }
        }
      }
      reader.endMessage(token);
      return builder.build();
    }

    @Override
    public InsureOrderVisitVita redact(InsureOrderVisitVita value) {
      Builder builder = value.newBuilder();
      builder.clearUnknownFields();
      return builder.build();
    }
  }
}
