// Code generated by Wire protocol buffer compiler, do not edit.
// Source file: AppInterface.proto at 596:1
package com.yijianyi.protocol;

import com.squareup.wire.FieldEncoding;
import com.squareup.wire.Message;
import com.squareup.wire.ProtoAdapter;
import com.squareup.wire.ProtoReader;
import com.squareup.wire.ProtoWriter;
import com.squareup.wire.WireField;
import com.squareup.wire.internal.Internal;
import java.io.IOException;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.Object;
import java.lang.Override;
import java.lang.String;
import java.lang.StringBuilder;
import java.util.List;
import okio.ByteString;

public final class GetInsureRsp extends Message<GetInsureRsp, GetInsureRsp.Builder> {
  public static final ProtoAdapter<GetInsureRsp> ADAPTER = new ProtoAdapter_GetInsureRsp();

  private static final long serialVersionUID = 0L;

  public static final String DEFAULT_INSURENO = "";

  public static final String DEFAULT_CREATETIME = "";

  public static final String DEFAULT_KINSNAME = "";

  public static final String DEFAULT_IDCARD = "";

  public static final String DEFAULT_DEPOSITFEE = "";

  public static final Integer DEFAULT_FORCEFLAG = 0;

  public static final String DEFAULT_KFPHONE = "";

  public static final String DEFAULT_PURSE = "";

  public static final Boolean DEFAULT_USEPURSE = false;

  public static final Integer DEFAULT_SCORE = 0;

  public static final Integer DEFAULT_STATUS = 0;

  public static final Integer DEFAULT_ISAMENTIA = 0;

  public static final String DEFAULT_HSCASEPRESENTATION = "";

  public static final String DEFAULT_MEDICALHISTORY = "";

  public static final String DEFAULT_HSREMARK = "";

  public static final String DEFAULT_APTITUDETIME = "";

  public static final Integer DEFAULT_SCOREADL = 0;

  /**
   * 申请单编号
   */
  @WireField(
      tag = 1,
      adapter = "com.squareup.wire.ProtoAdapter#STRING"
  )
  public final String insureNO;

  /**
   * 申请时间
   */
  @WireField(
      tag = 2,
      adapter = "com.squareup.wire.ProtoAdapter#STRING"
  )
  public final String createTime;

  /**
   * 被服务人
   */
  @WireField(
      tag = 3,
      adapter = "com.squareup.wire.ProtoAdapter#STRING"
  )
  public final String kinsName;

  /**
   * 被服务人身份证号
   */
  @WireField(
      tag = 4,
      adapter = "com.squareup.wire.ProtoAdapter#STRING"
  )
  public final String idcard;

  /**
   * 明细详情
   */
  @WireField(
      tag = 5,
      adapter = "com.yijianyi.protocol.InsureNODetailVO#ADAPTER",
      label = WireField.Label.REPEATED
  )
  public final List<InsureNODetailVO> detailList;

  /**
   * 强制提交长护险的保证金
   */
  @WireField(
      tag = 6,
      adapter = "com.squareup.wire.ProtoAdapter#STRING"
  )
  public final String depositFee;

  /**
   * 是否进行支付操作 1-不可以 2-支付保证金 3-强制申请
   */
  @WireField(
      tag = 7,
      adapter = "com.squareup.wire.ProtoAdapter#UINT32"
  )
  public final Integer forceFlag;

  /**
   * 客服电话
   */
  @WireField(
      tag = 8,
      adapter = "com.squareup.wire.ProtoAdapter#STRING"
  )
  public final String kfPhone;

  /**
   * 钱包余额
   */
  @WireField(
      tag = 9,
      adapter = "com.squareup.wire.ProtoAdapter#STRING"
  )
  public final String purse;

  /**
   * 是否可用钱包支付
   */
  @WireField(
      tag = 10,
      adapter = "com.squareup.wire.ProtoAdapter#BOOL"
  )
  public final Boolean usePurse;

  /**
   * 日常生活活动能力评分   -1显示去自评  -2关闭自评入口，显示无自评得分
   */
  @WireField(
      tag = 11,
      adapter = "com.squareup.wire.ProtoAdapter#INT32"
  )
  public final Integer score;

  /**
   * 50-初审驳回 51-复审驳回
   */
  @WireField(
      tag = 12,
      adapter = "com.squareup.wire.ProtoAdapter#UINT32"
  )
  public final Integer status;

  /**
   * 是否中重度智能障碍 0-否 1-是
   */
  @WireField(
      tag = 13,
      adapter = "com.squareup.wire.ProtoAdapter#UINT32"
  )
  public final Integer isAmentia;

  /**
   * 护士初审病情描述
   */
  @WireField(
      tag = 14,
      adapter = "com.squareup.wire.ProtoAdapter#STRING"
  )
  public final String hsCasePresentation;

  /**
   * 护士初审评估情况说明
   */
  @WireField(
      tag = 15,
      adapter = "com.squareup.wire.ProtoAdapter#STRING"
  )
  public final String medicalHistory;

  /**
   * 护士评估备注
   */
  @WireField(
      tag = 16,
      adapter = "com.squareup.wire.ProtoAdapter#STRING"
  )
  public final String hsRemark;

  /**
   * 资质有效期
   */
  @WireField(
      tag = 17,
      adapter = "com.squareup.wire.ProtoAdapter#STRING"
  )
  public final String aptitudeTime;

  /**
   * 护士adl评分
   */
  @WireField(
      tag = 18,
      adapter = "com.squareup.wire.ProtoAdapter#INT32"
  )
  public final Integer scoreADL;

  public GetInsureRsp(String insureNO, String createTime, String kinsName, String idcard, List<InsureNODetailVO> detailList, String depositFee, Integer forceFlag, String kfPhone, String purse, Boolean usePurse, Integer score, Integer status, Integer isAmentia, String hsCasePresentation, String medicalHistory, String hsRemark, String aptitudeTime, Integer scoreADL) {
    this(insureNO, createTime, kinsName, idcard, detailList, depositFee, forceFlag, kfPhone, purse, usePurse, score, status, isAmentia, hsCasePresentation, medicalHistory, hsRemark, aptitudeTime, scoreADL, ByteString.EMPTY);
  }

  public GetInsureRsp(String insureNO, String createTime, String kinsName, String idcard, List<InsureNODetailVO> detailList, String depositFee, Integer forceFlag, String kfPhone, String purse, Boolean usePurse, Integer score, Integer status, Integer isAmentia, String hsCasePresentation, String medicalHistory, String hsRemark, String aptitudeTime, Integer scoreADL, ByteString unknownFields) {
    super(ADAPTER, unknownFields);
    this.insureNO = insureNO;
    this.createTime = createTime;
    this.kinsName = kinsName;
    this.idcard = idcard;
    this.detailList = Internal.immutableCopyOf("detailList", detailList);
    this.depositFee = depositFee;
    this.forceFlag = forceFlag;
    this.kfPhone = kfPhone;
    this.purse = purse;
    this.usePurse = usePurse;
    this.score = score;
    this.status = status;
    this.isAmentia = isAmentia;
    this.hsCasePresentation = hsCasePresentation;
    this.medicalHistory = medicalHistory;
    this.hsRemark = hsRemark;
    this.aptitudeTime = aptitudeTime;
    this.scoreADL = scoreADL;
  }

  @Override
  public Builder newBuilder() {
    Builder builder = new Builder();
    builder.insureNO = insureNO;
    builder.createTime = createTime;
    builder.kinsName = kinsName;
    builder.idcard = idcard;
    builder.detailList = Internal.copyOf("detailList", detailList);
    builder.depositFee = depositFee;
    builder.forceFlag = forceFlag;
    builder.kfPhone = kfPhone;
    builder.purse = purse;
    builder.usePurse = usePurse;
    builder.score = score;
    builder.status = status;
    builder.isAmentia = isAmentia;
    builder.hsCasePresentation = hsCasePresentation;
    builder.medicalHistory = medicalHistory;
    builder.hsRemark = hsRemark;
    builder.aptitudeTime = aptitudeTime;
    builder.scoreADL = scoreADL;
    builder.addUnknownFields(unknownFields());
    return builder;
  }

  @Override
  public boolean equals(Object other) {
    if (other == this) return true;
    if (!(other instanceof GetInsureRsp)) return false;
    GetInsureRsp o = (GetInsureRsp) other;
    return unknownFields().equals(o.unknownFields())
        && Internal.equals(insureNO, o.insureNO)
        && Internal.equals(createTime, o.createTime)
        && Internal.equals(kinsName, o.kinsName)
        && Internal.equals(idcard, o.idcard)
        && detailList.equals(o.detailList)
        && Internal.equals(depositFee, o.depositFee)
        && Internal.equals(forceFlag, o.forceFlag)
        && Internal.equals(kfPhone, o.kfPhone)
        && Internal.equals(purse, o.purse)
        && Internal.equals(usePurse, o.usePurse)
        && Internal.equals(score, o.score)
        && Internal.equals(status, o.status)
        && Internal.equals(isAmentia, o.isAmentia)
        && Internal.equals(hsCasePresentation, o.hsCasePresentation)
        && Internal.equals(medicalHistory, o.medicalHistory)
        && Internal.equals(hsRemark, o.hsRemark)
        && Internal.equals(aptitudeTime, o.aptitudeTime)
        && Internal.equals(scoreADL, o.scoreADL);
  }

  @Override
  public int hashCode() {
    int result = super.hashCode;
    if (result == 0) {
      result = unknownFields().hashCode();
      result = result * 37 + (insureNO != null ? insureNO.hashCode() : 0);
      result = result * 37 + (createTime != null ? createTime.hashCode() : 0);
      result = result * 37 + (kinsName != null ? kinsName.hashCode() : 0);
      result = result * 37 + (idcard != null ? idcard.hashCode() : 0);
      result = result * 37 + detailList.hashCode();
      result = result * 37 + (depositFee != null ? depositFee.hashCode() : 0);
      result = result * 37 + (forceFlag != null ? forceFlag.hashCode() : 0);
      result = result * 37 + (kfPhone != null ? kfPhone.hashCode() : 0);
      result = result * 37 + (purse != null ? purse.hashCode() : 0);
      result = result * 37 + (usePurse != null ? usePurse.hashCode() : 0);
      result = result * 37 + (score != null ? score.hashCode() : 0);
      result = result * 37 + (status != null ? status.hashCode() : 0);
      result = result * 37 + (isAmentia != null ? isAmentia.hashCode() : 0);
      result = result * 37 + (hsCasePresentation != null ? hsCasePresentation.hashCode() : 0);
      result = result * 37 + (medicalHistory != null ? medicalHistory.hashCode() : 0);
      result = result * 37 + (hsRemark != null ? hsRemark.hashCode() : 0);
      result = result * 37 + (aptitudeTime != null ? aptitudeTime.hashCode() : 0);
      result = result * 37 + (scoreADL != null ? scoreADL.hashCode() : 0);
      super.hashCode = result;
    }
    return result;
  }

  @Override
  public String toString() {
    StringBuilder builder = new StringBuilder();
    if (insureNO != null) builder.append(", insureNO=").append(insureNO);
    if (createTime != null) builder.append(", createTime=").append(createTime);
    if (kinsName != null) builder.append(", kinsName=").append(kinsName);
    if (idcard != null) builder.append(", idcard=").append(idcard);
    if (!detailList.isEmpty()) builder.append(", detailList=").append(detailList);
    if (depositFee != null) builder.append(", depositFee=").append(depositFee);
    if (forceFlag != null) builder.append(", forceFlag=").append(forceFlag);
    if (kfPhone != null) builder.append(", kfPhone=").append(kfPhone);
    if (purse != null) builder.append(", purse=").append(purse);
    if (usePurse != null) builder.append(", usePurse=").append(usePurse);
    if (score != null) builder.append(", score=").append(score);
    if (status != null) builder.append(", status=").append(status);
    if (isAmentia != null) builder.append(", isAmentia=").append(isAmentia);
    if (hsCasePresentation != null) builder.append(", hsCasePresentation=").append(hsCasePresentation);
    if (medicalHistory != null) builder.append(", medicalHistory=").append(medicalHistory);
    if (hsRemark != null) builder.append(", hsRemark=").append(hsRemark);
    if (aptitudeTime != null) builder.append(", aptitudeTime=").append(aptitudeTime);
    if (scoreADL != null) builder.append(", scoreADL=").append(scoreADL);
    return builder.replace(0, 2, "GetInsureRsp{").append('}').toString();
  }

  public static final class Builder extends Message.Builder<GetInsureRsp, Builder> {
    public String insureNO;

    public String createTime;

    public String kinsName;

    public String idcard;

    public List<InsureNODetailVO> detailList;

    public String depositFee;

    public Integer forceFlag;

    public String kfPhone;

    public String purse;

    public Boolean usePurse;

    public Integer score;

    public Integer status;

    public Integer isAmentia;

    public String hsCasePresentation;

    public String medicalHistory;

    public String hsRemark;

    public String aptitudeTime;

    public Integer scoreADL;

    public Builder() {
      detailList = Internal.newMutableList();
    }

    /**
     * 申请单编号
     */
    public Builder insureNO(String insureNO) {
      this.insureNO = insureNO;
      return this;
    }

    /**
     * 申请时间
     */
    public Builder createTime(String createTime) {
      this.createTime = createTime;
      return this;
    }

    /**
     * 被服务人
     */
    public Builder kinsName(String kinsName) {
      this.kinsName = kinsName;
      return this;
    }

    /**
     * 被服务人身份证号
     */
    public Builder idcard(String idcard) {
      this.idcard = idcard;
      return this;
    }

    /**
     * 明细详情
     */
    public Builder detailList(List<InsureNODetailVO> detailList) {
      Internal.checkElementsNotNull(detailList);
      this.detailList = detailList;
      return this;
    }

    /**
     * 强制提交长护险的保证金
     */
    public Builder depositFee(String depositFee) {
      this.depositFee = depositFee;
      return this;
    }

    /**
     * 是否进行支付操作 1-不可以 2-支付保证金 3-强制申请
     */
    public Builder forceFlag(Integer forceFlag) {
      this.forceFlag = forceFlag;
      return this;
    }

    /**
     * 客服电话
     */
    public Builder kfPhone(String kfPhone) {
      this.kfPhone = kfPhone;
      return this;
    }

    /**
     * 钱包余额
     */
    public Builder purse(String purse) {
      this.purse = purse;
      return this;
    }

    /**
     * 是否可用钱包支付
     */
    public Builder usePurse(Boolean usePurse) {
      this.usePurse = usePurse;
      return this;
    }

    /**
     * 日常生活活动能力评分   -1显示去自评  -2关闭自评入口，显示无自评得分
     */
    public Builder score(Integer score) {
      this.score = score;
      return this;
    }

    /**
     * 50-初审驳回 51-复审驳回
     */
    public Builder status(Integer status) {
      this.status = status;
      return this;
    }

    /**
     * 是否中重度智能障碍 0-否 1-是
     */
    public Builder isAmentia(Integer isAmentia) {
      this.isAmentia = isAmentia;
      return this;
    }

    /**
     * 护士初审病情描述
     */
    public Builder hsCasePresentation(String hsCasePresentation) {
      this.hsCasePresentation = hsCasePresentation;
      return this;
    }

    /**
     * 护士初审评估情况说明
     */
    public Builder medicalHistory(String medicalHistory) {
      this.medicalHistory = medicalHistory;
      return this;
    }

    /**
     * 护士评估备注
     */
    public Builder hsRemark(String hsRemark) {
      this.hsRemark = hsRemark;
      return this;
    }

    /**
     * 资质有效期
     */
    public Builder aptitudeTime(String aptitudeTime) {
      this.aptitudeTime = aptitudeTime;
      return this;
    }

    /**
     * 护士adl评分
     */
    public Builder scoreADL(Integer scoreADL) {
      this.scoreADL = scoreADL;
      return this;
    }

    @Override
    public GetInsureRsp build() {
      return new GetInsureRsp(insureNO, createTime, kinsName, idcard, detailList, depositFee, forceFlag, kfPhone, purse, usePurse, score, status, isAmentia, hsCasePresentation, medicalHistory, hsRemark, aptitudeTime, scoreADL, super.buildUnknownFields());
    }
  }

  private static final class ProtoAdapter_GetInsureRsp extends ProtoAdapter<GetInsureRsp> {
    ProtoAdapter_GetInsureRsp() {
      super(FieldEncoding.LENGTH_DELIMITED, GetInsureRsp.class);
    }

    @Override
    public int encodedSize(GetInsureRsp value) {
      return (value.insureNO != null ? ProtoAdapter.STRING.encodedSizeWithTag(1, value.insureNO) : 0)
          + (value.createTime != null ? ProtoAdapter.STRING.encodedSizeWithTag(2, value.createTime) : 0)
          + (value.kinsName != null ? ProtoAdapter.STRING.encodedSizeWithTag(3, value.kinsName) : 0)
          + (value.idcard != null ? ProtoAdapter.STRING.encodedSizeWithTag(4, value.idcard) : 0)
          + InsureNODetailVO.ADAPTER.asRepeated().encodedSizeWithTag(5, value.detailList)
          + (value.depositFee != null ? ProtoAdapter.STRING.encodedSizeWithTag(6, value.depositFee) : 0)
          + (value.forceFlag != null ? ProtoAdapter.UINT32.encodedSizeWithTag(7, value.forceFlag) : 0)
          + (value.kfPhone != null ? ProtoAdapter.STRING.encodedSizeWithTag(8, value.kfPhone) : 0)
          + (value.purse != null ? ProtoAdapter.STRING.encodedSizeWithTag(9, value.purse) : 0)
          + (value.usePurse != null ? ProtoAdapter.BOOL.encodedSizeWithTag(10, value.usePurse) : 0)
          + (value.score != null ? ProtoAdapter.INT32.encodedSizeWithTag(11, value.score) : 0)
          + (value.status != null ? ProtoAdapter.UINT32.encodedSizeWithTag(12, value.status) : 0)
          + (value.isAmentia != null ? ProtoAdapter.UINT32.encodedSizeWithTag(13, value.isAmentia) : 0)
          + (value.hsCasePresentation != null ? ProtoAdapter.STRING.encodedSizeWithTag(14, value.hsCasePresentation) : 0)
          + (value.medicalHistory != null ? ProtoAdapter.STRING.encodedSizeWithTag(15, value.medicalHistory) : 0)
          + (value.hsRemark != null ? ProtoAdapter.STRING.encodedSizeWithTag(16, value.hsRemark) : 0)
          + (value.aptitudeTime != null ? ProtoAdapter.STRING.encodedSizeWithTag(17, value.aptitudeTime) : 0)
          + (value.scoreADL != null ? ProtoAdapter.INT32.encodedSizeWithTag(18, value.scoreADL) : 0)
          + value.unknownFields().size();
    }

    @Override
    public void encode(ProtoWriter writer, GetInsureRsp value) throws IOException {
      if (value.insureNO != null) ProtoAdapter.STRING.encodeWithTag(writer, 1, value.insureNO);
      if (value.createTime != null) ProtoAdapter.STRING.encodeWithTag(writer, 2, value.createTime);
      if (value.kinsName != null) ProtoAdapter.STRING.encodeWithTag(writer, 3, value.kinsName);
      if (value.idcard != null) ProtoAdapter.STRING.encodeWithTag(writer, 4, value.idcard);
      InsureNODetailVO.ADAPTER.asRepeated().encodeWithTag(writer, 5, value.detailList);
      if (value.depositFee != null) ProtoAdapter.STRING.encodeWithTag(writer, 6, value.depositFee);
      if (value.forceFlag != null) ProtoAdapter.UINT32.encodeWithTag(writer, 7, value.forceFlag);
      if (value.kfPhone != null) ProtoAdapter.STRING.encodeWithTag(writer, 8, value.kfPhone);
      if (value.purse != null) ProtoAdapter.STRING.encodeWithTag(writer, 9, value.purse);
      if (value.usePurse != null) ProtoAdapter.BOOL.encodeWithTag(writer, 10, value.usePurse);
      if (value.score != null) ProtoAdapter.INT32.encodeWithTag(writer, 11, value.score);
      if (value.status != null) ProtoAdapter.UINT32.encodeWithTag(writer, 12, value.status);
      if (value.isAmentia != null) ProtoAdapter.UINT32.encodeWithTag(writer, 13, value.isAmentia);
      if (value.hsCasePresentation != null) ProtoAdapter.STRING.encodeWithTag(writer, 14, value.hsCasePresentation);
      if (value.medicalHistory != null) ProtoAdapter.STRING.encodeWithTag(writer, 15, value.medicalHistory);
      if (value.hsRemark != null) ProtoAdapter.STRING.encodeWithTag(writer, 16, value.hsRemark);
      if (value.aptitudeTime != null) ProtoAdapter.STRING.encodeWithTag(writer, 17, value.aptitudeTime);
      if (value.scoreADL != null) ProtoAdapter.INT32.encodeWithTag(writer, 18, value.scoreADL);
      writer.writeBytes(value.unknownFields());
    }

    @Override
    public GetInsureRsp decode(ProtoReader reader) throws IOException {
      Builder builder = new Builder();
      long token = reader.beginMessage();
      for (int tag; (tag = reader.nextTag()) != -1;) {
        switch (tag) {
          case 1: builder.insureNO(ProtoAdapter.STRING.decode(reader)); break;
          case 2: builder.createTime(ProtoAdapter.STRING.decode(reader)); break;
          case 3: builder.kinsName(ProtoAdapter.STRING.decode(reader)); break;
          case 4: builder.idcard(ProtoAdapter.STRING.decode(reader)); break;
          case 5: builder.detailList.add(InsureNODetailVO.ADAPTER.decode(reader)); break;
          case 6: builder.depositFee(ProtoAdapter.STRING.decode(reader)); break;
          case 7: builder.forceFlag(ProtoAdapter.UINT32.decode(reader)); break;
          case 8: builder.kfPhone(ProtoAdapter.STRING.decode(reader)); break;
          case 9: builder.purse(ProtoAdapter.STRING.decode(reader)); break;
          case 10: builder.usePurse(ProtoAdapter.BOOL.decode(reader)); break;
          case 11: builder.score(ProtoAdapter.INT32.decode(reader)); break;
          case 12: builder.status(ProtoAdapter.UINT32.decode(reader)); break;
          case 13: builder.isAmentia(ProtoAdapter.UINT32.decode(reader)); break;
          case 14: builder.hsCasePresentation(ProtoAdapter.STRING.decode(reader)); break;
          case 15: builder.medicalHistory(ProtoAdapter.STRING.decode(reader)); break;
          case 16: builder.hsRemark(ProtoAdapter.STRING.decode(reader)); break;
          case 17: builder.aptitudeTime(ProtoAdapter.STRING.decode(reader)); break;
          case 18: builder.scoreADL(ProtoAdapter.INT32.decode(reader)); break;
          default: {
            FieldEncoding fieldEncoding = reader.peekFieldEncoding();
            Object value = fieldEncoding.rawProtoAdapter().decode(reader);
            builder.addUnknownField(tag, fieldEncoding, value);
          }
        }
      }
      reader.endMessage(token);
      return builder.build();
    }

    @Override
    public GetInsureRsp redact(GetInsureRsp value) {
      Builder builder = value.newBuilder();
      Internal.redactElements(builder.detailList, InsureNODetailVO.ADAPTER);
      builder.clearUnknownFields();
      return builder.build();
    }
  }
}
