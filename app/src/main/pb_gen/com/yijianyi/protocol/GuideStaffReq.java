// Code generated by Wire protocol buffer compiler, do not edit.
// Source file: AppInterface.proto at 1057:1
package com.yijianyi.protocol;

import com.squareup.wire.FieldEncoding;
import com.squareup.wire.Message;
import com.squareup.wire.ProtoAdapter;
import com.squareup.wire.ProtoReader;
import com.squareup.wire.ProtoWriter;
import com.squareup.wire.WireField;
import com.squareup.wire.internal.Internal;
import java.io.IOException;
import java.lang.Integer;
import java.lang.Long;
import java.lang.Object;
import java.lang.Override;
import java.lang.String;
import java.lang.StringBuilder;
import okio.ByteString;

/**
 * 指派人员
 */
public final class GuideStaffReq extends Message<GuideStaffReq, GuideStaffReq.Builder> {
  public static final ProtoAdapter<GuideStaffReq> ADAPTER = new ProtoAdapter_GuideStaffReq();

  private static final long serialVersionUID = 0L;

  public static final String DEFAULT_INSURENO = "";

  public static final String DEFAULT_ORDERID = "";

  public static final Long DEFAULT_STAFFID = 0L;

  public static final Integer DEFAULT_GUIDETYPE = 0;

  public static final String DEFAULT_REMARK = "";

  public static final String DEFAULT_TIME = "";

  public static final Integer DEFAULT_TYPE = 0;

  /**
   * 长护险指派
   */
  @WireField(
      tag = 1,
      adapter = "com.squareup.wire.ProtoAdapter#STRING"
  )
  public final String insureNO;

  /**
   * 订单指派
   */
  @WireField(
      tag = 2,
      adapter = "com.squareup.wire.ProtoAdapter#STRING"
  )
  public final String orderId;

  /**
   * 被指派人id
   */
  @WireField(
      tag = 3,
      adapter = "com.squareup.wire.ProtoAdapter#UINT64"
  )
  public final Long staffId;

  /**
   * 指派类型  0-护士长 1-护士 2-健康经理 3-护工 4-督导
   */
  @WireField(
      tag = 4,
      adapter = "com.squareup.wire.ProtoAdapter#UINT32"
  )
  public final Integer guideType;

  /**
   * 指派备注
   */
  @WireField(
      tag = 5,
      adapter = "com.squareup.wire.ProtoAdapter#STRING"
  )
  public final String remark;

  /**
   * 服务时间
   */
  @WireField(
      tag = 6,
      adapter = "com.squareup.wire.ProtoAdapter#STRING"
  )
  public final String time;

  /**
   * 0-初审 1-复审
   */
  @WireField(
      tag = 7,
      adapter = "com.squareup.wire.ProtoAdapter#UINT32"
  )
  public final Integer type;

  public GuideStaffReq(String insureNO, String orderId, Long staffId, Integer guideType, String remark, String time, Integer type) {
    this(insureNO, orderId, staffId, guideType, remark, time, type, ByteString.EMPTY);
  }

  public GuideStaffReq(String insureNO, String orderId, Long staffId, Integer guideType, String remark, String time, Integer type, ByteString unknownFields) {
    super(ADAPTER, unknownFields);
    this.insureNO = insureNO;
    this.orderId = orderId;
    this.staffId = staffId;
    this.guideType = guideType;
    this.remark = remark;
    this.time = time;
    this.type = type;
  }

  @Override
  public Builder newBuilder() {
    Builder builder = new Builder();
    builder.insureNO = insureNO;
    builder.orderId = orderId;
    builder.staffId = staffId;
    builder.guideType = guideType;
    builder.remark = remark;
    builder.time = time;
    builder.type = type;
    builder.addUnknownFields(unknownFields());
    return builder;
  }

  @Override
  public boolean equals(Object other) {
    if (other == this) return true;
    if (!(other instanceof GuideStaffReq)) return false;
    GuideStaffReq o = (GuideStaffReq) other;
    return unknownFields().equals(o.unknownFields())
        && Internal.equals(insureNO, o.insureNO)
        && Internal.equals(orderId, o.orderId)
        && Internal.equals(staffId, o.staffId)
        && Internal.equals(guideType, o.guideType)
        && Internal.equals(remark, o.remark)
        && Internal.equals(time, o.time)
        && Internal.equals(type, o.type);
  }

  @Override
  public int hashCode() {
    int result = super.hashCode;
    if (result == 0) {
      result = unknownFields().hashCode();
      result = result * 37 + (insureNO != null ? insureNO.hashCode() : 0);
      result = result * 37 + (orderId != null ? orderId.hashCode() : 0);
      result = result * 37 + (staffId != null ? staffId.hashCode() : 0);
      result = result * 37 + (guideType != null ? guideType.hashCode() : 0);
      result = result * 37 + (remark != null ? remark.hashCode() : 0);
      result = result * 37 + (time != null ? time.hashCode() : 0);
      result = result * 37 + (type != null ? type.hashCode() : 0);
      super.hashCode = result;
    }
    return result;
  }

  @Override
  public String toString() {
    StringBuilder builder = new StringBuilder();
    if (insureNO != null) builder.append(", insureNO=").append(insureNO);
    if (orderId != null) builder.append(", orderId=").append(orderId);
    if (staffId != null) builder.append(", staffId=").append(staffId);
    if (guideType != null) builder.append(", guideType=").append(guideType);
    if (remark != null) builder.append(", remark=").append(remark);
    if (time != null) builder.append(", time=").append(time);
    if (type != null) builder.append(", type=").append(type);
    return builder.replace(0, 2, "GuideStaffReq{").append('}').toString();
  }

  public static final class Builder extends Message.Builder<GuideStaffReq, Builder> {
    public String insureNO;

    public String orderId;

    public Long staffId;

    public Integer guideType;

    public String remark;

    public String time;

    public Integer type;

    public Builder() {
    }

    /**
     * 长护险指派
     */
    public Builder insureNO(String insureNO) {
      this.insureNO = insureNO;
      return this;
    }

    /**
     * 订单指派
     */
    public Builder orderId(String orderId) {
      this.orderId = orderId;
      return this;
    }

    /**
     * 被指派人id
     */
    public Builder staffId(Long staffId) {
      this.staffId = staffId;
      return this;
    }

    /**
     * 指派类型  0-护士长 1-护士 2-健康经理 3-护工 4-督导
     */
    public Builder guideType(Integer guideType) {
      this.guideType = guideType;
      return this;
    }

    /**
     * 指派备注
     */
    public Builder remark(String remark) {
      this.remark = remark;
      return this;
    }

    /**
     * 服务时间
     */
    public Builder time(String time) {
      this.time = time;
      return this;
    }

    /**
     * 0-初审 1-复审
     */
    public Builder type(Integer type) {
      this.type = type;
      return this;
    }

    @Override
    public GuideStaffReq build() {
      return new GuideStaffReq(insureNO, orderId, staffId, guideType, remark, time, type, super.buildUnknownFields());
    }
  }

  private static final class ProtoAdapter_GuideStaffReq extends ProtoAdapter<GuideStaffReq> {
    ProtoAdapter_GuideStaffReq() {
      super(FieldEncoding.LENGTH_DELIMITED, GuideStaffReq.class);
    }

    @Override
    public int encodedSize(GuideStaffReq value) {
      return (value.insureNO != null ? ProtoAdapter.STRING.encodedSizeWithTag(1, value.insureNO) : 0)
          + (value.orderId != null ? ProtoAdapter.STRING.encodedSizeWithTag(2, value.orderId) : 0)
          + (value.staffId != null ? ProtoAdapter.UINT64.encodedSizeWithTag(3, value.staffId) : 0)
          + (value.guideType != null ? ProtoAdapter.UINT32.encodedSizeWithTag(4, value.guideType) : 0)
          + (value.remark != null ? ProtoAdapter.STRING.encodedSizeWithTag(5, value.remark) : 0)
          + (value.time != null ? ProtoAdapter.STRING.encodedSizeWithTag(6, value.time) : 0)
          + (value.type != null ? ProtoAdapter.UINT32.encodedSizeWithTag(7, value.type) : 0)
          + value.unknownFields().size();
    }

    @Override
    public void encode(ProtoWriter writer, GuideStaffReq value) throws IOException {
      if (value.insureNO != null) ProtoAdapter.STRING.encodeWithTag(writer, 1, value.insureNO);
      if (value.orderId != null) ProtoAdapter.STRING.encodeWithTag(writer, 2, value.orderId);
      if (value.staffId != null) ProtoAdapter.UINT64.encodeWithTag(writer, 3, value.staffId);
      if (value.guideType != null) ProtoAdapter.UINT32.encodeWithTag(writer, 4, value.guideType);
      if (value.remark != null) ProtoAdapter.STRING.encodeWithTag(writer, 5, value.remark);
      if (value.time != null) ProtoAdapter.STRING.encodeWithTag(writer, 6, value.time);
      if (value.type != null) ProtoAdapter.UINT32.encodeWithTag(writer, 7, value.type);
      writer.writeBytes(value.unknownFields());
    }

    @Override
    public GuideStaffReq decode(ProtoReader reader) throws IOException {
      Builder builder = new Builder();
      long token = reader.beginMessage();
      for (int tag; (tag = reader.nextTag()) != -1;) {
        switch (tag) {
          case 1: builder.insureNO(ProtoAdapter.STRING.decode(reader)); break;
          case 2: builder.orderId(ProtoAdapter.STRING.decode(reader)); break;
          case 3: builder.staffId(ProtoAdapter.UINT64.decode(reader)); break;
          case 4: builder.guideType(ProtoAdapter.UINT32.decode(reader)); break;
          case 5: builder.remark(ProtoAdapter.STRING.decode(reader)); break;
          case 6: builder.time(ProtoAdapter.STRING.decode(reader)); break;
          case 7: builder.type(ProtoAdapter.UINT32.decode(reader)); break;
          default: {
            FieldEncoding fieldEncoding = reader.peekFieldEncoding();
            Object value = fieldEncoding.rawProtoAdapter().decode(reader);
            builder.addUnknownField(tag, fieldEncoding, value);
          }
        }
      }
      reader.endMessage(token);
      return builder.build();
    }

    @Override
    public GuideStaffReq redact(GuideStaffReq value) {
      Builder builder = value.newBuilder();
      builder.clearUnknownFields();
      return builder.build();
    }
  }
}
