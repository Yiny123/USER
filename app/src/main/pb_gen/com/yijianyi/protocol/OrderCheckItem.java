// Code generated by Wire protocol buffer compiler, do not edit.
// Source file: OrderModel.proto at 595:1
package com.yijianyi.protocol;

import com.squareup.wire.FieldEncoding;
import com.squareup.wire.Message;
import com.squareup.wire.ProtoAdapter;
import com.squareup.wire.ProtoReader;
import com.squareup.wire.ProtoWriter;
import com.squareup.wire.WireField;
import com.squareup.wire.internal.Internal;
import java.io.IOException;
import java.lang.Integer;
import java.lang.Long;
import java.lang.Object;
import java.lang.Override;
import java.lang.String;
import java.lang.StringBuilder;
import okio.ByteString;

/**
 * 订单结算后校正明细表
 */
public final class OrderCheckItem extends Message<OrderCheckItem, OrderCheckItem.Builder> {
  public static final ProtoAdapter<OrderCheckItem> ADAPTER = new ProtoAdapter_OrderCheckItem();

  private static final long serialVersionUID = 0L;

  public static final Long DEFAULT_ID = 0L;

  public static final String DEFAULT_ORDERID = "";

  public static final Long DEFAULT_CHECKID = 0L;

  public static final Long DEFAULT_PRICEID = 0L;

  public static final String DEFAULT_SERVICEITEM = "";

  public static final Long DEFAULT_PRICE = 0L;

  public static final Integer DEFAULT_SERVICEUNIT = 0;

  public static final Integer DEFAULT_NUM = 0;

  public static final Long DEFAULT_FEE = 0L;

  @WireField(
      tag = 1,
      adapter = "com.squareup.wire.ProtoAdapter#UINT64"
  )
  public final Long id;

  /**
   * 订单id
   */
  @WireField(
      tag = 2,
      adapter = "com.squareup.wire.ProtoAdapter#STRING"
  )
  public final String orderId;

  /**
   * 校正id
   */
  @WireField(
      tag = 3,
      adapter = "com.squareup.wire.ProtoAdapter#UINT64"
  )
  public final Long checkId;

  /**
   * 服务id
   */
  @WireField(
      tag = 4,
      adapter = "com.squareup.wire.ProtoAdapter#UINT64"
  )
  public final Long priceId;

  /**
   * 服务项名称
   */
  @WireField(
      tag = 5,
      adapter = "com.squareup.wire.ProtoAdapter#STRING"
  )
  public final String serviceItem;

  /**
   * 定价 单位分
   */
  @WireField(
      tag = 6,
      adapter = "com.squareup.wire.ProtoAdapter#UINT64"
  )
  public final Long price;

  /**
   * 服务单位 1-次 2-小时 3-天  4-月
   */
  @WireField(
      tag = 7,
      adapter = "com.squareup.wire.ProtoAdapter#UINT32"
  )
  public final Integer serviceUnit;

  /**
   * 数量
   */
  @WireField(
      tag = 8,
      adapter = "com.squareup.wire.ProtoAdapter#INT32"
  )
  public final Integer num;

  /**
   * 单项总费用
   */
  @WireField(
      tag = 9,
      adapter = "com.squareup.wire.ProtoAdapter#INT64"
  )
  public final Long fee;

  public OrderCheckItem(Long id, String orderId, Long checkId, Long priceId, String serviceItem, Long price, Integer serviceUnit, Integer num, Long fee) {
    this(id, orderId, checkId, priceId, serviceItem, price, serviceUnit, num, fee, ByteString.EMPTY);
  }

  public OrderCheckItem(Long id, String orderId, Long checkId, Long priceId, String serviceItem, Long price, Integer serviceUnit, Integer num, Long fee, ByteString unknownFields) {
    super(ADAPTER, unknownFields);
    this.id = id;
    this.orderId = orderId;
    this.checkId = checkId;
    this.priceId = priceId;
    this.serviceItem = serviceItem;
    this.price = price;
    this.serviceUnit = serviceUnit;
    this.num = num;
    this.fee = fee;
  }

  @Override
  public Builder newBuilder() {
    Builder builder = new Builder();
    builder.id = id;
    builder.orderId = orderId;
    builder.checkId = checkId;
    builder.priceId = priceId;
    builder.serviceItem = serviceItem;
    builder.price = price;
    builder.serviceUnit = serviceUnit;
    builder.num = num;
    builder.fee = fee;
    builder.addUnknownFields(unknownFields());
    return builder;
  }

  @Override
  public boolean equals(Object other) {
    if (other == this) return true;
    if (!(other instanceof OrderCheckItem)) return false;
    OrderCheckItem o = (OrderCheckItem) other;
    return unknownFields().equals(o.unknownFields())
        && Internal.equals(id, o.id)
        && Internal.equals(orderId, o.orderId)
        && Internal.equals(checkId, o.checkId)
        && Internal.equals(priceId, o.priceId)
        && Internal.equals(serviceItem, o.serviceItem)
        && Internal.equals(price, o.price)
        && Internal.equals(serviceUnit, o.serviceUnit)
        && Internal.equals(num, o.num)
        && Internal.equals(fee, o.fee);
  }

  @Override
  public int hashCode() {
    int result = super.hashCode;
    if (result == 0) {
      result = unknownFields().hashCode();
      result = result * 37 + (id != null ? id.hashCode() : 0);
      result = result * 37 + (orderId != null ? orderId.hashCode() : 0);
      result = result * 37 + (checkId != null ? checkId.hashCode() : 0);
      result = result * 37 + (priceId != null ? priceId.hashCode() : 0);
      result = result * 37 + (serviceItem != null ? serviceItem.hashCode() : 0);
      result = result * 37 + (price != null ? price.hashCode() : 0);
      result = result * 37 + (serviceUnit != null ? serviceUnit.hashCode() : 0);
      result = result * 37 + (num != null ? num.hashCode() : 0);
      result = result * 37 + (fee != null ? fee.hashCode() : 0);
      super.hashCode = result;
    }
    return result;
  }

  @Override
  public String toString() {
    StringBuilder builder = new StringBuilder();
    if (id != null) builder.append(", id=").append(id);
    if (orderId != null) builder.append(", orderId=").append(orderId);
    if (checkId != null) builder.append(", checkId=").append(checkId);
    if (priceId != null) builder.append(", priceId=").append(priceId);
    if (serviceItem != null) builder.append(", serviceItem=").append(serviceItem);
    if (price != null) builder.append(", price=").append(price);
    if (serviceUnit != null) builder.append(", serviceUnit=").append(serviceUnit);
    if (num != null) builder.append(", num=").append(num);
    if (fee != null) builder.append(", fee=").append(fee);
    return builder.replace(0, 2, "OrderCheckItem{").append('}').toString();
  }

  public static final class Builder extends Message.Builder<OrderCheckItem, Builder> {
    public Long id;

    public String orderId;

    public Long checkId;

    public Long priceId;

    public String serviceItem;

    public Long price;

    public Integer serviceUnit;

    public Integer num;

    public Long fee;

    public Builder() {
    }

    public Builder id(Long id) {
      this.id = id;
      return this;
    }

    /**
     * 订单id
     */
    public Builder orderId(String orderId) {
      this.orderId = orderId;
      return this;
    }

    /**
     * 校正id
     */
    public Builder checkId(Long checkId) {
      this.checkId = checkId;
      return this;
    }

    /**
     * 服务id
     */
    public Builder priceId(Long priceId) {
      this.priceId = priceId;
      return this;
    }

    /**
     * 服务项名称
     */
    public Builder serviceItem(String serviceItem) {
      this.serviceItem = serviceItem;
      return this;
    }

    /**
     * 定价 单位分
     */
    public Builder price(Long price) {
      this.price = price;
      return this;
    }

    /**
     * 服务单位 1-次 2-小时 3-天  4-月
     */
    public Builder serviceUnit(Integer serviceUnit) {
      this.serviceUnit = serviceUnit;
      return this;
    }

    /**
     * 数量
     */
    public Builder num(Integer num) {
      this.num = num;
      return this;
    }

    /**
     * 单项总费用
     */
    public Builder fee(Long fee) {
      this.fee = fee;
      return this;
    }

    @Override
    public OrderCheckItem build() {
      return new OrderCheckItem(id, orderId, checkId, priceId, serviceItem, price, serviceUnit, num, fee, super.buildUnknownFields());
    }
  }

  private static final class ProtoAdapter_OrderCheckItem extends ProtoAdapter<OrderCheckItem> {
    ProtoAdapter_OrderCheckItem() {
      super(FieldEncoding.LENGTH_DELIMITED, OrderCheckItem.class);
    }

    @Override
    public int encodedSize(OrderCheckItem value) {
      return (value.id != null ? ProtoAdapter.UINT64.encodedSizeWithTag(1, value.id) : 0)
          + (value.orderId != null ? ProtoAdapter.STRING.encodedSizeWithTag(2, value.orderId) : 0)
          + (value.checkId != null ? ProtoAdapter.UINT64.encodedSizeWithTag(3, value.checkId) : 0)
          + (value.priceId != null ? ProtoAdapter.UINT64.encodedSizeWithTag(4, value.priceId) : 0)
          + (value.serviceItem != null ? ProtoAdapter.STRING.encodedSizeWithTag(5, value.serviceItem) : 0)
          + (value.price != null ? ProtoAdapter.UINT64.encodedSizeWithTag(6, value.price) : 0)
          + (value.serviceUnit != null ? ProtoAdapter.UINT32.encodedSizeWithTag(7, value.serviceUnit) : 0)
          + (value.num != null ? ProtoAdapter.INT32.encodedSizeWithTag(8, value.num) : 0)
          + (value.fee != null ? ProtoAdapter.INT64.encodedSizeWithTag(9, value.fee) : 0)
          + value.unknownFields().size();
    }

    @Override
    public void encode(ProtoWriter writer, OrderCheckItem value) throws IOException {
      if (value.id != null) ProtoAdapter.UINT64.encodeWithTag(writer, 1, value.id);
      if (value.orderId != null) ProtoAdapter.STRING.encodeWithTag(writer, 2, value.orderId);
      if (value.checkId != null) ProtoAdapter.UINT64.encodeWithTag(writer, 3, value.checkId);
      if (value.priceId != null) ProtoAdapter.UINT64.encodeWithTag(writer, 4, value.priceId);
      if (value.serviceItem != null) ProtoAdapter.STRING.encodeWithTag(writer, 5, value.serviceItem);
      if (value.price != null) ProtoAdapter.UINT64.encodeWithTag(writer, 6, value.price);
      if (value.serviceUnit != null) ProtoAdapter.UINT32.encodeWithTag(writer, 7, value.serviceUnit);
      if (value.num != null) ProtoAdapter.INT32.encodeWithTag(writer, 8, value.num);
      if (value.fee != null) ProtoAdapter.INT64.encodeWithTag(writer, 9, value.fee);
      writer.writeBytes(value.unknownFields());
    }

    @Override
    public OrderCheckItem decode(ProtoReader reader) throws IOException {
      Builder builder = new Builder();
      long token = reader.beginMessage();
      for (int tag; (tag = reader.nextTag()) != -1;) {
        switch (tag) {
          case 1: builder.id(ProtoAdapter.UINT64.decode(reader)); break;
          case 2: builder.orderId(ProtoAdapter.STRING.decode(reader)); break;
          case 3: builder.checkId(ProtoAdapter.UINT64.decode(reader)); break;
          case 4: builder.priceId(ProtoAdapter.UINT64.decode(reader)); break;
          case 5: builder.serviceItem(ProtoAdapter.STRING.decode(reader)); break;
          case 6: builder.price(ProtoAdapter.UINT64.decode(reader)); break;
          case 7: builder.serviceUnit(ProtoAdapter.UINT32.decode(reader)); break;
          case 8: builder.num(ProtoAdapter.INT32.decode(reader)); break;
          case 9: builder.fee(ProtoAdapter.INT64.decode(reader)); break;
          default: {
            FieldEncoding fieldEncoding = reader.peekFieldEncoding();
            Object value = fieldEncoding.rawProtoAdapter().decode(reader);
            builder.addUnknownField(tag, fieldEncoding, value);
          }
        }
      }
      reader.endMessage(token);
      return builder.build();
    }

    @Override
    public OrderCheckItem redact(OrderCheckItem value) {
      Builder builder = value.newBuilder();
      builder.clearUnknownFields();
      return builder.build();
    }
  }
}
