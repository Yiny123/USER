// Code generated by Wire protocol buffer compiler, do not edit.
// Source file: AppInterface.proto at 410:1
package com.yijianyi.protocol;

import com.squareup.wire.FieldEncoding;
import com.squareup.wire.Message;
import com.squareup.wire.ProtoAdapter;
import com.squareup.wire.ProtoReader;
import com.squareup.wire.ProtoWriter;
import com.squareup.wire.WireField;
import com.squareup.wire.internal.Internal;
import java.io.IOException;
import java.lang.Integer;
import java.lang.Object;
import java.lang.Override;
import java.lang.String;
import java.lang.StringBuilder;
import okio.ByteString;

/**
 * 创建订单Rsp
 */
public final class CreateOrderRsp extends Message<CreateOrderRsp, CreateOrderRsp.Builder> {
  public static final ProtoAdapter<CreateOrderRsp> ADAPTER = new ProtoAdapter_CreateOrderRsp();

  private static final long serialVersionUID = 0L;

  public static final String DEFAULT_ORDERID = "";

  public static final Integer DEFAULT_DOPAY = 0;

  /**
   * 订单ID
   */
  @WireField(
      tag = 1,
      adapter = "com.squareup.wire.ProtoAdapter#STRING"
  )
  public final String orderId;

  /**
   * 0 - 不需要支付预交金 1 - 需要支付预交金
   */
  @WireField(
      tag = 2,
      adapter = "com.squareup.wire.ProtoAdapter#UINT32"
  )
  public final Integer doPay;

  public CreateOrderRsp(String orderId, Integer doPay) {
    this(orderId, doPay, ByteString.EMPTY);
  }

  public CreateOrderRsp(String orderId, Integer doPay, ByteString unknownFields) {
    super(ADAPTER, unknownFields);
    this.orderId = orderId;
    this.doPay = doPay;
  }

  @Override
  public Builder newBuilder() {
    Builder builder = new Builder();
    builder.orderId = orderId;
    builder.doPay = doPay;
    builder.addUnknownFields(unknownFields());
    return builder;
  }

  @Override
  public boolean equals(Object other) {
    if (other == this) return true;
    if (!(other instanceof CreateOrderRsp)) return false;
    CreateOrderRsp o = (CreateOrderRsp) other;
    return unknownFields().equals(o.unknownFields())
        && Internal.equals(orderId, o.orderId)
        && Internal.equals(doPay, o.doPay);
  }

  @Override
  public int hashCode() {
    int result = super.hashCode;
    if (result == 0) {
      result = unknownFields().hashCode();
      result = result * 37 + (orderId != null ? orderId.hashCode() : 0);
      result = result * 37 + (doPay != null ? doPay.hashCode() : 0);
      super.hashCode = result;
    }
    return result;
  }

  @Override
  public String toString() {
    StringBuilder builder = new StringBuilder();
    if (orderId != null) builder.append(", orderId=").append(orderId);
    if (doPay != null) builder.append(", doPay=").append(doPay);
    return builder.replace(0, 2, "CreateOrderRsp{").append('}').toString();
  }

  public static final class Builder extends Message.Builder<CreateOrderRsp, Builder> {
    public String orderId;

    public Integer doPay;

    public Builder() {
    }

    /**
     * 订单ID
     */
    public Builder orderId(String orderId) {
      this.orderId = orderId;
      return this;
    }

    /**
     * 0 - 不需要支付预交金 1 - 需要支付预交金
     */
    public Builder doPay(Integer doPay) {
      this.doPay = doPay;
      return this;
    }

    @Override
    public CreateOrderRsp build() {
      return new CreateOrderRsp(orderId, doPay, super.buildUnknownFields());
    }
  }

  private static final class ProtoAdapter_CreateOrderRsp extends ProtoAdapter<CreateOrderRsp> {
    ProtoAdapter_CreateOrderRsp() {
      super(FieldEncoding.LENGTH_DELIMITED, CreateOrderRsp.class);
    }

    @Override
    public int encodedSize(CreateOrderRsp value) {
      return (value.orderId != null ? ProtoAdapter.STRING.encodedSizeWithTag(1, value.orderId) : 0)
          + (value.doPay != null ? ProtoAdapter.UINT32.encodedSizeWithTag(2, value.doPay) : 0)
          + value.unknownFields().size();
    }

    @Override
    public void encode(ProtoWriter writer, CreateOrderRsp value) throws IOException {
      if (value.orderId != null) ProtoAdapter.STRING.encodeWithTag(writer, 1, value.orderId);
      if (value.doPay != null) ProtoAdapter.UINT32.encodeWithTag(writer, 2, value.doPay);
      writer.writeBytes(value.unknownFields());
    }

    @Override
    public CreateOrderRsp decode(ProtoReader reader) throws IOException {
      Builder builder = new Builder();
      long token = reader.beginMessage();
      for (int tag; (tag = reader.nextTag()) != -1;) {
        switch (tag) {
          case 1: builder.orderId(ProtoAdapter.STRING.decode(reader)); break;
          case 2: builder.doPay(ProtoAdapter.UINT32.decode(reader)); break;
          default: {
            FieldEncoding fieldEncoding = reader.peekFieldEncoding();
            Object value = fieldEncoding.rawProtoAdapter().decode(reader);
            builder.addUnknownField(tag, fieldEncoding, value);
          }
        }
      }
      reader.endMessage(token);
      return builder.build();
    }

    @Override
    public CreateOrderRsp redact(CreateOrderRsp value) {
      Builder builder = value.newBuilder();
      builder.clearUnknownFields();
      return builder.build();
    }
  }
}
