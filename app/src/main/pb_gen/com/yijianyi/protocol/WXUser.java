// Code generated by Wire protocol buffer compiler, do not edit.
// Source file: Model.proto at 84:1
package com.yijianyi.protocol;

import com.squareup.wire.FieldEncoding;
import com.squareup.wire.Message;
import com.squareup.wire.ProtoAdapter;
import com.squareup.wire.ProtoReader;
import com.squareup.wire.ProtoWriter;
import com.squareup.wire.WireField;
import com.squareup.wire.internal.Internal;
import java.io.IOException;
import java.lang.Integer;
import java.lang.Long;
import java.lang.Object;
import java.lang.Override;
import java.lang.String;
import java.lang.StringBuilder;
import okio.ByteString;

public final class WXUser extends Message<WXUser, WXUser.Builder> {
  public static final ProtoAdapter<WXUser> ADAPTER = new ProtoAdapter_WXUser();

  private static final long serialVersionUID = 0L;

  public static final Long DEFAULT_USERID = 0L;

  public static final Integer DEFAULT_THIRDTYPE = 0;

  public static final String DEFAULT_WXAPPID = "";

  public static final String DEFAULT_OPENID = "";

  public static final String DEFAULT_UNIONID = "";

  public static final String DEFAULT_ACCESSKEY = "";

  public static final String DEFAULT_REFRESHKEY = "";

  public static final Long DEFAULT_EXPIRESTIME = 0L;

  public static final String DEFAULT_NICKNAME = "";

  public static final String DEFAULT_HEADIMG = "";

  public static final Integer DEFAULT_SEX = 0;

  public static final Long DEFAULT_CREATETIME = 0L;

  public static final String DEFAULT_CHANNELID = "";

  @WireField(
      tag = 1,
      adapter = "com.squareup.wire.ProtoAdapter#UINT64"
  )
  public final Long userId;

  /**
   * 1：微信；2：QQ；3：新浪微博；4:微信公众号
   */
  @WireField(
      tag = 2,
      adapter = "com.squareup.wire.ProtoAdapter#SINT32"
  )
  public final Integer thirdType;

  /**
   * 微信公众号开放平台appid
   */
  @WireField(
      tag = 3,
      adapter = "com.squareup.wire.ProtoAdapter#STRING"
  )
  public final String wxAppId;

  @WireField(
      tag = 4,
      adapter = "com.squareup.wire.ProtoAdapter#STRING"
  )
  public final String openId;

  @WireField(
      tag = 5,
      adapter = "com.squareup.wire.ProtoAdapter#STRING"
  )
  public final String unionid;

  @WireField(
      tag = 6,
      adapter = "com.squareup.wire.ProtoAdapter#STRING"
  )
  public final String accessKey;

  @WireField(
      tag = 7,
      adapter = "com.squareup.wire.ProtoAdapter#STRING"
  )
  public final String refreshKey;

  @WireField(
      tag = 8,
      adapter = "com.squareup.wire.ProtoAdapter#UINT64"
  )
  public final Long expiresTime;

  @WireField(
      tag = 9,
      adapter = "com.squareup.wire.ProtoAdapter#STRING"
  )
  public final String nickName;

  @WireField(
      tag = 10,
      adapter = "com.squareup.wire.ProtoAdapter#STRING"
  )
  public final String headImg;

  /**
   * 1-男 2-女
   */
  @WireField(
      tag = 11,
      adapter = "com.squareup.wire.ProtoAdapter#UINT32"
  )
  public final Integer sex;

  @WireField(
      tag = 12,
      adapter = "com.squareup.wire.ProtoAdapter#UINT64"
  )
  public final Long createTime;

  @WireField(
      tag = 13,
      adapter = "com.squareup.wire.ProtoAdapter#STRING"
  )
  public final String channelId;

  public WXUser(Long userId, Integer thirdType, String wxAppId, String openId, String unionid, String accessKey, String refreshKey, Long expiresTime, String nickName, String headImg, Integer sex, Long createTime, String channelId) {
    this(userId, thirdType, wxAppId, openId, unionid, accessKey, refreshKey, expiresTime, nickName, headImg, sex, createTime, channelId, ByteString.EMPTY);
  }

  public WXUser(Long userId, Integer thirdType, String wxAppId, String openId, String unionid, String accessKey, String refreshKey, Long expiresTime, String nickName, String headImg, Integer sex, Long createTime, String channelId, ByteString unknownFields) {
    super(ADAPTER, unknownFields);
    this.userId = userId;
    this.thirdType = thirdType;
    this.wxAppId = wxAppId;
    this.openId = openId;
    this.unionid = unionid;
    this.accessKey = accessKey;
    this.refreshKey = refreshKey;
    this.expiresTime = expiresTime;
    this.nickName = nickName;
    this.headImg = headImg;
    this.sex = sex;
    this.createTime = createTime;
    this.channelId = channelId;
  }

  @Override
  public Builder newBuilder() {
    Builder builder = new Builder();
    builder.userId = userId;
    builder.thirdType = thirdType;
    builder.wxAppId = wxAppId;
    builder.openId = openId;
    builder.unionid = unionid;
    builder.accessKey = accessKey;
    builder.refreshKey = refreshKey;
    builder.expiresTime = expiresTime;
    builder.nickName = nickName;
    builder.headImg = headImg;
    builder.sex = sex;
    builder.createTime = createTime;
    builder.channelId = channelId;
    builder.addUnknownFields(unknownFields());
    return builder;
  }

  @Override
  public boolean equals(Object other) {
    if (other == this) return true;
    if (!(other instanceof WXUser)) return false;
    WXUser o = (WXUser) other;
    return unknownFields().equals(o.unknownFields())
        && Internal.equals(userId, o.userId)
        && Internal.equals(thirdType, o.thirdType)
        && Internal.equals(wxAppId, o.wxAppId)
        && Internal.equals(openId, o.openId)
        && Internal.equals(unionid, o.unionid)
        && Internal.equals(accessKey, o.accessKey)
        && Internal.equals(refreshKey, o.refreshKey)
        && Internal.equals(expiresTime, o.expiresTime)
        && Internal.equals(nickName, o.nickName)
        && Internal.equals(headImg, o.headImg)
        && Internal.equals(sex, o.sex)
        && Internal.equals(createTime, o.createTime)
        && Internal.equals(channelId, o.channelId);
  }

  @Override
  public int hashCode() {
    int result = super.hashCode;
    if (result == 0) {
      result = unknownFields().hashCode();
      result = result * 37 + (userId != null ? userId.hashCode() : 0);
      result = result * 37 + (thirdType != null ? thirdType.hashCode() : 0);
      result = result * 37 + (wxAppId != null ? wxAppId.hashCode() : 0);
      result = result * 37 + (openId != null ? openId.hashCode() : 0);
      result = result * 37 + (unionid != null ? unionid.hashCode() : 0);
      result = result * 37 + (accessKey != null ? accessKey.hashCode() : 0);
      result = result * 37 + (refreshKey != null ? refreshKey.hashCode() : 0);
      result = result * 37 + (expiresTime != null ? expiresTime.hashCode() : 0);
      result = result * 37 + (nickName != null ? nickName.hashCode() : 0);
      result = result * 37 + (headImg != null ? headImg.hashCode() : 0);
      result = result * 37 + (sex != null ? sex.hashCode() : 0);
      result = result * 37 + (createTime != null ? createTime.hashCode() : 0);
      result = result * 37 + (channelId != null ? channelId.hashCode() : 0);
      super.hashCode = result;
    }
    return result;
  }

  @Override
  public String toString() {
    StringBuilder builder = new StringBuilder();
    if (userId != null) builder.append(", userId=").append(userId);
    if (thirdType != null) builder.append(", thirdType=").append(thirdType);
    if (wxAppId != null) builder.append(", wxAppId=").append(wxAppId);
    if (openId != null) builder.append(", openId=").append(openId);
    if (unionid != null) builder.append(", unionid=").append(unionid);
    if (accessKey != null) builder.append(", accessKey=").append(accessKey);
    if (refreshKey != null) builder.append(", refreshKey=").append(refreshKey);
    if (expiresTime != null) builder.append(", expiresTime=").append(expiresTime);
    if (nickName != null) builder.append(", nickName=").append(nickName);
    if (headImg != null) builder.append(", headImg=").append(headImg);
    if (sex != null) builder.append(", sex=").append(sex);
    if (createTime != null) builder.append(", createTime=").append(createTime);
    if (channelId != null) builder.append(", channelId=").append(channelId);
    return builder.replace(0, 2, "WXUser{").append('}').toString();
  }

  public static final class Builder extends Message.Builder<WXUser, Builder> {
    public Long userId;

    public Integer thirdType;

    public String wxAppId;

    public String openId;

    public String unionid;

    public String accessKey;

    public String refreshKey;

    public Long expiresTime;

    public String nickName;

    public String headImg;

    public Integer sex;

    public Long createTime;

    public String channelId;

    public Builder() {
    }

    public Builder userId(Long userId) {
      this.userId = userId;
      return this;
    }

    /**
     * 1：微信；2：QQ；3：新浪微博；4:微信公众号
     */
    public Builder thirdType(Integer thirdType) {
      this.thirdType = thirdType;
      return this;
    }

    /**
     * 微信公众号开放平台appid
     */
    public Builder wxAppId(String wxAppId) {
      this.wxAppId = wxAppId;
      return this;
    }

    public Builder openId(String openId) {
      this.openId = openId;
      return this;
    }

    public Builder unionid(String unionid) {
      this.unionid = unionid;
      return this;
    }

    public Builder accessKey(String accessKey) {
      this.accessKey = accessKey;
      return this;
    }

    public Builder refreshKey(String refreshKey) {
      this.refreshKey = refreshKey;
      return this;
    }

    public Builder expiresTime(Long expiresTime) {
      this.expiresTime = expiresTime;
      return this;
    }

    public Builder nickName(String nickName) {
      this.nickName = nickName;
      return this;
    }

    public Builder headImg(String headImg) {
      this.headImg = headImg;
      return this;
    }

    /**
     * 1-男 2-女
     */
    public Builder sex(Integer sex) {
      this.sex = sex;
      return this;
    }

    public Builder createTime(Long createTime) {
      this.createTime = createTime;
      return this;
    }

    public Builder channelId(String channelId) {
      this.channelId = channelId;
      return this;
    }

    @Override
    public WXUser build() {
      return new WXUser(userId, thirdType, wxAppId, openId, unionid, accessKey, refreshKey, expiresTime, nickName, headImg, sex, createTime, channelId, super.buildUnknownFields());
    }
  }

  private static final class ProtoAdapter_WXUser extends ProtoAdapter<WXUser> {
    ProtoAdapter_WXUser() {
      super(FieldEncoding.LENGTH_DELIMITED, WXUser.class);
    }

    @Override
    public int encodedSize(WXUser value) {
      return (value.userId != null ? ProtoAdapter.UINT64.encodedSizeWithTag(1, value.userId) : 0)
          + (value.thirdType != null ? ProtoAdapter.SINT32.encodedSizeWithTag(2, value.thirdType) : 0)
          + (value.wxAppId != null ? ProtoAdapter.STRING.encodedSizeWithTag(3, value.wxAppId) : 0)
          + (value.openId != null ? ProtoAdapter.STRING.encodedSizeWithTag(4, value.openId) : 0)
          + (value.unionid != null ? ProtoAdapter.STRING.encodedSizeWithTag(5, value.unionid) : 0)
          + (value.accessKey != null ? ProtoAdapter.STRING.encodedSizeWithTag(6, value.accessKey) : 0)
          + (value.refreshKey != null ? ProtoAdapter.STRING.encodedSizeWithTag(7, value.refreshKey) : 0)
          + (value.expiresTime != null ? ProtoAdapter.UINT64.encodedSizeWithTag(8, value.expiresTime) : 0)
          + (value.nickName != null ? ProtoAdapter.STRING.encodedSizeWithTag(9, value.nickName) : 0)
          + (value.headImg != null ? ProtoAdapter.STRING.encodedSizeWithTag(10, value.headImg) : 0)
          + (value.sex != null ? ProtoAdapter.UINT32.encodedSizeWithTag(11, value.sex) : 0)
          + (value.createTime != null ? ProtoAdapter.UINT64.encodedSizeWithTag(12, value.createTime) : 0)
          + (value.channelId != null ? ProtoAdapter.STRING.encodedSizeWithTag(13, value.channelId) : 0)
          + value.unknownFields().size();
    }

    @Override
    public void encode(ProtoWriter writer, WXUser value) throws IOException {
      if (value.userId != null) ProtoAdapter.UINT64.encodeWithTag(writer, 1, value.userId);
      if (value.thirdType != null) ProtoAdapter.SINT32.encodeWithTag(writer, 2, value.thirdType);
      if (value.wxAppId != null) ProtoAdapter.STRING.encodeWithTag(writer, 3, value.wxAppId);
      if (value.openId != null) ProtoAdapter.STRING.encodeWithTag(writer, 4, value.openId);
      if (value.unionid != null) ProtoAdapter.STRING.encodeWithTag(writer, 5, value.unionid);
      if (value.accessKey != null) ProtoAdapter.STRING.encodeWithTag(writer, 6, value.accessKey);
      if (value.refreshKey != null) ProtoAdapter.STRING.encodeWithTag(writer, 7, value.refreshKey);
      if (value.expiresTime != null) ProtoAdapter.UINT64.encodeWithTag(writer, 8, value.expiresTime);
      if (value.nickName != null) ProtoAdapter.STRING.encodeWithTag(writer, 9, value.nickName);
      if (value.headImg != null) ProtoAdapter.STRING.encodeWithTag(writer, 10, value.headImg);
      if (value.sex != null) ProtoAdapter.UINT32.encodeWithTag(writer, 11, value.sex);
      if (value.createTime != null) ProtoAdapter.UINT64.encodeWithTag(writer, 12, value.createTime);
      if (value.channelId != null) ProtoAdapter.STRING.encodeWithTag(writer, 13, value.channelId);
      writer.writeBytes(value.unknownFields());
    }

    @Override
    public WXUser decode(ProtoReader reader) throws IOException {
      Builder builder = new Builder();
      long token = reader.beginMessage();
      for (int tag; (tag = reader.nextTag()) != -1;) {
        switch (tag) {
          case 1: builder.userId(ProtoAdapter.UINT64.decode(reader)); break;
          case 2: builder.thirdType(ProtoAdapter.SINT32.decode(reader)); break;
          case 3: builder.wxAppId(ProtoAdapter.STRING.decode(reader)); break;
          case 4: builder.openId(ProtoAdapter.STRING.decode(reader)); break;
          case 5: builder.unionid(ProtoAdapter.STRING.decode(reader)); break;
          case 6: builder.accessKey(ProtoAdapter.STRING.decode(reader)); break;
          case 7: builder.refreshKey(ProtoAdapter.STRING.decode(reader)); break;
          case 8: builder.expiresTime(ProtoAdapter.UINT64.decode(reader)); break;
          case 9: builder.nickName(ProtoAdapter.STRING.decode(reader)); break;
          case 10: builder.headImg(ProtoAdapter.STRING.decode(reader)); break;
          case 11: builder.sex(ProtoAdapter.UINT32.decode(reader)); break;
          case 12: builder.createTime(ProtoAdapter.UINT64.decode(reader)); break;
          case 13: builder.channelId(ProtoAdapter.STRING.decode(reader)); break;
          default: {
            FieldEncoding fieldEncoding = reader.peekFieldEncoding();
            Object value = fieldEncoding.rawProtoAdapter().decode(reader);
            builder.addUnknownField(tag, fieldEncoding, value);
          }
        }
      }
      reader.endMessage(token);
      return builder.build();
    }

    @Override
    public WXUser redact(WXUser value) {
      Builder builder = value.newBuilder();
      builder.clearUnknownFields();
      return builder.build();
    }
  }
}
