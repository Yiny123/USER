// Code generated by Wire protocol buffer compiler, do not edit.
// Source file: SaasModel.proto at 365:1
package com.yijianyi.protocol;

import com.squareup.wire.FieldEncoding;
import com.squareup.wire.Message;
import com.squareup.wire.ProtoAdapter;
import com.squareup.wire.ProtoReader;
import com.squareup.wire.ProtoWriter;
import com.squareup.wire.WireField;
import com.squareup.wire.internal.Internal;
import java.io.IOException;
import java.lang.Double;
import java.lang.Integer;
import java.lang.Long;
import java.lang.Object;
import java.lang.Override;
import java.lang.String;
import java.lang.StringBuilder;
import okio.ByteString;

public final class UserAddressVO extends Message<UserAddressVO, UserAddressVO.Builder> {
  public static final ProtoAdapter<UserAddressVO> ADAPTER = new ProtoAdapter_UserAddressVO();

  private static final long serialVersionUID = 0L;

  public static final Long DEFAULT_ADDRID = 0L;

  public static final Long DEFAULT_USERID = 0L;

  public static final String DEFAULT_PROVINCE = "";

  public static final String DEFAULT_CITY = "";

  public static final String DEFAULT_DISTRICT = "";

  public static final String DEFAULT_BUILDING = "";

  public static final String DEFAULT_ADDRDETAIL = "";

  public static final String DEFAULT_ADDRESSINFO = "";

  public static final Integer DEFAULT_DEFAULTUSE = 0;

  public static final Double DEFAULT_LNG = 0.0d;

  public static final Double DEFAULT_LAT = 0.0d;

  public static final String DEFAULT_ADCODE = "";

  public static final String DEFAULT_CONTACTS = "";

  public static final String DEFAULT_PHONE = "";

  @WireField(
      tag = 1,
      adapter = "com.squareup.wire.ProtoAdapter#UINT64"
  )
  public final Long addrId;

  @WireField(
      tag = 2,
      adapter = "com.squareup.wire.ProtoAdapter#UINT64"
  )
  public final Long userId;

  @WireField(
      tag = 3,
      adapter = "com.squareup.wire.ProtoAdapter#STRING"
  )
  public final String province;

  @WireField(
      tag = 4,
      adapter = "com.squareup.wire.ProtoAdapter#STRING"
  )
  public final String city;

  /**
   * 区
   */
  @WireField(
      tag = 5,
      adapter = "com.squareup.wire.ProtoAdapter#STRING"
  )
  public final String district;

  /**
   * 小区
   */
  @WireField(
      tag = 6,
      adapter = "com.squareup.wire.ProtoAdapter#STRING"
  )
  public final String building;

  /**
   * 详细地址
   */
  @WireField(
      tag = 7,
      adapter = "com.squareup.wire.ProtoAdapter#STRING"
  )
  public final String addrDetail;

  @WireField(
      tag = 8,
      adapter = "com.squareup.wire.ProtoAdapter#STRING"
  )
  public final String addressInfo;

  @WireField(
      tag = 9,
      adapter = "com.squareup.wire.ProtoAdapter#UINT32"
  )
  public final Integer defaultUse;

  /**
   * 经度
   */
  @WireField(
      tag = 10,
      adapter = "com.squareup.wire.ProtoAdapter#DOUBLE"
  )
  public final Double lng;

  /**
   * 纬度
   */
  @WireField(
      tag = 11,
      adapter = "com.squareup.wire.ProtoAdapter#DOUBLE"
  )
  public final Double lat;

  /**
   * 高德城市编码
   */
  @WireField(
      tag = 12,
      adapter = "com.squareup.wire.ProtoAdapter#STRING"
  )
  public final String adCode;

  /**
   * 联系人
   */
  @WireField(
      tag = 13,
      adapter = "com.squareup.wire.ProtoAdapter#STRING"
  )
  public final String contacts;

  /**
   * 联系电话
   */
  @WireField(
      tag = 14,
      adapter = "com.squareup.wire.ProtoAdapter#STRING"
  )
  public final String phone;

  public UserAddressVO(Long addrId, Long userId, String province, String city, String district, String building, String addrDetail, String addressInfo, Integer defaultUse, Double lng, Double lat, String adCode, String contacts, String phone) {
    this(addrId, userId, province, city, district, building, addrDetail, addressInfo, defaultUse, lng, lat, adCode, contacts, phone, ByteString.EMPTY);
  }

  public UserAddressVO(Long addrId, Long userId, String province, String city, String district, String building, String addrDetail, String addressInfo, Integer defaultUse, Double lng, Double lat, String adCode, String contacts, String phone, ByteString unknownFields) {
    super(ADAPTER, unknownFields);
    this.addrId = addrId;
    this.userId = userId;
    this.province = province;
    this.city = city;
    this.district = district;
    this.building = building;
    this.addrDetail = addrDetail;
    this.addressInfo = addressInfo;
    this.defaultUse = defaultUse;
    this.lng = lng;
    this.lat = lat;
    this.adCode = adCode;
    this.contacts = contacts;
    this.phone = phone;
  }

  @Override
  public Builder newBuilder() {
    Builder builder = new Builder();
    builder.addrId = addrId;
    builder.userId = userId;
    builder.province = province;
    builder.city = city;
    builder.district = district;
    builder.building = building;
    builder.addrDetail = addrDetail;
    builder.addressInfo = addressInfo;
    builder.defaultUse = defaultUse;
    builder.lng = lng;
    builder.lat = lat;
    builder.adCode = adCode;
    builder.contacts = contacts;
    builder.phone = phone;
    builder.addUnknownFields(unknownFields());
    return builder;
  }

  @Override
  public boolean equals(Object other) {
    if (other == this) return true;
    if (!(other instanceof UserAddressVO)) return false;
    UserAddressVO o = (UserAddressVO) other;
    return unknownFields().equals(o.unknownFields())
        && Internal.equals(addrId, o.addrId)
        && Internal.equals(userId, o.userId)
        && Internal.equals(province, o.province)
        && Internal.equals(city, o.city)
        && Internal.equals(district, o.district)
        && Internal.equals(building, o.building)
        && Internal.equals(addrDetail, o.addrDetail)
        && Internal.equals(addressInfo, o.addressInfo)
        && Internal.equals(defaultUse, o.defaultUse)
        && Internal.equals(lng, o.lng)
        && Internal.equals(lat, o.lat)
        && Internal.equals(adCode, o.adCode)
        && Internal.equals(contacts, o.contacts)
        && Internal.equals(phone, o.phone);
  }

  @Override
  public int hashCode() {
    int result = super.hashCode;
    if (result == 0) {
      result = unknownFields().hashCode();
      result = result * 37 + (addrId != null ? addrId.hashCode() : 0);
      result = result * 37 + (userId != null ? userId.hashCode() : 0);
      result = result * 37 + (province != null ? province.hashCode() : 0);
      result = result * 37 + (city != null ? city.hashCode() : 0);
      result = result * 37 + (district != null ? district.hashCode() : 0);
      result = result * 37 + (building != null ? building.hashCode() : 0);
      result = result * 37 + (addrDetail != null ? addrDetail.hashCode() : 0);
      result = result * 37 + (addressInfo != null ? addressInfo.hashCode() : 0);
      result = result * 37 + (defaultUse != null ? defaultUse.hashCode() : 0);
      result = result * 37 + (lng != null ? lng.hashCode() : 0);
      result = result * 37 + (lat != null ? lat.hashCode() : 0);
      result = result * 37 + (adCode != null ? adCode.hashCode() : 0);
      result = result * 37 + (contacts != null ? contacts.hashCode() : 0);
      result = result * 37 + (phone != null ? phone.hashCode() : 0);
      super.hashCode = result;
    }
    return result;
  }

  @Override
  public String toString() {
    StringBuilder builder = new StringBuilder();
    if (addrId != null) builder.append(", addrId=").append(addrId);
    if (userId != null) builder.append(", userId=").append(userId);
    if (province != null) builder.append(", province=").append(province);
    if (city != null) builder.append(", city=").append(city);
    if (district != null) builder.append(", district=").append(district);
    if (building != null) builder.append(", building=").append(building);
    if (addrDetail != null) builder.append(", addrDetail=").append(addrDetail);
    if (addressInfo != null) builder.append(", addressInfo=").append(addressInfo);
    if (defaultUse != null) builder.append(", defaultUse=").append(defaultUse);
    if (lng != null) builder.append(", lng=").append(lng);
    if (lat != null) builder.append(", lat=").append(lat);
    if (adCode != null) builder.append(", adCode=").append(adCode);
    if (contacts != null) builder.append(", contacts=").append(contacts);
    if (phone != null) builder.append(", phone=").append(phone);
    return builder.replace(0, 2, "UserAddressVO{").append('}').toString();
  }

  public static final class Builder extends Message.Builder<UserAddressVO, Builder> {
    public Long addrId;

    public Long userId;

    public String province;

    public String city;

    public String district;

    public String building;

    public String addrDetail;

    public String addressInfo;

    public Integer defaultUse;

    public Double lng;

    public Double lat;

    public String adCode;

    public String contacts;

    public String phone;

    public Builder() {
    }

    public Builder addrId(Long addrId) {
      this.addrId = addrId;
      return this;
    }

    public Builder userId(Long userId) {
      this.userId = userId;
      return this;
    }

    public Builder province(String province) {
      this.province = province;
      return this;
    }

    public Builder city(String city) {
      this.city = city;
      return this;
    }

    /**
     * 区
     */
    public Builder district(String district) {
      this.district = district;
      return this;
    }

    /**
     * 小区
     */
    public Builder building(String building) {
      this.building = building;
      return this;
    }

    /**
     * 详细地址
     */
    public Builder addrDetail(String addrDetail) {
      this.addrDetail = addrDetail;
      return this;
    }

    public Builder addressInfo(String addressInfo) {
      this.addressInfo = addressInfo;
      return this;
    }

    public Builder defaultUse(Integer defaultUse) {
      this.defaultUse = defaultUse;
      return this;
    }

    /**
     * 经度
     */
    public Builder lng(Double lng) {
      this.lng = lng;
      return this;
    }

    /**
     * 纬度
     */
    public Builder lat(Double lat) {
      this.lat = lat;
      return this;
    }

    /**
     * 高德城市编码
     */
    public Builder adCode(String adCode) {
      this.adCode = adCode;
      return this;
    }

    /**
     * 联系人
     */
    public Builder contacts(String contacts) {
      this.contacts = contacts;
      return this;
    }

    /**
     * 联系电话
     */
    public Builder phone(String phone) {
      this.phone = phone;
      return this;
    }

    @Override
    public UserAddressVO build() {
      return new UserAddressVO(addrId, userId, province, city, district, building, addrDetail, addressInfo, defaultUse, lng, lat, adCode, contacts, phone, super.buildUnknownFields());
    }
  }

  private static final class ProtoAdapter_UserAddressVO extends ProtoAdapter<UserAddressVO> {
    ProtoAdapter_UserAddressVO() {
      super(FieldEncoding.LENGTH_DELIMITED, UserAddressVO.class);
    }

    @Override
    public int encodedSize(UserAddressVO value) {
      return (value.addrId != null ? ProtoAdapter.UINT64.encodedSizeWithTag(1, value.addrId) : 0)
          + (value.userId != null ? ProtoAdapter.UINT64.encodedSizeWithTag(2, value.userId) : 0)
          + (value.province != null ? ProtoAdapter.STRING.encodedSizeWithTag(3, value.province) : 0)
          + (value.city != null ? ProtoAdapter.STRING.encodedSizeWithTag(4, value.city) : 0)
          + (value.district != null ? ProtoAdapter.STRING.encodedSizeWithTag(5, value.district) : 0)
          + (value.building != null ? ProtoAdapter.STRING.encodedSizeWithTag(6, value.building) : 0)
          + (value.addrDetail != null ? ProtoAdapter.STRING.encodedSizeWithTag(7, value.addrDetail) : 0)
          + (value.addressInfo != null ? ProtoAdapter.STRING.encodedSizeWithTag(8, value.addressInfo) : 0)
          + (value.defaultUse != null ? ProtoAdapter.UINT32.encodedSizeWithTag(9, value.defaultUse) : 0)
          + (value.lng != null ? ProtoAdapter.DOUBLE.encodedSizeWithTag(10, value.lng) : 0)
          + (value.lat != null ? ProtoAdapter.DOUBLE.encodedSizeWithTag(11, value.lat) : 0)
          + (value.adCode != null ? ProtoAdapter.STRING.encodedSizeWithTag(12, value.adCode) : 0)
          + (value.contacts != null ? ProtoAdapter.STRING.encodedSizeWithTag(13, value.contacts) : 0)
          + (value.phone != null ? ProtoAdapter.STRING.encodedSizeWithTag(14, value.phone) : 0)
          + value.unknownFields().size();
    }

    @Override
    public void encode(ProtoWriter writer, UserAddressVO value) throws IOException {
      if (value.addrId != null) ProtoAdapter.UINT64.encodeWithTag(writer, 1, value.addrId);
      if (value.userId != null) ProtoAdapter.UINT64.encodeWithTag(writer, 2, value.userId);
      if (value.province != null) ProtoAdapter.STRING.encodeWithTag(writer, 3, value.province);
      if (value.city != null) ProtoAdapter.STRING.encodeWithTag(writer, 4, value.city);
      if (value.district != null) ProtoAdapter.STRING.encodeWithTag(writer, 5, value.district);
      if (value.building != null) ProtoAdapter.STRING.encodeWithTag(writer, 6, value.building);
      if (value.addrDetail != null) ProtoAdapter.STRING.encodeWithTag(writer, 7, value.addrDetail);
      if (value.addressInfo != null) ProtoAdapter.STRING.encodeWithTag(writer, 8, value.addressInfo);
      if (value.defaultUse != null) ProtoAdapter.UINT32.encodeWithTag(writer, 9, value.defaultUse);
      if (value.lng != null) ProtoAdapter.DOUBLE.encodeWithTag(writer, 10, value.lng);
      if (value.lat != null) ProtoAdapter.DOUBLE.encodeWithTag(writer, 11, value.lat);
      if (value.adCode != null) ProtoAdapter.STRING.encodeWithTag(writer, 12, value.adCode);
      if (value.contacts != null) ProtoAdapter.STRING.encodeWithTag(writer, 13, value.contacts);
      if (value.phone != null) ProtoAdapter.STRING.encodeWithTag(writer, 14, value.phone);
      writer.writeBytes(value.unknownFields());
    }

    @Override
    public UserAddressVO decode(ProtoReader reader) throws IOException {
      Builder builder = new Builder();
      long token = reader.beginMessage();
      for (int tag; (tag = reader.nextTag()) != -1;) {
        switch (tag) {
          case 1: builder.addrId(ProtoAdapter.UINT64.decode(reader)); break;
          case 2: builder.userId(ProtoAdapter.UINT64.decode(reader)); break;
          case 3: builder.province(ProtoAdapter.STRING.decode(reader)); break;
          case 4: builder.city(ProtoAdapter.STRING.decode(reader)); break;
          case 5: builder.district(ProtoAdapter.STRING.decode(reader)); break;
          case 6: builder.building(ProtoAdapter.STRING.decode(reader)); break;
          case 7: builder.addrDetail(ProtoAdapter.STRING.decode(reader)); break;
          case 8: builder.addressInfo(ProtoAdapter.STRING.decode(reader)); break;
          case 9: builder.defaultUse(ProtoAdapter.UINT32.decode(reader)); break;
          case 10: builder.lng(ProtoAdapter.DOUBLE.decode(reader)); break;
          case 11: builder.lat(ProtoAdapter.DOUBLE.decode(reader)); break;
          case 12: builder.adCode(ProtoAdapter.STRING.decode(reader)); break;
          case 13: builder.contacts(ProtoAdapter.STRING.decode(reader)); break;
          case 14: builder.phone(ProtoAdapter.STRING.decode(reader)); break;
          default: {
            FieldEncoding fieldEncoding = reader.peekFieldEncoding();
            Object value = fieldEncoding.rawProtoAdapter().decode(reader);
            builder.addUnknownField(tag, fieldEncoding, value);
          }
        }
      }
      reader.endMessage(token);
      return builder.build();
    }

    @Override
    public UserAddressVO redact(UserAddressVO value) {
      Builder builder = value.newBuilder();
      builder.clearUnknownFields();
      return builder.build();
    }
  }
}
