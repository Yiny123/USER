// Code generated by Wire protocol buffer compiler, do not edit.
// Source file: OrderModel.proto at 373:1
package com.yijianyi.protocol;

import com.squareup.wire.FieldEncoding;
import com.squareup.wire.Message;
import com.squareup.wire.ProtoAdapter;
import com.squareup.wire.ProtoReader;
import com.squareup.wire.ProtoWriter;
import com.squareup.wire.WireField;
import com.squareup.wire.internal.Internal;
import java.io.IOException;
import java.lang.Long;
import java.lang.Object;
import java.lang.Override;
import java.lang.String;
import java.lang.StringBuilder;
import okio.ByteString;

public final class OrderItemInvertVO extends Message<OrderItemInvertVO, OrderItemInvertVO.Builder> {
  public static final ProtoAdapter<OrderItemInvertVO> ADAPTER = new ProtoAdapter_OrderItemInvertVO();

  private static final long serialVersionUID = 0L;

  public static final Long DEFAULT_ID = 0L;

  public static final String DEFAULT_SERVICE = "";

  public static final Long DEFAULT_COST = 0L;

  public static final String DEFAULT_COSTSTR = "";

  public static final Long DEFAULT_NUMBER = 0L;

  public static final String DEFAULT_NUMBERSTR = "";

  public static final Long DEFAULT_PRICE = 0L;

  public static final String DEFAULT_PRICESTR = "";

  @WireField(
      tag = 1,
      adapter = "com.squareup.wire.ProtoAdapter#UINT64"
  )
  public final Long id;

  /**
   * 服务内容
   */
  @WireField(
      tag = 2,
      adapter = "com.squareup.wire.ProtoAdapter#STRING"
  )
  public final String service;

  /**
   * 费用（等于0即已取消）
   */
  @WireField(
      tag = 3,
      adapter = "com.squareup.wire.ProtoAdapter#UINT64"
  )
  public final Long cost;

  /**
   * 费用
   */
  @WireField(
      tag = 4,
      adapter = "com.squareup.wire.ProtoAdapter#STRING"
  )
  public final String costStr;

  /**
   * 数量（等于0即已取消）
   */
  @WireField(
      tag = 5,
      adapter = "com.squareup.wire.ProtoAdapter#UINT64"
  )
  public final Long number;

  /**
   * 数量
   */
  @WireField(
      tag = 6,
      adapter = "com.squareup.wire.ProtoAdapter#STRING"
  )
  public final String numberStr;

  /**
   * 单价（等于0即已取消）
   */
  @WireField(
      tag = 7,
      adapter = "com.squareup.wire.ProtoAdapter#UINT64"
  )
  public final Long price;

  /**
   * 定价
   */
  @WireField(
      tag = 8,
      adapter = "com.squareup.wire.ProtoAdapter#STRING"
  )
  public final String priceStr;

  public OrderItemInvertVO(Long id, String service, Long cost, String costStr, Long number, String numberStr, Long price, String priceStr) {
    this(id, service, cost, costStr, number, numberStr, price, priceStr, ByteString.EMPTY);
  }

  public OrderItemInvertVO(Long id, String service, Long cost, String costStr, Long number, String numberStr, Long price, String priceStr, ByteString unknownFields) {
    super(ADAPTER, unknownFields);
    this.id = id;
    this.service = service;
    this.cost = cost;
    this.costStr = costStr;
    this.number = number;
    this.numberStr = numberStr;
    this.price = price;
    this.priceStr = priceStr;
  }

  @Override
  public Builder newBuilder() {
    Builder builder = new Builder();
    builder.id = id;
    builder.service = service;
    builder.cost = cost;
    builder.costStr = costStr;
    builder.number = number;
    builder.numberStr = numberStr;
    builder.price = price;
    builder.priceStr = priceStr;
    builder.addUnknownFields(unknownFields());
    return builder;
  }

  @Override
  public boolean equals(Object other) {
    if (other == this) return true;
    if (!(other instanceof OrderItemInvertVO)) return false;
    OrderItemInvertVO o = (OrderItemInvertVO) other;
    return unknownFields().equals(o.unknownFields())
        && Internal.equals(id, o.id)
        && Internal.equals(service, o.service)
        && Internal.equals(cost, o.cost)
        && Internal.equals(costStr, o.costStr)
        && Internal.equals(number, o.number)
        && Internal.equals(numberStr, o.numberStr)
        && Internal.equals(price, o.price)
        && Internal.equals(priceStr, o.priceStr);
  }

  @Override
  public int hashCode() {
    int result = super.hashCode;
    if (result == 0) {
      result = unknownFields().hashCode();
      result = result * 37 + (id != null ? id.hashCode() : 0);
      result = result * 37 + (service != null ? service.hashCode() : 0);
      result = result * 37 + (cost != null ? cost.hashCode() : 0);
      result = result * 37 + (costStr != null ? costStr.hashCode() : 0);
      result = result * 37 + (number != null ? number.hashCode() : 0);
      result = result * 37 + (numberStr != null ? numberStr.hashCode() : 0);
      result = result * 37 + (price != null ? price.hashCode() : 0);
      result = result * 37 + (priceStr != null ? priceStr.hashCode() : 0);
      super.hashCode = result;
    }
    return result;
  }

  @Override
  public String toString() {
    StringBuilder builder = new StringBuilder();
    if (id != null) builder.append(", id=").append(id);
    if (service != null) builder.append(", service=").append(service);
    if (cost != null) builder.append(", cost=").append(cost);
    if (costStr != null) builder.append(", costStr=").append(costStr);
    if (number != null) builder.append(", number=").append(number);
    if (numberStr != null) builder.append(", numberStr=").append(numberStr);
    if (price != null) builder.append(", price=").append(price);
    if (priceStr != null) builder.append(", priceStr=").append(priceStr);
    return builder.replace(0, 2, "OrderItemInvertVO{").append('}').toString();
  }

  public static final class Builder extends Message.Builder<OrderItemInvertVO, Builder> {
    public Long id;

    public String service;

    public Long cost;

    public String costStr;

    public Long number;

    public String numberStr;

    public Long price;

    public String priceStr;

    public Builder() {
    }

    public Builder id(Long id) {
      this.id = id;
      return this;
    }

    /**
     * 服务内容
     */
    public Builder service(String service) {
      this.service = service;
      return this;
    }

    /**
     * 费用（等于0即已取消）
     */
    public Builder cost(Long cost) {
      this.cost = cost;
      return this;
    }

    /**
     * 费用
     */
    public Builder costStr(String costStr) {
      this.costStr = costStr;
      return this;
    }

    /**
     * 数量（等于0即已取消）
     */
    public Builder number(Long number) {
      this.number = number;
      return this;
    }

    /**
     * 数量
     */
    public Builder numberStr(String numberStr) {
      this.numberStr = numberStr;
      return this;
    }

    /**
     * 单价（等于0即已取消）
     */
    public Builder price(Long price) {
      this.price = price;
      return this;
    }

    /**
     * 定价
     */
    public Builder priceStr(String priceStr) {
      this.priceStr = priceStr;
      return this;
    }

    @Override
    public OrderItemInvertVO build() {
      return new OrderItemInvertVO(id, service, cost, costStr, number, numberStr, price, priceStr, super.buildUnknownFields());
    }
  }

  private static final class ProtoAdapter_OrderItemInvertVO extends ProtoAdapter<OrderItemInvertVO> {
    ProtoAdapter_OrderItemInvertVO() {
      super(FieldEncoding.LENGTH_DELIMITED, OrderItemInvertVO.class);
    }

    @Override
    public int encodedSize(OrderItemInvertVO value) {
      return (value.id != null ? ProtoAdapter.UINT64.encodedSizeWithTag(1, value.id) : 0)
          + (value.service != null ? ProtoAdapter.STRING.encodedSizeWithTag(2, value.service) : 0)
          + (value.cost != null ? ProtoAdapter.UINT64.encodedSizeWithTag(3, value.cost) : 0)
          + (value.costStr != null ? ProtoAdapter.STRING.encodedSizeWithTag(4, value.costStr) : 0)
          + (value.number != null ? ProtoAdapter.UINT64.encodedSizeWithTag(5, value.number) : 0)
          + (value.numberStr != null ? ProtoAdapter.STRING.encodedSizeWithTag(6, value.numberStr) : 0)
          + (value.price != null ? ProtoAdapter.UINT64.encodedSizeWithTag(7, value.price) : 0)
          + (value.priceStr != null ? ProtoAdapter.STRING.encodedSizeWithTag(8, value.priceStr) : 0)
          + value.unknownFields().size();
    }

    @Override
    public void encode(ProtoWriter writer, OrderItemInvertVO value) throws IOException {
      if (value.id != null) ProtoAdapter.UINT64.encodeWithTag(writer, 1, value.id);
      if (value.service != null) ProtoAdapter.STRING.encodeWithTag(writer, 2, value.service);
      if (value.cost != null) ProtoAdapter.UINT64.encodeWithTag(writer, 3, value.cost);
      if (value.costStr != null) ProtoAdapter.STRING.encodeWithTag(writer, 4, value.costStr);
      if (value.number != null) ProtoAdapter.UINT64.encodeWithTag(writer, 5, value.number);
      if (value.numberStr != null) ProtoAdapter.STRING.encodeWithTag(writer, 6, value.numberStr);
      if (value.price != null) ProtoAdapter.UINT64.encodeWithTag(writer, 7, value.price);
      if (value.priceStr != null) ProtoAdapter.STRING.encodeWithTag(writer, 8, value.priceStr);
      writer.writeBytes(value.unknownFields());
    }

    @Override
    public OrderItemInvertVO decode(ProtoReader reader) throws IOException {
      Builder builder = new Builder();
      long token = reader.beginMessage();
      for (int tag; (tag = reader.nextTag()) != -1;) {
        switch (tag) {
          case 1: builder.id(ProtoAdapter.UINT64.decode(reader)); break;
          case 2: builder.service(ProtoAdapter.STRING.decode(reader)); break;
          case 3: builder.cost(ProtoAdapter.UINT64.decode(reader)); break;
          case 4: builder.costStr(ProtoAdapter.STRING.decode(reader)); break;
          case 5: builder.number(ProtoAdapter.UINT64.decode(reader)); break;
          case 6: builder.numberStr(ProtoAdapter.STRING.decode(reader)); break;
          case 7: builder.price(ProtoAdapter.UINT64.decode(reader)); break;
          case 8: builder.priceStr(ProtoAdapter.STRING.decode(reader)); break;
          default: {
            FieldEncoding fieldEncoding = reader.peekFieldEncoding();
            Object value = fieldEncoding.rawProtoAdapter().decode(reader);
            builder.addUnknownField(tag, fieldEncoding, value);
          }
        }
      }
      reader.endMessage(token);
      return builder.build();
    }

    @Override
    public OrderItemInvertVO redact(OrderItemInvertVO value) {
      Builder builder = value.newBuilder();
      builder.clearUnknownFields();
      return builder.build();
    }
  }
}
