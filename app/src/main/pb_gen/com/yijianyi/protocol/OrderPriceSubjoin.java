// Code generated by Wire protocol buffer compiler, do not edit.
// Source file: OrderModel.proto at 231:1
package com.yijianyi.protocol;

import com.squareup.wire.FieldEncoding;
import com.squareup.wire.Message;
import com.squareup.wire.ProtoAdapter;
import com.squareup.wire.ProtoReader;
import com.squareup.wire.ProtoWriter;
import com.squareup.wire.WireField;
import com.squareup.wire.internal.Internal;
import java.io.IOException;
import java.lang.Integer;
import java.lang.Long;
import java.lang.Object;
import java.lang.Override;
import java.lang.String;
import java.lang.StringBuilder;
import okio.ByteString;

/**
 * 订单的附属服务
 */
public final class OrderPriceSubjoin extends Message<OrderPriceSubjoin, OrderPriceSubjoin.Builder> {
  public static final ProtoAdapter<OrderPriceSubjoin> ADAPTER = new ProtoAdapter_OrderPriceSubjoin();

  private static final long serialVersionUID = 0L;

  public static final Long DEFAULT_ID = 0L;

  public static final String DEFAULT_ORDERID = "";

  public static final Long DEFAULT_USERID = 0L;

  public static final Long DEFAULT_PRICEID = 0L;

  public static final String DEFAULT_SERVICEITEM = "";

  public static final Integer DEFAULT_SERVICEUNIT = 0;

  public static final Long DEFAULT_PRICE = 0L;

  public static final Integer DEFAULT_STATUS = 0;

  public static final Long DEFAULT_CREATETIME = 0L;

  public static final Long DEFAULT_CREATESTAFFID = 0L;

  public static final String DEFAULT_CREATESTAFFNAME = "";

  /**
   * 关联的id
   */
  @WireField(
      tag = 1,
      adapter = "com.squareup.wire.ProtoAdapter#UINT64"
  )
  public final Long id;

  /**
   * 订单号
   */
  @WireField(
      tag = 2,
      adapter = "com.squareup.wire.ProtoAdapter#STRING"
  )
  public final String orderId;

  /**
   * 用户id
   */
  @WireField(
      tag = 3,
      adapter = "com.squareup.wire.ProtoAdapter#UINT64"
  )
  public final Long userId;

  /**
   * 价格配置ID
   */
  @WireField(
      tag = 4,
      adapter = "com.squareup.wire.ProtoAdapter#UINT64"
  )
  public final Long priceId;

  /**
   * 服务项目
   */
  @WireField(
      tag = 5,
      adapter = "com.squareup.wire.ProtoAdapter#STRING"
  )
  public final String serviceItem;

  /**
   * 服务单位 1-次 2-小时 3-天 4-月
   */
  @WireField(
      tag = 6,
      adapter = "com.squareup.wire.ProtoAdapter#UINT32"
  )
  public final Integer serviceUnit;

  /**
   * 定价 单位分
   */
  @WireField(
      tag = 7,
      adapter = "com.squareup.wire.ProtoAdapter#UINT64"
  )
  public final Long price;

  /**
   * 状态 0-使用中 1-已删除
   */
  @WireField(
      tag = 8,
      adapter = "com.squareup.wire.ProtoAdapter#UINT32"
  )
  public final Integer status;

  /**
   * 创建时间
   */
  @WireField(
      tag = 9,
      adapter = "com.squareup.wire.ProtoAdapter#UINT64"
  )
  public final Long createTime;

  /**
   * 创建员工ID
   */
  @WireField(
      tag = 10,
      adapter = "com.squareup.wire.ProtoAdapter#UINT64"
  )
  public final Long createStaffId;

  /**
   * 创建员工名字
   */
  @WireField(
      tag = 11,
      adapter = "com.squareup.wire.ProtoAdapter#STRING"
  )
  public final String createStaffName;

  public OrderPriceSubjoin(Long id, String orderId, Long userId, Long priceId, String serviceItem, Integer serviceUnit, Long price, Integer status, Long createTime, Long createStaffId, String createStaffName) {
    this(id, orderId, userId, priceId, serviceItem, serviceUnit, price, status, createTime, createStaffId, createStaffName, ByteString.EMPTY);
  }

  public OrderPriceSubjoin(Long id, String orderId, Long userId, Long priceId, String serviceItem, Integer serviceUnit, Long price, Integer status, Long createTime, Long createStaffId, String createStaffName, ByteString unknownFields) {
    super(ADAPTER, unknownFields);
    this.id = id;
    this.orderId = orderId;
    this.userId = userId;
    this.priceId = priceId;
    this.serviceItem = serviceItem;
    this.serviceUnit = serviceUnit;
    this.price = price;
    this.status = status;
    this.createTime = createTime;
    this.createStaffId = createStaffId;
    this.createStaffName = createStaffName;
  }

  @Override
  public Builder newBuilder() {
    Builder builder = new Builder();
    builder.id = id;
    builder.orderId = orderId;
    builder.userId = userId;
    builder.priceId = priceId;
    builder.serviceItem = serviceItem;
    builder.serviceUnit = serviceUnit;
    builder.price = price;
    builder.status = status;
    builder.createTime = createTime;
    builder.createStaffId = createStaffId;
    builder.createStaffName = createStaffName;
    builder.addUnknownFields(unknownFields());
    return builder;
  }

  @Override
  public boolean equals(Object other) {
    if (other == this) return true;
    if (!(other instanceof OrderPriceSubjoin)) return false;
    OrderPriceSubjoin o = (OrderPriceSubjoin) other;
    return unknownFields().equals(o.unknownFields())
        && Internal.equals(id, o.id)
        && Internal.equals(orderId, o.orderId)
        && Internal.equals(userId, o.userId)
        && Internal.equals(priceId, o.priceId)
        && Internal.equals(serviceItem, o.serviceItem)
        && Internal.equals(serviceUnit, o.serviceUnit)
        && Internal.equals(price, o.price)
        && Internal.equals(status, o.status)
        && Internal.equals(createTime, o.createTime)
        && Internal.equals(createStaffId, o.createStaffId)
        && Internal.equals(createStaffName, o.createStaffName);
  }

  @Override
  public int hashCode() {
    int result = super.hashCode;
    if (result == 0) {
      result = unknownFields().hashCode();
      result = result * 37 + (id != null ? id.hashCode() : 0);
      result = result * 37 + (orderId != null ? orderId.hashCode() : 0);
      result = result * 37 + (userId != null ? userId.hashCode() : 0);
      result = result * 37 + (priceId != null ? priceId.hashCode() : 0);
      result = result * 37 + (serviceItem != null ? serviceItem.hashCode() : 0);
      result = result * 37 + (serviceUnit != null ? serviceUnit.hashCode() : 0);
      result = result * 37 + (price != null ? price.hashCode() : 0);
      result = result * 37 + (status != null ? status.hashCode() : 0);
      result = result * 37 + (createTime != null ? createTime.hashCode() : 0);
      result = result * 37 + (createStaffId != null ? createStaffId.hashCode() : 0);
      result = result * 37 + (createStaffName != null ? createStaffName.hashCode() : 0);
      super.hashCode = result;
    }
    return result;
  }

  @Override
  public String toString() {
    StringBuilder builder = new StringBuilder();
    if (id != null) builder.append(", id=").append(id);
    if (orderId != null) builder.append(", orderId=").append(orderId);
    if (userId != null) builder.append(", userId=").append(userId);
    if (priceId != null) builder.append(", priceId=").append(priceId);
    if (serviceItem != null) builder.append(", serviceItem=").append(serviceItem);
    if (serviceUnit != null) builder.append(", serviceUnit=").append(serviceUnit);
    if (price != null) builder.append(", price=").append(price);
    if (status != null) builder.append(", status=").append(status);
    if (createTime != null) builder.append(", createTime=").append(createTime);
    if (createStaffId != null) builder.append(", createStaffId=").append(createStaffId);
    if (createStaffName != null) builder.append(", createStaffName=").append(createStaffName);
    return builder.replace(0, 2, "OrderPriceSubjoin{").append('}').toString();
  }

  public static final class Builder extends Message.Builder<OrderPriceSubjoin, Builder> {
    public Long id;

    public String orderId;

    public Long userId;

    public Long priceId;

    public String serviceItem;

    public Integer serviceUnit;

    public Long price;

    public Integer status;

    public Long createTime;

    public Long createStaffId;

    public String createStaffName;

    public Builder() {
    }

    /**
     * 关联的id
     */
    public Builder id(Long id) {
      this.id = id;
      return this;
    }

    /**
     * 订单号
     */
    public Builder orderId(String orderId) {
      this.orderId = orderId;
      return this;
    }

    /**
     * 用户id
     */
    public Builder userId(Long userId) {
      this.userId = userId;
      return this;
    }

    /**
     * 价格配置ID
     */
    public Builder priceId(Long priceId) {
      this.priceId = priceId;
      return this;
    }

    /**
     * 服务项目
     */
    public Builder serviceItem(String serviceItem) {
      this.serviceItem = serviceItem;
      return this;
    }

    /**
     * 服务单位 1-次 2-小时 3-天 4-月
     */
    public Builder serviceUnit(Integer serviceUnit) {
      this.serviceUnit = serviceUnit;
      return this;
    }

    /**
     * 定价 单位分
     */
    public Builder price(Long price) {
      this.price = price;
      return this;
    }

    /**
     * 状态 0-使用中 1-已删除
     */
    public Builder status(Integer status) {
      this.status = status;
      return this;
    }

    /**
     * 创建时间
     */
    public Builder createTime(Long createTime) {
      this.createTime = createTime;
      return this;
    }

    /**
     * 创建员工ID
     */
    public Builder createStaffId(Long createStaffId) {
      this.createStaffId = createStaffId;
      return this;
    }

    /**
     * 创建员工名字
     */
    public Builder createStaffName(String createStaffName) {
      this.createStaffName = createStaffName;
      return this;
    }

    @Override
    public OrderPriceSubjoin build() {
      return new OrderPriceSubjoin(id, orderId, userId, priceId, serviceItem, serviceUnit, price, status, createTime, createStaffId, createStaffName, super.buildUnknownFields());
    }
  }

  private static final class ProtoAdapter_OrderPriceSubjoin extends ProtoAdapter<OrderPriceSubjoin> {
    ProtoAdapter_OrderPriceSubjoin() {
      super(FieldEncoding.LENGTH_DELIMITED, OrderPriceSubjoin.class);
    }

    @Override
    public int encodedSize(OrderPriceSubjoin value) {
      return (value.id != null ? ProtoAdapter.UINT64.encodedSizeWithTag(1, value.id) : 0)
          + (value.orderId != null ? ProtoAdapter.STRING.encodedSizeWithTag(2, value.orderId) : 0)
          + (value.userId != null ? ProtoAdapter.UINT64.encodedSizeWithTag(3, value.userId) : 0)
          + (value.priceId != null ? ProtoAdapter.UINT64.encodedSizeWithTag(4, value.priceId) : 0)
          + (value.serviceItem != null ? ProtoAdapter.STRING.encodedSizeWithTag(5, value.serviceItem) : 0)
          + (value.serviceUnit != null ? ProtoAdapter.UINT32.encodedSizeWithTag(6, value.serviceUnit) : 0)
          + (value.price != null ? ProtoAdapter.UINT64.encodedSizeWithTag(7, value.price) : 0)
          + (value.status != null ? ProtoAdapter.UINT32.encodedSizeWithTag(8, value.status) : 0)
          + (value.createTime != null ? ProtoAdapter.UINT64.encodedSizeWithTag(9, value.createTime) : 0)
          + (value.createStaffId != null ? ProtoAdapter.UINT64.encodedSizeWithTag(10, value.createStaffId) : 0)
          + (value.createStaffName != null ? ProtoAdapter.STRING.encodedSizeWithTag(11, value.createStaffName) : 0)
          + value.unknownFields().size();
    }

    @Override
    public void encode(ProtoWriter writer, OrderPriceSubjoin value) throws IOException {
      if (value.id != null) ProtoAdapter.UINT64.encodeWithTag(writer, 1, value.id);
      if (value.orderId != null) ProtoAdapter.STRING.encodeWithTag(writer, 2, value.orderId);
      if (value.userId != null) ProtoAdapter.UINT64.encodeWithTag(writer, 3, value.userId);
      if (value.priceId != null) ProtoAdapter.UINT64.encodeWithTag(writer, 4, value.priceId);
      if (value.serviceItem != null) ProtoAdapter.STRING.encodeWithTag(writer, 5, value.serviceItem);
      if (value.serviceUnit != null) ProtoAdapter.UINT32.encodeWithTag(writer, 6, value.serviceUnit);
      if (value.price != null) ProtoAdapter.UINT64.encodeWithTag(writer, 7, value.price);
      if (value.status != null) ProtoAdapter.UINT32.encodeWithTag(writer, 8, value.status);
      if (value.createTime != null) ProtoAdapter.UINT64.encodeWithTag(writer, 9, value.createTime);
      if (value.createStaffId != null) ProtoAdapter.UINT64.encodeWithTag(writer, 10, value.createStaffId);
      if (value.createStaffName != null) ProtoAdapter.STRING.encodeWithTag(writer, 11, value.createStaffName);
      writer.writeBytes(value.unknownFields());
    }

    @Override
    public OrderPriceSubjoin decode(ProtoReader reader) throws IOException {
      Builder builder = new Builder();
      long token = reader.beginMessage();
      for (int tag; (tag = reader.nextTag()) != -1;) {
        switch (tag) {
          case 1: builder.id(ProtoAdapter.UINT64.decode(reader)); break;
          case 2: builder.orderId(ProtoAdapter.STRING.decode(reader)); break;
          case 3: builder.userId(ProtoAdapter.UINT64.decode(reader)); break;
          case 4: builder.priceId(ProtoAdapter.UINT64.decode(reader)); break;
          case 5: builder.serviceItem(ProtoAdapter.STRING.decode(reader)); break;
          case 6: builder.serviceUnit(ProtoAdapter.UINT32.decode(reader)); break;
          case 7: builder.price(ProtoAdapter.UINT64.decode(reader)); break;
          case 8: builder.status(ProtoAdapter.UINT32.decode(reader)); break;
          case 9: builder.createTime(ProtoAdapter.UINT64.decode(reader)); break;
          case 10: builder.createStaffId(ProtoAdapter.UINT64.decode(reader)); break;
          case 11: builder.createStaffName(ProtoAdapter.STRING.decode(reader)); break;
          default: {
            FieldEncoding fieldEncoding = reader.peekFieldEncoding();
            Object value = fieldEncoding.rawProtoAdapter().decode(reader);
            builder.addUnknownField(tag, fieldEncoding, value);
          }
        }
      }
      reader.endMessage(token);
      return builder.build();
    }

    @Override
    public OrderPriceSubjoin redact(OrderPriceSubjoin value) {
      Builder builder = value.newBuilder();
      builder.clearUnknownFields();
      return builder.build();
    }
  }
}
