// Code generated by Wire protocol buffer compiler, do not edit.
// Source file: SaasModel.proto at 516:1
package com.yijianyi.protocol;

import com.squareup.wire.FieldEncoding;
import com.squareup.wire.Message;
import com.squareup.wire.ProtoAdapter;
import com.squareup.wire.ProtoReader;
import com.squareup.wire.ProtoWriter;
import com.squareup.wire.WireField;
import com.squareup.wire.internal.Internal;
import java.io.IOException;
import java.lang.Integer;
import java.lang.Long;
import java.lang.Object;
import java.lang.Override;
import java.lang.String;
import java.lang.StringBuilder;
import okio.ByteString;

public final class SystemMessage extends Message<SystemMessage, SystemMessage.Builder> {
  public static final ProtoAdapter<SystemMessage> ADAPTER = new ProtoAdapter_SystemMessage();

  private static final long serialVersionUID = 0L;

  public static final Long DEFAULT_ID = 0L;

  public static final Long DEFAULT_FROMUSERID = 0L;

  public static final Long DEFAULT_TOUSERID = 0L;

  public static final Integer DEFAULT_MSGTYPE = 0;

  public static final String DEFAULT_NATIVEURL = "";

  public static final String DEFAULT_URL = "";

  public static final String DEFAULT_CONTENT = "";

  public static final Long DEFAULT_CREATETIME = 0L;

  public static final Integer DEFAULT_STATE = 0;

  public static final Long DEFAULT_INVALIDATETIME = 0L;

  public static final String DEFAULT_CREATETIMESTR = "";

  public static final String DEFAULT_MSGTYPESTR = "";

  /**
   * 消息id
   */
  @WireField(
      tag = 1,
      adapter = "com.squareup.wire.ProtoAdapter#UINT64"
  )
  public final Long id;

  /**
   * 发送用户id 默认0标识系统
   */
  @WireField(
      tag = 2,
      adapter = "com.squareup.wire.ProtoAdapter#UINT64"
  )
  public final Long fromUserId;

  /**
   * 接收用户id
   */
  @WireField(
      tag = 3,
      adapter = "com.squareup.wire.ProtoAdapter#UINT64"
  )
  public final Long toUserId;

  /**
   * 消息类型
   */
  @WireField(
      tag = 4,
      adapter = "com.squareup.wire.ProtoAdapter#UINT32"
  )
  public final Integer msgType;

  /**
   * 客户端跳转链接
   */
  @WireField(
      tag = 5,
      adapter = "com.squareup.wire.ProtoAdapter#STRING"
  )
  public final String nativeUrl;

  /**
   * 跳转url
   */
  @WireField(
      tag = 6,
      adapter = "com.squareup.wire.ProtoAdapter#STRING"
  )
  public final String url;

  /**
   * 发送消息的内容
   */
  @WireField(
      tag = 7,
      adapter = "com.squareup.wire.ProtoAdapter#STRING"
  )
  public final String content;

  /**
   * 消息发送时间
   */
  @WireField(
      tag = 8,
      adapter = "com.squareup.wire.ProtoAdapter#UINT64"
  )
  public final Long createTime;

  /**
   * 该消息是否已读 0-未读 1-已读
   */
  @WireField(
      tag = 9,
      adapter = "com.squareup.wire.ProtoAdapter#UINT32"
  )
  public final Integer state;

  /**
   * 失效时间
   */
  @WireField(
      tag = 10,
      adapter = "com.squareup.wire.ProtoAdapter#UINT64"
  )
  public final Long invalidateTime;

  @WireField(
      tag = 11,
      adapter = "com.squareup.wire.ProtoAdapter#STRING"
  )
  public final String createTimeStr;

  /**
   * 消息类型描述
   */
  @WireField(
      tag = 12,
      adapter = "com.squareup.wire.ProtoAdapter#STRING"
  )
  public final String msgTypeStr;

  public SystemMessage(Long id, Long fromUserId, Long toUserId, Integer msgType, String nativeUrl, String url, String content, Long createTime, Integer state, Long invalidateTime, String createTimeStr, String msgTypeStr) {
    this(id, fromUserId, toUserId, msgType, nativeUrl, url, content, createTime, state, invalidateTime, createTimeStr, msgTypeStr, ByteString.EMPTY);
  }

  public SystemMessage(Long id, Long fromUserId, Long toUserId, Integer msgType, String nativeUrl, String url, String content, Long createTime, Integer state, Long invalidateTime, String createTimeStr, String msgTypeStr, ByteString unknownFields) {
    super(ADAPTER, unknownFields);
    this.id = id;
    this.fromUserId = fromUserId;
    this.toUserId = toUserId;
    this.msgType = msgType;
    this.nativeUrl = nativeUrl;
    this.url = url;
    this.content = content;
    this.createTime = createTime;
    this.state = state;
    this.invalidateTime = invalidateTime;
    this.createTimeStr = createTimeStr;
    this.msgTypeStr = msgTypeStr;
  }

  @Override
  public Builder newBuilder() {
    Builder builder = new Builder();
    builder.id = id;
    builder.fromUserId = fromUserId;
    builder.toUserId = toUserId;
    builder.msgType = msgType;
    builder.nativeUrl = nativeUrl;
    builder.url = url;
    builder.content = content;
    builder.createTime = createTime;
    builder.state = state;
    builder.invalidateTime = invalidateTime;
    builder.createTimeStr = createTimeStr;
    builder.msgTypeStr = msgTypeStr;
    builder.addUnknownFields(unknownFields());
    return builder;
  }

  @Override
  public boolean equals(Object other) {
    if (other == this) return true;
    if (!(other instanceof SystemMessage)) return false;
    SystemMessage o = (SystemMessage) other;
    return unknownFields().equals(o.unknownFields())
        && Internal.equals(id, o.id)
        && Internal.equals(fromUserId, o.fromUserId)
        && Internal.equals(toUserId, o.toUserId)
        && Internal.equals(msgType, o.msgType)
        && Internal.equals(nativeUrl, o.nativeUrl)
        && Internal.equals(url, o.url)
        && Internal.equals(content, o.content)
        && Internal.equals(createTime, o.createTime)
        && Internal.equals(state, o.state)
        && Internal.equals(invalidateTime, o.invalidateTime)
        && Internal.equals(createTimeStr, o.createTimeStr)
        && Internal.equals(msgTypeStr, o.msgTypeStr);
  }

  @Override
  public int hashCode() {
    int result = super.hashCode;
    if (result == 0) {
      result = unknownFields().hashCode();
      result = result * 37 + (id != null ? id.hashCode() : 0);
      result = result * 37 + (fromUserId != null ? fromUserId.hashCode() : 0);
      result = result * 37 + (toUserId != null ? toUserId.hashCode() : 0);
      result = result * 37 + (msgType != null ? msgType.hashCode() : 0);
      result = result * 37 + (nativeUrl != null ? nativeUrl.hashCode() : 0);
      result = result * 37 + (url != null ? url.hashCode() : 0);
      result = result * 37 + (content != null ? content.hashCode() : 0);
      result = result * 37 + (createTime != null ? createTime.hashCode() : 0);
      result = result * 37 + (state != null ? state.hashCode() : 0);
      result = result * 37 + (invalidateTime != null ? invalidateTime.hashCode() : 0);
      result = result * 37 + (createTimeStr != null ? createTimeStr.hashCode() : 0);
      result = result * 37 + (msgTypeStr != null ? msgTypeStr.hashCode() : 0);
      super.hashCode = result;
    }
    return result;
  }

  @Override
  public String toString() {
    StringBuilder builder = new StringBuilder();
    if (id != null) builder.append(", id=").append(id);
    if (fromUserId != null) builder.append(", fromUserId=").append(fromUserId);
    if (toUserId != null) builder.append(", toUserId=").append(toUserId);
    if (msgType != null) builder.append(", msgType=").append(msgType);
    if (nativeUrl != null) builder.append(", nativeUrl=").append(nativeUrl);
    if (url != null) builder.append(", url=").append(url);
    if (content != null) builder.append(", content=").append(content);
    if (createTime != null) builder.append(", createTime=").append(createTime);
    if (state != null) builder.append(", state=").append(state);
    if (invalidateTime != null) builder.append(", invalidateTime=").append(invalidateTime);
    if (createTimeStr != null) builder.append(", createTimeStr=").append(createTimeStr);
    if (msgTypeStr != null) builder.append(", msgTypeStr=").append(msgTypeStr);
    return builder.replace(0, 2, "SystemMessage{").append('}').toString();
  }

  public static final class Builder extends Message.Builder<SystemMessage, Builder> {
    public Long id;

    public Long fromUserId;

    public Long toUserId;

    public Integer msgType;

    public String nativeUrl;

    public String url;

    public String content;

    public Long createTime;

    public Integer state;

    public Long invalidateTime;

    public String createTimeStr;

    public String msgTypeStr;

    public Builder() {
    }

    /**
     * 消息id
     */
    public Builder id(Long id) {
      this.id = id;
      return this;
    }

    /**
     * 发送用户id 默认0标识系统
     */
    public Builder fromUserId(Long fromUserId) {
      this.fromUserId = fromUserId;
      return this;
    }

    /**
     * 接收用户id
     */
    public Builder toUserId(Long toUserId) {
      this.toUserId = toUserId;
      return this;
    }

    /**
     * 消息类型
     */
    public Builder msgType(Integer msgType) {
      this.msgType = msgType;
      return this;
    }

    /**
     * 客户端跳转链接
     */
    public Builder nativeUrl(String nativeUrl) {
      this.nativeUrl = nativeUrl;
      return this;
    }

    /**
     * 跳转url
     */
    public Builder url(String url) {
      this.url = url;
      return this;
    }

    /**
     * 发送消息的内容
     */
    public Builder content(String content) {
      this.content = content;
      return this;
    }

    /**
     * 消息发送时间
     */
    public Builder createTime(Long createTime) {
      this.createTime = createTime;
      return this;
    }

    /**
     * 该消息是否已读 0-未读 1-已读
     */
    public Builder state(Integer state) {
      this.state = state;
      return this;
    }

    /**
     * 失效时间
     */
    public Builder invalidateTime(Long invalidateTime) {
      this.invalidateTime = invalidateTime;
      return this;
    }

    public Builder createTimeStr(String createTimeStr) {
      this.createTimeStr = createTimeStr;
      return this;
    }

    /**
     * 消息类型描述
     */
    public Builder msgTypeStr(String msgTypeStr) {
      this.msgTypeStr = msgTypeStr;
      return this;
    }

    @Override
    public SystemMessage build() {
      return new SystemMessage(id, fromUserId, toUserId, msgType, nativeUrl, url, content, createTime, state, invalidateTime, createTimeStr, msgTypeStr, super.buildUnknownFields());
    }
  }

  private static final class ProtoAdapter_SystemMessage extends ProtoAdapter<SystemMessage> {
    ProtoAdapter_SystemMessage() {
      super(FieldEncoding.LENGTH_DELIMITED, SystemMessage.class);
    }

    @Override
    public int encodedSize(SystemMessage value) {
      return (value.id != null ? ProtoAdapter.UINT64.encodedSizeWithTag(1, value.id) : 0)
          + (value.fromUserId != null ? ProtoAdapter.UINT64.encodedSizeWithTag(2, value.fromUserId) : 0)
          + (value.toUserId != null ? ProtoAdapter.UINT64.encodedSizeWithTag(3, value.toUserId) : 0)
          + (value.msgType != null ? ProtoAdapter.UINT32.encodedSizeWithTag(4, value.msgType) : 0)
          + (value.nativeUrl != null ? ProtoAdapter.STRING.encodedSizeWithTag(5, value.nativeUrl) : 0)
          + (value.url != null ? ProtoAdapter.STRING.encodedSizeWithTag(6, value.url) : 0)
          + (value.content != null ? ProtoAdapter.STRING.encodedSizeWithTag(7, value.content) : 0)
          + (value.createTime != null ? ProtoAdapter.UINT64.encodedSizeWithTag(8, value.createTime) : 0)
          + (value.state != null ? ProtoAdapter.UINT32.encodedSizeWithTag(9, value.state) : 0)
          + (value.invalidateTime != null ? ProtoAdapter.UINT64.encodedSizeWithTag(10, value.invalidateTime) : 0)
          + (value.createTimeStr != null ? ProtoAdapter.STRING.encodedSizeWithTag(11, value.createTimeStr) : 0)
          + (value.msgTypeStr != null ? ProtoAdapter.STRING.encodedSizeWithTag(12, value.msgTypeStr) : 0)
          + value.unknownFields().size();
    }

    @Override
    public void encode(ProtoWriter writer, SystemMessage value) throws IOException {
      if (value.id != null) ProtoAdapter.UINT64.encodeWithTag(writer, 1, value.id);
      if (value.fromUserId != null) ProtoAdapter.UINT64.encodeWithTag(writer, 2, value.fromUserId);
      if (value.toUserId != null) ProtoAdapter.UINT64.encodeWithTag(writer, 3, value.toUserId);
      if (value.msgType != null) ProtoAdapter.UINT32.encodeWithTag(writer, 4, value.msgType);
      if (value.nativeUrl != null) ProtoAdapter.STRING.encodeWithTag(writer, 5, value.nativeUrl);
      if (value.url != null) ProtoAdapter.STRING.encodeWithTag(writer, 6, value.url);
      if (value.content != null) ProtoAdapter.STRING.encodeWithTag(writer, 7, value.content);
      if (value.createTime != null) ProtoAdapter.UINT64.encodeWithTag(writer, 8, value.createTime);
      if (value.state != null) ProtoAdapter.UINT32.encodeWithTag(writer, 9, value.state);
      if (value.invalidateTime != null) ProtoAdapter.UINT64.encodeWithTag(writer, 10, value.invalidateTime);
      if (value.createTimeStr != null) ProtoAdapter.STRING.encodeWithTag(writer, 11, value.createTimeStr);
      if (value.msgTypeStr != null) ProtoAdapter.STRING.encodeWithTag(writer, 12, value.msgTypeStr);
      writer.writeBytes(value.unknownFields());
    }

    @Override
    public SystemMessage decode(ProtoReader reader) throws IOException {
      Builder builder = new Builder();
      long token = reader.beginMessage();
      for (int tag; (tag = reader.nextTag()) != -1;) {
        switch (tag) {
          case 1: builder.id(ProtoAdapter.UINT64.decode(reader)); break;
          case 2: builder.fromUserId(ProtoAdapter.UINT64.decode(reader)); break;
          case 3: builder.toUserId(ProtoAdapter.UINT64.decode(reader)); break;
          case 4: builder.msgType(ProtoAdapter.UINT32.decode(reader)); break;
          case 5: builder.nativeUrl(ProtoAdapter.STRING.decode(reader)); break;
          case 6: builder.url(ProtoAdapter.STRING.decode(reader)); break;
          case 7: builder.content(ProtoAdapter.STRING.decode(reader)); break;
          case 8: builder.createTime(ProtoAdapter.UINT64.decode(reader)); break;
          case 9: builder.state(ProtoAdapter.UINT32.decode(reader)); break;
          case 10: builder.invalidateTime(ProtoAdapter.UINT64.decode(reader)); break;
          case 11: builder.createTimeStr(ProtoAdapter.STRING.decode(reader)); break;
          case 12: builder.msgTypeStr(ProtoAdapter.STRING.decode(reader)); break;
          default: {
            FieldEncoding fieldEncoding = reader.peekFieldEncoding();
            Object value = fieldEncoding.rawProtoAdapter().decode(reader);
            builder.addUnknownField(tag, fieldEncoding, value);
          }
        }
      }
      reader.endMessage(token);
      return builder.build();
    }

    @Override
    public SystemMessage redact(SystemMessage value) {
      Builder builder = value.newBuilder();
      builder.clearUnknownFields();
      return builder.build();
    }
  }
}
