// Code generated by Wire protocol buffer compiler, do not edit.
// Source file: SaasModel.proto at 707:1
package com.yijianyi.protocol;

import com.squareup.wire.FieldEncoding;
import com.squareup.wire.Message;
import com.squareup.wire.ProtoAdapter;
import com.squareup.wire.ProtoReader;
import com.squareup.wire.ProtoWriter;
import com.squareup.wire.WireField;
import com.squareup.wire.internal.Internal;
import java.io.IOException;
import java.lang.Integer;
import java.lang.Long;
import java.lang.Object;
import java.lang.Override;
import java.lang.String;
import java.lang.StringBuilder;
import okio.ByteString;

public final class OrgTag extends Message<OrgTag, OrgTag.Builder> {
  public static final ProtoAdapter<OrgTag> ADAPTER = new ProtoAdapter_OrgTag();

  private static final long serialVersionUID = 0L;

  public static final Long DEFAULT_ID = 0L;

  public static final Long DEFAULT_TAGID = 0L;

  public static final Long DEFAULT_ORGID = 0L;

  public static final Integer DEFAULT_ORDER = 0;

  public static final String DEFAULT_ORGNAME = "";

  public static final Integer DEFAULT_STATE = 0;

  public static final Long DEFAULT_CREATESTAFFID = 0L;

  public static final String DEFAULT_CREATESTAFFNAME = "";

  public static final Long DEFAULT_CREATETIME = 0L;

  /**
   * id
   */
  @WireField(
      tag = 1,
      adapter = "com.squareup.wire.ProtoAdapter#UINT64"
  )
  public final Long id;

  /**
   * 标签id
   */
  @WireField(
      tag = 2,
      adapter = "com.squareup.wire.ProtoAdapter#UINT64"
  )
  public final Long tagId;

  /**
   * 机构id
   */
  @WireField(
      tag = 3,
      adapter = "com.squareup.wire.ProtoAdapter#UINT64"
  )
  public final Long orgId;

  /**
   * 标签顺序
   */
  @WireField(
      tag = 4,
      adapter = "com.squareup.wire.ProtoAdapter#UINT32"
  )
  public final Integer order;

  /**
   * 机构名
   */
  @WireField(
      tag = 5,
      adapter = "com.squareup.wire.ProtoAdapter#STRING"
  )
  public final String orgName;

  /**
   * 状态 -1 已删除 0 正常
   */
  @WireField(
      tag = 6,
      adapter = "com.squareup.wire.ProtoAdapter#UINT32"
  )
  public final Integer state;

  /**
   * 创建员工id
   */
  @WireField(
      tag = 7,
      adapter = "com.squareup.wire.ProtoAdapter#UINT64"
  )
  public final Long createStaffId;

  /**
   * 创建员工姓名
   */
  @WireField(
      tag = 8,
      adapter = "com.squareup.wire.ProtoAdapter#STRING"
  )
  public final String createStaffName;

  /**
   * 创建时间
   */
  @WireField(
      tag = 9,
      adapter = "com.squareup.wire.ProtoAdapter#UINT64"
  )
  public final Long createTime;

  public OrgTag(Long id, Long tagId, Long orgId, Integer order, String orgName, Integer state, Long createStaffId, String createStaffName, Long createTime) {
    this(id, tagId, orgId, order, orgName, state, createStaffId, createStaffName, createTime, ByteString.EMPTY);
  }

  public OrgTag(Long id, Long tagId, Long orgId, Integer order, String orgName, Integer state, Long createStaffId, String createStaffName, Long createTime, ByteString unknownFields) {
    super(ADAPTER, unknownFields);
    this.id = id;
    this.tagId = tagId;
    this.orgId = orgId;
    this.order = order;
    this.orgName = orgName;
    this.state = state;
    this.createStaffId = createStaffId;
    this.createStaffName = createStaffName;
    this.createTime = createTime;
  }

  @Override
  public Builder newBuilder() {
    Builder builder = new Builder();
    builder.id = id;
    builder.tagId = tagId;
    builder.orgId = orgId;
    builder.order = order;
    builder.orgName = orgName;
    builder.state = state;
    builder.createStaffId = createStaffId;
    builder.createStaffName = createStaffName;
    builder.createTime = createTime;
    builder.addUnknownFields(unknownFields());
    return builder;
  }

  @Override
  public boolean equals(Object other) {
    if (other == this) return true;
    if (!(other instanceof OrgTag)) return false;
    OrgTag o = (OrgTag) other;
    return unknownFields().equals(o.unknownFields())
        && Internal.equals(id, o.id)
        && Internal.equals(tagId, o.tagId)
        && Internal.equals(orgId, o.orgId)
        && Internal.equals(order, o.order)
        && Internal.equals(orgName, o.orgName)
        && Internal.equals(state, o.state)
        && Internal.equals(createStaffId, o.createStaffId)
        && Internal.equals(createStaffName, o.createStaffName)
        && Internal.equals(createTime, o.createTime);
  }

  @Override
  public int hashCode() {
    int result = super.hashCode;
    if (result == 0) {
      result = unknownFields().hashCode();
      result = result * 37 + (id != null ? id.hashCode() : 0);
      result = result * 37 + (tagId != null ? tagId.hashCode() : 0);
      result = result * 37 + (orgId != null ? orgId.hashCode() : 0);
      result = result * 37 + (order != null ? order.hashCode() : 0);
      result = result * 37 + (orgName != null ? orgName.hashCode() : 0);
      result = result * 37 + (state != null ? state.hashCode() : 0);
      result = result * 37 + (createStaffId != null ? createStaffId.hashCode() : 0);
      result = result * 37 + (createStaffName != null ? createStaffName.hashCode() : 0);
      result = result * 37 + (createTime != null ? createTime.hashCode() : 0);
      super.hashCode = result;
    }
    return result;
  }

  @Override
  public String toString() {
    StringBuilder builder = new StringBuilder();
    if (id != null) builder.append(", id=").append(id);
    if (tagId != null) builder.append(", tagId=").append(tagId);
    if (orgId != null) builder.append(", orgId=").append(orgId);
    if (order != null) builder.append(", order=").append(order);
    if (orgName != null) builder.append(", orgName=").append(orgName);
    if (state != null) builder.append(", state=").append(state);
    if (createStaffId != null) builder.append(", createStaffId=").append(createStaffId);
    if (createStaffName != null) builder.append(", createStaffName=").append(createStaffName);
    if (createTime != null) builder.append(", createTime=").append(createTime);
    return builder.replace(0, 2, "OrgTag{").append('}').toString();
  }

  public static final class Builder extends Message.Builder<OrgTag, Builder> {
    public Long id;

    public Long tagId;

    public Long orgId;

    public Integer order;

    public String orgName;

    public Integer state;

    public Long createStaffId;

    public String createStaffName;

    public Long createTime;

    public Builder() {
    }

    /**
     * id
     */
    public Builder id(Long id) {
      this.id = id;
      return this;
    }

    /**
     * 标签id
     */
    public Builder tagId(Long tagId) {
      this.tagId = tagId;
      return this;
    }

    /**
     * 机构id
     */
    public Builder orgId(Long orgId) {
      this.orgId = orgId;
      return this;
    }

    /**
     * 标签顺序
     */
    public Builder order(Integer order) {
      this.order = order;
      return this;
    }

    /**
     * 机构名
     */
    public Builder orgName(String orgName) {
      this.orgName = orgName;
      return this;
    }

    /**
     * 状态 -1 已删除 0 正常
     */
    public Builder state(Integer state) {
      this.state = state;
      return this;
    }

    /**
     * 创建员工id
     */
    public Builder createStaffId(Long createStaffId) {
      this.createStaffId = createStaffId;
      return this;
    }

    /**
     * 创建员工姓名
     */
    public Builder createStaffName(String createStaffName) {
      this.createStaffName = createStaffName;
      return this;
    }

    /**
     * 创建时间
     */
    public Builder createTime(Long createTime) {
      this.createTime = createTime;
      return this;
    }

    @Override
    public OrgTag build() {
      return new OrgTag(id, tagId, orgId, order, orgName, state, createStaffId, createStaffName, createTime, super.buildUnknownFields());
    }
  }

  private static final class ProtoAdapter_OrgTag extends ProtoAdapter<OrgTag> {
    ProtoAdapter_OrgTag() {
      super(FieldEncoding.LENGTH_DELIMITED, OrgTag.class);
    }

    @Override
    public int encodedSize(OrgTag value) {
      return (value.id != null ? ProtoAdapter.UINT64.encodedSizeWithTag(1, value.id) : 0)
          + (value.tagId != null ? ProtoAdapter.UINT64.encodedSizeWithTag(2, value.tagId) : 0)
          + (value.orgId != null ? ProtoAdapter.UINT64.encodedSizeWithTag(3, value.orgId) : 0)
          + (value.order != null ? ProtoAdapter.UINT32.encodedSizeWithTag(4, value.order) : 0)
          + (value.orgName != null ? ProtoAdapter.STRING.encodedSizeWithTag(5, value.orgName) : 0)
          + (value.state != null ? ProtoAdapter.UINT32.encodedSizeWithTag(6, value.state) : 0)
          + (value.createStaffId != null ? ProtoAdapter.UINT64.encodedSizeWithTag(7, value.createStaffId) : 0)
          + (value.createStaffName != null ? ProtoAdapter.STRING.encodedSizeWithTag(8, value.createStaffName) : 0)
          + (value.createTime != null ? ProtoAdapter.UINT64.encodedSizeWithTag(9, value.createTime) : 0)
          + value.unknownFields().size();
    }

    @Override
    public void encode(ProtoWriter writer, OrgTag value) throws IOException {
      if (value.id != null) ProtoAdapter.UINT64.encodeWithTag(writer, 1, value.id);
      if (value.tagId != null) ProtoAdapter.UINT64.encodeWithTag(writer, 2, value.tagId);
      if (value.orgId != null) ProtoAdapter.UINT64.encodeWithTag(writer, 3, value.orgId);
      if (value.order != null) ProtoAdapter.UINT32.encodeWithTag(writer, 4, value.order);
      if (value.orgName != null) ProtoAdapter.STRING.encodeWithTag(writer, 5, value.orgName);
      if (value.state != null) ProtoAdapter.UINT32.encodeWithTag(writer, 6, value.state);
      if (value.createStaffId != null) ProtoAdapter.UINT64.encodeWithTag(writer, 7, value.createStaffId);
      if (value.createStaffName != null) ProtoAdapter.STRING.encodeWithTag(writer, 8, value.createStaffName);
      if (value.createTime != null) ProtoAdapter.UINT64.encodeWithTag(writer, 9, value.createTime);
      writer.writeBytes(value.unknownFields());
    }

    @Override
    public OrgTag decode(ProtoReader reader) throws IOException {
      Builder builder = new Builder();
      long token = reader.beginMessage();
      for (int tag; (tag = reader.nextTag()) != -1;) {
        switch (tag) {
          case 1: builder.id(ProtoAdapter.UINT64.decode(reader)); break;
          case 2: builder.tagId(ProtoAdapter.UINT64.decode(reader)); break;
          case 3: builder.orgId(ProtoAdapter.UINT64.decode(reader)); break;
          case 4: builder.order(ProtoAdapter.UINT32.decode(reader)); break;
          case 5: builder.orgName(ProtoAdapter.STRING.decode(reader)); break;
          case 6: builder.state(ProtoAdapter.UINT32.decode(reader)); break;
          case 7: builder.createStaffId(ProtoAdapter.UINT64.decode(reader)); break;
          case 8: builder.createStaffName(ProtoAdapter.STRING.decode(reader)); break;
          case 9: builder.createTime(ProtoAdapter.UINT64.decode(reader)); break;
          default: {
            FieldEncoding fieldEncoding = reader.peekFieldEncoding();
            Object value = fieldEncoding.rawProtoAdapter().decode(reader);
            builder.addUnknownField(tag, fieldEncoding, value);
          }
        }
      }
      reader.endMessage(token);
      return builder.build();
    }

    @Override
    public OrgTag redact(OrgTag value) {
      Builder builder = value.newBuilder();
      builder.clearUnknownFields();
      return builder.build();
    }
  }
}
