// Code generated by Wire protocol buffer compiler, do not edit.
// Source file: SaasModel.proto at 321:1
package com.yijianyi.protocol;

import com.squareup.wire.FieldEncoding;
import com.squareup.wire.Message;
import com.squareup.wire.ProtoAdapter;
import com.squareup.wire.ProtoReader;
import com.squareup.wire.ProtoWriter;
import com.squareup.wire.WireField;
import com.squareup.wire.internal.Internal;
import java.io.IOException;
import java.lang.Integer;
import java.lang.Long;
import java.lang.Object;
import java.lang.Override;
import java.lang.String;
import java.lang.StringBuilder;
import java.util.List;
import okio.ByteString;

/**
 *  权限配置
 */
public final class RightConfig extends Message<RightConfig, RightConfig.Builder> {
  public static final ProtoAdapter<RightConfig> ADAPTER = new ProtoAdapter_RightConfig();

  private static final long serialVersionUID = 0L;

  public static final Long DEFAULT_ID = 0L;

  public static final Long DEFAULT_COMPANYID = 0L;

  public static final Long DEFAULT_ROLEID = 0L;

  public static final Integer DEFAULT_SCOPETYPE = 0;

  public static final Long DEFAULT_CREATETIME = 0L;

  public static final Long DEFAULT_CREATESTAFFID = 0L;

  public static final String DEFAULT_CREATESTAFFNAME = "";

  /**
   * id
   */
  @WireField(
      tag = 1,
      adapter = "com.squareup.wire.ProtoAdapter#UINT64"
  )
  public final Long id;

  /**
   *  公司id
   */
  @WireField(
      tag = 2,
      adapter = "com.squareup.wire.ProtoAdapter#UINT64"
  )
  public final Long companyId;

  /**
   *  角色id
   */
  @WireField(
      tag = 3,
      adapter = "com.squareup.wire.ProtoAdapter#UINT64"
  )
  public final Long roleId;

  /**
   *  护工id集合
   */
  @WireField(
      tag = 4,
      adapter = "com.squareup.wire.ProtoAdapter#UINT64",
      label = WireField.Label.REPEATED
  )
  public final List<Long> hgIdList;

  /**
   *  1-全公司  2-指定机构 3-指定科室 4-指定员工
   */
  @WireField(
      tag = 5,
      adapter = "com.squareup.wire.ProtoAdapter#UINT32"
  )
  public final Integer scopeType;

  /**
   *  特定部门ID列表
   */
  @WireField(
      tag = 6,
      adapter = "com.squareup.wire.ProtoAdapter#UINT64",
      label = WireField.Label.REPEATED
  )
  public final List<Long> scopeList;

  /**
   *  权限列表
   */
  @WireField(
      tag = 7,
      adapter = "com.squareup.wire.ProtoAdapter#STRING",
      label = WireField.Label.REPEATED
  )
  public final List<String> rightList;

  /**
   *  创建时间
   */
  @WireField(
      tag = 8,
      adapter = "com.squareup.wire.ProtoAdapter#UINT64"
  )
  public final Long createTime;

  @WireField(
      tag = 9,
      adapter = "com.squareup.wire.ProtoAdapter#UINT64"
  )
  public final Long createStaffId;

  @WireField(
      tag = 10,
      adapter = "com.squareup.wire.ProtoAdapter#STRING"
  )
  public final String createStaffName;

  public RightConfig(Long id, Long companyId, Long roleId, List<Long> hgIdList, Integer scopeType, List<Long> scopeList, List<String> rightList, Long createTime, Long createStaffId, String createStaffName) {
    this(id, companyId, roleId, hgIdList, scopeType, scopeList, rightList, createTime, createStaffId, createStaffName, ByteString.EMPTY);
  }

  public RightConfig(Long id, Long companyId, Long roleId, List<Long> hgIdList, Integer scopeType, List<Long> scopeList, List<String> rightList, Long createTime, Long createStaffId, String createStaffName, ByteString unknownFields) {
    super(ADAPTER, unknownFields);
    this.id = id;
    this.companyId = companyId;
    this.roleId = roleId;
    this.hgIdList = Internal.immutableCopyOf("hgIdList", hgIdList);
    this.scopeType = scopeType;
    this.scopeList = Internal.immutableCopyOf("scopeList", scopeList);
    this.rightList = Internal.immutableCopyOf("rightList", rightList);
    this.createTime = createTime;
    this.createStaffId = createStaffId;
    this.createStaffName = createStaffName;
  }

  @Override
  public Builder newBuilder() {
    Builder builder = new Builder();
    builder.id = id;
    builder.companyId = companyId;
    builder.roleId = roleId;
    builder.hgIdList = Internal.copyOf("hgIdList", hgIdList);
    builder.scopeType = scopeType;
    builder.scopeList = Internal.copyOf("scopeList", scopeList);
    builder.rightList = Internal.copyOf("rightList", rightList);
    builder.createTime = createTime;
    builder.createStaffId = createStaffId;
    builder.createStaffName = createStaffName;
    builder.addUnknownFields(unknownFields());
    return builder;
  }

  @Override
  public boolean equals(Object other) {
    if (other == this) return true;
    if (!(other instanceof RightConfig)) return false;
    RightConfig o = (RightConfig) other;
    return unknownFields().equals(o.unknownFields())
        && Internal.equals(id, o.id)
        && Internal.equals(companyId, o.companyId)
        && Internal.equals(roleId, o.roleId)
        && hgIdList.equals(o.hgIdList)
        && Internal.equals(scopeType, o.scopeType)
        && scopeList.equals(o.scopeList)
        && rightList.equals(o.rightList)
        && Internal.equals(createTime, o.createTime)
        && Internal.equals(createStaffId, o.createStaffId)
        && Internal.equals(createStaffName, o.createStaffName);
  }

  @Override
  public int hashCode() {
    int result = super.hashCode;
    if (result == 0) {
      result = unknownFields().hashCode();
      result = result * 37 + (id != null ? id.hashCode() : 0);
      result = result * 37 + (companyId != null ? companyId.hashCode() : 0);
      result = result * 37 + (roleId != null ? roleId.hashCode() : 0);
      result = result * 37 + hgIdList.hashCode();
      result = result * 37 + (scopeType != null ? scopeType.hashCode() : 0);
      result = result * 37 + scopeList.hashCode();
      result = result * 37 + rightList.hashCode();
      result = result * 37 + (createTime != null ? createTime.hashCode() : 0);
      result = result * 37 + (createStaffId != null ? createStaffId.hashCode() : 0);
      result = result * 37 + (createStaffName != null ? createStaffName.hashCode() : 0);
      super.hashCode = result;
    }
    return result;
  }

  @Override
  public String toString() {
    StringBuilder builder = new StringBuilder();
    if (id != null) builder.append(", id=").append(id);
    if (companyId != null) builder.append(", companyId=").append(companyId);
    if (roleId != null) builder.append(", roleId=").append(roleId);
    if (!hgIdList.isEmpty()) builder.append(", hgIdList=").append(hgIdList);
    if (scopeType != null) builder.append(", scopeType=").append(scopeType);
    if (!scopeList.isEmpty()) builder.append(", scopeList=").append(scopeList);
    if (!rightList.isEmpty()) builder.append(", rightList=").append(rightList);
    if (createTime != null) builder.append(", createTime=").append(createTime);
    if (createStaffId != null) builder.append(", createStaffId=").append(createStaffId);
    if (createStaffName != null) builder.append(", createStaffName=").append(createStaffName);
    return builder.replace(0, 2, "RightConfig{").append('}').toString();
  }

  public static final class Builder extends Message.Builder<RightConfig, Builder> {
    public Long id;

    public Long companyId;

    public Long roleId;

    public List<Long> hgIdList;

    public Integer scopeType;

    public List<Long> scopeList;

    public List<String> rightList;

    public Long createTime;

    public Long createStaffId;

    public String createStaffName;

    public Builder() {
      hgIdList = Internal.newMutableList();
      scopeList = Internal.newMutableList();
      rightList = Internal.newMutableList();
    }

    /**
     * id
     */
    public Builder id(Long id) {
      this.id = id;
      return this;
    }

    /**
     *  公司id
     */
    public Builder companyId(Long companyId) {
      this.companyId = companyId;
      return this;
    }

    /**
     *  角色id
     */
    public Builder roleId(Long roleId) {
      this.roleId = roleId;
      return this;
    }

    /**
     *  护工id集合
     */
    public Builder hgIdList(List<Long> hgIdList) {
      Internal.checkElementsNotNull(hgIdList);
      this.hgIdList = hgIdList;
      return this;
    }

    /**
     *  1-全公司  2-指定机构 3-指定科室 4-指定员工
     */
    public Builder scopeType(Integer scopeType) {
      this.scopeType = scopeType;
      return this;
    }

    /**
     *  特定部门ID列表
     */
    public Builder scopeList(List<Long> scopeList) {
      Internal.checkElementsNotNull(scopeList);
      this.scopeList = scopeList;
      return this;
    }

    /**
     *  权限列表
     */
    public Builder rightList(List<String> rightList) {
      Internal.checkElementsNotNull(rightList);
      this.rightList = rightList;
      return this;
    }

    /**
     *  创建时间
     */
    public Builder createTime(Long createTime) {
      this.createTime = createTime;
      return this;
    }

    public Builder createStaffId(Long createStaffId) {
      this.createStaffId = createStaffId;
      return this;
    }

    public Builder createStaffName(String createStaffName) {
      this.createStaffName = createStaffName;
      return this;
    }

    @Override
    public RightConfig build() {
      return new RightConfig(id, companyId, roleId, hgIdList, scopeType, scopeList, rightList, createTime, createStaffId, createStaffName, super.buildUnknownFields());
    }
  }

  private static final class ProtoAdapter_RightConfig extends ProtoAdapter<RightConfig> {
    ProtoAdapter_RightConfig() {
      super(FieldEncoding.LENGTH_DELIMITED, RightConfig.class);
    }

    @Override
    public int encodedSize(RightConfig value) {
      return (value.id != null ? ProtoAdapter.UINT64.encodedSizeWithTag(1, value.id) : 0)
          + (value.companyId != null ? ProtoAdapter.UINT64.encodedSizeWithTag(2, value.companyId) : 0)
          + (value.roleId != null ? ProtoAdapter.UINT64.encodedSizeWithTag(3, value.roleId) : 0)
          + ProtoAdapter.UINT64.asRepeated().encodedSizeWithTag(4, value.hgIdList)
          + (value.scopeType != null ? ProtoAdapter.UINT32.encodedSizeWithTag(5, value.scopeType) : 0)
          + ProtoAdapter.UINT64.asRepeated().encodedSizeWithTag(6, value.scopeList)
          + ProtoAdapter.STRING.asRepeated().encodedSizeWithTag(7, value.rightList)
          + (value.createTime != null ? ProtoAdapter.UINT64.encodedSizeWithTag(8, value.createTime) : 0)
          + (value.createStaffId != null ? ProtoAdapter.UINT64.encodedSizeWithTag(9, value.createStaffId) : 0)
          + (value.createStaffName != null ? ProtoAdapter.STRING.encodedSizeWithTag(10, value.createStaffName) : 0)
          + value.unknownFields().size();
    }

    @Override
    public void encode(ProtoWriter writer, RightConfig value) throws IOException {
      if (value.id != null) ProtoAdapter.UINT64.encodeWithTag(writer, 1, value.id);
      if (value.companyId != null) ProtoAdapter.UINT64.encodeWithTag(writer, 2, value.companyId);
      if (value.roleId != null) ProtoAdapter.UINT64.encodeWithTag(writer, 3, value.roleId);
      ProtoAdapter.UINT64.asRepeated().encodeWithTag(writer, 4, value.hgIdList);
      if (value.scopeType != null) ProtoAdapter.UINT32.encodeWithTag(writer, 5, value.scopeType);
      ProtoAdapter.UINT64.asRepeated().encodeWithTag(writer, 6, value.scopeList);
      ProtoAdapter.STRING.asRepeated().encodeWithTag(writer, 7, value.rightList);
      if (value.createTime != null) ProtoAdapter.UINT64.encodeWithTag(writer, 8, value.createTime);
      if (value.createStaffId != null) ProtoAdapter.UINT64.encodeWithTag(writer, 9, value.createStaffId);
      if (value.createStaffName != null) ProtoAdapter.STRING.encodeWithTag(writer, 10, value.createStaffName);
      writer.writeBytes(value.unknownFields());
    }

    @Override
    public RightConfig decode(ProtoReader reader) throws IOException {
      Builder builder = new Builder();
      long token = reader.beginMessage();
      for (int tag; (tag = reader.nextTag()) != -1;) {
        switch (tag) {
          case 1: builder.id(ProtoAdapter.UINT64.decode(reader)); break;
          case 2: builder.companyId(ProtoAdapter.UINT64.decode(reader)); break;
          case 3: builder.roleId(ProtoAdapter.UINT64.decode(reader)); break;
          case 4: builder.hgIdList.add(ProtoAdapter.UINT64.decode(reader)); break;
          case 5: builder.scopeType(ProtoAdapter.UINT32.decode(reader)); break;
          case 6: builder.scopeList.add(ProtoAdapter.UINT64.decode(reader)); break;
          case 7: builder.rightList.add(ProtoAdapter.STRING.decode(reader)); break;
          case 8: builder.createTime(ProtoAdapter.UINT64.decode(reader)); break;
          case 9: builder.createStaffId(ProtoAdapter.UINT64.decode(reader)); break;
          case 10: builder.createStaffName(ProtoAdapter.STRING.decode(reader)); break;
          default: {
            FieldEncoding fieldEncoding = reader.peekFieldEncoding();
            Object value = fieldEncoding.rawProtoAdapter().decode(reader);
            builder.addUnknownField(tag, fieldEncoding, value);
          }
        }
      }
      reader.endMessage(token);
      return builder.build();
    }

    @Override
    public RightConfig redact(RightConfig value) {
      Builder builder = value.newBuilder();
      builder.clearUnknownFields();
      return builder.build();
    }
  }
}
