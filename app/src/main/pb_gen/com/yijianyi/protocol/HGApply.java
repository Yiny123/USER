// Code generated by Wire protocol buffer compiler, do not edit.
// Source file: SaasModel.proto at 1389:1
package com.yijianyi.protocol;

import com.squareup.wire.FieldEncoding;
import com.squareup.wire.Message;
import com.squareup.wire.ProtoAdapter;
import com.squareup.wire.ProtoReader;
import com.squareup.wire.ProtoWriter;
import com.squareup.wire.WireField;
import com.squareup.wire.internal.Internal;
import java.io.IOException;
import java.lang.Integer;
import java.lang.Long;
import java.lang.Object;
import java.lang.Override;
import java.lang.String;
import java.lang.StringBuilder;
import java.util.List;
import okio.ByteString;

/**
 * 自照护工
 */
public final class HGApply extends Message<HGApply, HGApply.Builder> {
  public static final ProtoAdapter<HGApply> ADAPTER = new ProtoAdapter_HGApply();

  private static final long serialVersionUID = 0L;

  public static final Long DEFAULT_ID = 0L;

  public static final Long DEFAULT_COMPANYID = 0L;

  public static final String DEFAULT_HGNAME = "";

  public static final String DEFAULT_PHONE = "";

  public static final String DEFAULT_IDCARD = "";

  public static final Integer DEFAULT_STATUS = 0;

  public static final Long DEFAULT_SENDSTAFFID = 0L;

  public static final String DEFAULT_SENDSTAFFNAME = "";

  public static final Long DEFAULT_CREATETIME = 0L;

  public static final Long DEFAULT_SENDTIME = 0L;

  public static final Integer DEFAULT_SEX = 0;

  public static final Long DEFAULT_AGE = 0L;

  public static final Long DEFAULT_HGID = 0L;

  @WireField(
      tag = 1,
      adapter = "com.squareup.wire.ProtoAdapter#UINT64"
  )
  public final Long id;

  /**
   * 公司ID
   */
  @WireField(
      tag = 2,
      adapter = "com.squareup.wire.ProtoAdapter#UINT64"
  )
  public final Long companyId;

  /**
   * 姓名
   */
  @WireField(
      tag = 3,
      adapter = "com.squareup.wire.ProtoAdapter#STRING"
  )
  public final String hgName;

  /**
   * 联系电话
   */
  @WireField(
      tag = 4,
      adapter = "com.squareup.wire.ProtoAdapter#STRING"
  )
  public final String phone;

  /**
   * 身份证
   */
  @WireField(
      tag = 5,
      adapter = "com.squareup.wire.ProtoAdapter#STRING"
  )
  public final String idcard;

  /**
   * 获取资质状态 0-未获得 1-已获得
   */
  @WireField(
      tag = 6,
      adapter = "com.squareup.wire.ProtoAdapter#UINT32"
  )
  public final Integer status;

  /**
   * 发放资质员工ID
   */
  @WireField(
      tag = 7,
      adapter = "com.squareup.wire.ProtoAdapter#UINT64"
  )
  public final Long sendStaffId;

  /**
   * 发放资质员工名称
   */
  @WireField(
      tag = 8,
      adapter = "com.squareup.wire.ProtoAdapter#STRING"
  )
  public final String sendStaffName;

  @WireField(
      tag = 9,
      adapter = "com.squareup.wire.ProtoAdapter#UINT64"
  )
  public final Long createTime;

  /**
   * 发放资质时间
   */
  @WireField(
      tag = 10,
      adapter = "com.squareup.wire.ProtoAdapter#UINT64"
  )
  public final Long sendTime;

  /**
   * 性别 0 - 无效; 1 - 男; 2 - 女
   */
  @WireField(
      tag = 11,
      adapter = "com.squareup.wire.ProtoAdapter#UINT32"
  )
  public final Integer sex;

  /**
   * 年龄
   */
  @WireField(
      tag = 12,
      adapter = "com.squareup.wire.ProtoAdapter#UINT64"
  )
  public final Long age;

  /**
   * 发放资质后对应的护工id
   */
  @WireField(
      tag = 13,
      adapter = "com.squareup.wire.ProtoAdapter#UINT64"
  )
  public final Long hgId;

  @WireField(
      tag = 14,
      adapter = "com.squareup.wire.ProtoAdapter#STRING",
      label = WireField.Label.REPEATED
  )
  public final List<String> orderId;

  /**
   * 被陪护人
   */
  @WireField(
      tag = 15,
      adapter = "com.squareup.wire.ProtoAdapter#STRING",
      label = WireField.Label.REPEATED
  )
  public final List<String> fullNames;

  public HGApply(Long id, Long companyId, String hgName, String phone, String idcard, Integer status, Long sendStaffId, String sendStaffName, Long createTime, Long sendTime, Integer sex, Long age, Long hgId, List<String> orderId, List<String> fullNames) {
    this(id, companyId, hgName, phone, idcard, status, sendStaffId, sendStaffName, createTime, sendTime, sex, age, hgId, orderId, fullNames, ByteString.EMPTY);
  }

  public HGApply(Long id, Long companyId, String hgName, String phone, String idcard, Integer status, Long sendStaffId, String sendStaffName, Long createTime, Long sendTime, Integer sex, Long age, Long hgId, List<String> orderId, List<String> fullNames, ByteString unknownFields) {
    super(ADAPTER, unknownFields);
    this.id = id;
    this.companyId = companyId;
    this.hgName = hgName;
    this.phone = phone;
    this.idcard = idcard;
    this.status = status;
    this.sendStaffId = sendStaffId;
    this.sendStaffName = sendStaffName;
    this.createTime = createTime;
    this.sendTime = sendTime;
    this.sex = sex;
    this.age = age;
    this.hgId = hgId;
    this.orderId = Internal.immutableCopyOf("orderId", orderId);
    this.fullNames = Internal.immutableCopyOf("fullNames", fullNames);
  }

  @Override
  public Builder newBuilder() {
    Builder builder = new Builder();
    builder.id = id;
    builder.companyId = companyId;
    builder.hgName = hgName;
    builder.phone = phone;
    builder.idcard = idcard;
    builder.status = status;
    builder.sendStaffId = sendStaffId;
    builder.sendStaffName = sendStaffName;
    builder.createTime = createTime;
    builder.sendTime = sendTime;
    builder.sex = sex;
    builder.age = age;
    builder.hgId = hgId;
    builder.orderId = Internal.copyOf("orderId", orderId);
    builder.fullNames = Internal.copyOf("fullNames", fullNames);
    builder.addUnknownFields(unknownFields());
    return builder;
  }

  @Override
  public boolean equals(Object other) {
    if (other == this) return true;
    if (!(other instanceof HGApply)) return false;
    HGApply o = (HGApply) other;
    return unknownFields().equals(o.unknownFields())
        && Internal.equals(id, o.id)
        && Internal.equals(companyId, o.companyId)
        && Internal.equals(hgName, o.hgName)
        && Internal.equals(phone, o.phone)
        && Internal.equals(idcard, o.idcard)
        && Internal.equals(status, o.status)
        && Internal.equals(sendStaffId, o.sendStaffId)
        && Internal.equals(sendStaffName, o.sendStaffName)
        && Internal.equals(createTime, o.createTime)
        && Internal.equals(sendTime, o.sendTime)
        && Internal.equals(sex, o.sex)
        && Internal.equals(age, o.age)
        && Internal.equals(hgId, o.hgId)
        && orderId.equals(o.orderId)
        && fullNames.equals(o.fullNames);
  }

  @Override
  public int hashCode() {
    int result = super.hashCode;
    if (result == 0) {
      result = unknownFields().hashCode();
      result = result * 37 + (id != null ? id.hashCode() : 0);
      result = result * 37 + (companyId != null ? companyId.hashCode() : 0);
      result = result * 37 + (hgName != null ? hgName.hashCode() : 0);
      result = result * 37 + (phone != null ? phone.hashCode() : 0);
      result = result * 37 + (idcard != null ? idcard.hashCode() : 0);
      result = result * 37 + (status != null ? status.hashCode() : 0);
      result = result * 37 + (sendStaffId != null ? sendStaffId.hashCode() : 0);
      result = result * 37 + (sendStaffName != null ? sendStaffName.hashCode() : 0);
      result = result * 37 + (createTime != null ? createTime.hashCode() : 0);
      result = result * 37 + (sendTime != null ? sendTime.hashCode() : 0);
      result = result * 37 + (sex != null ? sex.hashCode() : 0);
      result = result * 37 + (age != null ? age.hashCode() : 0);
      result = result * 37 + (hgId != null ? hgId.hashCode() : 0);
      result = result * 37 + orderId.hashCode();
      result = result * 37 + fullNames.hashCode();
      super.hashCode = result;
    }
    return result;
  }

  @Override
  public String toString() {
    StringBuilder builder = new StringBuilder();
    if (id != null) builder.append(", id=").append(id);
    if (companyId != null) builder.append(", companyId=").append(companyId);
    if (hgName != null) builder.append(", hgName=").append(hgName);
    if (phone != null) builder.append(", phone=").append(phone);
    if (idcard != null) builder.append(", idcard=").append(idcard);
    if (status != null) builder.append(", status=").append(status);
    if (sendStaffId != null) builder.append(", sendStaffId=").append(sendStaffId);
    if (sendStaffName != null) builder.append(", sendStaffName=").append(sendStaffName);
    if (createTime != null) builder.append(", createTime=").append(createTime);
    if (sendTime != null) builder.append(", sendTime=").append(sendTime);
    if (sex != null) builder.append(", sex=").append(sex);
    if (age != null) builder.append(", age=").append(age);
    if (hgId != null) builder.append(", hgId=").append(hgId);
    if (!orderId.isEmpty()) builder.append(", orderId=").append(orderId);
    if (!fullNames.isEmpty()) builder.append(", fullNames=").append(fullNames);
    return builder.replace(0, 2, "HGApply{").append('}').toString();
  }

  public static final class Builder extends Message.Builder<HGApply, Builder> {
    public Long id;

    public Long companyId;

    public String hgName;

    public String phone;

    public String idcard;

    public Integer status;

    public Long sendStaffId;

    public String sendStaffName;

    public Long createTime;

    public Long sendTime;

    public Integer sex;

    public Long age;

    public Long hgId;

    public List<String> orderId;

    public List<String> fullNames;

    public Builder() {
      orderId = Internal.newMutableList();
      fullNames = Internal.newMutableList();
    }

    public Builder id(Long id) {
      this.id = id;
      return this;
    }

    /**
     * 公司ID
     */
    public Builder companyId(Long companyId) {
      this.companyId = companyId;
      return this;
    }

    /**
     * 姓名
     */
    public Builder hgName(String hgName) {
      this.hgName = hgName;
      return this;
    }

    /**
     * 联系电话
     */
    public Builder phone(String phone) {
      this.phone = phone;
      return this;
    }

    /**
     * 身份证
     */
    public Builder idcard(String idcard) {
      this.idcard = idcard;
      return this;
    }

    /**
     * 获取资质状态 0-未获得 1-已获得
     */
    public Builder status(Integer status) {
      this.status = status;
      return this;
    }

    /**
     * 发放资质员工ID
     */
    public Builder sendStaffId(Long sendStaffId) {
      this.sendStaffId = sendStaffId;
      return this;
    }

    /**
     * 发放资质员工名称
     */
    public Builder sendStaffName(String sendStaffName) {
      this.sendStaffName = sendStaffName;
      return this;
    }

    public Builder createTime(Long createTime) {
      this.createTime = createTime;
      return this;
    }

    /**
     * 发放资质时间
     */
    public Builder sendTime(Long sendTime) {
      this.sendTime = sendTime;
      return this;
    }

    /**
     * 性别 0 - 无效; 1 - 男; 2 - 女
     */
    public Builder sex(Integer sex) {
      this.sex = sex;
      return this;
    }

    /**
     * 年龄
     */
    public Builder age(Long age) {
      this.age = age;
      return this;
    }

    /**
     * 发放资质后对应的护工id
     */
    public Builder hgId(Long hgId) {
      this.hgId = hgId;
      return this;
    }

    public Builder orderId(List<String> orderId) {
      Internal.checkElementsNotNull(orderId);
      this.orderId = orderId;
      return this;
    }

    /**
     * 被陪护人
     */
    public Builder fullNames(List<String> fullNames) {
      Internal.checkElementsNotNull(fullNames);
      this.fullNames = fullNames;
      return this;
    }

    @Override
    public HGApply build() {
      return new HGApply(id, companyId, hgName, phone, idcard, status, sendStaffId, sendStaffName, createTime, sendTime, sex, age, hgId, orderId, fullNames, super.buildUnknownFields());
    }
  }

  private static final class ProtoAdapter_HGApply extends ProtoAdapter<HGApply> {
    ProtoAdapter_HGApply() {
      super(FieldEncoding.LENGTH_DELIMITED, HGApply.class);
    }

    @Override
    public int encodedSize(HGApply value) {
      return (value.id != null ? ProtoAdapter.UINT64.encodedSizeWithTag(1, value.id) : 0)
          + (value.companyId != null ? ProtoAdapter.UINT64.encodedSizeWithTag(2, value.companyId) : 0)
          + (value.hgName != null ? ProtoAdapter.STRING.encodedSizeWithTag(3, value.hgName) : 0)
          + (value.phone != null ? ProtoAdapter.STRING.encodedSizeWithTag(4, value.phone) : 0)
          + (value.idcard != null ? ProtoAdapter.STRING.encodedSizeWithTag(5, value.idcard) : 0)
          + (value.status != null ? ProtoAdapter.UINT32.encodedSizeWithTag(6, value.status) : 0)
          + (value.sendStaffId != null ? ProtoAdapter.UINT64.encodedSizeWithTag(7, value.sendStaffId) : 0)
          + (value.sendStaffName != null ? ProtoAdapter.STRING.encodedSizeWithTag(8, value.sendStaffName) : 0)
          + (value.createTime != null ? ProtoAdapter.UINT64.encodedSizeWithTag(9, value.createTime) : 0)
          + (value.sendTime != null ? ProtoAdapter.UINT64.encodedSizeWithTag(10, value.sendTime) : 0)
          + (value.sex != null ? ProtoAdapter.UINT32.encodedSizeWithTag(11, value.sex) : 0)
          + (value.age != null ? ProtoAdapter.UINT64.encodedSizeWithTag(12, value.age) : 0)
          + (value.hgId != null ? ProtoAdapter.UINT64.encodedSizeWithTag(13, value.hgId) : 0)
          + ProtoAdapter.STRING.asRepeated().encodedSizeWithTag(14, value.orderId)
          + ProtoAdapter.STRING.asRepeated().encodedSizeWithTag(15, value.fullNames)
          + value.unknownFields().size();
    }

    @Override
    public void encode(ProtoWriter writer, HGApply value) throws IOException {
      if (value.id != null) ProtoAdapter.UINT64.encodeWithTag(writer, 1, value.id);
      if (value.companyId != null) ProtoAdapter.UINT64.encodeWithTag(writer, 2, value.companyId);
      if (value.hgName != null) ProtoAdapter.STRING.encodeWithTag(writer, 3, value.hgName);
      if (value.phone != null) ProtoAdapter.STRING.encodeWithTag(writer, 4, value.phone);
      if (value.idcard != null) ProtoAdapter.STRING.encodeWithTag(writer, 5, value.idcard);
      if (value.status != null) ProtoAdapter.UINT32.encodeWithTag(writer, 6, value.status);
      if (value.sendStaffId != null) ProtoAdapter.UINT64.encodeWithTag(writer, 7, value.sendStaffId);
      if (value.sendStaffName != null) ProtoAdapter.STRING.encodeWithTag(writer, 8, value.sendStaffName);
      if (value.createTime != null) ProtoAdapter.UINT64.encodeWithTag(writer, 9, value.createTime);
      if (value.sendTime != null) ProtoAdapter.UINT64.encodeWithTag(writer, 10, value.sendTime);
      if (value.sex != null) ProtoAdapter.UINT32.encodeWithTag(writer, 11, value.sex);
      if (value.age != null) ProtoAdapter.UINT64.encodeWithTag(writer, 12, value.age);
      if (value.hgId != null) ProtoAdapter.UINT64.encodeWithTag(writer, 13, value.hgId);
      ProtoAdapter.STRING.asRepeated().encodeWithTag(writer, 14, value.orderId);
      ProtoAdapter.STRING.asRepeated().encodeWithTag(writer, 15, value.fullNames);
      writer.writeBytes(value.unknownFields());
    }

    @Override
    public HGApply decode(ProtoReader reader) throws IOException {
      Builder builder = new Builder();
      long token = reader.beginMessage();
      for (int tag; (tag = reader.nextTag()) != -1;) {
        switch (tag) {
          case 1: builder.id(ProtoAdapter.UINT64.decode(reader)); break;
          case 2: builder.companyId(ProtoAdapter.UINT64.decode(reader)); break;
          case 3: builder.hgName(ProtoAdapter.STRING.decode(reader)); break;
          case 4: builder.phone(ProtoAdapter.STRING.decode(reader)); break;
          case 5: builder.idcard(ProtoAdapter.STRING.decode(reader)); break;
          case 6: builder.status(ProtoAdapter.UINT32.decode(reader)); break;
          case 7: builder.sendStaffId(ProtoAdapter.UINT64.decode(reader)); break;
          case 8: builder.sendStaffName(ProtoAdapter.STRING.decode(reader)); break;
          case 9: builder.createTime(ProtoAdapter.UINT64.decode(reader)); break;
          case 10: builder.sendTime(ProtoAdapter.UINT64.decode(reader)); break;
          case 11: builder.sex(ProtoAdapter.UINT32.decode(reader)); break;
          case 12: builder.age(ProtoAdapter.UINT64.decode(reader)); break;
          case 13: builder.hgId(ProtoAdapter.UINT64.decode(reader)); break;
          case 14: builder.orderId.add(ProtoAdapter.STRING.decode(reader)); break;
          case 15: builder.fullNames.add(ProtoAdapter.STRING.decode(reader)); break;
          default: {
            FieldEncoding fieldEncoding = reader.peekFieldEncoding();
            Object value = fieldEncoding.rawProtoAdapter().decode(reader);
            builder.addUnknownField(tag, fieldEncoding, value);
          }
        }
      }
      reader.endMessage(token);
      return builder.build();
    }

    @Override
    public HGApply redact(HGApply value) {
      Builder builder = value.newBuilder();
      builder.clearUnknownFields();
      return builder.build();
    }
  }
}
