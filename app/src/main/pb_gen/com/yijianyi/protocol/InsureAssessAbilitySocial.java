// Code generated by Wire protocol buffer compiler, do not edit.
// Source file: AssessModel.proto at 136:1
package com.yijianyi.protocol;

import com.squareup.wire.FieldEncoding;
import com.squareup.wire.Message;
import com.squareup.wire.ProtoAdapter;
import com.squareup.wire.ProtoReader;
import com.squareup.wire.ProtoWriter;
import com.squareup.wire.WireField;
import com.squareup.wire.internal.Internal;
import java.io.IOException;
import java.lang.Integer;
import java.lang.Long;
import java.lang.Object;
import java.lang.Override;
import java.lang.String;
import java.lang.StringBuilder;
import okio.ByteString;

/**
 * 老年人能力评估-社会参与
 */
public final class InsureAssessAbilitySocial extends Message<InsureAssessAbilitySocial, InsureAssessAbilitySocial.Builder> {
  public static final ProtoAdapter<InsureAssessAbilitySocial> ADAPTER = new ProtoAdapter_InsureAssessAbilitySocial();

  private static final long serialVersionUID = 0L;

  public static final Long DEFAULT_ID = 0L;

  public static final Long DEFAULT_RESULTID = 0L;

  public static final Integer DEFAULT_SCORE = 0;

  public static final Integer DEFAULT_LEVEL = 0;

  public static final Integer DEFAULT_VIABILITY = 0;

  public static final Integer DEFAULT_WORKABILITY = 0;

  public static final Integer DEFAULT_TIMESPACE = 0;

  public static final Integer DEFAULT_PERSONAL = 0;

  public static final Integer DEFAULT_SOCIALSKILLS = 0;

  public static final Long DEFAULT_CREATETIME = 0L;

  public static final Long DEFAULT_CREATESTAFFID = 0L;

  public static final String DEFAULT_CREATESTAFFNAME = "";

  @WireField(
      tag = 1,
      adapter = "com.squareup.wire.ProtoAdapter#UINT64"
  )
  public final Long id;

  /**
   * 报告id
   */
  @WireField(
      tag = 2,
      adapter = "com.squareup.wire.ProtoAdapter#UINT64"
  )
  public final Long resultId;

  /**
   * 评估分数
   */
  @WireField(
      tag = 3,
      adapter = "com.squareup.wire.ProtoAdapter#UINT32"
  )
  public final Integer score;

  /**
   * 社会参与等级 0-0至2分 1-3至7分 2-8至13分 3-14至20分
   */
  @WireField(
      tag = 4,
      adapter = "com.squareup.wire.ProtoAdapter#UINT32"
  )
  public final Integer level;

  /**
   * 生活能力
   */
  @WireField(
      tag = 5,
      adapter = "com.squareup.wire.ProtoAdapter#UINT32"
  )
  public final Integer viability;

  /**
   * 工作能力
   */
  @WireField(
      tag = 6,
      adapter = "com.squareup.wire.ProtoAdapter#UINT32"
  )
  public final Integer workAbility;

  /**
   * 时间/空间定向
   */
  @WireField(
      tag = 7,
      adapter = "com.squareup.wire.ProtoAdapter#UINT32"
  )
  public final Integer timeSpace;

  /**
   * 人物定向
   */
  @WireField(
      tag = 8,
      adapter = "com.squareup.wire.ProtoAdapter#UINT32"
  )
  public final Integer personal;

  /**
   * 社会交往能力
   */
  @WireField(
      tag = 9,
      adapter = "com.squareup.wire.ProtoAdapter#UINT32"
  )
  public final Integer socialSkills;

  /**
   * 本次评估时间
   */
  @WireField(
      tag = 10,
      adapter = "com.squareup.wire.ProtoAdapter#UINT64"
  )
  public final Long createTime;

  /**
   * 操作员工ID
   */
  @WireField(
      tag = 11,
      adapter = "com.squareup.wire.ProtoAdapter#UINT64"
  )
  public final Long createStaffId;

  /**
   * 评估人员
   */
  @WireField(
      tag = 12,
      adapter = "com.squareup.wire.ProtoAdapter#STRING"
  )
  public final String createStaffName;

  public InsureAssessAbilitySocial(Long id, Long resultId, Integer score, Integer level, Integer viability, Integer workAbility, Integer timeSpace, Integer personal, Integer socialSkills, Long createTime, Long createStaffId, String createStaffName) {
    this(id, resultId, score, level, viability, workAbility, timeSpace, personal, socialSkills, createTime, createStaffId, createStaffName, ByteString.EMPTY);
  }

  public InsureAssessAbilitySocial(Long id, Long resultId, Integer score, Integer level, Integer viability, Integer workAbility, Integer timeSpace, Integer personal, Integer socialSkills, Long createTime, Long createStaffId, String createStaffName, ByteString unknownFields) {
    super(ADAPTER, unknownFields);
    this.id = id;
    this.resultId = resultId;
    this.score = score;
    this.level = level;
    this.viability = viability;
    this.workAbility = workAbility;
    this.timeSpace = timeSpace;
    this.personal = personal;
    this.socialSkills = socialSkills;
    this.createTime = createTime;
    this.createStaffId = createStaffId;
    this.createStaffName = createStaffName;
  }

  @Override
  public Builder newBuilder() {
    Builder builder = new Builder();
    builder.id = id;
    builder.resultId = resultId;
    builder.score = score;
    builder.level = level;
    builder.viability = viability;
    builder.workAbility = workAbility;
    builder.timeSpace = timeSpace;
    builder.personal = personal;
    builder.socialSkills = socialSkills;
    builder.createTime = createTime;
    builder.createStaffId = createStaffId;
    builder.createStaffName = createStaffName;
    builder.addUnknownFields(unknownFields());
    return builder;
  }

  @Override
  public boolean equals(Object other) {
    if (other == this) return true;
    if (!(other instanceof InsureAssessAbilitySocial)) return false;
    InsureAssessAbilitySocial o = (InsureAssessAbilitySocial) other;
    return unknownFields().equals(o.unknownFields())
        && Internal.equals(id, o.id)
        && Internal.equals(resultId, o.resultId)
        && Internal.equals(score, o.score)
        && Internal.equals(level, o.level)
        && Internal.equals(viability, o.viability)
        && Internal.equals(workAbility, o.workAbility)
        && Internal.equals(timeSpace, o.timeSpace)
        && Internal.equals(personal, o.personal)
        && Internal.equals(socialSkills, o.socialSkills)
        && Internal.equals(createTime, o.createTime)
        && Internal.equals(createStaffId, o.createStaffId)
        && Internal.equals(createStaffName, o.createStaffName);
  }

  @Override
  public int hashCode() {
    int result = super.hashCode;
    if (result == 0) {
      result = unknownFields().hashCode();
      result = result * 37 + (id != null ? id.hashCode() : 0);
      result = result * 37 + (resultId != null ? resultId.hashCode() : 0);
      result = result * 37 + (score != null ? score.hashCode() : 0);
      result = result * 37 + (level != null ? level.hashCode() : 0);
      result = result * 37 + (viability != null ? viability.hashCode() : 0);
      result = result * 37 + (workAbility != null ? workAbility.hashCode() : 0);
      result = result * 37 + (timeSpace != null ? timeSpace.hashCode() : 0);
      result = result * 37 + (personal != null ? personal.hashCode() : 0);
      result = result * 37 + (socialSkills != null ? socialSkills.hashCode() : 0);
      result = result * 37 + (createTime != null ? createTime.hashCode() : 0);
      result = result * 37 + (createStaffId != null ? createStaffId.hashCode() : 0);
      result = result * 37 + (createStaffName != null ? createStaffName.hashCode() : 0);
      super.hashCode = result;
    }
    return result;
  }

  @Override
  public String toString() {
    StringBuilder builder = new StringBuilder();
    if (id != null) builder.append(", id=").append(id);
    if (resultId != null) builder.append(", resultId=").append(resultId);
    if (score != null) builder.append(", score=").append(score);
    if (level != null) builder.append(", level=").append(level);
    if (viability != null) builder.append(", viability=").append(viability);
    if (workAbility != null) builder.append(", workAbility=").append(workAbility);
    if (timeSpace != null) builder.append(", timeSpace=").append(timeSpace);
    if (personal != null) builder.append(", personal=").append(personal);
    if (socialSkills != null) builder.append(", socialSkills=").append(socialSkills);
    if (createTime != null) builder.append(", createTime=").append(createTime);
    if (createStaffId != null) builder.append(", createStaffId=").append(createStaffId);
    if (createStaffName != null) builder.append(", createStaffName=").append(createStaffName);
    return builder.replace(0, 2, "InsureAssessAbilitySocial{").append('}').toString();
  }

  public static final class Builder extends Message.Builder<InsureAssessAbilitySocial, Builder> {
    public Long id;

    public Long resultId;

    public Integer score;

    public Integer level;

    public Integer viability;

    public Integer workAbility;

    public Integer timeSpace;

    public Integer personal;

    public Integer socialSkills;

    public Long createTime;

    public Long createStaffId;

    public String createStaffName;

    public Builder() {
    }

    public Builder id(Long id) {
      this.id = id;
      return this;
    }

    /**
     * 报告id
     */
    public Builder resultId(Long resultId) {
      this.resultId = resultId;
      return this;
    }

    /**
     * 评估分数
     */
    public Builder score(Integer score) {
      this.score = score;
      return this;
    }

    /**
     * 社会参与等级 0-0至2分 1-3至7分 2-8至13分 3-14至20分
     */
    public Builder level(Integer level) {
      this.level = level;
      return this;
    }

    /**
     * 生活能力
     */
    public Builder viability(Integer viability) {
      this.viability = viability;
      return this;
    }

    /**
     * 工作能力
     */
    public Builder workAbility(Integer workAbility) {
      this.workAbility = workAbility;
      return this;
    }

    /**
     * 时间/空间定向
     */
    public Builder timeSpace(Integer timeSpace) {
      this.timeSpace = timeSpace;
      return this;
    }

    /**
     * 人物定向
     */
    public Builder personal(Integer personal) {
      this.personal = personal;
      return this;
    }

    /**
     * 社会交往能力
     */
    public Builder socialSkills(Integer socialSkills) {
      this.socialSkills = socialSkills;
      return this;
    }

    /**
     * 本次评估时间
     */
    public Builder createTime(Long createTime) {
      this.createTime = createTime;
      return this;
    }

    /**
     * 操作员工ID
     */
    public Builder createStaffId(Long createStaffId) {
      this.createStaffId = createStaffId;
      return this;
    }

    /**
     * 评估人员
     */
    public Builder createStaffName(String createStaffName) {
      this.createStaffName = createStaffName;
      return this;
    }

    @Override
    public InsureAssessAbilitySocial build() {
      return new InsureAssessAbilitySocial(id, resultId, score, level, viability, workAbility, timeSpace, personal, socialSkills, createTime, createStaffId, createStaffName, super.buildUnknownFields());
    }
  }

  private static final class ProtoAdapter_InsureAssessAbilitySocial extends ProtoAdapter<InsureAssessAbilitySocial> {
    ProtoAdapter_InsureAssessAbilitySocial() {
      super(FieldEncoding.LENGTH_DELIMITED, InsureAssessAbilitySocial.class);
    }

    @Override
    public int encodedSize(InsureAssessAbilitySocial value) {
      return (value.id != null ? ProtoAdapter.UINT64.encodedSizeWithTag(1, value.id) : 0)
          + (value.resultId != null ? ProtoAdapter.UINT64.encodedSizeWithTag(2, value.resultId) : 0)
          + (value.score != null ? ProtoAdapter.UINT32.encodedSizeWithTag(3, value.score) : 0)
          + (value.level != null ? ProtoAdapter.UINT32.encodedSizeWithTag(4, value.level) : 0)
          + (value.viability != null ? ProtoAdapter.UINT32.encodedSizeWithTag(5, value.viability) : 0)
          + (value.workAbility != null ? ProtoAdapter.UINT32.encodedSizeWithTag(6, value.workAbility) : 0)
          + (value.timeSpace != null ? ProtoAdapter.UINT32.encodedSizeWithTag(7, value.timeSpace) : 0)
          + (value.personal != null ? ProtoAdapter.UINT32.encodedSizeWithTag(8, value.personal) : 0)
          + (value.socialSkills != null ? ProtoAdapter.UINT32.encodedSizeWithTag(9, value.socialSkills) : 0)
          + (value.createTime != null ? ProtoAdapter.UINT64.encodedSizeWithTag(10, value.createTime) : 0)
          + (value.createStaffId != null ? ProtoAdapter.UINT64.encodedSizeWithTag(11, value.createStaffId) : 0)
          + (value.createStaffName != null ? ProtoAdapter.STRING.encodedSizeWithTag(12, value.createStaffName) : 0)
          + value.unknownFields().size();
    }

    @Override
    public void encode(ProtoWriter writer, InsureAssessAbilitySocial value) throws IOException {
      if (value.id != null) ProtoAdapter.UINT64.encodeWithTag(writer, 1, value.id);
      if (value.resultId != null) ProtoAdapter.UINT64.encodeWithTag(writer, 2, value.resultId);
      if (value.score != null) ProtoAdapter.UINT32.encodeWithTag(writer, 3, value.score);
      if (value.level != null) ProtoAdapter.UINT32.encodeWithTag(writer, 4, value.level);
      if (value.viability != null) ProtoAdapter.UINT32.encodeWithTag(writer, 5, value.viability);
      if (value.workAbility != null) ProtoAdapter.UINT32.encodeWithTag(writer, 6, value.workAbility);
      if (value.timeSpace != null) ProtoAdapter.UINT32.encodeWithTag(writer, 7, value.timeSpace);
      if (value.personal != null) ProtoAdapter.UINT32.encodeWithTag(writer, 8, value.personal);
      if (value.socialSkills != null) ProtoAdapter.UINT32.encodeWithTag(writer, 9, value.socialSkills);
      if (value.createTime != null) ProtoAdapter.UINT64.encodeWithTag(writer, 10, value.createTime);
      if (value.createStaffId != null) ProtoAdapter.UINT64.encodeWithTag(writer, 11, value.createStaffId);
      if (value.createStaffName != null) ProtoAdapter.STRING.encodeWithTag(writer, 12, value.createStaffName);
      writer.writeBytes(value.unknownFields());
    }

    @Override
    public InsureAssessAbilitySocial decode(ProtoReader reader) throws IOException {
      Builder builder = new Builder();
      long token = reader.beginMessage();
      for (int tag; (tag = reader.nextTag()) != -1;) {
        switch (tag) {
          case 1: builder.id(ProtoAdapter.UINT64.decode(reader)); break;
          case 2: builder.resultId(ProtoAdapter.UINT64.decode(reader)); break;
          case 3: builder.score(ProtoAdapter.UINT32.decode(reader)); break;
          case 4: builder.level(ProtoAdapter.UINT32.decode(reader)); break;
          case 5: builder.viability(ProtoAdapter.UINT32.decode(reader)); break;
          case 6: builder.workAbility(ProtoAdapter.UINT32.decode(reader)); break;
          case 7: builder.timeSpace(ProtoAdapter.UINT32.decode(reader)); break;
          case 8: builder.personal(ProtoAdapter.UINT32.decode(reader)); break;
          case 9: builder.socialSkills(ProtoAdapter.UINT32.decode(reader)); break;
          case 10: builder.createTime(ProtoAdapter.UINT64.decode(reader)); break;
          case 11: builder.createStaffId(ProtoAdapter.UINT64.decode(reader)); break;
          case 12: builder.createStaffName(ProtoAdapter.STRING.decode(reader)); break;
          default: {
            FieldEncoding fieldEncoding = reader.peekFieldEncoding();
            Object value = fieldEncoding.rawProtoAdapter().decode(reader);
            builder.addUnknownField(tag, fieldEncoding, value);
          }
        }
      }
      reader.endMessage(token);
      return builder.build();
    }

    @Override
    public InsureAssessAbilitySocial redact(InsureAssessAbilitySocial value) {
      Builder builder = value.newBuilder();
      builder.clearUnknownFields();
      return builder.build();
    }
  }
}
