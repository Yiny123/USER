// Code generated by Wire protocol buffer compiler, do not edit.
// Source file: OrderModel.proto at 563:1
package com.yijianyi.protocol;

import com.squareup.wire.FieldEncoding;
import com.squareup.wire.Message;
import com.squareup.wire.ProtoAdapter;
import com.squareup.wire.ProtoReader;
import com.squareup.wire.ProtoWriter;
import com.squareup.wire.WireField;
import com.squareup.wire.internal.Internal;
import java.io.IOException;
import java.lang.Integer;
import java.lang.Long;
import java.lang.Object;
import java.lang.Override;
import java.lang.String;
import java.lang.StringBuilder;
import okio.ByteString;

/**
 * 陪人床审核
 */
public final class OrderPriceVO extends Message<OrderPriceVO, OrderPriceVO.Builder> {
  public static final ProtoAdapter<OrderPriceVO> ADAPTER = new ProtoAdapter_OrderPriceVO();

  private static final long serialVersionUID = 0L;

  public static final String DEFAULT_SERVICEDATE = "";

  public static final String DEFAULT_ORGNAME = "";

  public static final String DEFAULT_BRANCHNAME = "";

  public static final Long DEFAULT_NUMBER = 0L;

  public static final String DEFAULT_TYPESTR = "";

  public static final Long DEFAULT_TYPE = 0L;

  public static final String DEFAULT_HGNAME = "";

  public static final String DEFAULT_AUDITTIMESTR = "";

  public static final String DEFAULT_AUDITREMARK = "";

  public static final Integer DEFAULT_AUDITSHOWSTATUS = 0;

  public static final Long DEFAULT_ORGID = 0L;

  public static final Long DEFAULT_BRANCHID = 0L;

  /**
   * 租借时间
   */
  @WireField(
      tag = 1,
      adapter = "com.squareup.wire.ProtoAdapter#STRING"
  )
  public final String serviceDate;

  /**
   * 机构名称
   */
  @WireField(
      tag = 2,
      adapter = "com.squareup.wire.ProtoAdapter#STRING"
  )
  public final String orgName;

  /**
   * 科室名称
   */
  @WireField(
      tag = 3,
      adapter = "com.squareup.wire.ProtoAdapter#STRING"
  )
  public final String branchName;

  /**
   * 数量
   */
  @WireField(
      tag = 4,
      adapter = "com.squareup.wire.ProtoAdapter#UINT64"
  )
  public final Long number;

  /**
   * 审核状态 审核状态 0-未评审 1-已审核
   */
  @WireField(
      tag = 5,
      adapter = "com.squareup.wire.ProtoAdapter#STRING"
  )
  public final String typeStr;

  /**
   * 审核状态 审核状态 0-未评审 1-已审核
   */
  @WireField(
      tag = 6,
      adapter = "com.squareup.wire.ProtoAdapter#UINT64"
  )
  public final Long type;

  /**
   * 评审护士昵称
   */
  @WireField(
      tag = 7,
      adapter = "com.squareup.wire.ProtoAdapter#STRING"
  )
  public final String hgName;

  /**
   * 审核时间
   */
  @WireField(
      tag = 8,
      adapter = "com.squareup.wire.ProtoAdapter#STRING"
  )
  public final String auditTimeStr;

  /**
   * 备注
   */
  @WireField(
      tag = 9,
      adapter = "com.squareup.wire.ProtoAdapter#STRING"
  )
  public final String auditRemark;

  /**
   * 是否漏出审核按钮
   */
  @WireField(
      tag = 10,
      adapter = "com.squareup.wire.ProtoAdapter#UINT32"
  )
  public final Integer auditShowStatus;

  /**
   * 机构id
   */
  @WireField(
      tag = 11,
      adapter = "com.squareup.wire.ProtoAdapter#UINT64"
  )
  public final Long orgId;

  /**
   * 科室id
   */
  @WireField(
      tag = 12,
      adapter = "com.squareup.wire.ProtoAdapter#UINT64"
  )
  public final Long branchId;

  public OrderPriceVO(String serviceDate, String orgName, String branchName, Long number, String typeStr, Long type, String hgName, String auditTimeStr, String auditRemark, Integer auditShowStatus, Long orgId, Long branchId) {
    this(serviceDate, orgName, branchName, number, typeStr, type, hgName, auditTimeStr, auditRemark, auditShowStatus, orgId, branchId, ByteString.EMPTY);
  }

  public OrderPriceVO(String serviceDate, String orgName, String branchName, Long number, String typeStr, Long type, String hgName, String auditTimeStr, String auditRemark, Integer auditShowStatus, Long orgId, Long branchId, ByteString unknownFields) {
    super(ADAPTER, unknownFields);
    this.serviceDate = serviceDate;
    this.orgName = orgName;
    this.branchName = branchName;
    this.number = number;
    this.typeStr = typeStr;
    this.type = type;
    this.hgName = hgName;
    this.auditTimeStr = auditTimeStr;
    this.auditRemark = auditRemark;
    this.auditShowStatus = auditShowStatus;
    this.orgId = orgId;
    this.branchId = branchId;
  }

  @Override
  public Builder newBuilder() {
    Builder builder = new Builder();
    builder.serviceDate = serviceDate;
    builder.orgName = orgName;
    builder.branchName = branchName;
    builder.number = number;
    builder.typeStr = typeStr;
    builder.type = type;
    builder.hgName = hgName;
    builder.auditTimeStr = auditTimeStr;
    builder.auditRemark = auditRemark;
    builder.auditShowStatus = auditShowStatus;
    builder.orgId = orgId;
    builder.branchId = branchId;
    builder.addUnknownFields(unknownFields());
    return builder;
  }

  @Override
  public boolean equals(Object other) {
    if (other == this) return true;
    if (!(other instanceof OrderPriceVO)) return false;
    OrderPriceVO o = (OrderPriceVO) other;
    return unknownFields().equals(o.unknownFields())
        && Internal.equals(serviceDate, o.serviceDate)
        && Internal.equals(orgName, o.orgName)
        && Internal.equals(branchName, o.branchName)
        && Internal.equals(number, o.number)
        && Internal.equals(typeStr, o.typeStr)
        && Internal.equals(type, o.type)
        && Internal.equals(hgName, o.hgName)
        && Internal.equals(auditTimeStr, o.auditTimeStr)
        && Internal.equals(auditRemark, o.auditRemark)
        && Internal.equals(auditShowStatus, o.auditShowStatus)
        && Internal.equals(orgId, o.orgId)
        && Internal.equals(branchId, o.branchId);
  }

  @Override
  public int hashCode() {
    int result = super.hashCode;
    if (result == 0) {
      result = unknownFields().hashCode();
      result = result * 37 + (serviceDate != null ? serviceDate.hashCode() : 0);
      result = result * 37 + (orgName != null ? orgName.hashCode() : 0);
      result = result * 37 + (branchName != null ? branchName.hashCode() : 0);
      result = result * 37 + (number != null ? number.hashCode() : 0);
      result = result * 37 + (typeStr != null ? typeStr.hashCode() : 0);
      result = result * 37 + (type != null ? type.hashCode() : 0);
      result = result * 37 + (hgName != null ? hgName.hashCode() : 0);
      result = result * 37 + (auditTimeStr != null ? auditTimeStr.hashCode() : 0);
      result = result * 37 + (auditRemark != null ? auditRemark.hashCode() : 0);
      result = result * 37 + (auditShowStatus != null ? auditShowStatus.hashCode() : 0);
      result = result * 37 + (orgId != null ? orgId.hashCode() : 0);
      result = result * 37 + (branchId != null ? branchId.hashCode() : 0);
      super.hashCode = result;
    }
    return result;
  }

  @Override
  public String toString() {
    StringBuilder builder = new StringBuilder();
    if (serviceDate != null) builder.append(", serviceDate=").append(serviceDate);
    if (orgName != null) builder.append(", orgName=").append(orgName);
    if (branchName != null) builder.append(", branchName=").append(branchName);
    if (number != null) builder.append(", number=").append(number);
    if (typeStr != null) builder.append(", typeStr=").append(typeStr);
    if (type != null) builder.append(", type=").append(type);
    if (hgName != null) builder.append(", hgName=").append(hgName);
    if (auditTimeStr != null) builder.append(", auditTimeStr=").append(auditTimeStr);
    if (auditRemark != null) builder.append(", auditRemark=").append(auditRemark);
    if (auditShowStatus != null) builder.append(", auditShowStatus=").append(auditShowStatus);
    if (orgId != null) builder.append(", orgId=").append(orgId);
    if (branchId != null) builder.append(", branchId=").append(branchId);
    return builder.replace(0, 2, "OrderPriceVO{").append('}').toString();
  }

  public static final class Builder extends Message.Builder<OrderPriceVO, Builder> {
    public String serviceDate;

    public String orgName;

    public String branchName;

    public Long number;

    public String typeStr;

    public Long type;

    public String hgName;

    public String auditTimeStr;

    public String auditRemark;

    public Integer auditShowStatus;

    public Long orgId;

    public Long branchId;

    public Builder() {
    }

    /**
     * 租借时间
     */
    public Builder serviceDate(String serviceDate) {
      this.serviceDate = serviceDate;
      return this;
    }

    /**
     * 机构名称
     */
    public Builder orgName(String orgName) {
      this.orgName = orgName;
      return this;
    }

    /**
     * 科室名称
     */
    public Builder branchName(String branchName) {
      this.branchName = branchName;
      return this;
    }

    /**
     * 数量
     */
    public Builder number(Long number) {
      this.number = number;
      return this;
    }

    /**
     * 审核状态 审核状态 0-未评审 1-已审核
     */
    public Builder typeStr(String typeStr) {
      this.typeStr = typeStr;
      return this;
    }

    /**
     * 审核状态 审核状态 0-未评审 1-已审核
     */
    public Builder type(Long type) {
      this.type = type;
      return this;
    }

    /**
     * 评审护士昵称
     */
    public Builder hgName(String hgName) {
      this.hgName = hgName;
      return this;
    }

    /**
     * 审核时间
     */
    public Builder auditTimeStr(String auditTimeStr) {
      this.auditTimeStr = auditTimeStr;
      return this;
    }

    /**
     * 备注
     */
    public Builder auditRemark(String auditRemark) {
      this.auditRemark = auditRemark;
      return this;
    }

    /**
     * 是否漏出审核按钮
     */
    public Builder auditShowStatus(Integer auditShowStatus) {
      this.auditShowStatus = auditShowStatus;
      return this;
    }

    /**
     * 机构id
     */
    public Builder orgId(Long orgId) {
      this.orgId = orgId;
      return this;
    }

    /**
     * 科室id
     */
    public Builder branchId(Long branchId) {
      this.branchId = branchId;
      return this;
    }

    @Override
    public OrderPriceVO build() {
      return new OrderPriceVO(serviceDate, orgName, branchName, number, typeStr, type, hgName, auditTimeStr, auditRemark, auditShowStatus, orgId, branchId, super.buildUnknownFields());
    }
  }

  private static final class ProtoAdapter_OrderPriceVO extends ProtoAdapter<OrderPriceVO> {
    ProtoAdapter_OrderPriceVO() {
      super(FieldEncoding.LENGTH_DELIMITED, OrderPriceVO.class);
    }

    @Override
    public int encodedSize(OrderPriceVO value) {
      return (value.serviceDate != null ? ProtoAdapter.STRING.encodedSizeWithTag(1, value.serviceDate) : 0)
          + (value.orgName != null ? ProtoAdapter.STRING.encodedSizeWithTag(2, value.orgName) : 0)
          + (value.branchName != null ? ProtoAdapter.STRING.encodedSizeWithTag(3, value.branchName) : 0)
          + (value.number != null ? ProtoAdapter.UINT64.encodedSizeWithTag(4, value.number) : 0)
          + (value.typeStr != null ? ProtoAdapter.STRING.encodedSizeWithTag(5, value.typeStr) : 0)
          + (value.type != null ? ProtoAdapter.UINT64.encodedSizeWithTag(6, value.type) : 0)
          + (value.hgName != null ? ProtoAdapter.STRING.encodedSizeWithTag(7, value.hgName) : 0)
          + (value.auditTimeStr != null ? ProtoAdapter.STRING.encodedSizeWithTag(8, value.auditTimeStr) : 0)
          + (value.auditRemark != null ? ProtoAdapter.STRING.encodedSizeWithTag(9, value.auditRemark) : 0)
          + (value.auditShowStatus != null ? ProtoAdapter.UINT32.encodedSizeWithTag(10, value.auditShowStatus) : 0)
          + (value.orgId != null ? ProtoAdapter.UINT64.encodedSizeWithTag(11, value.orgId) : 0)
          + (value.branchId != null ? ProtoAdapter.UINT64.encodedSizeWithTag(12, value.branchId) : 0)
          + value.unknownFields().size();
    }

    @Override
    public void encode(ProtoWriter writer, OrderPriceVO value) throws IOException {
      if (value.serviceDate != null) ProtoAdapter.STRING.encodeWithTag(writer, 1, value.serviceDate);
      if (value.orgName != null) ProtoAdapter.STRING.encodeWithTag(writer, 2, value.orgName);
      if (value.branchName != null) ProtoAdapter.STRING.encodeWithTag(writer, 3, value.branchName);
      if (value.number != null) ProtoAdapter.UINT64.encodeWithTag(writer, 4, value.number);
      if (value.typeStr != null) ProtoAdapter.STRING.encodeWithTag(writer, 5, value.typeStr);
      if (value.type != null) ProtoAdapter.UINT64.encodeWithTag(writer, 6, value.type);
      if (value.hgName != null) ProtoAdapter.STRING.encodeWithTag(writer, 7, value.hgName);
      if (value.auditTimeStr != null) ProtoAdapter.STRING.encodeWithTag(writer, 8, value.auditTimeStr);
      if (value.auditRemark != null) ProtoAdapter.STRING.encodeWithTag(writer, 9, value.auditRemark);
      if (value.auditShowStatus != null) ProtoAdapter.UINT32.encodeWithTag(writer, 10, value.auditShowStatus);
      if (value.orgId != null) ProtoAdapter.UINT64.encodeWithTag(writer, 11, value.orgId);
      if (value.branchId != null) ProtoAdapter.UINT64.encodeWithTag(writer, 12, value.branchId);
      writer.writeBytes(value.unknownFields());
    }

    @Override
    public OrderPriceVO decode(ProtoReader reader) throws IOException {
      Builder builder = new Builder();
      long token = reader.beginMessage();
      for (int tag; (tag = reader.nextTag()) != -1;) {
        switch (tag) {
          case 1: builder.serviceDate(ProtoAdapter.STRING.decode(reader)); break;
          case 2: builder.orgName(ProtoAdapter.STRING.decode(reader)); break;
          case 3: builder.branchName(ProtoAdapter.STRING.decode(reader)); break;
          case 4: builder.number(ProtoAdapter.UINT64.decode(reader)); break;
          case 5: builder.typeStr(ProtoAdapter.STRING.decode(reader)); break;
          case 6: builder.type(ProtoAdapter.UINT64.decode(reader)); break;
          case 7: builder.hgName(ProtoAdapter.STRING.decode(reader)); break;
          case 8: builder.auditTimeStr(ProtoAdapter.STRING.decode(reader)); break;
          case 9: builder.auditRemark(ProtoAdapter.STRING.decode(reader)); break;
          case 10: builder.auditShowStatus(ProtoAdapter.UINT32.decode(reader)); break;
          case 11: builder.orgId(ProtoAdapter.UINT64.decode(reader)); break;
          case 12: builder.branchId(ProtoAdapter.UINT64.decode(reader)); break;
          default: {
            FieldEncoding fieldEncoding = reader.peekFieldEncoding();
            Object value = fieldEncoding.rawProtoAdapter().decode(reader);
            builder.addUnknownField(tag, fieldEncoding, value);
          }
        }
      }
      reader.endMessage(token);
      return builder.build();
    }

    @Override
    public OrderPriceVO redact(OrderPriceVO value) {
      Builder builder = value.newBuilder();
      builder.clearUnknownFields();
      return builder.build();
    }
  }
}
