// Code generated by Wire protocol buffer compiler, do not edit.
// Source file: AppInterface.proto at 323:1
package com.yijianyi.protocol;

import com.squareup.wire.FieldEncoding;
import com.squareup.wire.Message;
import com.squareup.wire.ProtoAdapter;
import com.squareup.wire.ProtoReader;
import com.squareup.wire.ProtoWriter;
import com.squareup.wire.WireField;
import com.squareup.wire.internal.Internal;
import java.io.IOException;
import java.lang.Integer;
import java.lang.Object;
import java.lang.Override;
import java.lang.String;
import java.lang.StringBuilder;
import okio.ByteString;

public final class ScanLoginReq extends Message<ScanLoginReq, ScanLoginReq.Builder> {
  public static final ProtoAdapter<ScanLoginReq> ADAPTER = new ProtoAdapter_ScanLoginReq();

  private static final long serialVersionUID = 0L;

  public static final String DEFAULT_ACCESSTOKEN = "";

  public static final Integer DEFAULT_OPS = 0;

  /**
   * 登录token
   */
  @WireField(
      tag = 1,
      adapter = "com.squareup.wire.ProtoAdapter#STRING"
  )
  public final String accessToken;

  /**
   * 操作 1 - 登录; 2 - 扫码
   */
  @WireField(
      tag = 2,
      adapter = "com.squareup.wire.ProtoAdapter#UINT32"
  )
  public final Integer ops;

  public ScanLoginReq(String accessToken, Integer ops) {
    this(accessToken, ops, ByteString.EMPTY);
  }

  public ScanLoginReq(String accessToken, Integer ops, ByteString unknownFields) {
    super(ADAPTER, unknownFields);
    this.accessToken = accessToken;
    this.ops = ops;
  }

  @Override
  public Builder newBuilder() {
    Builder builder = new Builder();
    builder.accessToken = accessToken;
    builder.ops = ops;
    builder.addUnknownFields(unknownFields());
    return builder;
  }

  @Override
  public boolean equals(Object other) {
    if (other == this) return true;
    if (!(other instanceof ScanLoginReq)) return false;
    ScanLoginReq o = (ScanLoginReq) other;
    return unknownFields().equals(o.unknownFields())
        && Internal.equals(accessToken, o.accessToken)
        && Internal.equals(ops, o.ops);
  }

  @Override
  public int hashCode() {
    int result = super.hashCode;
    if (result == 0) {
      result = unknownFields().hashCode();
      result = result * 37 + (accessToken != null ? accessToken.hashCode() : 0);
      result = result * 37 + (ops != null ? ops.hashCode() : 0);
      super.hashCode = result;
    }
    return result;
  }

  @Override
  public String toString() {
    StringBuilder builder = new StringBuilder();
    if (accessToken != null) builder.append(", accessToken=").append(accessToken);
    if (ops != null) builder.append(", ops=").append(ops);
    return builder.replace(0, 2, "ScanLoginReq{").append('}').toString();
  }

  public static final class Builder extends Message.Builder<ScanLoginReq, Builder> {
    public String accessToken;

    public Integer ops;

    public Builder() {
    }

    /**
     * 登录token
     */
    public Builder accessToken(String accessToken) {
      this.accessToken = accessToken;
      return this;
    }

    /**
     * 操作 1 - 登录; 2 - 扫码
     */
    public Builder ops(Integer ops) {
      this.ops = ops;
      return this;
    }

    @Override
    public ScanLoginReq build() {
      return new ScanLoginReq(accessToken, ops, super.buildUnknownFields());
    }
  }

  private static final class ProtoAdapter_ScanLoginReq extends ProtoAdapter<ScanLoginReq> {
    ProtoAdapter_ScanLoginReq() {
      super(FieldEncoding.LENGTH_DELIMITED, ScanLoginReq.class);
    }

    @Override
    public int encodedSize(ScanLoginReq value) {
      return (value.accessToken != null ? ProtoAdapter.STRING.encodedSizeWithTag(1, value.accessToken) : 0)
          + (value.ops != null ? ProtoAdapter.UINT32.encodedSizeWithTag(2, value.ops) : 0)
          + value.unknownFields().size();
    }

    @Override
    public void encode(ProtoWriter writer, ScanLoginReq value) throws IOException {
      if (value.accessToken != null) ProtoAdapter.STRING.encodeWithTag(writer, 1, value.accessToken);
      if (value.ops != null) ProtoAdapter.UINT32.encodeWithTag(writer, 2, value.ops);
      writer.writeBytes(value.unknownFields());
    }

    @Override
    public ScanLoginReq decode(ProtoReader reader) throws IOException {
      Builder builder = new Builder();
      long token = reader.beginMessage();
      for (int tag; (tag = reader.nextTag()) != -1;) {
        switch (tag) {
          case 1: builder.accessToken(ProtoAdapter.STRING.decode(reader)); break;
          case 2: builder.ops(ProtoAdapter.UINT32.decode(reader)); break;
          default: {
            FieldEncoding fieldEncoding = reader.peekFieldEncoding();
            Object value = fieldEncoding.rawProtoAdapter().decode(reader);
            builder.addUnknownField(tag, fieldEncoding, value);
          }
        }
      }
      reader.endMessage(token);
      return builder.build();
    }

    @Override
    public ScanLoginReq redact(ScanLoginReq value) {
      Builder builder = value.newBuilder();
      builder.clearUnknownFields();
      return builder.build();
    }
  }
}
