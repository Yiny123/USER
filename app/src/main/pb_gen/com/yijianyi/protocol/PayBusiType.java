// Code generated by Wire protocol buffer compiler, do not edit.
// Source file: CommonData.proto at 160:1
package com.yijianyi.protocol;

import com.squareup.wire.ProtoAdapter;
import com.squareup.wire.WireEnum;
import java.lang.Override;

/**
 * 支付业务类型
 */
public enum PayBusiType implements WireEnum {
  /**
   * 不使用
   */
  DO_NOT_USE(0),

  /**
   * 定额充值
   */
  RECHARGE_D(1),

  /**
   * 任意金额充值
   */
  RECHARGE_R(2),

  /**
   * 支付预交金
   */
  PAY_PREAMOUNT(3),

  /**
   * 支付结算清单
   */
  PAY_SETTLEMENT(4),

  /**
   * 支付订单
   */
  PAY_ORDER(5),

  /**
   * 订单附加项
   */
  PAY_ORDER_EXTRA(6),

  /**
   * 支付强制提交长护险保证金
   */
  PAY_INSURE(7),

  /**
   * 支付自照护理员培训费
   */
  PAY_APPLY(8),

  /**
   * 支付门禁卡押金
   */
  PAY_EXTRA(9),

  /**
   * 结算后校正支付
   */
  PAY_SETTLEMENT_CLOSE(10),

  /**
   * 退门禁卡押金
   */
  REFUND_EXTRA(50),

  /**
   * 退预交金
   */
  REFUND_PREPAY(51),

  /**
   * 结算后校正退款
   */
  REFUND_SETTLEMENT_CLOSE(52);

  public static final ProtoAdapter<PayBusiType> ADAPTER = ProtoAdapter.newEnumAdapter(PayBusiType.class);

  private final int value;

  PayBusiType(int value) {
    this.value = value;
  }

  /**
   * Return the constant for {@code value} or null.
   */
  public static PayBusiType fromValue(int value) {
    switch (value) {
      case 0: return DO_NOT_USE;
      case 1: return RECHARGE_D;
      case 2: return RECHARGE_R;
      case 3: return PAY_PREAMOUNT;
      case 4: return PAY_SETTLEMENT;
      case 5: return PAY_ORDER;
      case 6: return PAY_ORDER_EXTRA;
      case 7: return PAY_INSURE;
      case 8: return PAY_APPLY;
      case 9: return PAY_EXTRA;
      case 10: return PAY_SETTLEMENT_CLOSE;
      case 50: return REFUND_EXTRA;
      case 51: return REFUND_PREPAY;
      case 52: return REFUND_SETTLEMENT_CLOSE;
      default: return null;
    }
  }

  @Override
  public int getValue() {
    return value;
  }
}
