// Code generated by Wire protocol buffer compiler, do not edit.
// Source file: Insure.proto at 20:1
package com.yijianyi.protocol;

import com.squareup.wire.FieldEncoding;
import com.squareup.wire.Message;
import com.squareup.wire.ProtoAdapter;
import com.squareup.wire.ProtoReader;
import com.squareup.wire.ProtoWriter;
import com.squareup.wire.WireField;
import com.squareup.wire.internal.Internal;
import java.io.IOException;
import java.lang.Integer;
import java.lang.Long;
import java.lang.Object;
import java.lang.Override;
import java.lang.String;
import java.lang.StringBuilder;
import okio.ByteString;

/**
 * 病症
 */
public final class Illness extends Message<Illness, Illness.Builder> {
  public static final ProtoAdapter<Illness> ADAPTER = new ProtoAdapter_Illness();

  private static final long serialVersionUID = 0L;

  public static final Long DEFAULT_ID = 0L;

  public static final String DEFAULT_ILLNESSNAME = "";

  public static final String DEFAULT_REMARK = "";

  public static final Integer DEFAULT_STATUS = 0;

  public static final Long DEFAULT_CREATESTAFFID = 0L;

  public static final String DEFAULT_CREATESTAFFNAME = "";

  public static final Long DEFAULT_CREATETIME = 0L;

  public static final Long DEFAULT_COMPANYID = 0L;

  @WireField(
      tag = 1,
      adapter = "com.squareup.wire.ProtoAdapter#UINT64"
  )
  public final Long id;

  /**
   * 病症名称
   */
  @WireField(
      tag = 2,
      adapter = "com.squareup.wire.ProtoAdapter#STRING"
  )
  public final String illnessName;

  /**
   * 备注
   */
  @WireField(
      tag = 3,
      adapter = "com.squareup.wire.ProtoAdapter#STRING"
  )
  public final String remark;

  /**
   * 状态 0-正常 -1-已删除
   */
  @WireField(
      tag = 4,
      adapter = "com.squareup.wire.ProtoAdapter#INT32"
  )
  public final Integer status;

  /**
   * 创建员工ID
   */
  @WireField(
      tag = 5,
      adapter = "com.squareup.wire.ProtoAdapter#UINT64"
  )
  public final Long createStaffId;

  /**
   * 创建员工名称
   */
  @WireField(
      tag = 6,
      adapter = "com.squareup.wire.ProtoAdapter#STRING"
  )
  public final String createStaffName;

  /**
   * 创建时间
   */
  @WireField(
      tag = 7,
      adapter = "com.squareup.wire.ProtoAdapter#UINT64"
  )
  public final Long createTime;

  /**
   * 公司id
   */
  @WireField(
      tag = 8,
      adapter = "com.squareup.wire.ProtoAdapter#UINT64"
  )
  public final Long companyId;

  public Illness(Long id, String illnessName, String remark, Integer status, Long createStaffId, String createStaffName, Long createTime, Long companyId) {
    this(id, illnessName, remark, status, createStaffId, createStaffName, createTime, companyId, ByteString.EMPTY);
  }

  public Illness(Long id, String illnessName, String remark, Integer status, Long createStaffId, String createStaffName, Long createTime, Long companyId, ByteString unknownFields) {
    super(ADAPTER, unknownFields);
    this.id = id;
    this.illnessName = illnessName;
    this.remark = remark;
    this.status = status;
    this.createStaffId = createStaffId;
    this.createStaffName = createStaffName;
    this.createTime = createTime;
    this.companyId = companyId;
  }

  @Override
  public Builder newBuilder() {
    Builder builder = new Builder();
    builder.id = id;
    builder.illnessName = illnessName;
    builder.remark = remark;
    builder.status = status;
    builder.createStaffId = createStaffId;
    builder.createStaffName = createStaffName;
    builder.createTime = createTime;
    builder.companyId = companyId;
    builder.addUnknownFields(unknownFields());
    return builder;
  }

  @Override
  public boolean equals(Object other) {
    if (other == this) return true;
    if (!(other instanceof Illness)) return false;
    Illness o = (Illness) other;
    return unknownFields().equals(o.unknownFields())
        && Internal.equals(id, o.id)
        && Internal.equals(illnessName, o.illnessName)
        && Internal.equals(remark, o.remark)
        && Internal.equals(status, o.status)
        && Internal.equals(createStaffId, o.createStaffId)
        && Internal.equals(createStaffName, o.createStaffName)
        && Internal.equals(createTime, o.createTime)
        && Internal.equals(companyId, o.companyId);
  }

  @Override
  public int hashCode() {
    int result = super.hashCode;
    if (result == 0) {
      result = unknownFields().hashCode();
      result = result * 37 + (id != null ? id.hashCode() : 0);
      result = result * 37 + (illnessName != null ? illnessName.hashCode() : 0);
      result = result * 37 + (remark != null ? remark.hashCode() : 0);
      result = result * 37 + (status != null ? status.hashCode() : 0);
      result = result * 37 + (createStaffId != null ? createStaffId.hashCode() : 0);
      result = result * 37 + (createStaffName != null ? createStaffName.hashCode() : 0);
      result = result * 37 + (createTime != null ? createTime.hashCode() : 0);
      result = result * 37 + (companyId != null ? companyId.hashCode() : 0);
      super.hashCode = result;
    }
    return result;
  }

  @Override
  public String toString() {
    StringBuilder builder = new StringBuilder();
    if (id != null) builder.append(", id=").append(id);
    if (illnessName != null) builder.append(", illnessName=").append(illnessName);
    if (remark != null) builder.append(", remark=").append(remark);
    if (status != null) builder.append(", status=").append(status);
    if (createStaffId != null) builder.append(", createStaffId=").append(createStaffId);
    if (createStaffName != null) builder.append(", createStaffName=").append(createStaffName);
    if (createTime != null) builder.append(", createTime=").append(createTime);
    if (companyId != null) builder.append(", companyId=").append(companyId);
    return builder.replace(0, 2, "Illness{").append('}').toString();
  }

  public static final class Builder extends Message.Builder<Illness, Builder> {
    public Long id;

    public String illnessName;

    public String remark;

    public Integer status;

    public Long createStaffId;

    public String createStaffName;

    public Long createTime;

    public Long companyId;

    public Builder() {
    }

    public Builder id(Long id) {
      this.id = id;
      return this;
    }

    /**
     * 病症名称
     */
    public Builder illnessName(String illnessName) {
      this.illnessName = illnessName;
      return this;
    }

    /**
     * 备注
     */
    public Builder remark(String remark) {
      this.remark = remark;
      return this;
    }

    /**
     * 状态 0-正常 -1-已删除
     */
    public Builder status(Integer status) {
      this.status = status;
      return this;
    }

    /**
     * 创建员工ID
     */
    public Builder createStaffId(Long createStaffId) {
      this.createStaffId = createStaffId;
      return this;
    }

    /**
     * 创建员工名称
     */
    public Builder createStaffName(String createStaffName) {
      this.createStaffName = createStaffName;
      return this;
    }

    /**
     * 创建时间
     */
    public Builder createTime(Long createTime) {
      this.createTime = createTime;
      return this;
    }

    /**
     * 公司id
     */
    public Builder companyId(Long companyId) {
      this.companyId = companyId;
      return this;
    }

    @Override
    public Illness build() {
      return new Illness(id, illnessName, remark, status, createStaffId, createStaffName, createTime, companyId, super.buildUnknownFields());
    }
  }

  private static final class ProtoAdapter_Illness extends ProtoAdapter<Illness> {
    ProtoAdapter_Illness() {
      super(FieldEncoding.LENGTH_DELIMITED, Illness.class);
    }

    @Override
    public int encodedSize(Illness value) {
      return (value.id != null ? ProtoAdapter.UINT64.encodedSizeWithTag(1, value.id) : 0)
          + (value.illnessName != null ? ProtoAdapter.STRING.encodedSizeWithTag(2, value.illnessName) : 0)
          + (value.remark != null ? ProtoAdapter.STRING.encodedSizeWithTag(3, value.remark) : 0)
          + (value.status != null ? ProtoAdapter.INT32.encodedSizeWithTag(4, value.status) : 0)
          + (value.createStaffId != null ? ProtoAdapter.UINT64.encodedSizeWithTag(5, value.createStaffId) : 0)
          + (value.createStaffName != null ? ProtoAdapter.STRING.encodedSizeWithTag(6, value.createStaffName) : 0)
          + (value.createTime != null ? ProtoAdapter.UINT64.encodedSizeWithTag(7, value.createTime) : 0)
          + (value.companyId != null ? ProtoAdapter.UINT64.encodedSizeWithTag(8, value.companyId) : 0)
          + value.unknownFields().size();
    }

    @Override
    public void encode(ProtoWriter writer, Illness value) throws IOException {
      if (value.id != null) ProtoAdapter.UINT64.encodeWithTag(writer, 1, value.id);
      if (value.illnessName != null) ProtoAdapter.STRING.encodeWithTag(writer, 2, value.illnessName);
      if (value.remark != null) ProtoAdapter.STRING.encodeWithTag(writer, 3, value.remark);
      if (value.status != null) ProtoAdapter.INT32.encodeWithTag(writer, 4, value.status);
      if (value.createStaffId != null) ProtoAdapter.UINT64.encodeWithTag(writer, 5, value.createStaffId);
      if (value.createStaffName != null) ProtoAdapter.STRING.encodeWithTag(writer, 6, value.createStaffName);
      if (value.createTime != null) ProtoAdapter.UINT64.encodeWithTag(writer, 7, value.createTime);
      if (value.companyId != null) ProtoAdapter.UINT64.encodeWithTag(writer, 8, value.companyId);
      writer.writeBytes(value.unknownFields());
    }

    @Override
    public Illness decode(ProtoReader reader) throws IOException {
      Builder builder = new Builder();
      long token = reader.beginMessage();
      for (int tag; (tag = reader.nextTag()) != -1;) {
        switch (tag) {
          case 1: builder.id(ProtoAdapter.UINT64.decode(reader)); break;
          case 2: builder.illnessName(ProtoAdapter.STRING.decode(reader)); break;
          case 3: builder.remark(ProtoAdapter.STRING.decode(reader)); break;
          case 4: builder.status(ProtoAdapter.INT32.decode(reader)); break;
          case 5: builder.createStaffId(ProtoAdapter.UINT64.decode(reader)); break;
          case 6: builder.createStaffName(ProtoAdapter.STRING.decode(reader)); break;
          case 7: builder.createTime(ProtoAdapter.UINT64.decode(reader)); break;
          case 8: builder.companyId(ProtoAdapter.UINT64.decode(reader)); break;
          default: {
            FieldEncoding fieldEncoding = reader.peekFieldEncoding();
            Object value = fieldEncoding.rawProtoAdapter().decode(reader);
            builder.addUnknownField(tag, fieldEncoding, value);
          }
        }
      }
      reader.endMessage(token);
      return builder.build();
    }

    @Override
    public Illness redact(Illness value) {
      Builder builder = value.newBuilder();
      builder.clearUnknownFields();
      return builder.build();
    }
  }
}
