// Code generated by Wire protocol buffer compiler, do not edit.
// Source file: Model.proto at 173:1
package com.yijianyi.protocol;

import com.squareup.wire.FieldEncoding;
import com.squareup.wire.Message;
import com.squareup.wire.ProtoAdapter;
import com.squareup.wire.ProtoReader;
import com.squareup.wire.ProtoWriter;
import com.squareup.wire.WireField;
import com.squareup.wire.internal.Internal;
import java.io.IOException;
import java.lang.Integer;
import java.lang.Long;
import java.lang.Object;
import java.lang.Override;
import java.lang.String;
import java.lang.StringBuilder;
import okio.ByteString;

/**
 * 用户优惠券
 */
public final class UserCoupon extends Message<UserCoupon, UserCoupon.Builder> {
  public static final ProtoAdapter<UserCoupon> ADAPTER = new ProtoAdapter_UserCoupon();

  private static final long serialVersionUID = 0L;

  public static final Long DEFAULT_ID = 0L;

  public static final Long DEFAULT_TEMPLATEID = 0L;

  public static final Long DEFAULT_USERID = 0L;

  public static final String DEFAULT_STARTDATE = "";

  public static final String DEFAULT_ENDDATE = "";

  public static final Long DEFAULT_CREATETIME = 0L;

  public static final Long DEFAULT_USETIME = 0L;

  public static final Long DEFAULT_SENDCOMPANYID = 0L;

  public static final Long DEFAULT_SENDSTAFFID = 0L;

  public static final Long DEFAULT_USEORGID = 0L;

  public static final Long DEFAULT_USEBRANCHID = 0L;

  public static final Integer DEFAULT_STATUS = 0;

  public static final String DEFAULT_CHANNELID = "";

  @WireField(
      tag = 1,
      adapter = "com.squareup.wire.ProtoAdapter#UINT64"
  )
  public final Long id;

  /**
   * 模板ID
   */
  @WireField(
      tag = 2,
      adapter = "com.squareup.wire.ProtoAdapter#UINT64"
  )
  public final Long templateId;

  /**
   * 用户ID
   */
  @WireField(
      tag = 3,
      adapter = "com.squareup.wire.ProtoAdapter#UINT64"
  )
  public final Long userId;

  /**
   * 开始日期
   */
  @WireField(
      tag = 4,
      adapter = "com.squareup.wire.ProtoAdapter#STRING"
  )
  public final String startDate;

  /**
   * 结束日期
   */
  @WireField(
      tag = 5,
      adapter = "com.squareup.wire.ProtoAdapter#STRING"
  )
  public final String endDate;

  /**
   * 发放时间
   */
  @WireField(
      tag = 6,
      adapter = "com.squareup.wire.ProtoAdapter#UINT64"
  )
  public final Long createTime;

  /**
   * 使用时间
   */
  @WireField(
      tag = 7,
      adapter = "com.squareup.wire.ProtoAdapter#UINT64"
  )
  public final Long useTime;

  /**
   * 发放公司ID
   */
  @WireField(
      tag = 8,
      adapter = "com.squareup.wire.ProtoAdapter#UINT64"
  )
  public final Long sendCompanyId;

  /**
   * 发放员工ID
   */
  @WireField(
      tag = 9,
      adapter = "com.squareup.wire.ProtoAdapter#UINT64"
  )
  public final Long sendStaffId;

  /**
   * 使用机构ID
   */
  @WireField(
      tag = 10,
      adapter = "com.squareup.wire.ProtoAdapter#UINT64"
  )
  public final Long useOrgId;

  /**
   * 使用科室ID
   */
  @WireField(
      tag = 11,
      adapter = "com.squareup.wire.ProtoAdapter#UINT64"
  )
  public final Long useBranchId;

  /**
   * 状态 1-未使用 2-已使用
   */
  @WireField(
      tag = 12,
      adapter = "com.squareup.wire.ProtoAdapter#UINT32"
  )
  public final Integer status;

  @WireField(
      tag = 13,
      adapter = "com.squareup.wire.ProtoAdapter#STRING"
  )
  public final String channelId;

  public UserCoupon(Long id, Long templateId, Long userId, String startDate, String endDate, Long createTime, Long useTime, Long sendCompanyId, Long sendStaffId, Long useOrgId, Long useBranchId, Integer status, String channelId) {
    this(id, templateId, userId, startDate, endDate, createTime, useTime, sendCompanyId, sendStaffId, useOrgId, useBranchId, status, channelId, ByteString.EMPTY);
  }

  public UserCoupon(Long id, Long templateId, Long userId, String startDate, String endDate, Long createTime, Long useTime, Long sendCompanyId, Long sendStaffId, Long useOrgId, Long useBranchId, Integer status, String channelId, ByteString unknownFields) {
    super(ADAPTER, unknownFields);
    this.id = id;
    this.templateId = templateId;
    this.userId = userId;
    this.startDate = startDate;
    this.endDate = endDate;
    this.createTime = createTime;
    this.useTime = useTime;
    this.sendCompanyId = sendCompanyId;
    this.sendStaffId = sendStaffId;
    this.useOrgId = useOrgId;
    this.useBranchId = useBranchId;
    this.status = status;
    this.channelId = channelId;
  }

  @Override
  public Builder newBuilder() {
    Builder builder = new Builder();
    builder.id = id;
    builder.templateId = templateId;
    builder.userId = userId;
    builder.startDate = startDate;
    builder.endDate = endDate;
    builder.createTime = createTime;
    builder.useTime = useTime;
    builder.sendCompanyId = sendCompanyId;
    builder.sendStaffId = sendStaffId;
    builder.useOrgId = useOrgId;
    builder.useBranchId = useBranchId;
    builder.status = status;
    builder.channelId = channelId;
    builder.addUnknownFields(unknownFields());
    return builder;
  }

  @Override
  public boolean equals(Object other) {
    if (other == this) return true;
    if (!(other instanceof UserCoupon)) return false;
    UserCoupon o = (UserCoupon) other;
    return unknownFields().equals(o.unknownFields())
        && Internal.equals(id, o.id)
        && Internal.equals(templateId, o.templateId)
        && Internal.equals(userId, o.userId)
        && Internal.equals(startDate, o.startDate)
        && Internal.equals(endDate, o.endDate)
        && Internal.equals(createTime, o.createTime)
        && Internal.equals(useTime, o.useTime)
        && Internal.equals(sendCompanyId, o.sendCompanyId)
        && Internal.equals(sendStaffId, o.sendStaffId)
        && Internal.equals(useOrgId, o.useOrgId)
        && Internal.equals(useBranchId, o.useBranchId)
        && Internal.equals(status, o.status)
        && Internal.equals(channelId, o.channelId);
  }

  @Override
  public int hashCode() {
    int result = super.hashCode;
    if (result == 0) {
      result = unknownFields().hashCode();
      result = result * 37 + (id != null ? id.hashCode() : 0);
      result = result * 37 + (templateId != null ? templateId.hashCode() : 0);
      result = result * 37 + (userId != null ? userId.hashCode() : 0);
      result = result * 37 + (startDate != null ? startDate.hashCode() : 0);
      result = result * 37 + (endDate != null ? endDate.hashCode() : 0);
      result = result * 37 + (createTime != null ? createTime.hashCode() : 0);
      result = result * 37 + (useTime != null ? useTime.hashCode() : 0);
      result = result * 37 + (sendCompanyId != null ? sendCompanyId.hashCode() : 0);
      result = result * 37 + (sendStaffId != null ? sendStaffId.hashCode() : 0);
      result = result * 37 + (useOrgId != null ? useOrgId.hashCode() : 0);
      result = result * 37 + (useBranchId != null ? useBranchId.hashCode() : 0);
      result = result * 37 + (status != null ? status.hashCode() : 0);
      result = result * 37 + (channelId != null ? channelId.hashCode() : 0);
      super.hashCode = result;
    }
    return result;
  }

  @Override
  public String toString() {
    StringBuilder builder = new StringBuilder();
    if (id != null) builder.append(", id=").append(id);
    if (templateId != null) builder.append(", templateId=").append(templateId);
    if (userId != null) builder.append(", userId=").append(userId);
    if (startDate != null) builder.append(", startDate=").append(startDate);
    if (endDate != null) builder.append(", endDate=").append(endDate);
    if (createTime != null) builder.append(", createTime=").append(createTime);
    if (useTime != null) builder.append(", useTime=").append(useTime);
    if (sendCompanyId != null) builder.append(", sendCompanyId=").append(sendCompanyId);
    if (sendStaffId != null) builder.append(", sendStaffId=").append(sendStaffId);
    if (useOrgId != null) builder.append(", useOrgId=").append(useOrgId);
    if (useBranchId != null) builder.append(", useBranchId=").append(useBranchId);
    if (status != null) builder.append(", status=").append(status);
    if (channelId != null) builder.append(", channelId=").append(channelId);
    return builder.replace(0, 2, "UserCoupon{").append('}').toString();
  }

  public static final class Builder extends Message.Builder<UserCoupon, Builder> {
    public Long id;

    public Long templateId;

    public Long userId;

    public String startDate;

    public String endDate;

    public Long createTime;

    public Long useTime;

    public Long sendCompanyId;

    public Long sendStaffId;

    public Long useOrgId;

    public Long useBranchId;

    public Integer status;

    public String channelId;

    public Builder() {
    }

    public Builder id(Long id) {
      this.id = id;
      return this;
    }

    /**
     * 模板ID
     */
    public Builder templateId(Long templateId) {
      this.templateId = templateId;
      return this;
    }

    /**
     * 用户ID
     */
    public Builder userId(Long userId) {
      this.userId = userId;
      return this;
    }

    /**
     * 开始日期
     */
    public Builder startDate(String startDate) {
      this.startDate = startDate;
      return this;
    }

    /**
     * 结束日期
     */
    public Builder endDate(String endDate) {
      this.endDate = endDate;
      return this;
    }

    /**
     * 发放时间
     */
    public Builder createTime(Long createTime) {
      this.createTime = createTime;
      return this;
    }

    /**
     * 使用时间
     */
    public Builder useTime(Long useTime) {
      this.useTime = useTime;
      return this;
    }

    /**
     * 发放公司ID
     */
    public Builder sendCompanyId(Long sendCompanyId) {
      this.sendCompanyId = sendCompanyId;
      return this;
    }

    /**
     * 发放员工ID
     */
    public Builder sendStaffId(Long sendStaffId) {
      this.sendStaffId = sendStaffId;
      return this;
    }

    /**
     * 使用机构ID
     */
    public Builder useOrgId(Long useOrgId) {
      this.useOrgId = useOrgId;
      return this;
    }

    /**
     * 使用科室ID
     */
    public Builder useBranchId(Long useBranchId) {
      this.useBranchId = useBranchId;
      return this;
    }

    /**
     * 状态 1-未使用 2-已使用
     */
    public Builder status(Integer status) {
      this.status = status;
      return this;
    }

    public Builder channelId(String channelId) {
      this.channelId = channelId;
      return this;
    }

    @Override
    public UserCoupon build() {
      return new UserCoupon(id, templateId, userId, startDate, endDate, createTime, useTime, sendCompanyId, sendStaffId, useOrgId, useBranchId, status, channelId, super.buildUnknownFields());
    }
  }

  private static final class ProtoAdapter_UserCoupon extends ProtoAdapter<UserCoupon> {
    ProtoAdapter_UserCoupon() {
      super(FieldEncoding.LENGTH_DELIMITED, UserCoupon.class);
    }

    @Override
    public int encodedSize(UserCoupon value) {
      return (value.id != null ? ProtoAdapter.UINT64.encodedSizeWithTag(1, value.id) : 0)
          + (value.templateId != null ? ProtoAdapter.UINT64.encodedSizeWithTag(2, value.templateId) : 0)
          + (value.userId != null ? ProtoAdapter.UINT64.encodedSizeWithTag(3, value.userId) : 0)
          + (value.startDate != null ? ProtoAdapter.STRING.encodedSizeWithTag(4, value.startDate) : 0)
          + (value.endDate != null ? ProtoAdapter.STRING.encodedSizeWithTag(5, value.endDate) : 0)
          + (value.createTime != null ? ProtoAdapter.UINT64.encodedSizeWithTag(6, value.createTime) : 0)
          + (value.useTime != null ? ProtoAdapter.UINT64.encodedSizeWithTag(7, value.useTime) : 0)
          + (value.sendCompanyId != null ? ProtoAdapter.UINT64.encodedSizeWithTag(8, value.sendCompanyId) : 0)
          + (value.sendStaffId != null ? ProtoAdapter.UINT64.encodedSizeWithTag(9, value.sendStaffId) : 0)
          + (value.useOrgId != null ? ProtoAdapter.UINT64.encodedSizeWithTag(10, value.useOrgId) : 0)
          + (value.useBranchId != null ? ProtoAdapter.UINT64.encodedSizeWithTag(11, value.useBranchId) : 0)
          + (value.status != null ? ProtoAdapter.UINT32.encodedSizeWithTag(12, value.status) : 0)
          + (value.channelId != null ? ProtoAdapter.STRING.encodedSizeWithTag(13, value.channelId) : 0)
          + value.unknownFields().size();
    }

    @Override
    public void encode(ProtoWriter writer, UserCoupon value) throws IOException {
      if (value.id != null) ProtoAdapter.UINT64.encodeWithTag(writer, 1, value.id);
      if (value.templateId != null) ProtoAdapter.UINT64.encodeWithTag(writer, 2, value.templateId);
      if (value.userId != null) ProtoAdapter.UINT64.encodeWithTag(writer, 3, value.userId);
      if (value.startDate != null) ProtoAdapter.STRING.encodeWithTag(writer, 4, value.startDate);
      if (value.endDate != null) ProtoAdapter.STRING.encodeWithTag(writer, 5, value.endDate);
      if (value.createTime != null) ProtoAdapter.UINT64.encodeWithTag(writer, 6, value.createTime);
      if (value.useTime != null) ProtoAdapter.UINT64.encodeWithTag(writer, 7, value.useTime);
      if (value.sendCompanyId != null) ProtoAdapter.UINT64.encodeWithTag(writer, 8, value.sendCompanyId);
      if (value.sendStaffId != null) ProtoAdapter.UINT64.encodeWithTag(writer, 9, value.sendStaffId);
      if (value.useOrgId != null) ProtoAdapter.UINT64.encodeWithTag(writer, 10, value.useOrgId);
      if (value.useBranchId != null) ProtoAdapter.UINT64.encodeWithTag(writer, 11, value.useBranchId);
      if (value.status != null) ProtoAdapter.UINT32.encodeWithTag(writer, 12, value.status);
      if (value.channelId != null) ProtoAdapter.STRING.encodeWithTag(writer, 13, value.channelId);
      writer.writeBytes(value.unknownFields());
    }

    @Override
    public UserCoupon decode(ProtoReader reader) throws IOException {
      Builder builder = new Builder();
      long token = reader.beginMessage();
      for (int tag; (tag = reader.nextTag()) != -1;) {
        switch (tag) {
          case 1: builder.id(ProtoAdapter.UINT64.decode(reader)); break;
          case 2: builder.templateId(ProtoAdapter.UINT64.decode(reader)); break;
          case 3: builder.userId(ProtoAdapter.UINT64.decode(reader)); break;
          case 4: builder.startDate(ProtoAdapter.STRING.decode(reader)); break;
          case 5: builder.endDate(ProtoAdapter.STRING.decode(reader)); break;
          case 6: builder.createTime(ProtoAdapter.UINT64.decode(reader)); break;
          case 7: builder.useTime(ProtoAdapter.UINT64.decode(reader)); break;
          case 8: builder.sendCompanyId(ProtoAdapter.UINT64.decode(reader)); break;
          case 9: builder.sendStaffId(ProtoAdapter.UINT64.decode(reader)); break;
          case 10: builder.useOrgId(ProtoAdapter.UINT64.decode(reader)); break;
          case 11: builder.useBranchId(ProtoAdapter.UINT64.decode(reader)); break;
          case 12: builder.status(ProtoAdapter.UINT32.decode(reader)); break;
          case 13: builder.channelId(ProtoAdapter.STRING.decode(reader)); break;
          default: {
            FieldEncoding fieldEncoding = reader.peekFieldEncoding();
            Object value = fieldEncoding.rawProtoAdapter().decode(reader);
            builder.addUnknownField(tag, fieldEncoding, value);
          }
        }
      }
      reader.endMessage(token);
      return builder.build();
    }

    @Override
    public UserCoupon redact(UserCoupon value) {
      Builder builder = value.newBuilder();
      builder.clearUnknownFields();
      return builder.build();
    }
  }
}
