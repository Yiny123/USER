// Code generated by Wire protocol buffer compiler, do not edit.
// Source file: OrderModel.proto at 691:1
package com.yijianyi.protocol;

import com.squareup.wire.FieldEncoding;
import com.squareup.wire.Message;
import com.squareup.wire.ProtoAdapter;
import com.squareup.wire.ProtoReader;
import com.squareup.wire.ProtoWriter;
import com.squareup.wire.WireField;
import com.squareup.wire.internal.Internal;
import java.io.IOException;
import java.lang.Long;
import java.lang.Object;
import java.lang.Override;
import java.lang.String;
import java.lang.StringBuilder;
import okio.ByteString;

public final class OrderTendDetailBO extends Message<OrderTendDetailBO, OrderTendDetailBO.Builder> {
  public static final ProtoAdapter<OrderTendDetailBO> ADAPTER = new ProtoAdapter_OrderTendDetailBO();

  private static final long serialVersionUID = 0L;

  public static final Long DEFAULT_TENDDETAILID = 0L;

  public static final String DEFAULT_CONTENT = "";

  /**
   * 照护明细ID(如果是手动输入，则为-1)
   */
  @WireField(
      tag = 1,
      adapter = "com.squareup.wire.ProtoAdapter#INT64"
  )
  public final Long tendDetailId;

  /**
   * 照护明细内容
   */
  @WireField(
      tag = 2,
      adapter = "com.squareup.wire.ProtoAdapter#STRING"
  )
  public final String content;

  public OrderTendDetailBO(Long tendDetailId, String content) {
    this(tendDetailId, content, ByteString.EMPTY);
  }

  public OrderTendDetailBO(Long tendDetailId, String content, ByteString unknownFields) {
    super(ADAPTER, unknownFields);
    this.tendDetailId = tendDetailId;
    this.content = content;
  }

  @Override
  public Builder newBuilder() {
    Builder builder = new Builder();
    builder.tendDetailId = tendDetailId;
    builder.content = content;
    builder.addUnknownFields(unknownFields());
    return builder;
  }

  @Override
  public boolean equals(Object other) {
    if (other == this) return true;
    if (!(other instanceof OrderTendDetailBO)) return false;
    OrderTendDetailBO o = (OrderTendDetailBO) other;
    return unknownFields().equals(o.unknownFields())
        && Internal.equals(tendDetailId, o.tendDetailId)
        && Internal.equals(content, o.content);
  }

  @Override
  public int hashCode() {
    int result = super.hashCode;
    if (result == 0) {
      result = unknownFields().hashCode();
      result = result * 37 + (tendDetailId != null ? tendDetailId.hashCode() : 0);
      result = result * 37 + (content != null ? content.hashCode() : 0);
      super.hashCode = result;
    }
    return result;
  }

  @Override
  public String toString() {
    StringBuilder builder = new StringBuilder();
    if (tendDetailId != null) builder.append(", tendDetailId=").append(tendDetailId);
    if (content != null) builder.append(", content=").append(content);
    return builder.replace(0, 2, "OrderTendDetailBO{").append('}').toString();
  }

  public static final class Builder extends Message.Builder<OrderTendDetailBO, Builder> {
    public Long tendDetailId;

    public String content;

    public Builder() {
    }

    /**
     * 照护明细ID(如果是手动输入，则为-1)
     */
    public Builder tendDetailId(Long tendDetailId) {
      this.tendDetailId = tendDetailId;
      return this;
    }

    /**
     * 照护明细内容
     */
    public Builder content(String content) {
      this.content = content;
      return this;
    }

    @Override
    public OrderTendDetailBO build() {
      return new OrderTendDetailBO(tendDetailId, content, super.buildUnknownFields());
    }
  }

  private static final class ProtoAdapter_OrderTendDetailBO extends ProtoAdapter<OrderTendDetailBO> {
    ProtoAdapter_OrderTendDetailBO() {
      super(FieldEncoding.LENGTH_DELIMITED, OrderTendDetailBO.class);
    }

    @Override
    public int encodedSize(OrderTendDetailBO value) {
      return (value.tendDetailId != null ? ProtoAdapter.INT64.encodedSizeWithTag(1, value.tendDetailId) : 0)
          + (value.content != null ? ProtoAdapter.STRING.encodedSizeWithTag(2, value.content) : 0)
          + value.unknownFields().size();
    }

    @Override
    public void encode(ProtoWriter writer, OrderTendDetailBO value) throws IOException {
      if (value.tendDetailId != null) ProtoAdapter.INT64.encodeWithTag(writer, 1, value.tendDetailId);
      if (value.content != null) ProtoAdapter.STRING.encodeWithTag(writer, 2, value.content);
      writer.writeBytes(value.unknownFields());
    }

    @Override
    public OrderTendDetailBO decode(ProtoReader reader) throws IOException {
      Builder builder = new Builder();
      long token = reader.beginMessage();
      for (int tag; (tag = reader.nextTag()) != -1;) {
        switch (tag) {
          case 1: builder.tendDetailId(ProtoAdapter.INT64.decode(reader)); break;
          case 2: builder.content(ProtoAdapter.STRING.decode(reader)); break;
          default: {
            FieldEncoding fieldEncoding = reader.peekFieldEncoding();
            Object value = fieldEncoding.rawProtoAdapter().decode(reader);
            builder.addUnknownField(tag, fieldEncoding, value);
          }
        }
      }
      reader.endMessage(token);
      return builder.build();
    }

    @Override
    public OrderTendDetailBO redact(OrderTendDetailBO value) {
      Builder builder = value.newBuilder();
      builder.clearUnknownFields();
      return builder.build();
    }
  }
}
