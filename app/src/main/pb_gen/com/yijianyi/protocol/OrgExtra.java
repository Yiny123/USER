// Code generated by Wire protocol buffer compiler, do not edit.
// Source file: OrderModel.proto at 505:1
package com.yijianyi.protocol;

import com.squareup.wire.FieldEncoding;
import com.squareup.wire.Message;
import com.squareup.wire.ProtoAdapter;
import com.squareup.wire.ProtoReader;
import com.squareup.wire.ProtoWriter;
import com.squareup.wire.WireField;
import com.squareup.wire.internal.Internal;
import java.io.IOException;
import java.lang.Integer;
import java.lang.Long;
import java.lang.Object;
import java.lang.Override;
import java.lang.String;
import java.lang.StringBuilder;
import okio.ByteString;

/**
 * 门禁卡信息
 */
public final class OrgExtra extends Message<OrgExtra, OrgExtra.Builder> {
  public static final ProtoAdapter<OrgExtra> ADAPTER = new ProtoAdapter_OrgExtra();

  private static final long serialVersionUID = 0L;

  public static final Long DEFAULT_ID = 0L;

  public static final String DEFAULT_ORDERID = "";

  public static final String DEFAULT_EXTRANO = "";

  public static final Integer DEFAULT_STATUS = 0;

  public static final Long DEFAULT_LOSSTIME = 0L;

  public static final Long DEFAULT_CANCELTIME = 0L;

  public static final Long DEFAULT_RETURNTIME = 0L;

  public static final Long DEFAULT_CREATETIME = 0L;

  public static final Long DEFAULT_CREATESTAFFID = 0L;

  public static final String DEFAULT_CREATESTAFFNAME = "";

  public static final Long DEFAULT_UPDATESTAFFID = 0L;

  public static final String DEFAULT_UPDATESTAFFNAME = "";

  public static final Long DEFAULT_FEE = 0L;

  public static final Long DEFAULT_ORGID = 0L;

  public static final String DEFAULT_ORGNAME = "";

  public static final Long DEFAULT_BRANCHID = 0L;

  public static final String DEFAULT_BRANCHNAME = "";

  public static final Long DEFAULT_DAMAGEDTIME = 0L;

  public static final Integer DEFAULT_PAYTYPE = 0;

  public static final Long DEFAULT_REFUNDFEE = 0L;

  public static final Integer DEFAULT_REFUNDPAYTYPE = 0;

  public static final Integer DEFAULT_FEIKATYPE = 0;

  public static final Long DEFAULT_SHOUKUANSTAFFID = 0L;

  public static final String DEFAULT_SHOUKUANSTAFFNAME = "";

  public static final Long DEFAULT_TUIKUANSTAFFID = 0L;

  public static final String DEFAULT_TUIKUANSTAFFNAME = "";

  public static final Long DEFAULT_KAIPIAOSTAFFID = 0L;

  public static final String DEFAULT_KAIPIAOSTAFFNAME = "";

  public static final Long DEFAULT_FAKASTAFFID = 0L;

  public static final String DEFAULT_FAKASTAFFNAME = "";

  public static final Long DEFAULT_SHOUKASTAFFID = 0L;

  public static final String DEFAULT_SHOUKASTAFFNAME = "";

  @WireField(
      tag = 1,
      adapter = "com.squareup.wire.ProtoAdapter#UINT64"
  )
  public final Long id;

  /**
   * 订单id
   */
  @WireField(
      tag = 2,
      adapter = "com.squareup.wire.ProtoAdapter#STRING"
  )
  public final String orderId;

  /**
   * 门禁卡号
   */
  @WireField(
      tag = 3,
      adapter = "com.squareup.wire.ProtoAdapter#STRING"
  )
  public final String extraNO;

  /**
   * 状态 -1-删除 0-使用中 1-已归还 2-已挂失 3-已作废 4-已解绑
   */
  @WireField(
      tag = 4,
      adapter = "com.squareup.wire.ProtoAdapter#INT32"
  )
  public final Integer status;

  /**
   * 挂失时间
   */
  @WireField(
      tag = 5,
      adapter = "com.squareup.wire.ProtoAdapter#UINT64"
  )
  public final Long lossTime;

  /**
   * 取消挂失时间
   */
  @WireField(
      tag = 6,
      adapter = "com.squareup.wire.ProtoAdapter#UINT64"
  )
  public final Long cancelTime;

  /**
   * 退还时间
   */
  @WireField(
      tag = 7,
      adapter = "com.squareup.wire.ProtoAdapter#UINT64"
  )
  public final Long returnTime;

  /**
   * 创建时间
   */
  @WireField(
      tag = 8,
      adapter = "com.squareup.wire.ProtoAdapter#UINT64"
  )
  public final Long createTime;

  /**
   * 创建员工ID
   */
  @WireField(
      tag = 9,
      adapter = "com.squareup.wire.ProtoAdapter#UINT64"
  )
  public final Long createStaffId;

  /**
   * 创建员工名称
   */
  @WireField(
      tag = 10,
      adapter = "com.squareup.wire.ProtoAdapter#STRING"
  )
  public final String createStaffName;

  /**
   * 最后修改员工ID
   */
  @WireField(
      tag = 11,
      adapter = "com.squareup.wire.ProtoAdapter#UINT64"
  )
  public final Long updateStaffId;

  /**
   * 最后修改员工名称
   */
  @WireField(
      tag = 12,
      adapter = "com.squareup.wire.ProtoAdapter#STRING"
  )
  public final String updateStaffName;

  /**
   * 门禁卡押金
   */
  @WireField(
      tag = 13,
      adapter = "com.squareup.wire.ProtoAdapter#UINT64"
  )
  public final Long fee;

  /**
   * 机构id
   */
  @WireField(
      tag = 14,
      adapter = "com.squareup.wire.ProtoAdapter#UINT64"
  )
  public final Long orgId;

  /**
   * 机构名
   */
  @WireField(
      tag = 15,
      adapter = "com.squareup.wire.ProtoAdapter#STRING"
  )
  public final String orgName;

  /**
   * 科室id
   */
  @WireField(
      tag = 16,
      adapter = "com.squareup.wire.ProtoAdapter#UINT64"
  )
  public final Long branchId;

  /**
   * 科室名
   */
  @WireField(
      tag = 17,
      adapter = "com.squareup.wire.ProtoAdapter#STRING"
  )
  public final String branchName;

  /**
   * 作废时间
   */
  @WireField(
      tag = 18,
      adapter = "com.squareup.wire.ProtoAdapter#UINT64"
  )
  public final Long damagedTime;

  /**
   * 支付类型 1-支付宝  2-微信公众号 3-微信APP 9-条形码 10-现金 11-pos  50-支付宝退款 51-微信公众号退款 52-微信APP退款
   */
  @WireField(
      tag = 19,
      adapter = "com.squareup.wire.ProtoAdapter#UINT32"
  )
  public final Integer payType;

  /**
   * 门禁卡退款金额
   */
  @WireField(
      tag = 20,
      adapter = "com.squareup.wire.ProtoAdapter#UINT64"
  )
  public final Long refundFee;

  /**
   * 支付类型 1-支付宝  2-微信公众号 3-微信APP 9-条形码 10-现金 11-pos  50-支付宝退款 51-微信公众号退款 52-微信APP退款
   */
  @WireField(
      tag = 21,
      adapter = "com.squareup.wire.ProtoAdapter#UINT32"
  )
  public final Integer refundPayType;

  /**
   * 废卡类型 1-废卡 2-换卡
   */
  @WireField(
      tag = 22,
      adapter = "com.squareup.wire.ProtoAdapter#UINT32"
  )
  public final Integer feikaType;

  /**
   * 收款人、退款人、开票人、发卡人、收卡人
   * 收款人ID
   */
  @WireField(
      tag = 23,
      adapter = "com.squareup.wire.ProtoAdapter#UINT64"
  )
  public final Long shoukuanStaffId;

  /**
   * 收款人
   */
  @WireField(
      tag = 24,
      adapter = "com.squareup.wire.ProtoAdapter#STRING"
  )
  public final String shoukuanStaffName;

  /**
   * 退款人ID
   */
  @WireField(
      tag = 25,
      adapter = "com.squareup.wire.ProtoAdapter#UINT64"
  )
  public final Long tuikuanStaffId;

  /**
   * 退款人
   */
  @WireField(
      tag = 26,
      adapter = "com.squareup.wire.ProtoAdapter#STRING"
  )
  public final String tuikuanStaffName;

  /**
   * 开票人ID
   */
  @WireField(
      tag = 27,
      adapter = "com.squareup.wire.ProtoAdapter#UINT64"
  )
  public final Long kaipiaoStaffId;

  /**
   * 开票人
   */
  @WireField(
      tag = 28,
      adapter = "com.squareup.wire.ProtoAdapter#STRING"
  )
  public final String kaipiaoStaffName;

  /**
   * 发卡人ID
   */
  @WireField(
      tag = 29,
      adapter = "com.squareup.wire.ProtoAdapter#UINT64"
  )
  public final Long fakaStaffId;

  /**
   * 发卡人
   */
  @WireField(
      tag = 30,
      adapter = "com.squareup.wire.ProtoAdapter#STRING"
  )
  public final String fakaStaffName;

  /**
   * 收卡人ID
   */
  @WireField(
      tag = 31,
      adapter = "com.squareup.wire.ProtoAdapter#UINT64"
  )
  public final Long shoukaStaffId;

  /**
   * 收卡人
   */
  @WireField(
      tag = 32,
      adapter = "com.squareup.wire.ProtoAdapter#STRING"
  )
  public final String shoukaStaffName;

  public OrgExtra(Long id, String orderId, String extraNO, Integer status, Long lossTime, Long cancelTime, Long returnTime, Long createTime, Long createStaffId, String createStaffName, Long updateStaffId, String updateStaffName, Long fee, Long orgId, String orgName, Long branchId, String branchName, Long damagedTime, Integer payType, Long refundFee, Integer refundPayType, Integer feikaType, Long shoukuanStaffId, String shoukuanStaffName, Long tuikuanStaffId, String tuikuanStaffName, Long kaipiaoStaffId, String kaipiaoStaffName, Long fakaStaffId, String fakaStaffName, Long shoukaStaffId, String shoukaStaffName) {
    this(id, orderId, extraNO, status, lossTime, cancelTime, returnTime, createTime, createStaffId, createStaffName, updateStaffId, updateStaffName, fee, orgId, orgName, branchId, branchName, damagedTime, payType, refundFee, refundPayType, feikaType, shoukuanStaffId, shoukuanStaffName, tuikuanStaffId, tuikuanStaffName, kaipiaoStaffId, kaipiaoStaffName, fakaStaffId, fakaStaffName, shoukaStaffId, shoukaStaffName, ByteString.EMPTY);
  }

  public OrgExtra(Long id, String orderId, String extraNO, Integer status, Long lossTime, Long cancelTime, Long returnTime, Long createTime, Long createStaffId, String createStaffName, Long updateStaffId, String updateStaffName, Long fee, Long orgId, String orgName, Long branchId, String branchName, Long damagedTime, Integer payType, Long refundFee, Integer refundPayType, Integer feikaType, Long shoukuanStaffId, String shoukuanStaffName, Long tuikuanStaffId, String tuikuanStaffName, Long kaipiaoStaffId, String kaipiaoStaffName, Long fakaStaffId, String fakaStaffName, Long shoukaStaffId, String shoukaStaffName, ByteString unknownFields) {
    super(ADAPTER, unknownFields);
    this.id = id;
    this.orderId = orderId;
    this.extraNO = extraNO;
    this.status = status;
    this.lossTime = lossTime;
    this.cancelTime = cancelTime;
    this.returnTime = returnTime;
    this.createTime = createTime;
    this.createStaffId = createStaffId;
    this.createStaffName = createStaffName;
    this.updateStaffId = updateStaffId;
    this.updateStaffName = updateStaffName;
    this.fee = fee;
    this.orgId = orgId;
    this.orgName = orgName;
    this.branchId = branchId;
    this.branchName = branchName;
    this.damagedTime = damagedTime;
    this.payType = payType;
    this.refundFee = refundFee;
    this.refundPayType = refundPayType;
    this.feikaType = feikaType;
    this.shoukuanStaffId = shoukuanStaffId;
    this.shoukuanStaffName = shoukuanStaffName;
    this.tuikuanStaffId = tuikuanStaffId;
    this.tuikuanStaffName = tuikuanStaffName;
    this.kaipiaoStaffId = kaipiaoStaffId;
    this.kaipiaoStaffName = kaipiaoStaffName;
    this.fakaStaffId = fakaStaffId;
    this.fakaStaffName = fakaStaffName;
    this.shoukaStaffId = shoukaStaffId;
    this.shoukaStaffName = shoukaStaffName;
  }

  @Override
  public Builder newBuilder() {
    Builder builder = new Builder();
    builder.id = id;
    builder.orderId = orderId;
    builder.extraNO = extraNO;
    builder.status = status;
    builder.lossTime = lossTime;
    builder.cancelTime = cancelTime;
    builder.returnTime = returnTime;
    builder.createTime = createTime;
    builder.createStaffId = createStaffId;
    builder.createStaffName = createStaffName;
    builder.updateStaffId = updateStaffId;
    builder.updateStaffName = updateStaffName;
    builder.fee = fee;
    builder.orgId = orgId;
    builder.orgName = orgName;
    builder.branchId = branchId;
    builder.branchName = branchName;
    builder.damagedTime = damagedTime;
    builder.payType = payType;
    builder.refundFee = refundFee;
    builder.refundPayType = refundPayType;
    builder.feikaType = feikaType;
    builder.shoukuanStaffId = shoukuanStaffId;
    builder.shoukuanStaffName = shoukuanStaffName;
    builder.tuikuanStaffId = tuikuanStaffId;
    builder.tuikuanStaffName = tuikuanStaffName;
    builder.kaipiaoStaffId = kaipiaoStaffId;
    builder.kaipiaoStaffName = kaipiaoStaffName;
    builder.fakaStaffId = fakaStaffId;
    builder.fakaStaffName = fakaStaffName;
    builder.shoukaStaffId = shoukaStaffId;
    builder.shoukaStaffName = shoukaStaffName;
    builder.addUnknownFields(unknownFields());
    return builder;
  }

  @Override
  public boolean equals(Object other) {
    if (other == this) return true;
    if (!(other instanceof OrgExtra)) return false;
    OrgExtra o = (OrgExtra) other;
    return unknownFields().equals(o.unknownFields())
        && Internal.equals(id, o.id)
        && Internal.equals(orderId, o.orderId)
        && Internal.equals(extraNO, o.extraNO)
        && Internal.equals(status, o.status)
        && Internal.equals(lossTime, o.lossTime)
        && Internal.equals(cancelTime, o.cancelTime)
        && Internal.equals(returnTime, o.returnTime)
        && Internal.equals(createTime, o.createTime)
        && Internal.equals(createStaffId, o.createStaffId)
        && Internal.equals(createStaffName, o.createStaffName)
        && Internal.equals(updateStaffId, o.updateStaffId)
        && Internal.equals(updateStaffName, o.updateStaffName)
        && Internal.equals(fee, o.fee)
        && Internal.equals(orgId, o.orgId)
        && Internal.equals(orgName, o.orgName)
        && Internal.equals(branchId, o.branchId)
        && Internal.equals(branchName, o.branchName)
        && Internal.equals(damagedTime, o.damagedTime)
        && Internal.equals(payType, o.payType)
        && Internal.equals(refundFee, o.refundFee)
        && Internal.equals(refundPayType, o.refundPayType)
        && Internal.equals(feikaType, o.feikaType)
        && Internal.equals(shoukuanStaffId, o.shoukuanStaffId)
        && Internal.equals(shoukuanStaffName, o.shoukuanStaffName)
        && Internal.equals(tuikuanStaffId, o.tuikuanStaffId)
        && Internal.equals(tuikuanStaffName, o.tuikuanStaffName)
        && Internal.equals(kaipiaoStaffId, o.kaipiaoStaffId)
        && Internal.equals(kaipiaoStaffName, o.kaipiaoStaffName)
        && Internal.equals(fakaStaffId, o.fakaStaffId)
        && Internal.equals(fakaStaffName, o.fakaStaffName)
        && Internal.equals(shoukaStaffId, o.shoukaStaffId)
        && Internal.equals(shoukaStaffName, o.shoukaStaffName);
  }

  @Override
  public int hashCode() {
    int result = super.hashCode;
    if (result == 0) {
      result = unknownFields().hashCode();
      result = result * 37 + (id != null ? id.hashCode() : 0);
      result = result * 37 + (orderId != null ? orderId.hashCode() : 0);
      result = result * 37 + (extraNO != null ? extraNO.hashCode() : 0);
      result = result * 37 + (status != null ? status.hashCode() : 0);
      result = result * 37 + (lossTime != null ? lossTime.hashCode() : 0);
      result = result * 37 + (cancelTime != null ? cancelTime.hashCode() : 0);
      result = result * 37 + (returnTime != null ? returnTime.hashCode() : 0);
      result = result * 37 + (createTime != null ? createTime.hashCode() : 0);
      result = result * 37 + (createStaffId != null ? createStaffId.hashCode() : 0);
      result = result * 37 + (createStaffName != null ? createStaffName.hashCode() : 0);
      result = result * 37 + (updateStaffId != null ? updateStaffId.hashCode() : 0);
      result = result * 37 + (updateStaffName != null ? updateStaffName.hashCode() : 0);
      result = result * 37 + (fee != null ? fee.hashCode() : 0);
      result = result * 37 + (orgId != null ? orgId.hashCode() : 0);
      result = result * 37 + (orgName != null ? orgName.hashCode() : 0);
      result = result * 37 + (branchId != null ? branchId.hashCode() : 0);
      result = result * 37 + (branchName != null ? branchName.hashCode() : 0);
      result = result * 37 + (damagedTime != null ? damagedTime.hashCode() : 0);
      result = result * 37 + (payType != null ? payType.hashCode() : 0);
      result = result * 37 + (refundFee != null ? refundFee.hashCode() : 0);
      result = result * 37 + (refundPayType != null ? refundPayType.hashCode() : 0);
      result = result * 37 + (feikaType != null ? feikaType.hashCode() : 0);
      result = result * 37 + (shoukuanStaffId != null ? shoukuanStaffId.hashCode() : 0);
      result = result * 37 + (shoukuanStaffName != null ? shoukuanStaffName.hashCode() : 0);
      result = result * 37 + (tuikuanStaffId != null ? tuikuanStaffId.hashCode() : 0);
      result = result * 37 + (tuikuanStaffName != null ? tuikuanStaffName.hashCode() : 0);
      result = result * 37 + (kaipiaoStaffId != null ? kaipiaoStaffId.hashCode() : 0);
      result = result * 37 + (kaipiaoStaffName != null ? kaipiaoStaffName.hashCode() : 0);
      result = result * 37 + (fakaStaffId != null ? fakaStaffId.hashCode() : 0);
      result = result * 37 + (fakaStaffName != null ? fakaStaffName.hashCode() : 0);
      result = result * 37 + (shoukaStaffId != null ? shoukaStaffId.hashCode() : 0);
      result = result * 37 + (shoukaStaffName != null ? shoukaStaffName.hashCode() : 0);
      super.hashCode = result;
    }
    return result;
  }

  @Override
  public String toString() {
    StringBuilder builder = new StringBuilder();
    if (id != null) builder.append(", id=").append(id);
    if (orderId != null) builder.append(", orderId=").append(orderId);
    if (extraNO != null) builder.append(", extraNO=").append(extraNO);
    if (status != null) builder.append(", status=").append(status);
    if (lossTime != null) builder.append(", lossTime=").append(lossTime);
    if (cancelTime != null) builder.append(", cancelTime=").append(cancelTime);
    if (returnTime != null) builder.append(", returnTime=").append(returnTime);
    if (createTime != null) builder.append(", createTime=").append(createTime);
    if (createStaffId != null) builder.append(", createStaffId=").append(createStaffId);
    if (createStaffName != null) builder.append(", createStaffName=").append(createStaffName);
    if (updateStaffId != null) builder.append(", updateStaffId=").append(updateStaffId);
    if (updateStaffName != null) builder.append(", updateStaffName=").append(updateStaffName);
    if (fee != null) builder.append(", fee=").append(fee);
    if (orgId != null) builder.append(", orgId=").append(orgId);
    if (orgName != null) builder.append(", orgName=").append(orgName);
    if (branchId != null) builder.append(", branchId=").append(branchId);
    if (branchName != null) builder.append(", branchName=").append(branchName);
    if (damagedTime != null) builder.append(", damagedTime=").append(damagedTime);
    if (payType != null) builder.append(", payType=").append(payType);
    if (refundFee != null) builder.append(", refundFee=").append(refundFee);
    if (refundPayType != null) builder.append(", refundPayType=").append(refundPayType);
    if (feikaType != null) builder.append(", feikaType=").append(feikaType);
    if (shoukuanStaffId != null) builder.append(", shoukuanStaffId=").append(shoukuanStaffId);
    if (shoukuanStaffName != null) builder.append(", shoukuanStaffName=").append(shoukuanStaffName);
    if (tuikuanStaffId != null) builder.append(", tuikuanStaffId=").append(tuikuanStaffId);
    if (tuikuanStaffName != null) builder.append(", tuikuanStaffName=").append(tuikuanStaffName);
    if (kaipiaoStaffId != null) builder.append(", kaipiaoStaffId=").append(kaipiaoStaffId);
    if (kaipiaoStaffName != null) builder.append(", kaipiaoStaffName=").append(kaipiaoStaffName);
    if (fakaStaffId != null) builder.append(", fakaStaffId=").append(fakaStaffId);
    if (fakaStaffName != null) builder.append(", fakaStaffName=").append(fakaStaffName);
    if (shoukaStaffId != null) builder.append(", shoukaStaffId=").append(shoukaStaffId);
    if (shoukaStaffName != null) builder.append(", shoukaStaffName=").append(shoukaStaffName);
    return builder.replace(0, 2, "OrgExtra{").append('}').toString();
  }

  public static final class Builder extends Message.Builder<OrgExtra, Builder> {
    public Long id;

    public String orderId;

    public String extraNO;

    public Integer status;

    public Long lossTime;

    public Long cancelTime;

    public Long returnTime;

    public Long createTime;

    public Long createStaffId;

    public String createStaffName;

    public Long updateStaffId;

    public String updateStaffName;

    public Long fee;

    public Long orgId;

    public String orgName;

    public Long branchId;

    public String branchName;

    public Long damagedTime;

    public Integer payType;

    public Long refundFee;

    public Integer refundPayType;

    public Integer feikaType;

    public Long shoukuanStaffId;

    public String shoukuanStaffName;

    public Long tuikuanStaffId;

    public String tuikuanStaffName;

    public Long kaipiaoStaffId;

    public String kaipiaoStaffName;

    public Long fakaStaffId;

    public String fakaStaffName;

    public Long shoukaStaffId;

    public String shoukaStaffName;

    public Builder() {
    }

    public Builder id(Long id) {
      this.id = id;
      return this;
    }

    /**
     * 订单id
     */
    public Builder orderId(String orderId) {
      this.orderId = orderId;
      return this;
    }

    /**
     * 门禁卡号
     */
    public Builder extraNO(String extraNO) {
      this.extraNO = extraNO;
      return this;
    }

    /**
     * 状态 -1-删除 0-使用中 1-已归还 2-已挂失 3-已作废 4-已解绑
     */
    public Builder status(Integer status) {
      this.status = status;
      return this;
    }

    /**
     * 挂失时间
     */
    public Builder lossTime(Long lossTime) {
      this.lossTime = lossTime;
      return this;
    }

    /**
     * 取消挂失时间
     */
    public Builder cancelTime(Long cancelTime) {
      this.cancelTime = cancelTime;
      return this;
    }

    /**
     * 退还时间
     */
    public Builder returnTime(Long returnTime) {
      this.returnTime = returnTime;
      return this;
    }

    /**
     * 创建时间
     */
    public Builder createTime(Long createTime) {
      this.createTime = createTime;
      return this;
    }

    /**
     * 创建员工ID
     */
    public Builder createStaffId(Long createStaffId) {
      this.createStaffId = createStaffId;
      return this;
    }

    /**
     * 创建员工名称
     */
    public Builder createStaffName(String createStaffName) {
      this.createStaffName = createStaffName;
      return this;
    }

    /**
     * 最后修改员工ID
     */
    public Builder updateStaffId(Long updateStaffId) {
      this.updateStaffId = updateStaffId;
      return this;
    }

    /**
     * 最后修改员工名称
     */
    public Builder updateStaffName(String updateStaffName) {
      this.updateStaffName = updateStaffName;
      return this;
    }

    /**
     * 门禁卡押金
     */
    public Builder fee(Long fee) {
      this.fee = fee;
      return this;
    }

    /**
     * 机构id
     */
    public Builder orgId(Long orgId) {
      this.orgId = orgId;
      return this;
    }

    /**
     * 机构名
     */
    public Builder orgName(String orgName) {
      this.orgName = orgName;
      return this;
    }

    /**
     * 科室id
     */
    public Builder branchId(Long branchId) {
      this.branchId = branchId;
      return this;
    }

    /**
     * 科室名
     */
    public Builder branchName(String branchName) {
      this.branchName = branchName;
      return this;
    }

    /**
     * 作废时间
     */
    public Builder damagedTime(Long damagedTime) {
      this.damagedTime = damagedTime;
      return this;
    }

    /**
     * 支付类型 1-支付宝  2-微信公众号 3-微信APP 9-条形码 10-现金 11-pos  50-支付宝退款 51-微信公众号退款 52-微信APP退款
     */
    public Builder payType(Integer payType) {
      this.payType = payType;
      return this;
    }

    /**
     * 门禁卡退款金额
     */
    public Builder refundFee(Long refundFee) {
      this.refundFee = refundFee;
      return this;
    }

    /**
     * 支付类型 1-支付宝  2-微信公众号 3-微信APP 9-条形码 10-现金 11-pos  50-支付宝退款 51-微信公众号退款 52-微信APP退款
     */
    public Builder refundPayType(Integer refundPayType) {
      this.refundPayType = refundPayType;
      return this;
    }

    /**
     * 废卡类型 1-废卡 2-换卡
     */
    public Builder feikaType(Integer feikaType) {
      this.feikaType = feikaType;
      return this;
    }

    /**
     * 收款人、退款人、开票人、发卡人、收卡人
     * 收款人ID
     */
    public Builder shoukuanStaffId(Long shoukuanStaffId) {
      this.shoukuanStaffId = shoukuanStaffId;
      return this;
    }

    /**
     * 收款人
     */
    public Builder shoukuanStaffName(String shoukuanStaffName) {
      this.shoukuanStaffName = shoukuanStaffName;
      return this;
    }

    /**
     * 退款人ID
     */
    public Builder tuikuanStaffId(Long tuikuanStaffId) {
      this.tuikuanStaffId = tuikuanStaffId;
      return this;
    }

    /**
     * 退款人
     */
    public Builder tuikuanStaffName(String tuikuanStaffName) {
      this.tuikuanStaffName = tuikuanStaffName;
      return this;
    }

    /**
     * 开票人ID
     */
    public Builder kaipiaoStaffId(Long kaipiaoStaffId) {
      this.kaipiaoStaffId = kaipiaoStaffId;
      return this;
    }

    /**
     * 开票人
     */
    public Builder kaipiaoStaffName(String kaipiaoStaffName) {
      this.kaipiaoStaffName = kaipiaoStaffName;
      return this;
    }

    /**
     * 发卡人ID
     */
    public Builder fakaStaffId(Long fakaStaffId) {
      this.fakaStaffId = fakaStaffId;
      return this;
    }

    /**
     * 发卡人
     */
    public Builder fakaStaffName(String fakaStaffName) {
      this.fakaStaffName = fakaStaffName;
      return this;
    }

    /**
     * 收卡人ID
     */
    public Builder shoukaStaffId(Long shoukaStaffId) {
      this.shoukaStaffId = shoukaStaffId;
      return this;
    }

    /**
     * 收卡人
     */
    public Builder shoukaStaffName(String shoukaStaffName) {
      this.shoukaStaffName = shoukaStaffName;
      return this;
    }

    @Override
    public OrgExtra build() {
      return new OrgExtra(id, orderId, extraNO, status, lossTime, cancelTime, returnTime, createTime, createStaffId, createStaffName, updateStaffId, updateStaffName, fee, orgId, orgName, branchId, branchName, damagedTime, payType, refundFee, refundPayType, feikaType, shoukuanStaffId, shoukuanStaffName, tuikuanStaffId, tuikuanStaffName, kaipiaoStaffId, kaipiaoStaffName, fakaStaffId, fakaStaffName, shoukaStaffId, shoukaStaffName, super.buildUnknownFields());
    }
  }

  private static final class ProtoAdapter_OrgExtra extends ProtoAdapter<OrgExtra> {
    ProtoAdapter_OrgExtra() {
      super(FieldEncoding.LENGTH_DELIMITED, OrgExtra.class);
    }

    @Override
    public int encodedSize(OrgExtra value) {
      return (value.id != null ? ProtoAdapter.UINT64.encodedSizeWithTag(1, value.id) : 0)
          + (value.orderId != null ? ProtoAdapter.STRING.encodedSizeWithTag(2, value.orderId) : 0)
          + (value.extraNO != null ? ProtoAdapter.STRING.encodedSizeWithTag(3, value.extraNO) : 0)
          + (value.status != null ? ProtoAdapter.INT32.encodedSizeWithTag(4, value.status) : 0)
          + (value.lossTime != null ? ProtoAdapter.UINT64.encodedSizeWithTag(5, value.lossTime) : 0)
          + (value.cancelTime != null ? ProtoAdapter.UINT64.encodedSizeWithTag(6, value.cancelTime) : 0)
          + (value.returnTime != null ? ProtoAdapter.UINT64.encodedSizeWithTag(7, value.returnTime) : 0)
          + (value.createTime != null ? ProtoAdapter.UINT64.encodedSizeWithTag(8, value.createTime) : 0)
          + (value.createStaffId != null ? ProtoAdapter.UINT64.encodedSizeWithTag(9, value.createStaffId) : 0)
          + (value.createStaffName != null ? ProtoAdapter.STRING.encodedSizeWithTag(10, value.createStaffName) : 0)
          + (value.updateStaffId != null ? ProtoAdapter.UINT64.encodedSizeWithTag(11, value.updateStaffId) : 0)
          + (value.updateStaffName != null ? ProtoAdapter.STRING.encodedSizeWithTag(12, value.updateStaffName) : 0)
          + (value.fee != null ? ProtoAdapter.UINT64.encodedSizeWithTag(13, value.fee) : 0)
          + (value.orgId != null ? ProtoAdapter.UINT64.encodedSizeWithTag(14, value.orgId) : 0)
          + (value.orgName != null ? ProtoAdapter.STRING.encodedSizeWithTag(15, value.orgName) : 0)
          + (value.branchId != null ? ProtoAdapter.UINT64.encodedSizeWithTag(16, value.branchId) : 0)
          + (value.branchName != null ? ProtoAdapter.STRING.encodedSizeWithTag(17, value.branchName) : 0)
          + (value.damagedTime != null ? ProtoAdapter.UINT64.encodedSizeWithTag(18, value.damagedTime) : 0)
          + (value.payType != null ? ProtoAdapter.UINT32.encodedSizeWithTag(19, value.payType) : 0)
          + (value.refundFee != null ? ProtoAdapter.UINT64.encodedSizeWithTag(20, value.refundFee) : 0)
          + (value.refundPayType != null ? ProtoAdapter.UINT32.encodedSizeWithTag(21, value.refundPayType) : 0)
          + (value.feikaType != null ? ProtoAdapter.UINT32.encodedSizeWithTag(22, value.feikaType) : 0)
          + (value.shoukuanStaffId != null ? ProtoAdapter.UINT64.encodedSizeWithTag(23, value.shoukuanStaffId) : 0)
          + (value.shoukuanStaffName != null ? ProtoAdapter.STRING.encodedSizeWithTag(24, value.shoukuanStaffName) : 0)
          + (value.tuikuanStaffId != null ? ProtoAdapter.UINT64.encodedSizeWithTag(25, value.tuikuanStaffId) : 0)
          + (value.tuikuanStaffName != null ? ProtoAdapter.STRING.encodedSizeWithTag(26, value.tuikuanStaffName) : 0)
          + (value.kaipiaoStaffId != null ? ProtoAdapter.UINT64.encodedSizeWithTag(27, value.kaipiaoStaffId) : 0)
          + (value.kaipiaoStaffName != null ? ProtoAdapter.STRING.encodedSizeWithTag(28, value.kaipiaoStaffName) : 0)
          + (value.fakaStaffId != null ? ProtoAdapter.UINT64.encodedSizeWithTag(29, value.fakaStaffId) : 0)
          + (value.fakaStaffName != null ? ProtoAdapter.STRING.encodedSizeWithTag(30, value.fakaStaffName) : 0)
          + (value.shoukaStaffId != null ? ProtoAdapter.UINT64.encodedSizeWithTag(31, value.shoukaStaffId) : 0)
          + (value.shoukaStaffName != null ? ProtoAdapter.STRING.encodedSizeWithTag(32, value.shoukaStaffName) : 0)
          + value.unknownFields().size();
    }

    @Override
    public void encode(ProtoWriter writer, OrgExtra value) throws IOException {
      if (value.id != null) ProtoAdapter.UINT64.encodeWithTag(writer, 1, value.id);
      if (value.orderId != null) ProtoAdapter.STRING.encodeWithTag(writer, 2, value.orderId);
      if (value.extraNO != null) ProtoAdapter.STRING.encodeWithTag(writer, 3, value.extraNO);
      if (value.status != null) ProtoAdapter.INT32.encodeWithTag(writer, 4, value.status);
      if (value.lossTime != null) ProtoAdapter.UINT64.encodeWithTag(writer, 5, value.lossTime);
      if (value.cancelTime != null) ProtoAdapter.UINT64.encodeWithTag(writer, 6, value.cancelTime);
      if (value.returnTime != null) ProtoAdapter.UINT64.encodeWithTag(writer, 7, value.returnTime);
      if (value.createTime != null) ProtoAdapter.UINT64.encodeWithTag(writer, 8, value.createTime);
      if (value.createStaffId != null) ProtoAdapter.UINT64.encodeWithTag(writer, 9, value.createStaffId);
      if (value.createStaffName != null) ProtoAdapter.STRING.encodeWithTag(writer, 10, value.createStaffName);
      if (value.updateStaffId != null) ProtoAdapter.UINT64.encodeWithTag(writer, 11, value.updateStaffId);
      if (value.updateStaffName != null) ProtoAdapter.STRING.encodeWithTag(writer, 12, value.updateStaffName);
      if (value.fee != null) ProtoAdapter.UINT64.encodeWithTag(writer, 13, value.fee);
      if (value.orgId != null) ProtoAdapter.UINT64.encodeWithTag(writer, 14, value.orgId);
      if (value.orgName != null) ProtoAdapter.STRING.encodeWithTag(writer, 15, value.orgName);
      if (value.branchId != null) ProtoAdapter.UINT64.encodeWithTag(writer, 16, value.branchId);
      if (value.branchName != null) ProtoAdapter.STRING.encodeWithTag(writer, 17, value.branchName);
      if (value.damagedTime != null) ProtoAdapter.UINT64.encodeWithTag(writer, 18, value.damagedTime);
      if (value.payType != null) ProtoAdapter.UINT32.encodeWithTag(writer, 19, value.payType);
      if (value.refundFee != null) ProtoAdapter.UINT64.encodeWithTag(writer, 20, value.refundFee);
      if (value.refundPayType != null) ProtoAdapter.UINT32.encodeWithTag(writer, 21, value.refundPayType);
      if (value.feikaType != null) ProtoAdapter.UINT32.encodeWithTag(writer, 22, value.feikaType);
      if (value.shoukuanStaffId != null) ProtoAdapter.UINT64.encodeWithTag(writer, 23, value.shoukuanStaffId);
      if (value.shoukuanStaffName != null) ProtoAdapter.STRING.encodeWithTag(writer, 24, value.shoukuanStaffName);
      if (value.tuikuanStaffId != null) ProtoAdapter.UINT64.encodeWithTag(writer, 25, value.tuikuanStaffId);
      if (value.tuikuanStaffName != null) ProtoAdapter.STRING.encodeWithTag(writer, 26, value.tuikuanStaffName);
      if (value.kaipiaoStaffId != null) ProtoAdapter.UINT64.encodeWithTag(writer, 27, value.kaipiaoStaffId);
      if (value.kaipiaoStaffName != null) ProtoAdapter.STRING.encodeWithTag(writer, 28, value.kaipiaoStaffName);
      if (value.fakaStaffId != null) ProtoAdapter.UINT64.encodeWithTag(writer, 29, value.fakaStaffId);
      if (value.fakaStaffName != null) ProtoAdapter.STRING.encodeWithTag(writer, 30, value.fakaStaffName);
      if (value.shoukaStaffId != null) ProtoAdapter.UINT64.encodeWithTag(writer, 31, value.shoukaStaffId);
      if (value.shoukaStaffName != null) ProtoAdapter.STRING.encodeWithTag(writer, 32, value.shoukaStaffName);
      writer.writeBytes(value.unknownFields());
    }

    @Override
    public OrgExtra decode(ProtoReader reader) throws IOException {
      Builder builder = new Builder();
      long token = reader.beginMessage();
      for (int tag; (tag = reader.nextTag()) != -1;) {
        switch (tag) {
          case 1: builder.id(ProtoAdapter.UINT64.decode(reader)); break;
          case 2: builder.orderId(ProtoAdapter.STRING.decode(reader)); break;
          case 3: builder.extraNO(ProtoAdapter.STRING.decode(reader)); break;
          case 4: builder.status(ProtoAdapter.INT32.decode(reader)); break;
          case 5: builder.lossTime(ProtoAdapter.UINT64.decode(reader)); break;
          case 6: builder.cancelTime(ProtoAdapter.UINT64.decode(reader)); break;
          case 7: builder.returnTime(ProtoAdapter.UINT64.decode(reader)); break;
          case 8: builder.createTime(ProtoAdapter.UINT64.decode(reader)); break;
          case 9: builder.createStaffId(ProtoAdapter.UINT64.decode(reader)); break;
          case 10: builder.createStaffName(ProtoAdapter.STRING.decode(reader)); break;
          case 11: builder.updateStaffId(ProtoAdapter.UINT64.decode(reader)); break;
          case 12: builder.updateStaffName(ProtoAdapter.STRING.decode(reader)); break;
          case 13: builder.fee(ProtoAdapter.UINT64.decode(reader)); break;
          case 14: builder.orgId(ProtoAdapter.UINT64.decode(reader)); break;
          case 15: builder.orgName(ProtoAdapter.STRING.decode(reader)); break;
          case 16: builder.branchId(ProtoAdapter.UINT64.decode(reader)); break;
          case 17: builder.branchName(ProtoAdapter.STRING.decode(reader)); break;
          case 18: builder.damagedTime(ProtoAdapter.UINT64.decode(reader)); break;
          case 19: builder.payType(ProtoAdapter.UINT32.decode(reader)); break;
          case 20: builder.refundFee(ProtoAdapter.UINT64.decode(reader)); break;
          case 21: builder.refundPayType(ProtoAdapter.UINT32.decode(reader)); break;
          case 22: builder.feikaType(ProtoAdapter.UINT32.decode(reader)); break;
          case 23: builder.shoukuanStaffId(ProtoAdapter.UINT64.decode(reader)); break;
          case 24: builder.shoukuanStaffName(ProtoAdapter.STRING.decode(reader)); break;
          case 25: builder.tuikuanStaffId(ProtoAdapter.UINT64.decode(reader)); break;
          case 26: builder.tuikuanStaffName(ProtoAdapter.STRING.decode(reader)); break;
          case 27: builder.kaipiaoStaffId(ProtoAdapter.UINT64.decode(reader)); break;
          case 28: builder.kaipiaoStaffName(ProtoAdapter.STRING.decode(reader)); break;
          case 29: builder.fakaStaffId(ProtoAdapter.UINT64.decode(reader)); break;
          case 30: builder.fakaStaffName(ProtoAdapter.STRING.decode(reader)); break;
          case 31: builder.shoukaStaffId(ProtoAdapter.UINT64.decode(reader)); break;
          case 32: builder.shoukaStaffName(ProtoAdapter.STRING.decode(reader)); break;
          default: {
            FieldEncoding fieldEncoding = reader.peekFieldEncoding();
            Object value = fieldEncoding.rawProtoAdapter().decode(reader);
            builder.addUnknownField(tag, fieldEncoding, value);
          }
        }
      }
      reader.endMessage(token);
      return builder.build();
    }

    @Override
    public OrgExtra redact(OrgExtra value) {
      Builder builder = value.newBuilder();
      builder.clearUnknownFields();
      return builder.build();
    }
  }
}
