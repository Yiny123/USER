// Code generated by Wire protocol buffer compiler, do not edit.
// Source file: SaasModel.proto at 900:1
package com.yijianyi.protocol;

import com.squareup.wire.FieldEncoding;
import com.squareup.wire.Message;
import com.squareup.wire.ProtoAdapter;
import com.squareup.wire.ProtoReader;
import com.squareup.wire.ProtoWriter;
import com.squareup.wire.WireField;
import com.squareup.wire.internal.Internal;
import java.io.IOException;
import java.lang.Integer;
import java.lang.Object;
import java.lang.Override;
import java.lang.String;
import java.lang.StringBuilder;
import okio.ByteString;

public final class InsureNOAssess extends Message<InsureNOAssess, InsureNOAssess.Builder> {
  public static final ProtoAdapter<InsureNOAssess> ADAPTER = new ProtoAdapter_InsureNOAssess();

  private static final long serialVersionUID = 0L;

  public static final String DEFAULT_INSURENO = "";

  public static final String DEFAULT_KINSNAME = "";

  public static final Integer DEFAULT_SEX = 0;

  public static final Integer DEFAULT_AGE = 0;

  public static final String DEFAULT_IDCARD = "";

  public static final String DEFAULT_NAME = "";

  public static final String DEFAULT_PHONE = "";

  public static final String DEFAULT_MEDICARENO = "";

  public static final String DEFAULT_HEALTHCARENO = "";

  public static final String DEFAULT_ADDRITEM = "";

  public static final String DEFAULT_MEDICALLIST = "";

  public static final String DEFAULT_APPOINTTIME = "";

  public static final Integer DEFAULT_STATUS = 0;

  @WireField(
      tag = 1,
      adapter = "com.squareup.wire.ProtoAdapter#STRING"
  )
  public final String insureNO;

  /**
   * 昵称
   */
  @WireField(
      tag = 2,
      adapter = "com.squareup.wire.ProtoAdapter#STRING"
  )
  public final String kinsName;

  /**
   * 性别
   */
  @WireField(
      tag = 3,
      adapter = "com.squareup.wire.ProtoAdapter#UINT32"
  )
  public final Integer sex;

  /**
   * 年龄
   */
  @WireField(
      tag = 4,
      adapter = "com.squareup.wire.ProtoAdapter#UINT32"
  )
  public final Integer age;

  /**
   * 身份证
   */
  @WireField(
      tag = 5,
      adapter = "com.squareup.wire.ProtoAdapter#STRING"
  )
  public final String idcard;

  /**
   * 地址联系人
   */
  @WireField(
      tag = 6,
      adapter = "com.squareup.wire.ProtoAdapter#STRING"
  )
  public final String name;

  /**
   * 地址联系人电话
   */
  @WireField(
      tag = 7,
      adapter = "com.squareup.wire.ProtoAdapter#STRING"
  )
  public final String phone;

  /**
   * 就诊卡号
   */
  @WireField(
      tag = 8,
      adapter = "com.squareup.wire.ProtoAdapter#STRING"
  )
  public final String medicareNo;

  /**
   * 医保卡号
   */
  @WireField(
      tag = 9,
      adapter = "com.squareup.wire.ProtoAdapter#STRING"
  )
  public final String healthCareNO;

  /**
   * 地址
   */
  @WireField(
      tag = 10,
      adapter = "com.squareup.wire.ProtoAdapter#STRING"
  )
  public final String addrItem;

  /**
   * 病例
   */
  @WireField(
      tag = 11,
      adapter = "com.squareup.wire.ProtoAdapter#STRING"
  )
  public final String medicalList;

  /**
   * 预约时间
   */
  @WireField(
      tag = 12,
      adapter = "com.squareup.wire.ProtoAdapter#STRING"
  )
  public final String appointTime;

  /**
   * 订单状态
   */
  @WireField(
      tag = 13,
      adapter = "com.squareup.wire.ProtoAdapter#UINT32"
  )
  public final Integer status;

  public InsureNOAssess(String insureNO, String kinsName, Integer sex, Integer age, String idcard, String name, String phone, String medicareNo, String healthCareNO, String addrItem, String medicalList, String appointTime, Integer status) {
    this(insureNO, kinsName, sex, age, idcard, name, phone, medicareNo, healthCareNO, addrItem, medicalList, appointTime, status, ByteString.EMPTY);
  }

  public InsureNOAssess(String insureNO, String kinsName, Integer sex, Integer age, String idcard, String name, String phone, String medicareNo, String healthCareNO, String addrItem, String medicalList, String appointTime, Integer status, ByteString unknownFields) {
    super(ADAPTER, unknownFields);
    this.insureNO = insureNO;
    this.kinsName = kinsName;
    this.sex = sex;
    this.age = age;
    this.idcard = idcard;
    this.name = name;
    this.phone = phone;
    this.medicareNo = medicareNo;
    this.healthCareNO = healthCareNO;
    this.addrItem = addrItem;
    this.medicalList = medicalList;
    this.appointTime = appointTime;
    this.status = status;
  }

  @Override
  public Builder newBuilder() {
    Builder builder = new Builder();
    builder.insureNO = insureNO;
    builder.kinsName = kinsName;
    builder.sex = sex;
    builder.age = age;
    builder.idcard = idcard;
    builder.name = name;
    builder.phone = phone;
    builder.medicareNo = medicareNo;
    builder.healthCareNO = healthCareNO;
    builder.addrItem = addrItem;
    builder.medicalList = medicalList;
    builder.appointTime = appointTime;
    builder.status = status;
    builder.addUnknownFields(unknownFields());
    return builder;
  }

  @Override
  public boolean equals(Object other) {
    if (other == this) return true;
    if (!(other instanceof InsureNOAssess)) return false;
    InsureNOAssess o = (InsureNOAssess) other;
    return unknownFields().equals(o.unknownFields())
        && Internal.equals(insureNO, o.insureNO)
        && Internal.equals(kinsName, o.kinsName)
        && Internal.equals(sex, o.sex)
        && Internal.equals(age, o.age)
        && Internal.equals(idcard, o.idcard)
        && Internal.equals(name, o.name)
        && Internal.equals(phone, o.phone)
        && Internal.equals(medicareNo, o.medicareNo)
        && Internal.equals(healthCareNO, o.healthCareNO)
        && Internal.equals(addrItem, o.addrItem)
        && Internal.equals(medicalList, o.medicalList)
        && Internal.equals(appointTime, o.appointTime)
        && Internal.equals(status, o.status);
  }

  @Override
  public int hashCode() {
    int result = super.hashCode;
    if (result == 0) {
      result = unknownFields().hashCode();
      result = result * 37 + (insureNO != null ? insureNO.hashCode() : 0);
      result = result * 37 + (kinsName != null ? kinsName.hashCode() : 0);
      result = result * 37 + (sex != null ? sex.hashCode() : 0);
      result = result * 37 + (age != null ? age.hashCode() : 0);
      result = result * 37 + (idcard != null ? idcard.hashCode() : 0);
      result = result * 37 + (name != null ? name.hashCode() : 0);
      result = result * 37 + (phone != null ? phone.hashCode() : 0);
      result = result * 37 + (medicareNo != null ? medicareNo.hashCode() : 0);
      result = result * 37 + (healthCareNO != null ? healthCareNO.hashCode() : 0);
      result = result * 37 + (addrItem != null ? addrItem.hashCode() : 0);
      result = result * 37 + (medicalList != null ? medicalList.hashCode() : 0);
      result = result * 37 + (appointTime != null ? appointTime.hashCode() : 0);
      result = result * 37 + (status != null ? status.hashCode() : 0);
      super.hashCode = result;
    }
    return result;
  }

  @Override
  public String toString() {
    StringBuilder builder = new StringBuilder();
    if (insureNO != null) builder.append(", insureNO=").append(insureNO);
    if (kinsName != null) builder.append(", kinsName=").append(kinsName);
    if (sex != null) builder.append(", sex=").append(sex);
    if (age != null) builder.append(", age=").append(age);
    if (idcard != null) builder.append(", idcard=").append(idcard);
    if (name != null) builder.append(", name=").append(name);
    if (phone != null) builder.append(", phone=").append(phone);
    if (medicareNo != null) builder.append(", medicareNo=").append(medicareNo);
    if (healthCareNO != null) builder.append(", healthCareNO=").append(healthCareNO);
    if (addrItem != null) builder.append(", addrItem=").append(addrItem);
    if (medicalList != null) builder.append(", medicalList=").append(medicalList);
    if (appointTime != null) builder.append(", appointTime=").append(appointTime);
    if (status != null) builder.append(", status=").append(status);
    return builder.replace(0, 2, "InsureNOAssess{").append('}').toString();
  }

  public static final class Builder extends Message.Builder<InsureNOAssess, Builder> {
    public String insureNO;

    public String kinsName;

    public Integer sex;

    public Integer age;

    public String idcard;

    public String name;

    public String phone;

    public String medicareNo;

    public String healthCareNO;

    public String addrItem;

    public String medicalList;

    public String appointTime;

    public Integer status;

    public Builder() {
    }

    public Builder insureNO(String insureNO) {
      this.insureNO = insureNO;
      return this;
    }

    /**
     * 昵称
     */
    public Builder kinsName(String kinsName) {
      this.kinsName = kinsName;
      return this;
    }

    /**
     * 性别
     */
    public Builder sex(Integer sex) {
      this.sex = sex;
      return this;
    }

    /**
     * 年龄
     */
    public Builder age(Integer age) {
      this.age = age;
      return this;
    }

    /**
     * 身份证
     */
    public Builder idcard(String idcard) {
      this.idcard = idcard;
      return this;
    }

    /**
     * 地址联系人
     */
    public Builder name(String name) {
      this.name = name;
      return this;
    }

    /**
     * 地址联系人电话
     */
    public Builder phone(String phone) {
      this.phone = phone;
      return this;
    }

    /**
     * 就诊卡号
     */
    public Builder medicareNo(String medicareNo) {
      this.medicareNo = medicareNo;
      return this;
    }

    /**
     * 医保卡号
     */
    public Builder healthCareNO(String healthCareNO) {
      this.healthCareNO = healthCareNO;
      return this;
    }

    /**
     * 地址
     */
    public Builder addrItem(String addrItem) {
      this.addrItem = addrItem;
      return this;
    }

    /**
     * 病例
     */
    public Builder medicalList(String medicalList) {
      this.medicalList = medicalList;
      return this;
    }

    /**
     * 预约时间
     */
    public Builder appointTime(String appointTime) {
      this.appointTime = appointTime;
      return this;
    }

    /**
     * 订单状态
     */
    public Builder status(Integer status) {
      this.status = status;
      return this;
    }

    @Override
    public InsureNOAssess build() {
      return new InsureNOAssess(insureNO, kinsName, sex, age, idcard, name, phone, medicareNo, healthCareNO, addrItem, medicalList, appointTime, status, super.buildUnknownFields());
    }
  }

  private static final class ProtoAdapter_InsureNOAssess extends ProtoAdapter<InsureNOAssess> {
    ProtoAdapter_InsureNOAssess() {
      super(FieldEncoding.LENGTH_DELIMITED, InsureNOAssess.class);
    }

    @Override
    public int encodedSize(InsureNOAssess value) {
      return (value.insureNO != null ? ProtoAdapter.STRING.encodedSizeWithTag(1, value.insureNO) : 0)
          + (value.kinsName != null ? ProtoAdapter.STRING.encodedSizeWithTag(2, value.kinsName) : 0)
          + (value.sex != null ? ProtoAdapter.UINT32.encodedSizeWithTag(3, value.sex) : 0)
          + (value.age != null ? ProtoAdapter.UINT32.encodedSizeWithTag(4, value.age) : 0)
          + (value.idcard != null ? ProtoAdapter.STRING.encodedSizeWithTag(5, value.idcard) : 0)
          + (value.name != null ? ProtoAdapter.STRING.encodedSizeWithTag(6, value.name) : 0)
          + (value.phone != null ? ProtoAdapter.STRING.encodedSizeWithTag(7, value.phone) : 0)
          + (value.medicareNo != null ? ProtoAdapter.STRING.encodedSizeWithTag(8, value.medicareNo) : 0)
          + (value.healthCareNO != null ? ProtoAdapter.STRING.encodedSizeWithTag(9, value.healthCareNO) : 0)
          + (value.addrItem != null ? ProtoAdapter.STRING.encodedSizeWithTag(10, value.addrItem) : 0)
          + (value.medicalList != null ? ProtoAdapter.STRING.encodedSizeWithTag(11, value.medicalList) : 0)
          + (value.appointTime != null ? ProtoAdapter.STRING.encodedSizeWithTag(12, value.appointTime) : 0)
          + (value.status != null ? ProtoAdapter.UINT32.encodedSizeWithTag(13, value.status) : 0)
          + value.unknownFields().size();
    }

    @Override
    public void encode(ProtoWriter writer, InsureNOAssess value) throws IOException {
      if (value.insureNO != null) ProtoAdapter.STRING.encodeWithTag(writer, 1, value.insureNO);
      if (value.kinsName != null) ProtoAdapter.STRING.encodeWithTag(writer, 2, value.kinsName);
      if (value.sex != null) ProtoAdapter.UINT32.encodeWithTag(writer, 3, value.sex);
      if (value.age != null) ProtoAdapter.UINT32.encodeWithTag(writer, 4, value.age);
      if (value.idcard != null) ProtoAdapter.STRING.encodeWithTag(writer, 5, value.idcard);
      if (value.name != null) ProtoAdapter.STRING.encodeWithTag(writer, 6, value.name);
      if (value.phone != null) ProtoAdapter.STRING.encodeWithTag(writer, 7, value.phone);
      if (value.medicareNo != null) ProtoAdapter.STRING.encodeWithTag(writer, 8, value.medicareNo);
      if (value.healthCareNO != null) ProtoAdapter.STRING.encodeWithTag(writer, 9, value.healthCareNO);
      if (value.addrItem != null) ProtoAdapter.STRING.encodeWithTag(writer, 10, value.addrItem);
      if (value.medicalList != null) ProtoAdapter.STRING.encodeWithTag(writer, 11, value.medicalList);
      if (value.appointTime != null) ProtoAdapter.STRING.encodeWithTag(writer, 12, value.appointTime);
      if (value.status != null) ProtoAdapter.UINT32.encodeWithTag(writer, 13, value.status);
      writer.writeBytes(value.unknownFields());
    }

    @Override
    public InsureNOAssess decode(ProtoReader reader) throws IOException {
      Builder builder = new Builder();
      long token = reader.beginMessage();
      for (int tag; (tag = reader.nextTag()) != -1;) {
        switch (tag) {
          case 1: builder.insureNO(ProtoAdapter.STRING.decode(reader)); break;
          case 2: builder.kinsName(ProtoAdapter.STRING.decode(reader)); break;
          case 3: builder.sex(ProtoAdapter.UINT32.decode(reader)); break;
          case 4: builder.age(ProtoAdapter.UINT32.decode(reader)); break;
          case 5: builder.idcard(ProtoAdapter.STRING.decode(reader)); break;
          case 6: builder.name(ProtoAdapter.STRING.decode(reader)); break;
          case 7: builder.phone(ProtoAdapter.STRING.decode(reader)); break;
          case 8: builder.medicareNo(ProtoAdapter.STRING.decode(reader)); break;
          case 9: builder.healthCareNO(ProtoAdapter.STRING.decode(reader)); break;
          case 10: builder.addrItem(ProtoAdapter.STRING.decode(reader)); break;
          case 11: builder.medicalList(ProtoAdapter.STRING.decode(reader)); break;
          case 12: builder.appointTime(ProtoAdapter.STRING.decode(reader)); break;
          case 13: builder.status(ProtoAdapter.UINT32.decode(reader)); break;
          default: {
            FieldEncoding fieldEncoding = reader.peekFieldEncoding();
            Object value = fieldEncoding.rawProtoAdapter().decode(reader);
            builder.addUnknownField(tag, fieldEncoding, value);
          }
        }
      }
      reader.endMessage(token);
      return builder.build();
    }

    @Override
    public InsureNOAssess redact(InsureNOAssess value) {
      Builder builder = value.newBuilder();
      builder.clearUnknownFields();
      return builder.build();
    }
  }
}
