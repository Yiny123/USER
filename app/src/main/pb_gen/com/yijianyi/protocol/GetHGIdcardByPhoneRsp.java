// Code generated by Wire protocol buffer compiler, do not edit.
// Source file: AppInterface.proto at 1671:1
package com.yijianyi.protocol;

import com.squareup.wire.FieldEncoding;
import com.squareup.wire.Message;
import com.squareup.wire.ProtoAdapter;
import com.squareup.wire.ProtoReader;
import com.squareup.wire.ProtoWriter;
import com.squareup.wire.WireField;
import com.squareup.wire.internal.Internal;
import java.io.IOException;
import java.lang.Object;
import java.lang.Override;
import java.lang.String;
import java.lang.StringBuilder;
import okio.ByteString;

public final class GetHGIdcardByPhoneRsp extends Message<GetHGIdcardByPhoneRsp, GetHGIdcardByPhoneRsp.Builder> {
  public static final ProtoAdapter<GetHGIdcardByPhoneRsp> ADAPTER = new ProtoAdapter_GetHGIdcardByPhoneRsp();

  private static final long serialVersionUID = 0L;

  public static final String DEFAULT_IDCARD = "";

  public static final String DEFAULT_HGNAME = "";

  public static final String DEFAULT_SENDDATE = "";

  /**
   * 自照护工身份证号
   */
  @WireField(
      tag = 3,
      adapter = "com.squareup.wire.ProtoAdapter#STRING"
  )
  public final String idcard;

  /**
   * 自照护工名
   */
  @WireField(
      tag = 4,
      adapter = "com.squareup.wire.ProtoAdapter#STRING"
  )
  public final String hgName;

  /**
   * 资质获取日期
   */
  @WireField(
      tag = 5,
      adapter = "com.squareup.wire.ProtoAdapter#STRING"
  )
  public final String sendDate;

  public GetHGIdcardByPhoneRsp(String idcard, String hgName, String sendDate) {
    this(idcard, hgName, sendDate, ByteString.EMPTY);
  }

  public GetHGIdcardByPhoneRsp(String idcard, String hgName, String sendDate, ByteString unknownFields) {
    super(ADAPTER, unknownFields);
    this.idcard = idcard;
    this.hgName = hgName;
    this.sendDate = sendDate;
  }

  @Override
  public Builder newBuilder() {
    Builder builder = new Builder();
    builder.idcard = idcard;
    builder.hgName = hgName;
    builder.sendDate = sendDate;
    builder.addUnknownFields(unknownFields());
    return builder;
  }

  @Override
  public boolean equals(Object other) {
    if (other == this) return true;
    if (!(other instanceof GetHGIdcardByPhoneRsp)) return false;
    GetHGIdcardByPhoneRsp o = (GetHGIdcardByPhoneRsp) other;
    return unknownFields().equals(o.unknownFields())
        && Internal.equals(idcard, o.idcard)
        && Internal.equals(hgName, o.hgName)
        && Internal.equals(sendDate, o.sendDate);
  }

  @Override
  public int hashCode() {
    int result = super.hashCode;
    if (result == 0) {
      result = unknownFields().hashCode();
      result = result * 37 + (idcard != null ? idcard.hashCode() : 0);
      result = result * 37 + (hgName != null ? hgName.hashCode() : 0);
      result = result * 37 + (sendDate != null ? sendDate.hashCode() : 0);
      super.hashCode = result;
    }
    return result;
  }

  @Override
  public String toString() {
    StringBuilder builder = new StringBuilder();
    if (idcard != null) builder.append(", idcard=").append(idcard);
    if (hgName != null) builder.append(", hgName=").append(hgName);
    if (sendDate != null) builder.append(", sendDate=").append(sendDate);
    return builder.replace(0, 2, "GetHGIdcardByPhoneRsp{").append('}').toString();
  }

  public static final class Builder extends Message.Builder<GetHGIdcardByPhoneRsp, Builder> {
    public String idcard;

    public String hgName;

    public String sendDate;

    public Builder() {
    }

    /**
     * 自照护工身份证号
     */
    public Builder idcard(String idcard) {
      this.idcard = idcard;
      return this;
    }

    /**
     * 自照护工名
     */
    public Builder hgName(String hgName) {
      this.hgName = hgName;
      return this;
    }

    /**
     * 资质获取日期
     */
    public Builder sendDate(String sendDate) {
      this.sendDate = sendDate;
      return this;
    }

    @Override
    public GetHGIdcardByPhoneRsp build() {
      return new GetHGIdcardByPhoneRsp(idcard, hgName, sendDate, super.buildUnknownFields());
    }
  }

  private static final class ProtoAdapter_GetHGIdcardByPhoneRsp extends ProtoAdapter<GetHGIdcardByPhoneRsp> {
    ProtoAdapter_GetHGIdcardByPhoneRsp() {
      super(FieldEncoding.LENGTH_DELIMITED, GetHGIdcardByPhoneRsp.class);
    }

    @Override
    public int encodedSize(GetHGIdcardByPhoneRsp value) {
      return (value.idcard != null ? ProtoAdapter.STRING.encodedSizeWithTag(3, value.idcard) : 0)
          + (value.hgName != null ? ProtoAdapter.STRING.encodedSizeWithTag(4, value.hgName) : 0)
          + (value.sendDate != null ? ProtoAdapter.STRING.encodedSizeWithTag(5, value.sendDate) : 0)
          + value.unknownFields().size();
    }

    @Override
    public void encode(ProtoWriter writer, GetHGIdcardByPhoneRsp value) throws IOException {
      if (value.idcard != null) ProtoAdapter.STRING.encodeWithTag(writer, 3, value.idcard);
      if (value.hgName != null) ProtoAdapter.STRING.encodeWithTag(writer, 4, value.hgName);
      if (value.sendDate != null) ProtoAdapter.STRING.encodeWithTag(writer, 5, value.sendDate);
      writer.writeBytes(value.unknownFields());
    }

    @Override
    public GetHGIdcardByPhoneRsp decode(ProtoReader reader) throws IOException {
      Builder builder = new Builder();
      long token = reader.beginMessage();
      for (int tag; (tag = reader.nextTag()) != -1;) {
        switch (tag) {
          case 3: builder.idcard(ProtoAdapter.STRING.decode(reader)); break;
          case 4: builder.hgName(ProtoAdapter.STRING.decode(reader)); break;
          case 5: builder.sendDate(ProtoAdapter.STRING.decode(reader)); break;
          default: {
            FieldEncoding fieldEncoding = reader.peekFieldEncoding();
            Object value = fieldEncoding.rawProtoAdapter().decode(reader);
            builder.addUnknownField(tag, fieldEncoding, value);
          }
        }
      }
      reader.endMessage(token);
      return builder.build();
    }

    @Override
    public GetHGIdcardByPhoneRsp redact(GetHGIdcardByPhoneRsp value) {
      Builder builder = value.newBuilder();
      builder.clearUnknownFields();
      return builder.build();
    }
  }
}
