// Code generated by Wire protocol buffer compiler, do not edit.
// Source file: AppInterface.proto at 201:1
package com.yijianyi.protocol;

import com.squareup.wire.FieldEncoding;
import com.squareup.wire.Message;
import com.squareup.wire.ProtoAdapter;
import com.squareup.wire.ProtoReader;
import com.squareup.wire.ProtoWriter;
import com.squareup.wire.WireField;
import com.squareup.wire.internal.Internal;
import java.io.IOException;
import java.lang.Double;
import java.lang.Integer;
import java.lang.Long;
import java.lang.Object;
import java.lang.Override;
import java.lang.String;
import java.lang.StringBuilder;
import okio.ByteString;

public final class GetOrgAndBranchListReq extends Message<GetOrgAndBranchListReq, GetOrgAndBranchListReq.Builder> {
  public static final ProtoAdapter<GetOrgAndBranchListReq> ADAPTER = new ProtoAdapter_GetOrgAndBranchListReq();

  private static final long serialVersionUID = 0L;

  public static final Integer DEFAULT_ADCODE = 0;

  public static final Double DEFAULT_LAT = 0.0d;

  public static final Double DEFAULT_LNG = 0.0d;

  public static final Long DEFAULT_ORGID = 0L;

  public static final Integer DEFAULT_CITYID = 0;

  /**
   * 用户当前所在城市id
   */
  @WireField(
      tag = 1,
      adapter = "com.squareup.wire.ProtoAdapter#UINT32"
  )
  public final Integer adcode;

  /**
   * 当前用户所在的纬度
   */
  @WireField(
      tag = 2,
      adapter = "com.squareup.wire.ProtoAdapter#DOUBLE"
  )
  public final Double lat;

  /**
   * 当前用户所在的经度
   */
  @WireField(
      tag = 3,
      adapter = "com.squareup.wire.ProtoAdapter#DOUBLE"
  )
  public final Double lng;

  /**
   * 机构的id 使用场景: 用户输入关键字 点击某个机构 传递此参数
   */
  @WireField(
      tag = 4,
      adapter = "com.squareup.wire.ProtoAdapter#UINT64"
  )
  public final Long orgId;

  /**
   * 城市的id 使用场景: 当用户所在地没有机构可选择时, 要让用户去已开通服务城市列表选择城市, 然后再次请求接口, 请求时只需传递此值
   */
  @WireField(
      tag = 5,
      adapter = "com.squareup.wire.ProtoAdapter#UINT32"
  )
  public final Integer cityId;

  public GetOrgAndBranchListReq(Integer adcode, Double lat, Double lng, Long orgId, Integer cityId) {
    this(adcode, lat, lng, orgId, cityId, ByteString.EMPTY);
  }

  public GetOrgAndBranchListReq(Integer adcode, Double lat, Double lng, Long orgId, Integer cityId, ByteString unknownFields) {
    super(ADAPTER, unknownFields);
    this.adcode = adcode;
    this.lat = lat;
    this.lng = lng;
    this.orgId = orgId;
    this.cityId = cityId;
  }

  @Override
  public Builder newBuilder() {
    Builder builder = new Builder();
    builder.adcode = adcode;
    builder.lat = lat;
    builder.lng = lng;
    builder.orgId = orgId;
    builder.cityId = cityId;
    builder.addUnknownFields(unknownFields());
    return builder;
  }

  @Override
  public boolean equals(Object other) {
    if (other == this) return true;
    if (!(other instanceof GetOrgAndBranchListReq)) return false;
    GetOrgAndBranchListReq o = (GetOrgAndBranchListReq) other;
    return unknownFields().equals(o.unknownFields())
        && Internal.equals(adcode, o.adcode)
        && Internal.equals(lat, o.lat)
        && Internal.equals(lng, o.lng)
        && Internal.equals(orgId, o.orgId)
        && Internal.equals(cityId, o.cityId);
  }

  @Override
  public int hashCode() {
    int result = super.hashCode;
    if (result == 0) {
      result = unknownFields().hashCode();
      result = result * 37 + (adcode != null ? adcode.hashCode() : 0);
      result = result * 37 + (lat != null ? lat.hashCode() : 0);
      result = result * 37 + (lng != null ? lng.hashCode() : 0);
      result = result * 37 + (orgId != null ? orgId.hashCode() : 0);
      result = result * 37 + (cityId != null ? cityId.hashCode() : 0);
      super.hashCode = result;
    }
    return result;
  }

  @Override
  public String toString() {
    StringBuilder builder = new StringBuilder();
    if (adcode != null) builder.append(", adcode=").append(adcode);
    if (lat != null) builder.append(", lat=").append(lat);
    if (lng != null) builder.append(", lng=").append(lng);
    if (orgId != null) builder.append(", orgId=").append(orgId);
    if (cityId != null) builder.append(", cityId=").append(cityId);
    return builder.replace(0, 2, "GetOrgAndBranchListReq{").append('}').toString();
  }

  public static final class Builder extends Message.Builder<GetOrgAndBranchListReq, Builder> {
    public Integer adcode;

    public Double lat;

    public Double lng;

    public Long orgId;

    public Integer cityId;

    public Builder() {
    }

    /**
     * 用户当前所在城市id
     */
    public Builder adcode(Integer adcode) {
      this.adcode = adcode;
      return this;
    }

    /**
     * 当前用户所在的纬度
     */
    public Builder lat(Double lat) {
      this.lat = lat;
      return this;
    }

    /**
     * 当前用户所在的经度
     */
    public Builder lng(Double lng) {
      this.lng = lng;
      return this;
    }

    /**
     * 机构的id 使用场景: 用户输入关键字 点击某个机构 传递此参数
     */
    public Builder orgId(Long orgId) {
      this.orgId = orgId;
      return this;
    }

    /**
     * 城市的id 使用场景: 当用户所在地没有机构可选择时, 要让用户去已开通服务城市列表选择城市, 然后再次请求接口, 请求时只需传递此值
     */
    public Builder cityId(Integer cityId) {
      this.cityId = cityId;
      return this;
    }

    @Override
    public GetOrgAndBranchListReq build() {
      return new GetOrgAndBranchListReq(adcode, lat, lng, orgId, cityId, super.buildUnknownFields());
    }
  }

  private static final class ProtoAdapter_GetOrgAndBranchListReq extends ProtoAdapter<GetOrgAndBranchListReq> {
    ProtoAdapter_GetOrgAndBranchListReq() {
      super(FieldEncoding.LENGTH_DELIMITED, GetOrgAndBranchListReq.class);
    }

    @Override
    public int encodedSize(GetOrgAndBranchListReq value) {
      return (value.adcode != null ? ProtoAdapter.UINT32.encodedSizeWithTag(1, value.adcode) : 0)
          + (value.lat != null ? ProtoAdapter.DOUBLE.encodedSizeWithTag(2, value.lat) : 0)
          + (value.lng != null ? ProtoAdapter.DOUBLE.encodedSizeWithTag(3, value.lng) : 0)
          + (value.orgId != null ? ProtoAdapter.UINT64.encodedSizeWithTag(4, value.orgId) : 0)
          + (value.cityId != null ? ProtoAdapter.UINT32.encodedSizeWithTag(5, value.cityId) : 0)
          + value.unknownFields().size();
    }

    @Override
    public void encode(ProtoWriter writer, GetOrgAndBranchListReq value) throws IOException {
      if (value.adcode != null) ProtoAdapter.UINT32.encodeWithTag(writer, 1, value.adcode);
      if (value.lat != null) ProtoAdapter.DOUBLE.encodeWithTag(writer, 2, value.lat);
      if (value.lng != null) ProtoAdapter.DOUBLE.encodeWithTag(writer, 3, value.lng);
      if (value.orgId != null) ProtoAdapter.UINT64.encodeWithTag(writer, 4, value.orgId);
      if (value.cityId != null) ProtoAdapter.UINT32.encodeWithTag(writer, 5, value.cityId);
      writer.writeBytes(value.unknownFields());
    }

    @Override
    public GetOrgAndBranchListReq decode(ProtoReader reader) throws IOException {
      Builder builder = new Builder();
      long token = reader.beginMessage();
      for (int tag; (tag = reader.nextTag()) != -1;) {
        switch (tag) {
          case 1: builder.adcode(ProtoAdapter.UINT32.decode(reader)); break;
          case 2: builder.lat(ProtoAdapter.DOUBLE.decode(reader)); break;
          case 3: builder.lng(ProtoAdapter.DOUBLE.decode(reader)); break;
          case 4: builder.orgId(ProtoAdapter.UINT64.decode(reader)); break;
          case 5: builder.cityId(ProtoAdapter.UINT32.decode(reader)); break;
          default: {
            FieldEncoding fieldEncoding = reader.peekFieldEncoding();
            Object value = fieldEncoding.rawProtoAdapter().decode(reader);
            builder.addUnknownField(tag, fieldEncoding, value);
          }
        }
      }
      reader.endMessage(token);
      return builder.build();
    }

    @Override
    public GetOrgAndBranchListReq redact(GetOrgAndBranchListReq value) {
      Builder builder = value.newBuilder();
      builder.clearUnknownFields();
      return builder.build();
    }
  }
}
