// Code generated by Wire protocol buffer compiler, do not edit.
// Source file: Model.proto at 20:1
package com.yijianyi.protocol;

import com.squareup.wire.FieldEncoding;
import com.squareup.wire.Message;
import com.squareup.wire.ProtoAdapter;
import com.squareup.wire.ProtoReader;
import com.squareup.wire.ProtoWriter;
import com.squareup.wire.WireField;
import com.squareup.wire.internal.Internal;
import java.io.IOException;
import java.lang.Double;
import java.lang.Integer;
import java.lang.Long;
import java.lang.Object;
import java.lang.Override;
import java.lang.String;
import java.lang.StringBuilder;
import okio.ByteString;

public final class UserModel extends Message<UserModel, UserModel.Builder> {
  public static final ProtoAdapter<UserModel> ADAPTER = new ProtoAdapter_UserModel();

  private static final long serialVersionUID = 0L;

  public static final Long DEFAULT_ID = 0L;

  public static final String DEFAULT_NAME = "";

  public static final Integer DEFAULT_SEX = 0;

  public static final String DEFAULT_NICKNAME = "";

  public static final String DEFAULT_BIRTHDAY = "";

  public static final String DEFAULT_PHONE = "";

  public static final String DEFAULT_HEADIMG = "";

  public static final Integer DEFAULT_STATE = 0;

  public static final String DEFAULT_CHANNELID = "";

  public static final String DEFAULT_ADDRESS = "";

  public static final Long DEFAULT_ADCODE = 0L;

  public static final Long DEFAULT_PROVINCEID = 0L;

  public static final Long DEFAULT_CITYID = 0L;

  public static final String DEFAULT_PROVINCE = "";

  public static final String DEFAULT_CITY = "";

  public static final String DEFAULT_COUNTY = "";

  public static final String DEFAULT_BUILDING = "";

  public static final Double DEFAULT_LAT = 0.0d;

  public static final Double DEFAULT_LNG = 0.0d;

  public static final String DEFAULT_RONGCLOUDTOKEN = "";

  public static final String DEFAULT_REMARK = "";

  public static final Long DEFAULT_CREATETIME = 0L;

  public static final Long DEFAULT_UPDATETIME = 0L;

  public static final Long DEFAULT_LASTTIME = 0L;

  public static final Integer DEFAULT_ACTIVESTATE = 0;

  public static final String DEFAULT_WXNO = "";

  public static final String DEFAULT_QQNO = "";

  public static final String DEFAULT_EMAIL = "";

  public static final Long DEFAULT_FIRSTTIME = 0L;

  public static final String DEFAULT_DIFFNO = "";

  public static final String DEFAULT_REALNAME = "";

  public static final String DEFAULT_IDCARD = "";

  @WireField(
      tag = 1,
      adapter = "com.squareup.wire.ProtoAdapter#UINT64"
  )
  public final Long id;

  @WireField(
      tag = 2,
      adapter = "com.squareup.wire.ProtoAdapter#STRING"
  )
  public final String name;

  @WireField(
      tag = 3,
      adapter = "com.squareup.wire.ProtoAdapter#UINT32"
  )
  public final Integer sex;

  @WireField(
      tag = 4,
      adapter = "com.squareup.wire.ProtoAdapter#STRING"
  )
  public final String nickName;

  @WireField(
      tag = 5,
      adapter = "com.squareup.wire.ProtoAdapter#STRING"
  )
  public final String birthday;

  @WireField(
      tag = 6,
      adapter = "com.squareup.wire.ProtoAdapter#STRING"
  )
  public final String phone;

  @WireField(
      tag = 7,
      adapter = "com.squareup.wire.ProtoAdapter#STRING"
  )
  public final String headImg;

  /**
   * 用户状态：0-正常，-1-删除
   */
  @WireField(
      tag = 8,
      adapter = "com.squareup.wire.ProtoAdapter#UINT32"
  )
  public final Integer state;

  @WireField(
      tag = 9,
      adapter = "com.squareup.wire.ProtoAdapter#STRING"
  )
  public final String channelId;

  @WireField(
      tag = 10,
      adapter = "com.squareup.wire.ProtoAdapter#STRING"
  )
  public final String address;

  @WireField(
      tag = 11,
      adapter = "com.squareup.wire.ProtoAdapter#UINT64"
  )
  public final Long adcode;

  @WireField(
      tag = 12,
      adapter = "com.squareup.wire.ProtoAdapter#UINT64"
  )
  public final Long provinceId;

  @WireField(
      tag = 13,
      adapter = "com.squareup.wire.ProtoAdapter#UINT64"
  )
  public final Long cityId;

  @WireField(
      tag = 14,
      adapter = "com.squareup.wire.ProtoAdapter#STRING"
  )
  public final String province;

  @WireField(
      tag = 15,
      adapter = "com.squareup.wire.ProtoAdapter#STRING"
  )
  public final String city;

  @WireField(
      tag = 16,
      adapter = "com.squareup.wire.ProtoAdapter#STRING"
  )
  public final String county;

  @WireField(
      tag = 17,
      adapter = "com.squareup.wire.ProtoAdapter#STRING"
  )
  public final String building;

  @WireField(
      tag = 18,
      adapter = "com.squareup.wire.ProtoAdapter#DOUBLE"
  )
  public final Double lat;

  @WireField(
      tag = 19,
      adapter = "com.squareup.wire.ProtoAdapter#DOUBLE"
  )
  public final Double lng;

  @WireField(
      tag = 20,
      adapter = "com.squareup.wire.ProtoAdapter#STRING"
  )
  public final String rongCloudToken;

  @WireField(
      tag = 21,
      adapter = "com.squareup.wire.ProtoAdapter#STRING"
  )
  public final String remark;

  @WireField(
      tag = 22,
      adapter = "com.squareup.wire.ProtoAdapter#UINT64"
  )
  public final Long createTime;

  @WireField(
      tag = 23,
      adapter = "com.squareup.wire.ProtoAdapter#UINT64"
  )
  public final Long updateTime;

  @WireField(
      tag = 24,
      adapter = "com.squareup.wire.ProtoAdapter#UINT64"
  )
  public final Long lastTime;

  /**
   * 用户活跃状态 1 - 未登录 2 - 登录.
   */
  @WireField(
      tag = 25,
      adapter = "com.squareup.wire.ProtoAdapter#UINT32"
  )
  public final Integer activeState;

  /**
   * 微信号
   */
  @WireField(
      tag = 26,
      adapter = "com.squareup.wire.ProtoAdapter#STRING"
  )
  public final String wxNo;

  /**
   * qq号
   */
  @WireField(
      tag = 27,
      adapter = "com.squareup.wire.ProtoAdapter#STRING"
  )
  public final String qqNo;

  /**
   * 电子邮箱
   */
  @WireField(
      tag = 28,
      adapter = "com.squareup.wire.ProtoAdapter#STRING"
  )
  public final String email;

  /**
   * 首次绑定手机号时间
   */
  @WireField(
      tag = 29,
      adapter = "com.squareup.wire.ProtoAdapter#UINT64"
  )
  public final Long firstTime;

  /**
   * 异号（针对于没有手机号的一些用户）
   */
  @WireField(
      tag = 30,
      adapter = "com.squareup.wire.ProtoAdapter#STRING"
  )
  public final String diffno;

  /**
   * 实名制姓名
   */
  @WireField(
      tag = 31,
      adapter = "com.squareup.wire.ProtoAdapter#STRING"
  )
  public final String realName;

  /**
   * 身份证号
   */
  @WireField(
      tag = 32,
      adapter = "com.squareup.wire.ProtoAdapter#STRING"
  )
  public final String idcard;

  public UserModel(Long id, String name, Integer sex, String nickName, String birthday, String phone, String headImg, Integer state, String channelId, String address, Long adcode, Long provinceId, Long cityId, String province, String city, String county, String building, Double lat, Double lng, String rongCloudToken, String remark, Long createTime, Long updateTime, Long lastTime, Integer activeState, String wxNo, String qqNo, String email, Long firstTime, String diffno, String realName, String idcard) {
    this(id, name, sex, nickName, birthday, phone, headImg, state, channelId, address, adcode, provinceId, cityId, province, city, county, building, lat, lng, rongCloudToken, remark, createTime, updateTime, lastTime, activeState, wxNo, qqNo, email, firstTime, diffno, realName, idcard, ByteString.EMPTY);
  }

  public UserModel(Long id, String name, Integer sex, String nickName, String birthday, String phone, String headImg, Integer state, String channelId, String address, Long adcode, Long provinceId, Long cityId, String province, String city, String county, String building, Double lat, Double lng, String rongCloudToken, String remark, Long createTime, Long updateTime, Long lastTime, Integer activeState, String wxNo, String qqNo, String email, Long firstTime, String diffno, String realName, String idcard, ByteString unknownFields) {
    super(ADAPTER, unknownFields);
    this.id = id;
    this.name = name;
    this.sex = sex;
    this.nickName = nickName;
    this.birthday = birthday;
    this.phone = phone;
    this.headImg = headImg;
    this.state = state;
    this.channelId = channelId;
    this.address = address;
    this.adcode = adcode;
    this.provinceId = provinceId;
    this.cityId = cityId;
    this.province = province;
    this.city = city;
    this.county = county;
    this.building = building;
    this.lat = lat;
    this.lng = lng;
    this.rongCloudToken = rongCloudToken;
    this.remark = remark;
    this.createTime = createTime;
    this.updateTime = updateTime;
    this.lastTime = lastTime;
    this.activeState = activeState;
    this.wxNo = wxNo;
    this.qqNo = qqNo;
    this.email = email;
    this.firstTime = firstTime;
    this.diffno = diffno;
    this.realName = realName;
    this.idcard = idcard;
  }

  @Override
  public Builder newBuilder() {
    Builder builder = new Builder();
    builder.id = id;
    builder.name = name;
    builder.sex = sex;
    builder.nickName = nickName;
    builder.birthday = birthday;
    builder.phone = phone;
    builder.headImg = headImg;
    builder.state = state;
    builder.channelId = channelId;
    builder.address = address;
    builder.adcode = adcode;
    builder.provinceId = provinceId;
    builder.cityId = cityId;
    builder.province = province;
    builder.city = city;
    builder.county = county;
    builder.building = building;
    builder.lat = lat;
    builder.lng = lng;
    builder.rongCloudToken = rongCloudToken;
    builder.remark = remark;
    builder.createTime = createTime;
    builder.updateTime = updateTime;
    builder.lastTime = lastTime;
    builder.activeState = activeState;
    builder.wxNo = wxNo;
    builder.qqNo = qqNo;
    builder.email = email;
    builder.firstTime = firstTime;
    builder.diffno = diffno;
    builder.realName = realName;
    builder.idcard = idcard;
    builder.addUnknownFields(unknownFields());
    return builder;
  }

  @Override
  public boolean equals(Object other) {
    if (other == this) return true;
    if (!(other instanceof UserModel)) return false;
    UserModel o = (UserModel) other;
    return unknownFields().equals(o.unknownFields())
        && Internal.equals(id, o.id)
        && Internal.equals(name, o.name)
        && Internal.equals(sex, o.sex)
        && Internal.equals(nickName, o.nickName)
        && Internal.equals(birthday, o.birthday)
        && Internal.equals(phone, o.phone)
        && Internal.equals(headImg, o.headImg)
        && Internal.equals(state, o.state)
        && Internal.equals(channelId, o.channelId)
        && Internal.equals(address, o.address)
        && Internal.equals(adcode, o.adcode)
        && Internal.equals(provinceId, o.provinceId)
        && Internal.equals(cityId, o.cityId)
        && Internal.equals(province, o.province)
        && Internal.equals(city, o.city)
        && Internal.equals(county, o.county)
        && Internal.equals(building, o.building)
        && Internal.equals(lat, o.lat)
        && Internal.equals(lng, o.lng)
        && Internal.equals(rongCloudToken, o.rongCloudToken)
        && Internal.equals(remark, o.remark)
        && Internal.equals(createTime, o.createTime)
        && Internal.equals(updateTime, o.updateTime)
        && Internal.equals(lastTime, o.lastTime)
        && Internal.equals(activeState, o.activeState)
        && Internal.equals(wxNo, o.wxNo)
        && Internal.equals(qqNo, o.qqNo)
        && Internal.equals(email, o.email)
        && Internal.equals(firstTime, o.firstTime)
        && Internal.equals(diffno, o.diffno)
        && Internal.equals(realName, o.realName)
        && Internal.equals(idcard, o.idcard);
  }

  @Override
  public int hashCode() {
    int result = super.hashCode;
    if (result == 0) {
      result = unknownFields().hashCode();
      result = result * 37 + (id != null ? id.hashCode() : 0);
      result = result * 37 + (name != null ? name.hashCode() : 0);
      result = result * 37 + (sex != null ? sex.hashCode() : 0);
      result = result * 37 + (nickName != null ? nickName.hashCode() : 0);
      result = result * 37 + (birthday != null ? birthday.hashCode() : 0);
      result = result * 37 + (phone != null ? phone.hashCode() : 0);
      result = result * 37 + (headImg != null ? headImg.hashCode() : 0);
      result = result * 37 + (state != null ? state.hashCode() : 0);
      result = result * 37 + (channelId != null ? channelId.hashCode() : 0);
      result = result * 37 + (address != null ? address.hashCode() : 0);
      result = result * 37 + (adcode != null ? adcode.hashCode() : 0);
      result = result * 37 + (provinceId != null ? provinceId.hashCode() : 0);
      result = result * 37 + (cityId != null ? cityId.hashCode() : 0);
      result = result * 37 + (province != null ? province.hashCode() : 0);
      result = result * 37 + (city != null ? city.hashCode() : 0);
      result = result * 37 + (county != null ? county.hashCode() : 0);
      result = result * 37 + (building != null ? building.hashCode() : 0);
      result = result * 37 + (lat != null ? lat.hashCode() : 0);
      result = result * 37 + (lng != null ? lng.hashCode() : 0);
      result = result * 37 + (rongCloudToken != null ? rongCloudToken.hashCode() : 0);
      result = result * 37 + (remark != null ? remark.hashCode() : 0);
      result = result * 37 + (createTime != null ? createTime.hashCode() : 0);
      result = result * 37 + (updateTime != null ? updateTime.hashCode() : 0);
      result = result * 37 + (lastTime != null ? lastTime.hashCode() : 0);
      result = result * 37 + (activeState != null ? activeState.hashCode() : 0);
      result = result * 37 + (wxNo != null ? wxNo.hashCode() : 0);
      result = result * 37 + (qqNo != null ? qqNo.hashCode() : 0);
      result = result * 37 + (email != null ? email.hashCode() : 0);
      result = result * 37 + (firstTime != null ? firstTime.hashCode() : 0);
      result = result * 37 + (diffno != null ? diffno.hashCode() : 0);
      result = result * 37 + (realName != null ? realName.hashCode() : 0);
      result = result * 37 + (idcard != null ? idcard.hashCode() : 0);
      super.hashCode = result;
    }
    return result;
  }

  @Override
  public String toString() {
    StringBuilder builder = new StringBuilder();
    if (id != null) builder.append(", id=").append(id);
    if (name != null) builder.append(", name=").append(name);
    if (sex != null) builder.append(", sex=").append(sex);
    if (nickName != null) builder.append(", nickName=").append(nickName);
    if (birthday != null) builder.append(", birthday=").append(birthday);
    if (phone != null) builder.append(", phone=").append(phone);
    if (headImg != null) builder.append(", headImg=").append(headImg);
    if (state != null) builder.append(", state=").append(state);
    if (channelId != null) builder.append(", channelId=").append(channelId);
    if (address != null) builder.append(", address=").append(address);
    if (adcode != null) builder.append(", adcode=").append(adcode);
    if (provinceId != null) builder.append(", provinceId=").append(provinceId);
    if (cityId != null) builder.append(", cityId=").append(cityId);
    if (province != null) builder.append(", province=").append(province);
    if (city != null) builder.append(", city=").append(city);
    if (county != null) builder.append(", county=").append(county);
    if (building != null) builder.append(", building=").append(building);
    if (lat != null) builder.append(", lat=").append(lat);
    if (lng != null) builder.append(", lng=").append(lng);
    if (rongCloudToken != null) builder.append(", rongCloudToken=").append(rongCloudToken);
    if (remark != null) builder.append(", remark=").append(remark);
    if (createTime != null) builder.append(", createTime=").append(createTime);
    if (updateTime != null) builder.append(", updateTime=").append(updateTime);
    if (lastTime != null) builder.append(", lastTime=").append(lastTime);
    if (activeState != null) builder.append(", activeState=").append(activeState);
    if (wxNo != null) builder.append(", wxNo=").append(wxNo);
    if (qqNo != null) builder.append(", qqNo=").append(qqNo);
    if (email != null) builder.append(", email=").append(email);
    if (firstTime != null) builder.append(", firstTime=").append(firstTime);
    if (diffno != null) builder.append(", diffno=").append(diffno);
    if (realName != null) builder.append(", realName=").append(realName);
    if (idcard != null) builder.append(", idcard=").append(idcard);
    return builder.replace(0, 2, "UserModel{").append('}').toString();
  }

  public static final class Builder extends Message.Builder<UserModel, Builder> {
    public Long id;

    public String name;

    public Integer sex;

    public String nickName;

    public String birthday;

    public String phone;

    public String headImg;

    public Integer state;

    public String channelId;

    public String address;

    public Long adcode;

    public Long provinceId;

    public Long cityId;

    public String province;

    public String city;

    public String county;

    public String building;

    public Double lat;

    public Double lng;

    public String rongCloudToken;

    public String remark;

    public Long createTime;

    public Long updateTime;

    public Long lastTime;

    public Integer activeState;

    public String wxNo;

    public String qqNo;

    public String email;

    public Long firstTime;

    public String diffno;

    public String realName;

    public String idcard;

    public Builder() {
    }

    public Builder id(Long id) {
      this.id = id;
      return this;
    }

    public Builder name(String name) {
      this.name = name;
      return this;
    }

    public Builder sex(Integer sex) {
      this.sex = sex;
      return this;
    }

    public Builder nickName(String nickName) {
      this.nickName = nickName;
      return this;
    }

    public Builder birthday(String birthday) {
      this.birthday = birthday;
      return this;
    }

    public Builder phone(String phone) {
      this.phone = phone;
      return this;
    }

    public Builder headImg(String headImg) {
      this.headImg = headImg;
      return this;
    }

    /**
     * 用户状态：0-正常，-1-删除
     */
    public Builder state(Integer state) {
      this.state = state;
      return this;
    }

    public Builder channelId(String channelId) {
      this.channelId = channelId;
      return this;
    }

    public Builder address(String address) {
      this.address = address;
      return this;
    }

    public Builder adcode(Long adcode) {
      this.adcode = adcode;
      return this;
    }

    public Builder provinceId(Long provinceId) {
      this.provinceId = provinceId;
      return this;
    }

    public Builder cityId(Long cityId) {
      this.cityId = cityId;
      return this;
    }

    public Builder province(String province) {
      this.province = province;
      return this;
    }

    public Builder city(String city) {
      this.city = city;
      return this;
    }

    public Builder county(String county) {
      this.county = county;
      return this;
    }

    public Builder building(String building) {
      this.building = building;
      return this;
    }

    public Builder lat(Double lat) {
      this.lat = lat;
      return this;
    }

    public Builder lng(Double lng) {
      this.lng = lng;
      return this;
    }

    public Builder rongCloudToken(String rongCloudToken) {
      this.rongCloudToken = rongCloudToken;
      return this;
    }

    public Builder remark(String remark) {
      this.remark = remark;
      return this;
    }

    public Builder createTime(Long createTime) {
      this.createTime = createTime;
      return this;
    }

    public Builder updateTime(Long updateTime) {
      this.updateTime = updateTime;
      return this;
    }

    public Builder lastTime(Long lastTime) {
      this.lastTime = lastTime;
      return this;
    }

    /**
     * 用户活跃状态 1 - 未登录 2 - 登录.
     */
    public Builder activeState(Integer activeState) {
      this.activeState = activeState;
      return this;
    }

    /**
     * 微信号
     */
    public Builder wxNo(String wxNo) {
      this.wxNo = wxNo;
      return this;
    }

    /**
     * qq号
     */
    public Builder qqNo(String qqNo) {
      this.qqNo = qqNo;
      return this;
    }

    /**
     * 电子邮箱
     */
    public Builder email(String email) {
      this.email = email;
      return this;
    }

    /**
     * 首次绑定手机号时间
     */
    public Builder firstTime(Long firstTime) {
      this.firstTime = firstTime;
      return this;
    }

    /**
     * 异号（针对于没有手机号的一些用户）
     */
    public Builder diffno(String diffno) {
      this.diffno = diffno;
      return this;
    }

    /**
     * 实名制姓名
     */
    public Builder realName(String realName) {
      this.realName = realName;
      return this;
    }

    /**
     * 身份证号
     */
    public Builder idcard(String idcard) {
      this.idcard = idcard;
      return this;
    }

    @Override
    public UserModel build() {
      return new UserModel(id, name, sex, nickName, birthday, phone, headImg, state, channelId, address, adcode, provinceId, cityId, province, city, county, building, lat, lng, rongCloudToken, remark, createTime, updateTime, lastTime, activeState, wxNo, qqNo, email, firstTime, diffno, realName, idcard, super.buildUnknownFields());
    }
  }

  private static final class ProtoAdapter_UserModel extends ProtoAdapter<UserModel> {
    ProtoAdapter_UserModel() {
      super(FieldEncoding.LENGTH_DELIMITED, UserModel.class);
    }

    @Override
    public int encodedSize(UserModel value) {
      return (value.id != null ? ProtoAdapter.UINT64.encodedSizeWithTag(1, value.id) : 0)
          + (value.name != null ? ProtoAdapter.STRING.encodedSizeWithTag(2, value.name) : 0)
          + (value.sex != null ? ProtoAdapter.UINT32.encodedSizeWithTag(3, value.sex) : 0)
          + (value.nickName != null ? ProtoAdapter.STRING.encodedSizeWithTag(4, value.nickName) : 0)
          + (value.birthday != null ? ProtoAdapter.STRING.encodedSizeWithTag(5, value.birthday) : 0)
          + (value.phone != null ? ProtoAdapter.STRING.encodedSizeWithTag(6, value.phone) : 0)
          + (value.headImg != null ? ProtoAdapter.STRING.encodedSizeWithTag(7, value.headImg) : 0)
          + (value.state != null ? ProtoAdapter.UINT32.encodedSizeWithTag(8, value.state) : 0)
          + (value.channelId != null ? ProtoAdapter.STRING.encodedSizeWithTag(9, value.channelId) : 0)
          + (value.address != null ? ProtoAdapter.STRING.encodedSizeWithTag(10, value.address) : 0)
          + (value.adcode != null ? ProtoAdapter.UINT64.encodedSizeWithTag(11, value.adcode) : 0)
          + (value.provinceId != null ? ProtoAdapter.UINT64.encodedSizeWithTag(12, value.provinceId) : 0)
          + (value.cityId != null ? ProtoAdapter.UINT64.encodedSizeWithTag(13, value.cityId) : 0)
          + (value.province != null ? ProtoAdapter.STRING.encodedSizeWithTag(14, value.province) : 0)
          + (value.city != null ? ProtoAdapter.STRING.encodedSizeWithTag(15, value.city) : 0)
          + (value.county != null ? ProtoAdapter.STRING.encodedSizeWithTag(16, value.county) : 0)
          + (value.building != null ? ProtoAdapter.STRING.encodedSizeWithTag(17, value.building) : 0)
          + (value.lat != null ? ProtoAdapter.DOUBLE.encodedSizeWithTag(18, value.lat) : 0)
          + (value.lng != null ? ProtoAdapter.DOUBLE.encodedSizeWithTag(19, value.lng) : 0)
          + (value.rongCloudToken != null ? ProtoAdapter.STRING.encodedSizeWithTag(20, value.rongCloudToken) : 0)
          + (value.remark != null ? ProtoAdapter.STRING.encodedSizeWithTag(21, value.remark) : 0)
          + (value.createTime != null ? ProtoAdapter.UINT64.encodedSizeWithTag(22, value.createTime) : 0)
          + (value.updateTime != null ? ProtoAdapter.UINT64.encodedSizeWithTag(23, value.updateTime) : 0)
          + (value.lastTime != null ? ProtoAdapter.UINT64.encodedSizeWithTag(24, value.lastTime) : 0)
          + (value.activeState != null ? ProtoAdapter.UINT32.encodedSizeWithTag(25, value.activeState) : 0)
          + (value.wxNo != null ? ProtoAdapter.STRING.encodedSizeWithTag(26, value.wxNo) : 0)
          + (value.qqNo != null ? ProtoAdapter.STRING.encodedSizeWithTag(27, value.qqNo) : 0)
          + (value.email != null ? ProtoAdapter.STRING.encodedSizeWithTag(28, value.email) : 0)
          + (value.firstTime != null ? ProtoAdapter.UINT64.encodedSizeWithTag(29, value.firstTime) : 0)
          + (value.diffno != null ? ProtoAdapter.STRING.encodedSizeWithTag(30, value.diffno) : 0)
          + (value.realName != null ? ProtoAdapter.STRING.encodedSizeWithTag(31, value.realName) : 0)
          + (value.idcard != null ? ProtoAdapter.STRING.encodedSizeWithTag(32, value.idcard) : 0)
          + value.unknownFields().size();
    }

    @Override
    public void encode(ProtoWriter writer, UserModel value) throws IOException {
      if (value.id != null) ProtoAdapter.UINT64.encodeWithTag(writer, 1, value.id);
      if (value.name != null) ProtoAdapter.STRING.encodeWithTag(writer, 2, value.name);
      if (value.sex != null) ProtoAdapter.UINT32.encodeWithTag(writer, 3, value.sex);
      if (value.nickName != null) ProtoAdapter.STRING.encodeWithTag(writer, 4, value.nickName);
      if (value.birthday != null) ProtoAdapter.STRING.encodeWithTag(writer, 5, value.birthday);
      if (value.phone != null) ProtoAdapter.STRING.encodeWithTag(writer, 6, value.phone);
      if (value.headImg != null) ProtoAdapter.STRING.encodeWithTag(writer, 7, value.headImg);
      if (value.state != null) ProtoAdapter.UINT32.encodeWithTag(writer, 8, value.state);
      if (value.channelId != null) ProtoAdapter.STRING.encodeWithTag(writer, 9, value.channelId);
      if (value.address != null) ProtoAdapter.STRING.encodeWithTag(writer, 10, value.address);
      if (value.adcode != null) ProtoAdapter.UINT64.encodeWithTag(writer, 11, value.adcode);
      if (value.provinceId != null) ProtoAdapter.UINT64.encodeWithTag(writer, 12, value.provinceId);
      if (value.cityId != null) ProtoAdapter.UINT64.encodeWithTag(writer, 13, value.cityId);
      if (value.province != null) ProtoAdapter.STRING.encodeWithTag(writer, 14, value.province);
      if (value.city != null) ProtoAdapter.STRING.encodeWithTag(writer, 15, value.city);
      if (value.county != null) ProtoAdapter.STRING.encodeWithTag(writer, 16, value.county);
      if (value.building != null) ProtoAdapter.STRING.encodeWithTag(writer, 17, value.building);
      if (value.lat != null) ProtoAdapter.DOUBLE.encodeWithTag(writer, 18, value.lat);
      if (value.lng != null) ProtoAdapter.DOUBLE.encodeWithTag(writer, 19, value.lng);
      if (value.rongCloudToken != null) ProtoAdapter.STRING.encodeWithTag(writer, 20, value.rongCloudToken);
      if (value.remark != null) ProtoAdapter.STRING.encodeWithTag(writer, 21, value.remark);
      if (value.createTime != null) ProtoAdapter.UINT64.encodeWithTag(writer, 22, value.createTime);
      if (value.updateTime != null) ProtoAdapter.UINT64.encodeWithTag(writer, 23, value.updateTime);
      if (value.lastTime != null) ProtoAdapter.UINT64.encodeWithTag(writer, 24, value.lastTime);
      if (value.activeState != null) ProtoAdapter.UINT32.encodeWithTag(writer, 25, value.activeState);
      if (value.wxNo != null) ProtoAdapter.STRING.encodeWithTag(writer, 26, value.wxNo);
      if (value.qqNo != null) ProtoAdapter.STRING.encodeWithTag(writer, 27, value.qqNo);
      if (value.email != null) ProtoAdapter.STRING.encodeWithTag(writer, 28, value.email);
      if (value.firstTime != null) ProtoAdapter.UINT64.encodeWithTag(writer, 29, value.firstTime);
      if (value.diffno != null) ProtoAdapter.STRING.encodeWithTag(writer, 30, value.diffno);
      if (value.realName != null) ProtoAdapter.STRING.encodeWithTag(writer, 31, value.realName);
      if (value.idcard != null) ProtoAdapter.STRING.encodeWithTag(writer, 32, value.idcard);
      writer.writeBytes(value.unknownFields());
    }

    @Override
    public UserModel decode(ProtoReader reader) throws IOException {
      Builder builder = new Builder();
      long token = reader.beginMessage();
      for (int tag; (tag = reader.nextTag()) != -1;) {
        switch (tag) {
          case 1: builder.id(ProtoAdapter.UINT64.decode(reader)); break;
          case 2: builder.name(ProtoAdapter.STRING.decode(reader)); break;
          case 3: builder.sex(ProtoAdapter.UINT32.decode(reader)); break;
          case 4: builder.nickName(ProtoAdapter.STRING.decode(reader)); break;
          case 5: builder.birthday(ProtoAdapter.STRING.decode(reader)); break;
          case 6: builder.phone(ProtoAdapter.STRING.decode(reader)); break;
          case 7: builder.headImg(ProtoAdapter.STRING.decode(reader)); break;
          case 8: builder.state(ProtoAdapter.UINT32.decode(reader)); break;
          case 9: builder.channelId(ProtoAdapter.STRING.decode(reader)); break;
          case 10: builder.address(ProtoAdapter.STRING.decode(reader)); break;
          case 11: builder.adcode(ProtoAdapter.UINT64.decode(reader)); break;
          case 12: builder.provinceId(ProtoAdapter.UINT64.decode(reader)); break;
          case 13: builder.cityId(ProtoAdapter.UINT64.decode(reader)); break;
          case 14: builder.province(ProtoAdapter.STRING.decode(reader)); break;
          case 15: builder.city(ProtoAdapter.STRING.decode(reader)); break;
          case 16: builder.county(ProtoAdapter.STRING.decode(reader)); break;
          case 17: builder.building(ProtoAdapter.STRING.decode(reader)); break;
          case 18: builder.lat(ProtoAdapter.DOUBLE.decode(reader)); break;
          case 19: builder.lng(ProtoAdapter.DOUBLE.decode(reader)); break;
          case 20: builder.rongCloudToken(ProtoAdapter.STRING.decode(reader)); break;
          case 21: builder.remark(ProtoAdapter.STRING.decode(reader)); break;
          case 22: builder.createTime(ProtoAdapter.UINT64.decode(reader)); break;
          case 23: builder.updateTime(ProtoAdapter.UINT64.decode(reader)); break;
          case 24: builder.lastTime(ProtoAdapter.UINT64.decode(reader)); break;
          case 25: builder.activeState(ProtoAdapter.UINT32.decode(reader)); break;
          case 26: builder.wxNo(ProtoAdapter.STRING.decode(reader)); break;
          case 27: builder.qqNo(ProtoAdapter.STRING.decode(reader)); break;
          case 28: builder.email(ProtoAdapter.STRING.decode(reader)); break;
          case 29: builder.firstTime(ProtoAdapter.UINT64.decode(reader)); break;
          case 30: builder.diffno(ProtoAdapter.STRING.decode(reader)); break;
          case 31: builder.realName(ProtoAdapter.STRING.decode(reader)); break;
          case 32: builder.idcard(ProtoAdapter.STRING.decode(reader)); break;
          default: {
            FieldEncoding fieldEncoding = reader.peekFieldEncoding();
            Object value = fieldEncoding.rawProtoAdapter().decode(reader);
            builder.addUnknownField(tag, fieldEncoding, value);
          }
        }
      }
      reader.endMessage(token);
      return builder.build();
    }

    @Override
    public UserModel redact(UserModel value) {
      Builder builder = value.newBuilder();
      builder.clearUnknownFields();
      return builder.build();
    }
  }
}
