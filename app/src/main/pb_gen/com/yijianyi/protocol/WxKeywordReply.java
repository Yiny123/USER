// Code generated by Wire protocol buffer compiler, do not edit.
// Source file: Model.proto at 263:1
package com.yijianyi.protocol;

import com.squareup.wire.FieldEncoding;
import com.squareup.wire.Message;
import com.squareup.wire.ProtoAdapter;
import com.squareup.wire.ProtoReader;
import com.squareup.wire.ProtoWriter;
import com.squareup.wire.WireField;
import com.squareup.wire.internal.Internal;
import java.io.IOException;
import java.lang.Long;
import java.lang.Object;
import java.lang.Override;
import java.lang.String;
import java.lang.StringBuilder;
import okio.ByteString;

/**
 * 微信关键字回复(字段为官方)
 */
public final class WxKeywordReply extends Message<WxKeywordReply, WxKeywordReply.Builder> {
  public static final ProtoAdapter<WxKeywordReply> ADAPTER = new ProtoAdapter_WxKeywordReply();

  private static final long serialVersionUID = 0L;

  public static final String DEFAULT_TOUSERNAME = "";

  public static final String DEFAULT_FROMUSERNAME = "";

  public static final Long DEFAULT_CREATETIME = 0L;

  public static final String DEFAULT_MSGTYPE = "";

  public static final String DEFAULT_CONTENT = "";

  public static final String DEFAULT_MSGID = "";

  /**
   * 	接收方帐号（收到的OpenID）
   */
  @WireField(
      tag = 1,
      adapter = "com.squareup.wire.ProtoAdapter#STRING"
  )
  public final String ToUserName;

  /**
   * 	开发者微信号
   */
  @WireField(
      tag = 2,
      adapter = "com.squareup.wire.ProtoAdapter#STRING"
  )
  public final String FromUserName;

  /**
   * 	消息创建时间 （整型）
   */
  @WireField(
      tag = 3,
      adapter = "com.squareup.wire.ProtoAdapter#UINT64"
  )
  public final Long CreateTime;

  /**
   *  消息类型 text- 文本
   */
  @WireField(
      tag = 4,
      adapter = "com.squareup.wire.ProtoAdapter#STRING"
  )
  public final String MsgType;

  /**
   *  回复的消息内容（换行：在content中能够换行，微信客户端就支持换行显示）
   */
  @WireField(
      tag = 5,
      adapter = "com.squareup.wire.ProtoAdapter#STRING"
  )
  public final String Content;

  /**
   *  消息id
   */
  @WireField(
      tag = 6,
      adapter = "com.squareup.wire.ProtoAdapter#STRING"
  )
  public final String MsgId;

  public WxKeywordReply(String ToUserName, String FromUserName, Long CreateTime, String MsgType, String Content, String MsgId) {
    this(ToUserName, FromUserName, CreateTime, MsgType, Content, MsgId, ByteString.EMPTY);
  }

  public WxKeywordReply(String ToUserName, String FromUserName, Long CreateTime, String MsgType, String Content, String MsgId, ByteString unknownFields) {
    super(ADAPTER, unknownFields);
    this.ToUserName = ToUserName;
    this.FromUserName = FromUserName;
    this.CreateTime = CreateTime;
    this.MsgType = MsgType;
    this.Content = Content;
    this.MsgId = MsgId;
  }

  @Override
  public Builder newBuilder() {
    Builder builder = new Builder();
    builder.ToUserName = ToUserName;
    builder.FromUserName = FromUserName;
    builder.CreateTime = CreateTime;
    builder.MsgType = MsgType;
    builder.Content = Content;
    builder.MsgId = MsgId;
    builder.addUnknownFields(unknownFields());
    return builder;
  }

  @Override
  public boolean equals(Object other) {
    if (other == this) return true;
    if (!(other instanceof WxKeywordReply)) return false;
    WxKeywordReply o = (WxKeywordReply) other;
    return unknownFields().equals(o.unknownFields())
        && Internal.equals(ToUserName, o.ToUserName)
        && Internal.equals(FromUserName, o.FromUserName)
        && Internal.equals(CreateTime, o.CreateTime)
        && Internal.equals(MsgType, o.MsgType)
        && Internal.equals(Content, o.Content)
        && Internal.equals(MsgId, o.MsgId);
  }

  @Override
  public int hashCode() {
    int result = super.hashCode;
    if (result == 0) {
      result = unknownFields().hashCode();
      result = result * 37 + (ToUserName != null ? ToUserName.hashCode() : 0);
      result = result * 37 + (FromUserName != null ? FromUserName.hashCode() : 0);
      result = result * 37 + (CreateTime != null ? CreateTime.hashCode() : 0);
      result = result * 37 + (MsgType != null ? MsgType.hashCode() : 0);
      result = result * 37 + (Content != null ? Content.hashCode() : 0);
      result = result * 37 + (MsgId != null ? MsgId.hashCode() : 0);
      super.hashCode = result;
    }
    return result;
  }

  @Override
  public String toString() {
    StringBuilder builder = new StringBuilder();
    if (ToUserName != null) builder.append(", ToUserName=").append(ToUserName);
    if (FromUserName != null) builder.append(", FromUserName=").append(FromUserName);
    if (CreateTime != null) builder.append(", CreateTime=").append(CreateTime);
    if (MsgType != null) builder.append(", MsgType=").append(MsgType);
    if (Content != null) builder.append(", Content=").append(Content);
    if (MsgId != null) builder.append(", MsgId=").append(MsgId);
    return builder.replace(0, 2, "WxKeywordReply{").append('}').toString();
  }

  public static final class Builder extends Message.Builder<WxKeywordReply, Builder> {
    public String ToUserName;

    public String FromUserName;

    public Long CreateTime;

    public String MsgType;

    public String Content;

    public String MsgId;

    public Builder() {
    }

    /**
     * 	接收方帐号（收到的OpenID）
     */
    public Builder ToUserName(String ToUserName) {
      this.ToUserName = ToUserName;
      return this;
    }

    /**
     * 	开发者微信号
     */
    public Builder FromUserName(String FromUserName) {
      this.FromUserName = FromUserName;
      return this;
    }

    /**
     * 	消息创建时间 （整型）
     */
    public Builder CreateTime(Long CreateTime) {
      this.CreateTime = CreateTime;
      return this;
    }

    /**
     *  消息类型 text- 文本
     */
    public Builder MsgType(String MsgType) {
      this.MsgType = MsgType;
      return this;
    }

    /**
     *  回复的消息内容（换行：在content中能够换行，微信客户端就支持换行显示）
     */
    public Builder Content(String Content) {
      this.Content = Content;
      return this;
    }

    /**
     *  消息id
     */
    public Builder MsgId(String MsgId) {
      this.MsgId = MsgId;
      return this;
    }

    @Override
    public WxKeywordReply build() {
      return new WxKeywordReply(ToUserName, FromUserName, CreateTime, MsgType, Content, MsgId, super.buildUnknownFields());
    }
  }

  private static final class ProtoAdapter_WxKeywordReply extends ProtoAdapter<WxKeywordReply> {
    ProtoAdapter_WxKeywordReply() {
      super(FieldEncoding.LENGTH_DELIMITED, WxKeywordReply.class);
    }

    @Override
    public int encodedSize(WxKeywordReply value) {
      return (value.ToUserName != null ? ProtoAdapter.STRING.encodedSizeWithTag(1, value.ToUserName) : 0)
          + (value.FromUserName != null ? ProtoAdapter.STRING.encodedSizeWithTag(2, value.FromUserName) : 0)
          + (value.CreateTime != null ? ProtoAdapter.UINT64.encodedSizeWithTag(3, value.CreateTime) : 0)
          + (value.MsgType != null ? ProtoAdapter.STRING.encodedSizeWithTag(4, value.MsgType) : 0)
          + (value.Content != null ? ProtoAdapter.STRING.encodedSizeWithTag(5, value.Content) : 0)
          + (value.MsgId != null ? ProtoAdapter.STRING.encodedSizeWithTag(6, value.MsgId) : 0)
          + value.unknownFields().size();
    }

    @Override
    public void encode(ProtoWriter writer, WxKeywordReply value) throws IOException {
      if (value.ToUserName != null) ProtoAdapter.STRING.encodeWithTag(writer, 1, value.ToUserName);
      if (value.FromUserName != null) ProtoAdapter.STRING.encodeWithTag(writer, 2, value.FromUserName);
      if (value.CreateTime != null) ProtoAdapter.UINT64.encodeWithTag(writer, 3, value.CreateTime);
      if (value.MsgType != null) ProtoAdapter.STRING.encodeWithTag(writer, 4, value.MsgType);
      if (value.Content != null) ProtoAdapter.STRING.encodeWithTag(writer, 5, value.Content);
      if (value.MsgId != null) ProtoAdapter.STRING.encodeWithTag(writer, 6, value.MsgId);
      writer.writeBytes(value.unknownFields());
    }

    @Override
    public WxKeywordReply decode(ProtoReader reader) throws IOException {
      Builder builder = new Builder();
      long token = reader.beginMessage();
      for (int tag; (tag = reader.nextTag()) != -1;) {
        switch (tag) {
          case 1: builder.ToUserName(ProtoAdapter.STRING.decode(reader)); break;
          case 2: builder.FromUserName(ProtoAdapter.STRING.decode(reader)); break;
          case 3: builder.CreateTime(ProtoAdapter.UINT64.decode(reader)); break;
          case 4: builder.MsgType(ProtoAdapter.STRING.decode(reader)); break;
          case 5: builder.Content(ProtoAdapter.STRING.decode(reader)); break;
          case 6: builder.MsgId(ProtoAdapter.STRING.decode(reader)); break;
          default: {
            FieldEncoding fieldEncoding = reader.peekFieldEncoding();
            Object value = fieldEncoding.rawProtoAdapter().decode(reader);
            builder.addUnknownField(tag, fieldEncoding, value);
          }
        }
      }
      reader.endMessage(token);
      return builder.build();
    }

    @Override
    public WxKeywordReply redact(WxKeywordReply value) {
      Builder builder = value.newBuilder();
      builder.clearUnknownFields();
      return builder.build();
    }
  }
}
