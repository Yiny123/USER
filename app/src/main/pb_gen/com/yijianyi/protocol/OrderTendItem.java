// Code generated by Wire protocol buffer compiler, do not edit.
// Source file: OrderModel.proto at 697:1
package com.yijianyi.protocol;

import com.squareup.wire.FieldEncoding;
import com.squareup.wire.Message;
import com.squareup.wire.ProtoAdapter;
import com.squareup.wire.ProtoReader;
import com.squareup.wire.ProtoWriter;
import com.squareup.wire.WireField;
import com.squareup.wire.internal.Internal;
import java.io.IOException;
import java.lang.Integer;
import java.lang.Long;
import java.lang.Object;
import java.lang.Override;
import java.lang.String;
import java.lang.StringBuilder;
import okio.ByteString;

/**
 * 长护险单照护每日明细（如果没确认，需要自动任务跑出旷工的每日明细）
 */
public final class OrderTendItem extends Message<OrderTendItem, OrderTendItem.Builder> {
  public static final ProtoAdapter<OrderTendItem> ADAPTER = new ProtoAdapter_OrderTendItem();

  private static final long serialVersionUID = 0L;

  public static final Long DEFAULT_ID = 0L;

  public static final String DEFAULT_ORDERID = "";

  public static final Long DEFAULT_TENDID = 0L;

  public static final Integer DEFAULT_STATUS = 0;

  public static final Integer DEFAULT_SERVICEADDR = 0;

  public static final Long DEFAULT_SERVICESTAFFID = 0L;

  public static final String DEFAULT_SERVICESTAFFNAME = "";

  public static final Long DEFAULT_SERVICETIME = 0L;

  public static final Long DEFAULT_SUBSIDY = 0L;

  public static final Long DEFAULT_PRICEID = 0L;

  /**
   * id
   */
  @WireField(
      tag = 1,
      adapter = "com.squareup.wire.ProtoAdapter#UINT64"
  )
  public final Long id;

  /**
   * 订单号
   */
  @WireField(
      tag = 2,
      adapter = "com.squareup.wire.ProtoAdapter#STRING"
  )
  public final String orderId;

  /**
   * 照护计划ID(orderTend)
   */
  @WireField(
      tag = 3,
      adapter = "com.squareup.wire.ProtoAdapter#UINT64"
  )
  public final Long tendId;

  /**
   * 每日明细状态 0-服务 1-休假 2-旷工 3-已完成
   */
  @WireField(
      tag = 4,
      adapter = "com.squareup.wire.ProtoAdapter#UINT32"
  )
  public final Integer status;

  /**
   * 服务地点 0-无 1-在家 2-住院
   */
  @WireField(
      tag = 5,
      adapter = "com.squareup.wire.ProtoAdapter#UINT32"
  )
  public final Integer serviceAddr;

  /**
   * 服务员工ID
   */
  @WireField(
      tag = 8,
      adapter = "com.squareup.wire.ProtoAdapter#UINT64"
  )
  public final Long serviceStaffId;

  /**
   * 服务员工名称
   */
  @WireField(
      tag = 9,
      adapter = "com.squareup.wire.ProtoAdapter#STRING"
  )
  public final String serviceStaffName;

  /**
   * 服务时间
   */
  @WireField(
      tag = 10,
      adapter = "com.squareup.wire.ProtoAdapter#UINT64"
  )
  public final Long serviceTime;

  /**
   * 补贴标准（分）
   */
  @WireField(
      tag = 11,
      adapter = "com.squareup.wire.ProtoAdapter#UINT64"
  )
  public final Long subsidy;

  /**
   * 服务id
   */
  @WireField(
      tag = 12,
      adapter = "com.squareup.wire.ProtoAdapter#UINT64"
  )
  public final Long priceId;

  public OrderTendItem(Long id, String orderId, Long tendId, Integer status, Integer serviceAddr, Long serviceStaffId, String serviceStaffName, Long serviceTime, Long subsidy, Long priceId) {
    this(id, orderId, tendId, status, serviceAddr, serviceStaffId, serviceStaffName, serviceTime, subsidy, priceId, ByteString.EMPTY);
  }

  public OrderTendItem(Long id, String orderId, Long tendId, Integer status, Integer serviceAddr, Long serviceStaffId, String serviceStaffName, Long serviceTime, Long subsidy, Long priceId, ByteString unknownFields) {
    super(ADAPTER, unknownFields);
    this.id = id;
    this.orderId = orderId;
    this.tendId = tendId;
    this.status = status;
    this.serviceAddr = serviceAddr;
    this.serviceStaffId = serviceStaffId;
    this.serviceStaffName = serviceStaffName;
    this.serviceTime = serviceTime;
    this.subsidy = subsidy;
    this.priceId = priceId;
  }

  @Override
  public Builder newBuilder() {
    Builder builder = new Builder();
    builder.id = id;
    builder.orderId = orderId;
    builder.tendId = tendId;
    builder.status = status;
    builder.serviceAddr = serviceAddr;
    builder.serviceStaffId = serviceStaffId;
    builder.serviceStaffName = serviceStaffName;
    builder.serviceTime = serviceTime;
    builder.subsidy = subsidy;
    builder.priceId = priceId;
    builder.addUnknownFields(unknownFields());
    return builder;
  }

  @Override
  public boolean equals(Object other) {
    if (other == this) return true;
    if (!(other instanceof OrderTendItem)) return false;
    OrderTendItem o = (OrderTendItem) other;
    return unknownFields().equals(o.unknownFields())
        && Internal.equals(id, o.id)
        && Internal.equals(orderId, o.orderId)
        && Internal.equals(tendId, o.tendId)
        && Internal.equals(status, o.status)
        && Internal.equals(serviceAddr, o.serviceAddr)
        && Internal.equals(serviceStaffId, o.serviceStaffId)
        && Internal.equals(serviceStaffName, o.serviceStaffName)
        && Internal.equals(serviceTime, o.serviceTime)
        && Internal.equals(subsidy, o.subsidy)
        && Internal.equals(priceId, o.priceId);
  }

  @Override
  public int hashCode() {
    int result = super.hashCode;
    if (result == 0) {
      result = unknownFields().hashCode();
      result = result * 37 + (id != null ? id.hashCode() : 0);
      result = result * 37 + (orderId != null ? orderId.hashCode() : 0);
      result = result * 37 + (tendId != null ? tendId.hashCode() : 0);
      result = result * 37 + (status != null ? status.hashCode() : 0);
      result = result * 37 + (serviceAddr != null ? serviceAddr.hashCode() : 0);
      result = result * 37 + (serviceStaffId != null ? serviceStaffId.hashCode() : 0);
      result = result * 37 + (serviceStaffName != null ? serviceStaffName.hashCode() : 0);
      result = result * 37 + (serviceTime != null ? serviceTime.hashCode() : 0);
      result = result * 37 + (subsidy != null ? subsidy.hashCode() : 0);
      result = result * 37 + (priceId != null ? priceId.hashCode() : 0);
      super.hashCode = result;
    }
    return result;
  }

  @Override
  public String toString() {
    StringBuilder builder = new StringBuilder();
    if (id != null) builder.append(", id=").append(id);
    if (orderId != null) builder.append(", orderId=").append(orderId);
    if (tendId != null) builder.append(", tendId=").append(tendId);
    if (status != null) builder.append(", status=").append(status);
    if (serviceAddr != null) builder.append(", serviceAddr=").append(serviceAddr);
    if (serviceStaffId != null) builder.append(", serviceStaffId=").append(serviceStaffId);
    if (serviceStaffName != null) builder.append(", serviceStaffName=").append(serviceStaffName);
    if (serviceTime != null) builder.append(", serviceTime=").append(serviceTime);
    if (subsidy != null) builder.append(", subsidy=").append(subsidy);
    if (priceId != null) builder.append(", priceId=").append(priceId);
    return builder.replace(0, 2, "OrderTendItem{").append('}').toString();
  }

  public static final class Builder extends Message.Builder<OrderTendItem, Builder> {
    public Long id;

    public String orderId;

    public Long tendId;

    public Integer status;

    public Integer serviceAddr;

    public Long serviceStaffId;

    public String serviceStaffName;

    public Long serviceTime;

    public Long subsidy;

    public Long priceId;

    public Builder() {
    }

    /**
     * id
     */
    public Builder id(Long id) {
      this.id = id;
      return this;
    }

    /**
     * 订单号
     */
    public Builder orderId(String orderId) {
      this.orderId = orderId;
      return this;
    }

    /**
     * 照护计划ID(orderTend)
     */
    public Builder tendId(Long tendId) {
      this.tendId = tendId;
      return this;
    }

    /**
     * 每日明细状态 0-服务 1-休假 2-旷工 3-已完成
     */
    public Builder status(Integer status) {
      this.status = status;
      return this;
    }

    /**
     * 服务地点 0-无 1-在家 2-住院
     */
    public Builder serviceAddr(Integer serviceAddr) {
      this.serviceAddr = serviceAddr;
      return this;
    }

    /**
     * 服务员工ID
     */
    public Builder serviceStaffId(Long serviceStaffId) {
      this.serviceStaffId = serviceStaffId;
      return this;
    }

    /**
     * 服务员工名称
     */
    public Builder serviceStaffName(String serviceStaffName) {
      this.serviceStaffName = serviceStaffName;
      return this;
    }

    /**
     * 服务时间
     */
    public Builder serviceTime(Long serviceTime) {
      this.serviceTime = serviceTime;
      return this;
    }

    /**
     * 补贴标准（分）
     */
    public Builder subsidy(Long subsidy) {
      this.subsidy = subsidy;
      return this;
    }

    /**
     * 服务id
     */
    public Builder priceId(Long priceId) {
      this.priceId = priceId;
      return this;
    }

    @Override
    public OrderTendItem build() {
      return new OrderTendItem(id, orderId, tendId, status, serviceAddr, serviceStaffId, serviceStaffName, serviceTime, subsidy, priceId, super.buildUnknownFields());
    }
  }

  private static final class ProtoAdapter_OrderTendItem extends ProtoAdapter<OrderTendItem> {
    ProtoAdapter_OrderTendItem() {
      super(FieldEncoding.LENGTH_DELIMITED, OrderTendItem.class);
    }

    @Override
    public int encodedSize(OrderTendItem value) {
      return (value.id != null ? ProtoAdapter.UINT64.encodedSizeWithTag(1, value.id) : 0)
          + (value.orderId != null ? ProtoAdapter.STRING.encodedSizeWithTag(2, value.orderId) : 0)
          + (value.tendId != null ? ProtoAdapter.UINT64.encodedSizeWithTag(3, value.tendId) : 0)
          + (value.status != null ? ProtoAdapter.UINT32.encodedSizeWithTag(4, value.status) : 0)
          + (value.serviceAddr != null ? ProtoAdapter.UINT32.encodedSizeWithTag(5, value.serviceAddr) : 0)
          + (value.serviceStaffId != null ? ProtoAdapter.UINT64.encodedSizeWithTag(8, value.serviceStaffId) : 0)
          + (value.serviceStaffName != null ? ProtoAdapter.STRING.encodedSizeWithTag(9, value.serviceStaffName) : 0)
          + (value.serviceTime != null ? ProtoAdapter.UINT64.encodedSizeWithTag(10, value.serviceTime) : 0)
          + (value.subsidy != null ? ProtoAdapter.UINT64.encodedSizeWithTag(11, value.subsidy) : 0)
          + (value.priceId != null ? ProtoAdapter.UINT64.encodedSizeWithTag(12, value.priceId) : 0)
          + value.unknownFields().size();
    }

    @Override
    public void encode(ProtoWriter writer, OrderTendItem value) throws IOException {
      if (value.id != null) ProtoAdapter.UINT64.encodeWithTag(writer, 1, value.id);
      if (value.orderId != null) ProtoAdapter.STRING.encodeWithTag(writer, 2, value.orderId);
      if (value.tendId != null) ProtoAdapter.UINT64.encodeWithTag(writer, 3, value.tendId);
      if (value.status != null) ProtoAdapter.UINT32.encodeWithTag(writer, 4, value.status);
      if (value.serviceAddr != null) ProtoAdapter.UINT32.encodeWithTag(writer, 5, value.serviceAddr);
      if (value.serviceStaffId != null) ProtoAdapter.UINT64.encodeWithTag(writer, 8, value.serviceStaffId);
      if (value.serviceStaffName != null) ProtoAdapter.STRING.encodeWithTag(writer, 9, value.serviceStaffName);
      if (value.serviceTime != null) ProtoAdapter.UINT64.encodeWithTag(writer, 10, value.serviceTime);
      if (value.subsidy != null) ProtoAdapter.UINT64.encodeWithTag(writer, 11, value.subsidy);
      if (value.priceId != null) ProtoAdapter.UINT64.encodeWithTag(writer, 12, value.priceId);
      writer.writeBytes(value.unknownFields());
    }

    @Override
    public OrderTendItem decode(ProtoReader reader) throws IOException {
      Builder builder = new Builder();
      long token = reader.beginMessage();
      for (int tag; (tag = reader.nextTag()) != -1;) {
        switch (tag) {
          case 1: builder.id(ProtoAdapter.UINT64.decode(reader)); break;
          case 2: builder.orderId(ProtoAdapter.STRING.decode(reader)); break;
          case 3: builder.tendId(ProtoAdapter.UINT64.decode(reader)); break;
          case 4: builder.status(ProtoAdapter.UINT32.decode(reader)); break;
          case 5: builder.serviceAddr(ProtoAdapter.UINT32.decode(reader)); break;
          case 8: builder.serviceStaffId(ProtoAdapter.UINT64.decode(reader)); break;
          case 9: builder.serviceStaffName(ProtoAdapter.STRING.decode(reader)); break;
          case 10: builder.serviceTime(ProtoAdapter.UINT64.decode(reader)); break;
          case 11: builder.subsidy(ProtoAdapter.UINT64.decode(reader)); break;
          case 12: builder.priceId(ProtoAdapter.UINT64.decode(reader)); break;
          default: {
            FieldEncoding fieldEncoding = reader.peekFieldEncoding();
            Object value = fieldEncoding.rawProtoAdapter().decode(reader);
            builder.addUnknownField(tag, fieldEncoding, value);
          }
        }
      }
      reader.endMessage(token);
      return builder.build();
    }

    @Override
    public OrderTendItem redact(OrderTendItem value) {
      Builder builder = value.newBuilder();
      builder.clearUnknownFields();
      return builder.build();
    }
  }
}
