// Code generated by Wire protocol buffer compiler, do not edit.
// Source file: AppInterface.proto at 1659:1
package com.yijianyi.protocol;

import com.squareup.wire.FieldEncoding;
import com.squareup.wire.Message;
import com.squareup.wire.ProtoAdapter;
import com.squareup.wire.ProtoReader;
import com.squareup.wire.ProtoWriter;
import com.squareup.wire.WireField;
import com.squareup.wire.internal.Internal;
import java.io.IOException;
import java.lang.Integer;
import java.lang.Long;
import java.lang.Object;
import java.lang.Override;
import java.lang.String;
import java.lang.StringBuilder;
import okio.ByteString;

/**
 * 创建订单自照考核
 */
public final class APPAddInsureOrderCheckReq extends Message<APPAddInsureOrderCheckReq, APPAddInsureOrderCheckReq.Builder> {
  public static final ProtoAdapter<APPAddInsureOrderCheckReq> ADAPTER = new ProtoAdapter_APPAddInsureOrderCheckReq();

  private static final long serialVersionUID = 0L;

  public static final String DEFAULT_ORDERID = "";

  public static final Long DEFAULT_SCORE = 0L;

  public static final Integer DEFAULT_CHECKTYPE = 0;

  /**
   * 订单id
   */
  @WireField(
      tag = 1,
      adapter = "com.squareup.wire.ProtoAdapter#STRING"
  )
  public final String orderId;

  /**
   * 分数
   */
  @WireField(
      tag = 2,
      adapter = "com.squareup.wire.ProtoAdapter#UINT64"
  )
  public final Long score;

  /**
   * 考核类型  0-长护险生活照护类操作考核 1-居家照护质量标准检查 2-最终考核
   */
  @WireField(
      tag = 3,
      adapter = "com.squareup.wire.ProtoAdapter#UINT32"
  )
  public final Integer checkType;

  public APPAddInsureOrderCheckReq(String orderId, Long score, Integer checkType) {
    this(orderId, score, checkType, ByteString.EMPTY);
  }

  public APPAddInsureOrderCheckReq(String orderId, Long score, Integer checkType, ByteString unknownFields) {
    super(ADAPTER, unknownFields);
    this.orderId = orderId;
    this.score = score;
    this.checkType = checkType;
  }

  @Override
  public Builder newBuilder() {
    Builder builder = new Builder();
    builder.orderId = orderId;
    builder.score = score;
    builder.checkType = checkType;
    builder.addUnknownFields(unknownFields());
    return builder;
  }

  @Override
  public boolean equals(Object other) {
    if (other == this) return true;
    if (!(other instanceof APPAddInsureOrderCheckReq)) return false;
    APPAddInsureOrderCheckReq o = (APPAddInsureOrderCheckReq) other;
    return unknownFields().equals(o.unknownFields())
        && Internal.equals(orderId, o.orderId)
        && Internal.equals(score, o.score)
        && Internal.equals(checkType, o.checkType);
  }

  @Override
  public int hashCode() {
    int result = super.hashCode;
    if (result == 0) {
      result = unknownFields().hashCode();
      result = result * 37 + (orderId != null ? orderId.hashCode() : 0);
      result = result * 37 + (score != null ? score.hashCode() : 0);
      result = result * 37 + (checkType != null ? checkType.hashCode() : 0);
      super.hashCode = result;
    }
    return result;
  }

  @Override
  public String toString() {
    StringBuilder builder = new StringBuilder();
    if (orderId != null) builder.append(", orderId=").append(orderId);
    if (score != null) builder.append(", score=").append(score);
    if (checkType != null) builder.append(", checkType=").append(checkType);
    return builder.replace(0, 2, "APPAddInsureOrderCheckReq{").append('}').toString();
  }

  public static final class Builder extends Message.Builder<APPAddInsureOrderCheckReq, Builder> {
    public String orderId;

    public Long score;

    public Integer checkType;

    public Builder() {
    }

    /**
     * 订单id
     */
    public Builder orderId(String orderId) {
      this.orderId = orderId;
      return this;
    }

    /**
     * 分数
     */
    public Builder score(Long score) {
      this.score = score;
      return this;
    }

    /**
     * 考核类型  0-长护险生活照护类操作考核 1-居家照护质量标准检查 2-最终考核
     */
    public Builder checkType(Integer checkType) {
      this.checkType = checkType;
      return this;
    }

    @Override
    public APPAddInsureOrderCheckReq build() {
      return new APPAddInsureOrderCheckReq(orderId, score, checkType, super.buildUnknownFields());
    }
  }

  private static final class ProtoAdapter_APPAddInsureOrderCheckReq extends ProtoAdapter<APPAddInsureOrderCheckReq> {
    ProtoAdapter_APPAddInsureOrderCheckReq() {
      super(FieldEncoding.LENGTH_DELIMITED, APPAddInsureOrderCheckReq.class);
    }

    @Override
    public int encodedSize(APPAddInsureOrderCheckReq value) {
      return (value.orderId != null ? ProtoAdapter.STRING.encodedSizeWithTag(1, value.orderId) : 0)
          + (value.score != null ? ProtoAdapter.UINT64.encodedSizeWithTag(2, value.score) : 0)
          + (value.checkType != null ? ProtoAdapter.UINT32.encodedSizeWithTag(3, value.checkType) : 0)
          + value.unknownFields().size();
    }

    @Override
    public void encode(ProtoWriter writer, APPAddInsureOrderCheckReq value) throws IOException {
      if (value.orderId != null) ProtoAdapter.STRING.encodeWithTag(writer, 1, value.orderId);
      if (value.score != null) ProtoAdapter.UINT64.encodeWithTag(writer, 2, value.score);
      if (value.checkType != null) ProtoAdapter.UINT32.encodeWithTag(writer, 3, value.checkType);
      writer.writeBytes(value.unknownFields());
    }

    @Override
    public APPAddInsureOrderCheckReq decode(ProtoReader reader) throws IOException {
      Builder builder = new Builder();
      long token = reader.beginMessage();
      for (int tag; (tag = reader.nextTag()) != -1;) {
        switch (tag) {
          case 1: builder.orderId(ProtoAdapter.STRING.decode(reader)); break;
          case 2: builder.score(ProtoAdapter.UINT64.decode(reader)); break;
          case 3: builder.checkType(ProtoAdapter.UINT32.decode(reader)); break;
          default: {
            FieldEncoding fieldEncoding = reader.peekFieldEncoding();
            Object value = fieldEncoding.rawProtoAdapter().decode(reader);
            builder.addUnknownField(tag, fieldEncoding, value);
          }
        }
      }
      reader.endMessage(token);
      return builder.build();
    }

    @Override
    public APPAddInsureOrderCheckReq redact(APPAddInsureOrderCheckReq value) {
      Builder builder = value.newBuilder();
      builder.clearUnknownFields();
      return builder.build();
    }
  }
}
