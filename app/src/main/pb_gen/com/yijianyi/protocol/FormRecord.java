// Code generated by Wire protocol buffer compiler, do not edit.
// Source file: SaasModel.proto at 1230:1
package com.yijianyi.protocol;

import com.squareup.wire.FieldEncoding;
import com.squareup.wire.Message;
import com.squareup.wire.ProtoAdapter;
import com.squareup.wire.ProtoReader;
import com.squareup.wire.ProtoWriter;
import com.squareup.wire.WireField;
import com.squareup.wire.internal.Internal;
import java.io.IOException;
import java.lang.Integer;
import java.lang.Long;
import java.lang.Object;
import java.lang.Override;
import java.lang.String;
import java.lang.StringBuilder;
import okio.ByteString;

/**
 * 报表记录表
 */
public final class FormRecord extends Message<FormRecord, FormRecord.Builder> {
  public static final ProtoAdapter<FormRecord> ADAPTER = new ProtoAdapter_FormRecord();

  private static final long serialVersionUID = 0L;

  public static final Long DEFAULT_ID = 0L;

  public static final Long DEFAULT_COMPANYID = 0L;

  public static final String DEFAULT_FILENAME = "";

  public static final String DEFAULT_FILEPATH = "";

  public static final Integer DEFAULT_FILETYPE = 0;

  public static final String DEFAULT_CONDITION = "";

  public static final Long DEFAULT_FILESIZE = 0L;

  public static final Long DEFAULT_CREATETIME = 0L;

  public static final Long DEFAULT_CREATESTAFFID = 0L;

  public static final String DEFAULT_CREATESTAFFNAME = "";

  public static final Integer DEFAULT_FORMTYPE = 0;

  @WireField(
      tag = 1,
      adapter = "com.squareup.wire.ProtoAdapter#UINT64"
  )
  public final Long id;

  /**
   * 公司id
   */
  @WireField(
      tag = 2,
      adapter = "com.squareup.wire.ProtoAdapter#UINT64"
  )
  public final Long companyId;

  /**
   * 文件名
   */
  @WireField(
      tag = 3,
      adapter = "com.squareup.wire.ProtoAdapter#STRING"
  )
  public final String fileName;

  /**
   * 文件路径
   */
  @WireField(
      tag = 4,
      adapter = "com.squareup.wire.ProtoAdapter#STRING"
  )
  public final String filePath;

  /**
   * 文件格式   0-excel
   */
  @WireField(
      tag = 5,
      adapter = "com.squareup.wire.ProtoAdapter#UINT32"
  )
  public final Integer fileType;

  /**
   * 筛选条件
   */
  @WireField(
      tag = 6,
      adapter = "com.squareup.wire.ProtoAdapter#STRING"
  )
  public final String condition;

  /**
   * 文件大小（Kb）
   */
  @WireField(
      tag = 7,
      adapter = "com.squareup.wire.ProtoAdapter#UINT64"
  )
  public final Long fileSize;

  /**
   * 创建时间
   */
  @WireField(
      tag = 8,
      adapter = "com.squareup.wire.ProtoAdapter#UINT64"
  )
  public final Long createTime;

  /**
   * 创建员工ID
   */
  @WireField(
      tag = 9,
      adapter = "com.squareup.wire.ProtoAdapter#UINT64"
  )
  public final Long createStaffId;

  /**
   * 创建员工名称
   */
  @WireField(
      tag = 10,
      adapter = "com.squareup.wire.ProtoAdapter#STRING"
  )
  public final String createStaffName;

  /**
   * 报表类型 1-财务提现表 2-门禁卡作废表 3-门禁卡过期表 4-长护险用户汇总 5-门禁卡租借表 6-门禁卡归还表 7-项目点资金流水 8-门禁卡费用报表 9-陪人床费用报表 10-护工费报表
   */
  @WireField(
      tag = 11,
      adapter = "com.squareup.wire.ProtoAdapter#UINT32"
  )
  public final Integer formType;

  public FormRecord(Long id, Long companyId, String fileName, String filePath, Integer fileType, String condition, Long fileSize, Long createTime, Long createStaffId, String createStaffName, Integer formType) {
    this(id, companyId, fileName, filePath, fileType, condition, fileSize, createTime, createStaffId, createStaffName, formType, ByteString.EMPTY);
  }

  public FormRecord(Long id, Long companyId, String fileName, String filePath, Integer fileType, String condition, Long fileSize, Long createTime, Long createStaffId, String createStaffName, Integer formType, ByteString unknownFields) {
    super(ADAPTER, unknownFields);
    this.id = id;
    this.companyId = companyId;
    this.fileName = fileName;
    this.filePath = filePath;
    this.fileType = fileType;
    this.condition = condition;
    this.fileSize = fileSize;
    this.createTime = createTime;
    this.createStaffId = createStaffId;
    this.createStaffName = createStaffName;
    this.formType = formType;
  }

  @Override
  public Builder newBuilder() {
    Builder builder = new Builder();
    builder.id = id;
    builder.companyId = companyId;
    builder.fileName = fileName;
    builder.filePath = filePath;
    builder.fileType = fileType;
    builder.condition = condition;
    builder.fileSize = fileSize;
    builder.createTime = createTime;
    builder.createStaffId = createStaffId;
    builder.createStaffName = createStaffName;
    builder.formType = formType;
    builder.addUnknownFields(unknownFields());
    return builder;
  }

  @Override
  public boolean equals(Object other) {
    if (other == this) return true;
    if (!(other instanceof FormRecord)) return false;
    FormRecord o = (FormRecord) other;
    return unknownFields().equals(o.unknownFields())
        && Internal.equals(id, o.id)
        && Internal.equals(companyId, o.companyId)
        && Internal.equals(fileName, o.fileName)
        && Internal.equals(filePath, o.filePath)
        && Internal.equals(fileType, o.fileType)
        && Internal.equals(condition, o.condition)
        && Internal.equals(fileSize, o.fileSize)
        && Internal.equals(createTime, o.createTime)
        && Internal.equals(createStaffId, o.createStaffId)
        && Internal.equals(createStaffName, o.createStaffName)
        && Internal.equals(formType, o.formType);
  }

  @Override
  public int hashCode() {
    int result = super.hashCode;
    if (result == 0) {
      result = unknownFields().hashCode();
      result = result * 37 + (id != null ? id.hashCode() : 0);
      result = result * 37 + (companyId != null ? companyId.hashCode() : 0);
      result = result * 37 + (fileName != null ? fileName.hashCode() : 0);
      result = result * 37 + (filePath != null ? filePath.hashCode() : 0);
      result = result * 37 + (fileType != null ? fileType.hashCode() : 0);
      result = result * 37 + (condition != null ? condition.hashCode() : 0);
      result = result * 37 + (fileSize != null ? fileSize.hashCode() : 0);
      result = result * 37 + (createTime != null ? createTime.hashCode() : 0);
      result = result * 37 + (createStaffId != null ? createStaffId.hashCode() : 0);
      result = result * 37 + (createStaffName != null ? createStaffName.hashCode() : 0);
      result = result * 37 + (formType != null ? formType.hashCode() : 0);
      super.hashCode = result;
    }
    return result;
  }

  @Override
  public String toString() {
    StringBuilder builder = new StringBuilder();
    if (id != null) builder.append(", id=").append(id);
    if (companyId != null) builder.append(", companyId=").append(companyId);
    if (fileName != null) builder.append(", fileName=").append(fileName);
    if (filePath != null) builder.append(", filePath=").append(filePath);
    if (fileType != null) builder.append(", fileType=").append(fileType);
    if (condition != null) builder.append(", condition=").append(condition);
    if (fileSize != null) builder.append(", fileSize=").append(fileSize);
    if (createTime != null) builder.append(", createTime=").append(createTime);
    if (createStaffId != null) builder.append(", createStaffId=").append(createStaffId);
    if (createStaffName != null) builder.append(", createStaffName=").append(createStaffName);
    if (formType != null) builder.append(", formType=").append(formType);
    return builder.replace(0, 2, "FormRecord{").append('}').toString();
  }

  public static final class Builder extends Message.Builder<FormRecord, Builder> {
    public Long id;

    public Long companyId;

    public String fileName;

    public String filePath;

    public Integer fileType;

    public String condition;

    public Long fileSize;

    public Long createTime;

    public Long createStaffId;

    public String createStaffName;

    public Integer formType;

    public Builder() {
    }

    public Builder id(Long id) {
      this.id = id;
      return this;
    }

    /**
     * 公司id
     */
    public Builder companyId(Long companyId) {
      this.companyId = companyId;
      return this;
    }

    /**
     * 文件名
     */
    public Builder fileName(String fileName) {
      this.fileName = fileName;
      return this;
    }

    /**
     * 文件路径
     */
    public Builder filePath(String filePath) {
      this.filePath = filePath;
      return this;
    }

    /**
     * 文件格式   0-excel
     */
    public Builder fileType(Integer fileType) {
      this.fileType = fileType;
      return this;
    }

    /**
     * 筛选条件
     */
    public Builder condition(String condition) {
      this.condition = condition;
      return this;
    }

    /**
     * 文件大小（Kb）
     */
    public Builder fileSize(Long fileSize) {
      this.fileSize = fileSize;
      return this;
    }

    /**
     * 创建时间
     */
    public Builder createTime(Long createTime) {
      this.createTime = createTime;
      return this;
    }

    /**
     * 创建员工ID
     */
    public Builder createStaffId(Long createStaffId) {
      this.createStaffId = createStaffId;
      return this;
    }

    /**
     * 创建员工名称
     */
    public Builder createStaffName(String createStaffName) {
      this.createStaffName = createStaffName;
      return this;
    }

    /**
     * 报表类型 1-财务提现表 2-门禁卡作废表 3-门禁卡过期表 4-长护险用户汇总 5-门禁卡租借表 6-门禁卡归还表 7-项目点资金流水 8-门禁卡费用报表 9-陪人床费用报表 10-护工费报表
     */
    public Builder formType(Integer formType) {
      this.formType = formType;
      return this;
    }

    @Override
    public FormRecord build() {
      return new FormRecord(id, companyId, fileName, filePath, fileType, condition, fileSize, createTime, createStaffId, createStaffName, formType, super.buildUnknownFields());
    }
  }

  private static final class ProtoAdapter_FormRecord extends ProtoAdapter<FormRecord> {
    ProtoAdapter_FormRecord() {
      super(FieldEncoding.LENGTH_DELIMITED, FormRecord.class);
    }

    @Override
    public int encodedSize(FormRecord value) {
      return (value.id != null ? ProtoAdapter.UINT64.encodedSizeWithTag(1, value.id) : 0)
          + (value.companyId != null ? ProtoAdapter.UINT64.encodedSizeWithTag(2, value.companyId) : 0)
          + (value.fileName != null ? ProtoAdapter.STRING.encodedSizeWithTag(3, value.fileName) : 0)
          + (value.filePath != null ? ProtoAdapter.STRING.encodedSizeWithTag(4, value.filePath) : 0)
          + (value.fileType != null ? ProtoAdapter.UINT32.encodedSizeWithTag(5, value.fileType) : 0)
          + (value.condition != null ? ProtoAdapter.STRING.encodedSizeWithTag(6, value.condition) : 0)
          + (value.fileSize != null ? ProtoAdapter.UINT64.encodedSizeWithTag(7, value.fileSize) : 0)
          + (value.createTime != null ? ProtoAdapter.UINT64.encodedSizeWithTag(8, value.createTime) : 0)
          + (value.createStaffId != null ? ProtoAdapter.UINT64.encodedSizeWithTag(9, value.createStaffId) : 0)
          + (value.createStaffName != null ? ProtoAdapter.STRING.encodedSizeWithTag(10, value.createStaffName) : 0)
          + (value.formType != null ? ProtoAdapter.UINT32.encodedSizeWithTag(11, value.formType) : 0)
          + value.unknownFields().size();
    }

    @Override
    public void encode(ProtoWriter writer, FormRecord value) throws IOException {
      if (value.id != null) ProtoAdapter.UINT64.encodeWithTag(writer, 1, value.id);
      if (value.companyId != null) ProtoAdapter.UINT64.encodeWithTag(writer, 2, value.companyId);
      if (value.fileName != null) ProtoAdapter.STRING.encodeWithTag(writer, 3, value.fileName);
      if (value.filePath != null) ProtoAdapter.STRING.encodeWithTag(writer, 4, value.filePath);
      if (value.fileType != null) ProtoAdapter.UINT32.encodeWithTag(writer, 5, value.fileType);
      if (value.condition != null) ProtoAdapter.STRING.encodeWithTag(writer, 6, value.condition);
      if (value.fileSize != null) ProtoAdapter.UINT64.encodeWithTag(writer, 7, value.fileSize);
      if (value.createTime != null) ProtoAdapter.UINT64.encodeWithTag(writer, 8, value.createTime);
      if (value.createStaffId != null) ProtoAdapter.UINT64.encodeWithTag(writer, 9, value.createStaffId);
      if (value.createStaffName != null) ProtoAdapter.STRING.encodeWithTag(writer, 10, value.createStaffName);
      if (value.formType != null) ProtoAdapter.UINT32.encodeWithTag(writer, 11, value.formType);
      writer.writeBytes(value.unknownFields());
    }

    @Override
    public FormRecord decode(ProtoReader reader) throws IOException {
      Builder builder = new Builder();
      long token = reader.beginMessage();
      for (int tag; (tag = reader.nextTag()) != -1;) {
        switch (tag) {
          case 1: builder.id(ProtoAdapter.UINT64.decode(reader)); break;
          case 2: builder.companyId(ProtoAdapter.UINT64.decode(reader)); break;
          case 3: builder.fileName(ProtoAdapter.STRING.decode(reader)); break;
          case 4: builder.filePath(ProtoAdapter.STRING.decode(reader)); break;
          case 5: builder.fileType(ProtoAdapter.UINT32.decode(reader)); break;
          case 6: builder.condition(ProtoAdapter.STRING.decode(reader)); break;
          case 7: builder.fileSize(ProtoAdapter.UINT64.decode(reader)); break;
          case 8: builder.createTime(ProtoAdapter.UINT64.decode(reader)); break;
          case 9: builder.createStaffId(ProtoAdapter.UINT64.decode(reader)); break;
          case 10: builder.createStaffName(ProtoAdapter.STRING.decode(reader)); break;
          case 11: builder.formType(ProtoAdapter.UINT32.decode(reader)); break;
          default: {
            FieldEncoding fieldEncoding = reader.peekFieldEncoding();
            Object value = fieldEncoding.rawProtoAdapter().decode(reader);
            builder.addUnknownField(tag, fieldEncoding, value);
          }
        }
      }
      reader.endMessage(token);
      return builder.build();
    }

    @Override
    public FormRecord redact(FormRecord value) {
      Builder builder = value.newBuilder();
      builder.clearUnknownFields();
      return builder.build();
    }
  }
}
