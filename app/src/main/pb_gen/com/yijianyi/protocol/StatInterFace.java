// Code generated by Wire protocol buffer compiler, do not edit.
// Source file: Stat.proto at 54:1
package com.yijianyi.protocol;

import com.squareup.wire.FieldEncoding;
import com.squareup.wire.Message;
import com.squareup.wire.ProtoAdapter;
import com.squareup.wire.ProtoReader;
import com.squareup.wire.ProtoWriter;
import com.squareup.wire.WireField;
import com.squareup.wire.internal.Internal;
import java.io.IOException;
import java.lang.Integer;
import java.lang.Long;
import java.lang.Object;
import java.lang.Override;
import java.lang.String;
import java.lang.StringBuilder;
import okio.ByteString;

public final class StatInterFace extends Message<StatInterFace, StatInterFace.Builder> {
  public static final ProtoAdapter<StatInterFace> ADAPTER = new ProtoAdapter_StatInterFace();

  private static final long serialVersionUID = 0L;

  public static final Long DEFAULT_USERID = 0L;

  public static final String DEFAULT_METHOD = "";

  public static final String DEFAULT_METHODKEY = "";

  public static final Integer DEFAULT_RESULT = 0;

  public static final Integer DEFAULT_COSTTIME = 0;

  public static final String DEFAULT_EXTRADATA = "";

  /**
   * 当前登录用户ID 未登录 0
   */
  @WireField(
      tag = 1,
      adapter = "com.squareup.wire.ProtoAdapter#UINT64"
  )
  public final Long userId;

  /**
   * 调用方法
   */
  @WireField(
      tag = 2,
      adapter = "com.squareup.wire.ProtoAdapter#STRING"
  )
  public final String method;

  /**
   * 发发主键
   */
  @WireField(
      tag = 3,
      adapter = "com.squareup.wire.ProtoAdapter#STRING"
  )
  public final String methodKey;

  /**
   * 结果
   */
  @WireField(
      tag = 4,
      adapter = "com.squareup.wire.ProtoAdapter#UINT32"
  )
  public final Integer result;

  /**
   * 耗时
   */
  @WireField(
      tag = 5,
      adapter = "com.squareup.wire.ProtoAdapter#UINT32"
  )
  public final Integer costTime;

  /**
   * 额外数据
   */
  @WireField(
      tag = 6,
      adapter = "com.squareup.wire.ProtoAdapter#STRING"
  )
  public final String extraData;

  public StatInterFace(Long userId, String method, String methodKey, Integer result, Integer costTime, String extraData) {
    this(userId, method, methodKey, result, costTime, extraData, ByteString.EMPTY);
  }

  public StatInterFace(Long userId, String method, String methodKey, Integer result, Integer costTime, String extraData, ByteString unknownFields) {
    super(ADAPTER, unknownFields);
    this.userId = userId;
    this.method = method;
    this.methodKey = methodKey;
    this.result = result;
    this.costTime = costTime;
    this.extraData = extraData;
  }

  @Override
  public Builder newBuilder() {
    Builder builder = new Builder();
    builder.userId = userId;
    builder.method = method;
    builder.methodKey = methodKey;
    builder.result = result;
    builder.costTime = costTime;
    builder.extraData = extraData;
    builder.addUnknownFields(unknownFields());
    return builder;
  }

  @Override
  public boolean equals(Object other) {
    if (other == this) return true;
    if (!(other instanceof StatInterFace)) return false;
    StatInterFace o = (StatInterFace) other;
    return unknownFields().equals(o.unknownFields())
        && Internal.equals(userId, o.userId)
        && Internal.equals(method, o.method)
        && Internal.equals(methodKey, o.methodKey)
        && Internal.equals(result, o.result)
        && Internal.equals(costTime, o.costTime)
        && Internal.equals(extraData, o.extraData);
  }

  @Override
  public int hashCode() {
    int result_ = super.hashCode;
    if (result_ == 0) {
      result_ = unknownFields().hashCode();
      result_ = result_ * 37 + (userId != null ? userId.hashCode() : 0);
      result_ = result_ * 37 + (method != null ? method.hashCode() : 0);
      result_ = result_ * 37 + (methodKey != null ? methodKey.hashCode() : 0);
      result_ = result_ * 37 + (result != null ? result.hashCode() : 0);
      result_ = result_ * 37 + (costTime != null ? costTime.hashCode() : 0);
      result_ = result_ * 37 + (extraData != null ? extraData.hashCode() : 0);
      super.hashCode = result_;
    }
    return result_;
  }

  @Override
  public String toString() {
    StringBuilder builder = new StringBuilder();
    if (userId != null) builder.append(", userId=").append(userId);
    if (method != null) builder.append(", method=").append(method);
    if (methodKey != null) builder.append(", methodKey=").append(methodKey);
    if (result != null) builder.append(", result=").append(result);
    if (costTime != null) builder.append(", costTime=").append(costTime);
    if (extraData != null) builder.append(", extraData=").append(extraData);
    return builder.replace(0, 2, "StatInterFace{").append('}').toString();
  }

  public static final class Builder extends Message.Builder<StatInterFace, Builder> {
    public Long userId;

    public String method;

    public String methodKey;

    public Integer result;

    public Integer costTime;

    public String extraData;

    public Builder() {
    }

    /**
     * 当前登录用户ID 未登录 0
     */
    public Builder userId(Long userId) {
      this.userId = userId;
      return this;
    }

    /**
     * 调用方法
     */
    public Builder method(String method) {
      this.method = method;
      return this;
    }

    /**
     * 发发主键
     */
    public Builder methodKey(String methodKey) {
      this.methodKey = methodKey;
      return this;
    }

    /**
     * 结果
     */
    public Builder result(Integer result) {
      this.result = result;
      return this;
    }

    /**
     * 耗时
     */
    public Builder costTime(Integer costTime) {
      this.costTime = costTime;
      return this;
    }

    /**
     * 额外数据
     */
    public Builder extraData(String extraData) {
      this.extraData = extraData;
      return this;
    }

    @Override
    public StatInterFace build() {
      return new StatInterFace(userId, method, methodKey, result, costTime, extraData, super.buildUnknownFields());
    }
  }

  private static final class ProtoAdapter_StatInterFace extends ProtoAdapter<StatInterFace> {
    ProtoAdapter_StatInterFace() {
      super(FieldEncoding.LENGTH_DELIMITED, StatInterFace.class);
    }

    @Override
    public int encodedSize(StatInterFace value) {
      return (value.userId != null ? ProtoAdapter.UINT64.encodedSizeWithTag(1, value.userId) : 0)
          + (value.method != null ? ProtoAdapter.STRING.encodedSizeWithTag(2, value.method) : 0)
          + (value.methodKey != null ? ProtoAdapter.STRING.encodedSizeWithTag(3, value.methodKey) : 0)
          + (value.result != null ? ProtoAdapter.UINT32.encodedSizeWithTag(4, value.result) : 0)
          + (value.costTime != null ? ProtoAdapter.UINT32.encodedSizeWithTag(5, value.costTime) : 0)
          + (value.extraData != null ? ProtoAdapter.STRING.encodedSizeWithTag(6, value.extraData) : 0)
          + value.unknownFields().size();
    }

    @Override
    public void encode(ProtoWriter writer, StatInterFace value) throws IOException {
      if (value.userId != null) ProtoAdapter.UINT64.encodeWithTag(writer, 1, value.userId);
      if (value.method != null) ProtoAdapter.STRING.encodeWithTag(writer, 2, value.method);
      if (value.methodKey != null) ProtoAdapter.STRING.encodeWithTag(writer, 3, value.methodKey);
      if (value.result != null) ProtoAdapter.UINT32.encodeWithTag(writer, 4, value.result);
      if (value.costTime != null) ProtoAdapter.UINT32.encodeWithTag(writer, 5, value.costTime);
      if (value.extraData != null) ProtoAdapter.STRING.encodeWithTag(writer, 6, value.extraData);
      writer.writeBytes(value.unknownFields());
    }

    @Override
    public StatInterFace decode(ProtoReader reader) throws IOException {
      Builder builder = new Builder();
      long token = reader.beginMessage();
      for (int tag; (tag = reader.nextTag()) != -1;) {
        switch (tag) {
          case 1: builder.userId(ProtoAdapter.UINT64.decode(reader)); break;
          case 2: builder.method(ProtoAdapter.STRING.decode(reader)); break;
          case 3: builder.methodKey(ProtoAdapter.STRING.decode(reader)); break;
          case 4: builder.result(ProtoAdapter.UINT32.decode(reader)); break;
          case 5: builder.costTime(ProtoAdapter.UINT32.decode(reader)); break;
          case 6: builder.extraData(ProtoAdapter.STRING.decode(reader)); break;
          default: {
            FieldEncoding fieldEncoding = reader.peekFieldEncoding();
            Object value = fieldEncoding.rawProtoAdapter().decode(reader);
            builder.addUnknownField(tag, fieldEncoding, value);
          }
        }
      }
      reader.endMessage(token);
      return builder.build();
    }

    @Override
    public StatInterFace redact(StatInterFace value) {
      Builder builder = value.newBuilder();
      builder.clearUnknownFields();
      return builder.build();
    }
  }
}
