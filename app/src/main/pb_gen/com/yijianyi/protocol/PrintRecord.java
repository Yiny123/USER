// Code generated by Wire protocol buffer compiler, do not edit.
// Source file: SaasModel.proto at 1189:1
package com.yijianyi.protocol;

import com.squareup.wire.FieldEncoding;
import com.squareup.wire.Message;
import com.squareup.wire.ProtoAdapter;
import com.squareup.wire.ProtoReader;
import com.squareup.wire.ProtoWriter;
import com.squareup.wire.WireField;
import com.squareup.wire.internal.Internal;
import java.io.IOException;
import java.lang.Integer;
import java.lang.Long;
import java.lang.Object;
import java.lang.Override;
import java.lang.String;
import java.lang.StringBuilder;
import okio.ByteString;

/**
 * 打印记录
 */
public final class PrintRecord extends Message<PrintRecord, PrintRecord.Builder> {
  public static final ProtoAdapter<PrintRecord> ADAPTER = new ProtoAdapter_PrintRecord();

  private static final long serialVersionUID = 0L;

  public static final Long DEFAULT_ID = 0L;

  public static final String DEFAULT_ORDERID = "";

  public static final Integer DEFAULT_PRINTTYPE = 0;

  public static final Integer DEFAULT_PRINTNUM = 0;

  public static final Long DEFAULT_CREATETIME = 0L;

  public static final Long DEFAULT_CREATESTAFFID = 0L;

  public static final String DEFAULT_CREATESTAFFNAME = "";

  public static final String DEFAULT_PAYEE = "";

  public static final Long DEFAULT_ORDEREXTRAID = 0L;

  public static final String DEFAULT_PRINTNO = "";

  public static final Long DEFAULT_ORGID = 0L;

  @WireField(
      tag = 1,
      adapter = "com.squareup.wire.ProtoAdapter#UINT64"
  )
  public final Long id;

  /**
   * 订单id
   */
  @WireField(
      tag = 2,
      adapter = "com.squareup.wire.ProtoAdapter#STRING"
  )
  public final String orderId;

  /**
   * 打印类型 1-陪工费 2-陪人床 3-门禁卡 4-预交金
   */
  @WireField(
      tag = 3,
      adapter = "com.squareup.wire.ProtoAdapter#UINT32"
  )
  public final Integer printType;

  /**
   * 打印次数
   */
  @WireField(
      tag = 4,
      adapter = "com.squareup.wire.ProtoAdapter#UINT32"
  )
  public final Integer printNum;

  /**
   * 创建时间
   */
  @WireField(
      tag = 5,
      adapter = "com.squareup.wire.ProtoAdapter#UINT64"
  )
  public final Long createTime;

  @WireField(
      tag = 6,
      adapter = "com.squareup.wire.ProtoAdapter#UINT64"
  )
  public final Long createStaffId;

  @WireField(
      tag = 7,
      adapter = "com.squareup.wire.ProtoAdapter#STRING"
  )
  public final String createStaffName;

  /**
   * 收款人
   */
  @WireField(
      tag = 8,
      adapter = "com.squareup.wire.ProtoAdapter#STRING"
  )
  public final String payee;

  /**
   * 门禁卡租借记录id
   */
  @WireField(
      tag = 9,
      adapter = "com.squareup.wire.ProtoAdapter#UINT64"
  )
  public final Long orderExtraId;

  /**
   * 打印批次号
   */
  @WireField(
      tag = 10,
      adapter = "com.squareup.wire.ProtoAdapter#STRING"
  )
  public final String printNO;

  /**
   * 机构id
   */
  @WireField(
      tag = 11,
      adapter = "com.squareup.wire.ProtoAdapter#UINT64"
  )
  public final Long orgId;

  public PrintRecord(Long id, String orderId, Integer printType, Integer printNum, Long createTime, Long createStaffId, String createStaffName, String payee, Long orderExtraId, String printNO, Long orgId) {
    this(id, orderId, printType, printNum, createTime, createStaffId, createStaffName, payee, orderExtraId, printNO, orgId, ByteString.EMPTY);
  }

  public PrintRecord(Long id, String orderId, Integer printType, Integer printNum, Long createTime, Long createStaffId, String createStaffName, String payee, Long orderExtraId, String printNO, Long orgId, ByteString unknownFields) {
    super(ADAPTER, unknownFields);
    this.id = id;
    this.orderId = orderId;
    this.printType = printType;
    this.printNum = printNum;
    this.createTime = createTime;
    this.createStaffId = createStaffId;
    this.createStaffName = createStaffName;
    this.payee = payee;
    this.orderExtraId = orderExtraId;
    this.printNO = printNO;
    this.orgId = orgId;
  }

  @Override
  public Builder newBuilder() {
    Builder builder = new Builder();
    builder.id = id;
    builder.orderId = orderId;
    builder.printType = printType;
    builder.printNum = printNum;
    builder.createTime = createTime;
    builder.createStaffId = createStaffId;
    builder.createStaffName = createStaffName;
    builder.payee = payee;
    builder.orderExtraId = orderExtraId;
    builder.printNO = printNO;
    builder.orgId = orgId;
    builder.addUnknownFields(unknownFields());
    return builder;
  }

  @Override
  public boolean equals(Object other) {
    if (other == this) return true;
    if (!(other instanceof PrintRecord)) return false;
    PrintRecord o = (PrintRecord) other;
    return unknownFields().equals(o.unknownFields())
        && Internal.equals(id, o.id)
        && Internal.equals(orderId, o.orderId)
        && Internal.equals(printType, o.printType)
        && Internal.equals(printNum, o.printNum)
        && Internal.equals(createTime, o.createTime)
        && Internal.equals(createStaffId, o.createStaffId)
        && Internal.equals(createStaffName, o.createStaffName)
        && Internal.equals(payee, o.payee)
        && Internal.equals(orderExtraId, o.orderExtraId)
        && Internal.equals(printNO, o.printNO)
        && Internal.equals(orgId, o.orgId);
  }

  @Override
  public int hashCode() {
    int result = super.hashCode;
    if (result == 0) {
      result = unknownFields().hashCode();
      result = result * 37 + (id != null ? id.hashCode() : 0);
      result = result * 37 + (orderId != null ? orderId.hashCode() : 0);
      result = result * 37 + (printType != null ? printType.hashCode() : 0);
      result = result * 37 + (printNum != null ? printNum.hashCode() : 0);
      result = result * 37 + (createTime != null ? createTime.hashCode() : 0);
      result = result * 37 + (createStaffId != null ? createStaffId.hashCode() : 0);
      result = result * 37 + (createStaffName != null ? createStaffName.hashCode() : 0);
      result = result * 37 + (payee != null ? payee.hashCode() : 0);
      result = result * 37 + (orderExtraId != null ? orderExtraId.hashCode() : 0);
      result = result * 37 + (printNO != null ? printNO.hashCode() : 0);
      result = result * 37 + (orgId != null ? orgId.hashCode() : 0);
      super.hashCode = result;
    }
    return result;
  }

  @Override
  public String toString() {
    StringBuilder builder = new StringBuilder();
    if (id != null) builder.append(", id=").append(id);
    if (orderId != null) builder.append(", orderId=").append(orderId);
    if (printType != null) builder.append(", printType=").append(printType);
    if (printNum != null) builder.append(", printNum=").append(printNum);
    if (createTime != null) builder.append(", createTime=").append(createTime);
    if (createStaffId != null) builder.append(", createStaffId=").append(createStaffId);
    if (createStaffName != null) builder.append(", createStaffName=").append(createStaffName);
    if (payee != null) builder.append(", payee=").append(payee);
    if (orderExtraId != null) builder.append(", orderExtraId=").append(orderExtraId);
    if (printNO != null) builder.append(", printNO=").append(printNO);
    if (orgId != null) builder.append(", orgId=").append(orgId);
    return builder.replace(0, 2, "PrintRecord{").append('}').toString();
  }

  public static final class Builder extends Message.Builder<PrintRecord, Builder> {
    public Long id;

    public String orderId;

    public Integer printType;

    public Integer printNum;

    public Long createTime;

    public Long createStaffId;

    public String createStaffName;

    public String payee;

    public Long orderExtraId;

    public String printNO;

    public Long orgId;

    public Builder() {
    }

    public Builder id(Long id) {
      this.id = id;
      return this;
    }

    /**
     * 订单id
     */
    public Builder orderId(String orderId) {
      this.orderId = orderId;
      return this;
    }

    /**
     * 打印类型 1-陪工费 2-陪人床 3-门禁卡 4-预交金
     */
    public Builder printType(Integer printType) {
      this.printType = printType;
      return this;
    }

    /**
     * 打印次数
     */
    public Builder printNum(Integer printNum) {
      this.printNum = printNum;
      return this;
    }

    /**
     * 创建时间
     */
    public Builder createTime(Long createTime) {
      this.createTime = createTime;
      return this;
    }

    public Builder createStaffId(Long createStaffId) {
      this.createStaffId = createStaffId;
      return this;
    }

    public Builder createStaffName(String createStaffName) {
      this.createStaffName = createStaffName;
      return this;
    }

    /**
     * 收款人
     */
    public Builder payee(String payee) {
      this.payee = payee;
      return this;
    }

    /**
     * 门禁卡租借记录id
     */
    public Builder orderExtraId(Long orderExtraId) {
      this.orderExtraId = orderExtraId;
      return this;
    }

    /**
     * 打印批次号
     */
    public Builder printNO(String printNO) {
      this.printNO = printNO;
      return this;
    }

    /**
     * 机构id
     */
    public Builder orgId(Long orgId) {
      this.orgId = orgId;
      return this;
    }

    @Override
    public PrintRecord build() {
      return new PrintRecord(id, orderId, printType, printNum, createTime, createStaffId, createStaffName, payee, orderExtraId, printNO, orgId, super.buildUnknownFields());
    }
  }

  private static final class ProtoAdapter_PrintRecord extends ProtoAdapter<PrintRecord> {
    ProtoAdapter_PrintRecord() {
      super(FieldEncoding.LENGTH_DELIMITED, PrintRecord.class);
    }

    @Override
    public int encodedSize(PrintRecord value) {
      return (value.id != null ? ProtoAdapter.UINT64.encodedSizeWithTag(1, value.id) : 0)
          + (value.orderId != null ? ProtoAdapter.STRING.encodedSizeWithTag(2, value.orderId) : 0)
          + (value.printType != null ? ProtoAdapter.UINT32.encodedSizeWithTag(3, value.printType) : 0)
          + (value.printNum != null ? ProtoAdapter.UINT32.encodedSizeWithTag(4, value.printNum) : 0)
          + (value.createTime != null ? ProtoAdapter.UINT64.encodedSizeWithTag(5, value.createTime) : 0)
          + (value.createStaffId != null ? ProtoAdapter.UINT64.encodedSizeWithTag(6, value.createStaffId) : 0)
          + (value.createStaffName != null ? ProtoAdapter.STRING.encodedSizeWithTag(7, value.createStaffName) : 0)
          + (value.payee != null ? ProtoAdapter.STRING.encodedSizeWithTag(8, value.payee) : 0)
          + (value.orderExtraId != null ? ProtoAdapter.UINT64.encodedSizeWithTag(9, value.orderExtraId) : 0)
          + (value.printNO != null ? ProtoAdapter.STRING.encodedSizeWithTag(10, value.printNO) : 0)
          + (value.orgId != null ? ProtoAdapter.UINT64.encodedSizeWithTag(11, value.orgId) : 0)
          + value.unknownFields().size();
    }

    @Override
    public void encode(ProtoWriter writer, PrintRecord value) throws IOException {
      if (value.id != null) ProtoAdapter.UINT64.encodeWithTag(writer, 1, value.id);
      if (value.orderId != null) ProtoAdapter.STRING.encodeWithTag(writer, 2, value.orderId);
      if (value.printType != null) ProtoAdapter.UINT32.encodeWithTag(writer, 3, value.printType);
      if (value.printNum != null) ProtoAdapter.UINT32.encodeWithTag(writer, 4, value.printNum);
      if (value.createTime != null) ProtoAdapter.UINT64.encodeWithTag(writer, 5, value.createTime);
      if (value.createStaffId != null) ProtoAdapter.UINT64.encodeWithTag(writer, 6, value.createStaffId);
      if (value.createStaffName != null) ProtoAdapter.STRING.encodeWithTag(writer, 7, value.createStaffName);
      if (value.payee != null) ProtoAdapter.STRING.encodeWithTag(writer, 8, value.payee);
      if (value.orderExtraId != null) ProtoAdapter.UINT64.encodeWithTag(writer, 9, value.orderExtraId);
      if (value.printNO != null) ProtoAdapter.STRING.encodeWithTag(writer, 10, value.printNO);
      if (value.orgId != null) ProtoAdapter.UINT64.encodeWithTag(writer, 11, value.orgId);
      writer.writeBytes(value.unknownFields());
    }

    @Override
    public PrintRecord decode(ProtoReader reader) throws IOException {
      Builder builder = new Builder();
      long token = reader.beginMessage();
      for (int tag; (tag = reader.nextTag()) != -1;) {
        switch (tag) {
          case 1: builder.id(ProtoAdapter.UINT64.decode(reader)); break;
          case 2: builder.orderId(ProtoAdapter.STRING.decode(reader)); break;
          case 3: builder.printType(ProtoAdapter.UINT32.decode(reader)); break;
          case 4: builder.printNum(ProtoAdapter.UINT32.decode(reader)); break;
          case 5: builder.createTime(ProtoAdapter.UINT64.decode(reader)); break;
          case 6: builder.createStaffId(ProtoAdapter.UINT64.decode(reader)); break;
          case 7: builder.createStaffName(ProtoAdapter.STRING.decode(reader)); break;
          case 8: builder.payee(ProtoAdapter.STRING.decode(reader)); break;
          case 9: builder.orderExtraId(ProtoAdapter.UINT64.decode(reader)); break;
          case 10: builder.printNO(ProtoAdapter.STRING.decode(reader)); break;
          case 11: builder.orgId(ProtoAdapter.UINT64.decode(reader)); break;
          default: {
            FieldEncoding fieldEncoding = reader.peekFieldEncoding();
            Object value = fieldEncoding.rawProtoAdapter().decode(reader);
            builder.addUnknownField(tag, fieldEncoding, value);
          }
        }
      }
      reader.endMessage(token);
      return builder.build();
    }

    @Override
    public PrintRecord redact(PrintRecord value) {
      Builder builder = value.newBuilder();
      builder.clearUnknownFields();
      return builder.build();
    }
  }
}
