// Code generated by Wire protocol buffer compiler, do not edit.
// Source file: AppInterface.proto at 2036:1
package com.yijianyi.protocol;

import com.squareup.wire.FieldEncoding;
import com.squareup.wire.Message;
import com.squareup.wire.ProtoAdapter;
import com.squareup.wire.ProtoReader;
import com.squareup.wire.ProtoWriter;
import com.squareup.wire.WireField;
import com.squareup.wire.internal.Internal;
import java.io.IOException;
import java.lang.Long;
import java.lang.Object;
import java.lang.Override;
import java.lang.String;
import java.lang.StringBuilder;
import java.util.List;
import okio.ByteString;

/**
 * 保存照护计划明细
 */
public final class SaveOrderTendDetailReq extends Message<SaveOrderTendDetailReq, SaveOrderTendDetailReq.Builder> {
  public static final ProtoAdapter<SaveOrderTendDetailReq> ADAPTER = new ProtoAdapter_SaveOrderTendDetailReq();

  private static final long serialVersionUID = 0L;

  public static final Long DEFAULT_ORDERTENDID = 0L;

  public static final Long DEFAULT_TENDDETAILTYPEID = 0L;

  /**
   * 照护计划id
   */
  @WireField(
      tag = 1,
      adapter = "com.squareup.wire.ProtoAdapter#UINT64"
  )
  public final Long orderTendId;

  /**
   * 照护明细类型id
   */
  @WireField(
      tag = 2,
      adapter = "com.squareup.wire.ProtoAdapter#UINT64"
  )
  public final Long tendDetailTypeId;

  @WireField(
      tag = 3,
      adapter = "com.yijianyi.protocol.OrderTendDetailBO#ADAPTER",
      label = WireField.Label.REPEATED
  )
  public final List<OrderTendDetailBO> detailList;

  public SaveOrderTendDetailReq(Long orderTendId, Long tendDetailTypeId, List<OrderTendDetailBO> detailList) {
    this(orderTendId, tendDetailTypeId, detailList, ByteString.EMPTY);
  }

  public SaveOrderTendDetailReq(Long orderTendId, Long tendDetailTypeId, List<OrderTendDetailBO> detailList, ByteString unknownFields) {
    super(ADAPTER, unknownFields);
    this.orderTendId = orderTendId;
    this.tendDetailTypeId = tendDetailTypeId;
    this.detailList = Internal.immutableCopyOf("detailList", detailList);
  }

  @Override
  public Builder newBuilder() {
    Builder builder = new Builder();
    builder.orderTendId = orderTendId;
    builder.tendDetailTypeId = tendDetailTypeId;
    builder.detailList = Internal.copyOf("detailList", detailList);
    builder.addUnknownFields(unknownFields());
    return builder;
  }

  @Override
  public boolean equals(Object other) {
    if (other == this) return true;
    if (!(other instanceof SaveOrderTendDetailReq)) return false;
    SaveOrderTendDetailReq o = (SaveOrderTendDetailReq) other;
    return unknownFields().equals(o.unknownFields())
        && Internal.equals(orderTendId, o.orderTendId)
        && Internal.equals(tendDetailTypeId, o.tendDetailTypeId)
        && detailList.equals(o.detailList);
  }

  @Override
  public int hashCode() {
    int result = super.hashCode;
    if (result == 0) {
      result = unknownFields().hashCode();
      result = result * 37 + (orderTendId != null ? orderTendId.hashCode() : 0);
      result = result * 37 + (tendDetailTypeId != null ? tendDetailTypeId.hashCode() : 0);
      result = result * 37 + detailList.hashCode();
      super.hashCode = result;
    }
    return result;
  }

  @Override
  public String toString() {
    StringBuilder builder = new StringBuilder();
    if (orderTendId != null) builder.append(", orderTendId=").append(orderTendId);
    if (tendDetailTypeId != null) builder.append(", tendDetailTypeId=").append(tendDetailTypeId);
    if (!detailList.isEmpty()) builder.append(", detailList=").append(detailList);
    return builder.replace(0, 2, "SaveOrderTendDetailReq{").append('}').toString();
  }

  public static final class Builder extends Message.Builder<SaveOrderTendDetailReq, Builder> {
    public Long orderTendId;

    public Long tendDetailTypeId;

    public List<OrderTendDetailBO> detailList;

    public Builder() {
      detailList = Internal.newMutableList();
    }

    /**
     * 照护计划id
     */
    public Builder orderTendId(Long orderTendId) {
      this.orderTendId = orderTendId;
      return this;
    }

    /**
     * 照护明细类型id
     */
    public Builder tendDetailTypeId(Long tendDetailTypeId) {
      this.tendDetailTypeId = tendDetailTypeId;
      return this;
    }

    public Builder detailList(List<OrderTendDetailBO> detailList) {
      Internal.checkElementsNotNull(detailList);
      this.detailList = detailList;
      return this;
    }

    @Override
    public SaveOrderTendDetailReq build() {
      return new SaveOrderTendDetailReq(orderTendId, tendDetailTypeId, detailList, super.buildUnknownFields());
    }
  }

  private static final class ProtoAdapter_SaveOrderTendDetailReq extends ProtoAdapter<SaveOrderTendDetailReq> {
    ProtoAdapter_SaveOrderTendDetailReq() {
      super(FieldEncoding.LENGTH_DELIMITED, SaveOrderTendDetailReq.class);
    }

    @Override
    public int encodedSize(SaveOrderTendDetailReq value) {
      return (value.orderTendId != null ? ProtoAdapter.UINT64.encodedSizeWithTag(1, value.orderTendId) : 0)
          + (value.tendDetailTypeId != null ? ProtoAdapter.UINT64.encodedSizeWithTag(2, value.tendDetailTypeId) : 0)
          + OrderTendDetailBO.ADAPTER.asRepeated().encodedSizeWithTag(3, value.detailList)
          + value.unknownFields().size();
    }

    @Override
    public void encode(ProtoWriter writer, SaveOrderTendDetailReq value) throws IOException {
      if (value.orderTendId != null) ProtoAdapter.UINT64.encodeWithTag(writer, 1, value.orderTendId);
      if (value.tendDetailTypeId != null) ProtoAdapter.UINT64.encodeWithTag(writer, 2, value.tendDetailTypeId);
      OrderTendDetailBO.ADAPTER.asRepeated().encodeWithTag(writer, 3, value.detailList);
      writer.writeBytes(value.unknownFields());
    }

    @Override
    public SaveOrderTendDetailReq decode(ProtoReader reader) throws IOException {
      Builder builder = new Builder();
      long token = reader.beginMessage();
      for (int tag; (tag = reader.nextTag()) != -1;) {
        switch (tag) {
          case 1: builder.orderTendId(ProtoAdapter.UINT64.decode(reader)); break;
          case 2: builder.tendDetailTypeId(ProtoAdapter.UINT64.decode(reader)); break;
          case 3: builder.detailList.add(OrderTendDetailBO.ADAPTER.decode(reader)); break;
          default: {
            FieldEncoding fieldEncoding = reader.peekFieldEncoding();
            Object value = fieldEncoding.rawProtoAdapter().decode(reader);
            builder.addUnknownField(tag, fieldEncoding, value);
          }
        }
      }
      reader.endMessage(token);
      return builder.build();
    }

    @Override
    public SaveOrderTendDetailReq redact(SaveOrderTendDetailReq value) {
      Builder builder = value.newBuilder();
      Internal.redactElements(builder.detailList, OrderTendDetailBO.ADAPTER);
      builder.clearUnknownFields();
      return builder.build();
    }
  }
}
