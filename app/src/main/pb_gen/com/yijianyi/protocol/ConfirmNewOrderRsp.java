// Code generated by Wire protocol buffer compiler, do not edit.
// Source file: AppInterface.proto at 2119:1
package com.yijianyi.protocol;

import com.squareup.wire.FieldEncoding;
import com.squareup.wire.Message;
import com.squareup.wire.ProtoAdapter;
import com.squareup.wire.ProtoReader;
import com.squareup.wire.ProtoWriter;
import com.squareup.wire.WireField;
import com.squareup.wire.internal.Internal;
import java.io.IOException;
import java.lang.Long;
import java.lang.Object;
import java.lang.Override;
import java.lang.String;
import java.lang.StringBuilder;
import okio.ByteString;

public final class ConfirmNewOrderRsp extends Message<ConfirmNewOrderRsp, ConfirmNewOrderRsp.Builder> {
  public static final ProtoAdapter<ConfirmNewOrderRsp> ADAPTER = new ProtoAdapter_ConfirmNewOrderRsp();

  private static final long serialVersionUID = 0L;

  public static final String DEFAULT_KINSNAME = "";

  public static final String DEFAULT_ORGNO = "";

  public static final String DEFAULT_CONTACTPHONE = "";

  public static final String DEFAULT_ORGNAME = "";

  public static final String DEFAULT_BRANCHNAME = "";

  public static final String DEFAULT_SERVICEITEM = "";

  public static final String DEFAULT_PRICEDESC = "";

  public static final String DEFAULT_NOTICE = "";

  public static final Long DEFAULT_KINSID = 0L;

  public static final Long DEFAULT_ORGID = 0L;

  public static final Long DEFAULT_USERID = 0L;

  public static final String DEFAULT_ADMISSIONDATE = "";

  @WireField(
      tag = 1,
      adapter = "com.squareup.wire.ProtoAdapter#STRING"
  )
  public final String kinsName;

  /**
   * 住院号
   */
  @WireField(
      tag = 2,
      adapter = "com.squareup.wire.ProtoAdapter#STRING"
  )
  public final String orgNO;

  @WireField(
      tag = 3,
      adapter = "com.squareup.wire.ProtoAdapter#STRING"
  )
  public final String contactPhone;

  @WireField(
      tag = 4,
      adapter = "com.squareup.wire.ProtoAdapter#STRING"
  )
  public final String orgName;

  @WireField(
      tag = 5,
      adapter = "com.squareup.wire.ProtoAdapter#STRING"
  )
  public final String branchName;

  @WireField(
      tag = 6,
      adapter = "com.squareup.wire.ProtoAdapter#STRING"
  )
  public final String serviceItem;

  @WireField(
      tag = 7,
      adapter = "com.squareup.wire.ProtoAdapter#STRING"
  )
  public final String priceDesc;

  /**
   * 提示
   */
  @WireField(
      tag = 8,
      adapter = "com.squareup.wire.ProtoAdapter#STRING"
  )
  public final String notice;

  /**
   * 被陪护人Id
   */
  @WireField(
      tag = 9,
      adapter = "com.squareup.wire.ProtoAdapter#UINT64"
  )
  public final Long kinsId;

  /**
   * 机构ID
   */
  @WireField(
      tag = 10,
      adapter = "com.squareup.wire.ProtoAdapter#UINT64"
  )
  public final Long orgId;

  /**
   * 用户id（企业端下单使用）
   */
  @WireField(
      tag = 11,
      adapter = "com.squareup.wire.ProtoAdapter#UINT64"
  )
  public final Long userId;

  /**
   * 入院日期
   */
  @WireField(
      tag = 12,
      adapter = "com.squareup.wire.ProtoAdapter#STRING"
  )
  public final String admissionDate;

  public ConfirmNewOrderRsp(String kinsName, String orgNO, String contactPhone, String orgName, String branchName, String serviceItem, String priceDesc, String notice, Long kinsId, Long orgId, Long userId, String admissionDate) {
    this(kinsName, orgNO, contactPhone, orgName, branchName, serviceItem, priceDesc, notice, kinsId, orgId, userId, admissionDate, ByteString.EMPTY);
  }

  public ConfirmNewOrderRsp(String kinsName, String orgNO, String contactPhone, String orgName, String branchName, String serviceItem, String priceDesc, String notice, Long kinsId, Long orgId, Long userId, String admissionDate, ByteString unknownFields) {
    super(ADAPTER, unknownFields);
    this.kinsName = kinsName;
    this.orgNO = orgNO;
    this.contactPhone = contactPhone;
    this.orgName = orgName;
    this.branchName = branchName;
    this.serviceItem = serviceItem;
    this.priceDesc = priceDesc;
    this.notice = notice;
    this.kinsId = kinsId;
    this.orgId = orgId;
    this.userId = userId;
    this.admissionDate = admissionDate;
  }

  @Override
  public Builder newBuilder() {
    Builder builder = new Builder();
    builder.kinsName = kinsName;
    builder.orgNO = orgNO;
    builder.contactPhone = contactPhone;
    builder.orgName = orgName;
    builder.branchName = branchName;
    builder.serviceItem = serviceItem;
    builder.priceDesc = priceDesc;
    builder.notice = notice;
    builder.kinsId = kinsId;
    builder.orgId = orgId;
    builder.userId = userId;
    builder.admissionDate = admissionDate;
    builder.addUnknownFields(unknownFields());
    return builder;
  }

  @Override
  public boolean equals(Object other) {
    if (other == this) return true;
    if (!(other instanceof ConfirmNewOrderRsp)) return false;
    ConfirmNewOrderRsp o = (ConfirmNewOrderRsp) other;
    return unknownFields().equals(o.unknownFields())
        && Internal.equals(kinsName, o.kinsName)
        && Internal.equals(orgNO, o.orgNO)
        && Internal.equals(contactPhone, o.contactPhone)
        && Internal.equals(orgName, o.orgName)
        && Internal.equals(branchName, o.branchName)
        && Internal.equals(serviceItem, o.serviceItem)
        && Internal.equals(priceDesc, o.priceDesc)
        && Internal.equals(notice, o.notice)
        && Internal.equals(kinsId, o.kinsId)
        && Internal.equals(orgId, o.orgId)
        && Internal.equals(userId, o.userId)
        && Internal.equals(admissionDate, o.admissionDate);
  }

  @Override
  public int hashCode() {
    int result = super.hashCode;
    if (result == 0) {
      result = unknownFields().hashCode();
      result = result * 37 + (kinsName != null ? kinsName.hashCode() : 0);
      result = result * 37 + (orgNO != null ? orgNO.hashCode() : 0);
      result = result * 37 + (contactPhone != null ? contactPhone.hashCode() : 0);
      result = result * 37 + (orgName != null ? orgName.hashCode() : 0);
      result = result * 37 + (branchName != null ? branchName.hashCode() : 0);
      result = result * 37 + (serviceItem != null ? serviceItem.hashCode() : 0);
      result = result * 37 + (priceDesc != null ? priceDesc.hashCode() : 0);
      result = result * 37 + (notice != null ? notice.hashCode() : 0);
      result = result * 37 + (kinsId != null ? kinsId.hashCode() : 0);
      result = result * 37 + (orgId != null ? orgId.hashCode() : 0);
      result = result * 37 + (userId != null ? userId.hashCode() : 0);
      result = result * 37 + (admissionDate != null ? admissionDate.hashCode() : 0);
      super.hashCode = result;
    }
    return result;
  }

  @Override
  public String toString() {
    StringBuilder builder = new StringBuilder();
    if (kinsName != null) builder.append(", kinsName=").append(kinsName);
    if (orgNO != null) builder.append(", orgNO=").append(orgNO);
    if (contactPhone != null) builder.append(", contactPhone=").append(contactPhone);
    if (orgName != null) builder.append(", orgName=").append(orgName);
    if (branchName != null) builder.append(", branchName=").append(branchName);
    if (serviceItem != null) builder.append(", serviceItem=").append(serviceItem);
    if (priceDesc != null) builder.append(", priceDesc=").append(priceDesc);
    if (notice != null) builder.append(", notice=").append(notice);
    if (kinsId != null) builder.append(", kinsId=").append(kinsId);
    if (orgId != null) builder.append(", orgId=").append(orgId);
    if (userId != null) builder.append(", userId=").append(userId);
    if (admissionDate != null) builder.append(", admissionDate=").append(admissionDate);
    return builder.replace(0, 2, "ConfirmNewOrderRsp{").append('}').toString();
  }

  public static final class Builder extends Message.Builder<ConfirmNewOrderRsp, Builder> {
    public String kinsName;

    public String orgNO;

    public String contactPhone;

    public String orgName;

    public String branchName;

    public String serviceItem;

    public String priceDesc;

    public String notice;

    public Long kinsId;

    public Long orgId;

    public Long userId;

    public String admissionDate;

    public Builder() {
    }

    public Builder kinsName(String kinsName) {
      this.kinsName = kinsName;
      return this;
    }

    /**
     * 住院号
     */
    public Builder orgNO(String orgNO) {
      this.orgNO = orgNO;
      return this;
    }

    public Builder contactPhone(String contactPhone) {
      this.contactPhone = contactPhone;
      return this;
    }

    public Builder orgName(String orgName) {
      this.orgName = orgName;
      return this;
    }

    public Builder branchName(String branchName) {
      this.branchName = branchName;
      return this;
    }

    public Builder serviceItem(String serviceItem) {
      this.serviceItem = serviceItem;
      return this;
    }

    public Builder priceDesc(String priceDesc) {
      this.priceDesc = priceDesc;
      return this;
    }

    /**
     * 提示
     */
    public Builder notice(String notice) {
      this.notice = notice;
      return this;
    }

    /**
     * 被陪护人Id
     */
    public Builder kinsId(Long kinsId) {
      this.kinsId = kinsId;
      return this;
    }

    /**
     * 机构ID
     */
    public Builder orgId(Long orgId) {
      this.orgId = orgId;
      return this;
    }

    /**
     * 用户id（企业端下单使用）
     */
    public Builder userId(Long userId) {
      this.userId = userId;
      return this;
    }

    /**
     * 入院日期
     */
    public Builder admissionDate(String admissionDate) {
      this.admissionDate = admissionDate;
      return this;
    }

    @Override
    public ConfirmNewOrderRsp build() {
      return new ConfirmNewOrderRsp(kinsName, orgNO, contactPhone, orgName, branchName, serviceItem, priceDesc, notice, kinsId, orgId, userId, admissionDate, super.buildUnknownFields());
    }
  }

  private static final class ProtoAdapter_ConfirmNewOrderRsp extends ProtoAdapter<ConfirmNewOrderRsp> {
    ProtoAdapter_ConfirmNewOrderRsp() {
      super(FieldEncoding.LENGTH_DELIMITED, ConfirmNewOrderRsp.class);
    }

    @Override
    public int encodedSize(ConfirmNewOrderRsp value) {
      return (value.kinsName != null ? ProtoAdapter.STRING.encodedSizeWithTag(1, value.kinsName) : 0)
          + (value.orgNO != null ? ProtoAdapter.STRING.encodedSizeWithTag(2, value.orgNO) : 0)
          + (value.contactPhone != null ? ProtoAdapter.STRING.encodedSizeWithTag(3, value.contactPhone) : 0)
          + (value.orgName != null ? ProtoAdapter.STRING.encodedSizeWithTag(4, value.orgName) : 0)
          + (value.branchName != null ? ProtoAdapter.STRING.encodedSizeWithTag(5, value.branchName) : 0)
          + (value.serviceItem != null ? ProtoAdapter.STRING.encodedSizeWithTag(6, value.serviceItem) : 0)
          + (value.priceDesc != null ? ProtoAdapter.STRING.encodedSizeWithTag(7, value.priceDesc) : 0)
          + (value.notice != null ? ProtoAdapter.STRING.encodedSizeWithTag(8, value.notice) : 0)
          + (value.kinsId != null ? ProtoAdapter.UINT64.encodedSizeWithTag(9, value.kinsId) : 0)
          + (value.orgId != null ? ProtoAdapter.UINT64.encodedSizeWithTag(10, value.orgId) : 0)
          + (value.userId != null ? ProtoAdapter.UINT64.encodedSizeWithTag(11, value.userId) : 0)
          + (value.admissionDate != null ? ProtoAdapter.STRING.encodedSizeWithTag(12, value.admissionDate) : 0)
          + value.unknownFields().size();
    }

    @Override
    public void encode(ProtoWriter writer, ConfirmNewOrderRsp value) throws IOException {
      if (value.kinsName != null) ProtoAdapter.STRING.encodeWithTag(writer, 1, value.kinsName);
      if (value.orgNO != null) ProtoAdapter.STRING.encodeWithTag(writer, 2, value.orgNO);
      if (value.contactPhone != null) ProtoAdapter.STRING.encodeWithTag(writer, 3, value.contactPhone);
      if (value.orgName != null) ProtoAdapter.STRING.encodeWithTag(writer, 4, value.orgName);
      if (value.branchName != null) ProtoAdapter.STRING.encodeWithTag(writer, 5, value.branchName);
      if (value.serviceItem != null) ProtoAdapter.STRING.encodeWithTag(writer, 6, value.serviceItem);
      if (value.priceDesc != null) ProtoAdapter.STRING.encodeWithTag(writer, 7, value.priceDesc);
      if (value.notice != null) ProtoAdapter.STRING.encodeWithTag(writer, 8, value.notice);
      if (value.kinsId != null) ProtoAdapter.UINT64.encodeWithTag(writer, 9, value.kinsId);
      if (value.orgId != null) ProtoAdapter.UINT64.encodeWithTag(writer, 10, value.orgId);
      if (value.userId != null) ProtoAdapter.UINT64.encodeWithTag(writer, 11, value.userId);
      if (value.admissionDate != null) ProtoAdapter.STRING.encodeWithTag(writer, 12, value.admissionDate);
      writer.writeBytes(value.unknownFields());
    }

    @Override
    public ConfirmNewOrderRsp decode(ProtoReader reader) throws IOException {
      Builder builder = new Builder();
      long token = reader.beginMessage();
      for (int tag; (tag = reader.nextTag()) != -1;) {
        switch (tag) {
          case 1: builder.kinsName(ProtoAdapter.STRING.decode(reader)); break;
          case 2: builder.orgNO(ProtoAdapter.STRING.decode(reader)); break;
          case 3: builder.contactPhone(ProtoAdapter.STRING.decode(reader)); break;
          case 4: builder.orgName(ProtoAdapter.STRING.decode(reader)); break;
          case 5: builder.branchName(ProtoAdapter.STRING.decode(reader)); break;
          case 6: builder.serviceItem(ProtoAdapter.STRING.decode(reader)); break;
          case 7: builder.priceDesc(ProtoAdapter.STRING.decode(reader)); break;
          case 8: builder.notice(ProtoAdapter.STRING.decode(reader)); break;
          case 9: builder.kinsId(ProtoAdapter.UINT64.decode(reader)); break;
          case 10: builder.orgId(ProtoAdapter.UINT64.decode(reader)); break;
          case 11: builder.userId(ProtoAdapter.UINT64.decode(reader)); break;
          case 12: builder.admissionDate(ProtoAdapter.STRING.decode(reader)); break;
          default: {
            FieldEncoding fieldEncoding = reader.peekFieldEncoding();
            Object value = fieldEncoding.rawProtoAdapter().decode(reader);
            builder.addUnknownField(tag, fieldEncoding, value);
          }
        }
      }
      reader.endMessage(token);
      return builder.build();
    }

    @Override
    public ConfirmNewOrderRsp redact(ConfirmNewOrderRsp value) {
      Builder builder = value.newBuilder();
      builder.clearUnknownFields();
      return builder.build();
    }
  }
}
