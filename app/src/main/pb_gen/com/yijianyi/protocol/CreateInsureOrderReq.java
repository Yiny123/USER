// Code generated by Wire protocol buffer compiler, do not edit.
// Source file: AppInterface.proto at 383:1
package com.yijianyi.protocol;

import com.squareup.wire.FieldEncoding;
import com.squareup.wire.Message;
import com.squareup.wire.ProtoAdapter;
import com.squareup.wire.ProtoReader;
import com.squareup.wire.ProtoWriter;
import com.squareup.wire.WireField;
import com.squareup.wire.internal.Internal;
import java.io.IOException;
import java.lang.Long;
import java.lang.Object;
import java.lang.Override;
import java.lang.String;
import java.lang.StringBuilder;
import java.util.List;
import okio.ByteString;

/**
 * 长护险创建订单Req
 */
public final class CreateInsureOrderReq extends Message<CreateInsureOrderReq, CreateInsureOrderReq.Builder> {
  public static final ProtoAdapter<CreateInsureOrderReq> ADAPTER = new ProtoAdapter_CreateInsureOrderReq();

  private static final long serialVersionUID = 0L;

  public static final String DEFAULT_SERVICESTARTTIME = "";

  public static final String DEFAULT_SERVICEENDTIME = "";

  public static final Long DEFAULT_PRICEID = 0L;

  public static final Long DEFAULT_USERID = 0L;

  public static final Long DEFAULT_ADDRID = 0L;

  public static final String DEFAULT_INSURENO = "";

  public static final Long DEFAULT_KINSID = 0L;

  /**
   * 预约服务开始时间
   */
  @WireField(
      tag = 1,
      adapter = "com.squareup.wire.ProtoAdapter#STRING"
  )
  public final String serviceStartTime;

  /**
   * 预约服务开始时间
   */
  @WireField(
      tag = 2,
      adapter = "com.squareup.wire.ProtoAdapter#STRING"
  )
  public final String serviceEndTime;

  /**
   * 套餐主ID
   */
  @WireField(
      tag = 3,
      adapter = "com.squareup.wire.ProtoAdapter#UINT64"
  )
  public final Long priceId;

  /**
   * 附加套餐Id
   */
  @WireField(
      tag = 4,
      adapter = "com.squareup.wire.ProtoAdapter#STRING",
      label = WireField.Label.REPEATED
  )
  public final List<String> priceitemIds;

  /**
   * 申请人userId
   */
  @WireField(
      tag = 5,
      adapter = "com.squareup.wire.ProtoAdapter#UINT64"
  )
  public final Long userId;

  /**
   * 服务地址Id
   */
  @WireField(
      tag = 6,
      adapter = "com.squareup.wire.ProtoAdapter#UINT64"
  )
  public final Long addrId;

  /**
   * 申请单号
   */
  @WireField(
      tag = 7,
      adapter = "com.squareup.wire.ProtoAdapter#STRING"
  )
  public final String insureNO;

  /**
   * 被照护人id（此字段無用）
   */
  @WireField(
      tag = 8,
      adapter = "com.squareup.wire.ProtoAdapter#UINT64"
  )
  public final Long kinsId;

  public CreateInsureOrderReq(String serviceStartTime, String serviceEndTime, Long priceId, List<String> priceitemIds, Long userId, Long addrId, String insureNO, Long kinsId) {
    this(serviceStartTime, serviceEndTime, priceId, priceitemIds, userId, addrId, insureNO, kinsId, ByteString.EMPTY);
  }

  public CreateInsureOrderReq(String serviceStartTime, String serviceEndTime, Long priceId, List<String> priceitemIds, Long userId, Long addrId, String insureNO, Long kinsId, ByteString unknownFields) {
    super(ADAPTER, unknownFields);
    this.serviceStartTime = serviceStartTime;
    this.serviceEndTime = serviceEndTime;
    this.priceId = priceId;
    this.priceitemIds = Internal.immutableCopyOf("priceitemIds", priceitemIds);
    this.userId = userId;
    this.addrId = addrId;
    this.insureNO = insureNO;
    this.kinsId = kinsId;
  }

  @Override
  public Builder newBuilder() {
    Builder builder = new Builder();
    builder.serviceStartTime = serviceStartTime;
    builder.serviceEndTime = serviceEndTime;
    builder.priceId = priceId;
    builder.priceitemIds = Internal.copyOf("priceitemIds", priceitemIds);
    builder.userId = userId;
    builder.addrId = addrId;
    builder.insureNO = insureNO;
    builder.kinsId = kinsId;
    builder.addUnknownFields(unknownFields());
    return builder;
  }

  @Override
  public boolean equals(Object other) {
    if (other == this) return true;
    if (!(other instanceof CreateInsureOrderReq)) return false;
    CreateInsureOrderReq o = (CreateInsureOrderReq) other;
    return unknownFields().equals(o.unknownFields())
        && Internal.equals(serviceStartTime, o.serviceStartTime)
        && Internal.equals(serviceEndTime, o.serviceEndTime)
        && Internal.equals(priceId, o.priceId)
        && priceitemIds.equals(o.priceitemIds)
        && Internal.equals(userId, o.userId)
        && Internal.equals(addrId, o.addrId)
        && Internal.equals(insureNO, o.insureNO)
        && Internal.equals(kinsId, o.kinsId);
  }

  @Override
  public int hashCode() {
    int result = super.hashCode;
    if (result == 0) {
      result = unknownFields().hashCode();
      result = result * 37 + (serviceStartTime != null ? serviceStartTime.hashCode() : 0);
      result = result * 37 + (serviceEndTime != null ? serviceEndTime.hashCode() : 0);
      result = result * 37 + (priceId != null ? priceId.hashCode() : 0);
      result = result * 37 + priceitemIds.hashCode();
      result = result * 37 + (userId != null ? userId.hashCode() : 0);
      result = result * 37 + (addrId != null ? addrId.hashCode() : 0);
      result = result * 37 + (insureNO != null ? insureNO.hashCode() : 0);
      result = result * 37 + (kinsId != null ? kinsId.hashCode() : 0);
      super.hashCode = result;
    }
    return result;
  }

  @Override
  public String toString() {
    StringBuilder builder = new StringBuilder();
    if (serviceStartTime != null) builder.append(", serviceStartTime=").append(serviceStartTime);
    if (serviceEndTime != null) builder.append(", serviceEndTime=").append(serviceEndTime);
    if (priceId != null) builder.append(", priceId=").append(priceId);
    if (!priceitemIds.isEmpty()) builder.append(", priceitemIds=").append(priceitemIds);
    if (userId != null) builder.append(", userId=").append(userId);
    if (addrId != null) builder.append(", addrId=").append(addrId);
    if (insureNO != null) builder.append(", insureNO=").append(insureNO);
    if (kinsId != null) builder.append(", kinsId=").append(kinsId);
    return builder.replace(0, 2, "CreateInsureOrderReq{").append('}').toString();
  }

  public static final class Builder extends Message.Builder<CreateInsureOrderReq, Builder> {
    public String serviceStartTime;

    public String serviceEndTime;

    public Long priceId;

    public List<String> priceitemIds;

    public Long userId;

    public Long addrId;

    public String insureNO;

    public Long kinsId;

    public Builder() {
      priceitemIds = Internal.newMutableList();
    }

    /**
     * 预约服务开始时间
     */
    public Builder serviceStartTime(String serviceStartTime) {
      this.serviceStartTime = serviceStartTime;
      return this;
    }

    /**
     * 预约服务开始时间
     */
    public Builder serviceEndTime(String serviceEndTime) {
      this.serviceEndTime = serviceEndTime;
      return this;
    }

    /**
     * 套餐主ID
     */
    public Builder priceId(Long priceId) {
      this.priceId = priceId;
      return this;
    }

    /**
     * 附加套餐Id
     */
    public Builder priceitemIds(List<String> priceitemIds) {
      Internal.checkElementsNotNull(priceitemIds);
      this.priceitemIds = priceitemIds;
      return this;
    }

    /**
     * 申请人userId
     */
    public Builder userId(Long userId) {
      this.userId = userId;
      return this;
    }

    /**
     * 服务地址Id
     */
    public Builder addrId(Long addrId) {
      this.addrId = addrId;
      return this;
    }

    /**
     * 申请单号
     */
    public Builder insureNO(String insureNO) {
      this.insureNO = insureNO;
      return this;
    }

    /**
     * 被照护人id（此字段無用）
     */
    public Builder kinsId(Long kinsId) {
      this.kinsId = kinsId;
      return this;
    }

    @Override
    public CreateInsureOrderReq build() {
      return new CreateInsureOrderReq(serviceStartTime, serviceEndTime, priceId, priceitemIds, userId, addrId, insureNO, kinsId, super.buildUnknownFields());
    }
  }

  private static final class ProtoAdapter_CreateInsureOrderReq extends ProtoAdapter<CreateInsureOrderReq> {
    ProtoAdapter_CreateInsureOrderReq() {
      super(FieldEncoding.LENGTH_DELIMITED, CreateInsureOrderReq.class);
    }

    @Override
    public int encodedSize(CreateInsureOrderReq value) {
      return (value.serviceStartTime != null ? ProtoAdapter.STRING.encodedSizeWithTag(1, value.serviceStartTime) : 0)
          + (value.serviceEndTime != null ? ProtoAdapter.STRING.encodedSizeWithTag(2, value.serviceEndTime) : 0)
          + (value.priceId != null ? ProtoAdapter.UINT64.encodedSizeWithTag(3, value.priceId) : 0)
          + ProtoAdapter.STRING.asRepeated().encodedSizeWithTag(4, value.priceitemIds)
          + (value.userId != null ? ProtoAdapter.UINT64.encodedSizeWithTag(5, value.userId) : 0)
          + (value.addrId != null ? ProtoAdapter.UINT64.encodedSizeWithTag(6, value.addrId) : 0)
          + (value.insureNO != null ? ProtoAdapter.STRING.encodedSizeWithTag(7, value.insureNO) : 0)
          + (value.kinsId != null ? ProtoAdapter.UINT64.encodedSizeWithTag(8, value.kinsId) : 0)
          + value.unknownFields().size();
    }

    @Override
    public void encode(ProtoWriter writer, CreateInsureOrderReq value) throws IOException {
      if (value.serviceStartTime != null) ProtoAdapter.STRING.encodeWithTag(writer, 1, value.serviceStartTime);
      if (value.serviceEndTime != null) ProtoAdapter.STRING.encodeWithTag(writer, 2, value.serviceEndTime);
      if (value.priceId != null) ProtoAdapter.UINT64.encodeWithTag(writer, 3, value.priceId);
      ProtoAdapter.STRING.asRepeated().encodeWithTag(writer, 4, value.priceitemIds);
      if (value.userId != null) ProtoAdapter.UINT64.encodeWithTag(writer, 5, value.userId);
      if (value.addrId != null) ProtoAdapter.UINT64.encodeWithTag(writer, 6, value.addrId);
      if (value.insureNO != null) ProtoAdapter.STRING.encodeWithTag(writer, 7, value.insureNO);
      if (value.kinsId != null) ProtoAdapter.UINT64.encodeWithTag(writer, 8, value.kinsId);
      writer.writeBytes(value.unknownFields());
    }

    @Override
    public CreateInsureOrderReq decode(ProtoReader reader) throws IOException {
      Builder builder = new Builder();
      long token = reader.beginMessage();
      for (int tag; (tag = reader.nextTag()) != -1;) {
        switch (tag) {
          case 1: builder.serviceStartTime(ProtoAdapter.STRING.decode(reader)); break;
          case 2: builder.serviceEndTime(ProtoAdapter.STRING.decode(reader)); break;
          case 3: builder.priceId(ProtoAdapter.UINT64.decode(reader)); break;
          case 4: builder.priceitemIds.add(ProtoAdapter.STRING.decode(reader)); break;
          case 5: builder.userId(ProtoAdapter.UINT64.decode(reader)); break;
          case 6: builder.addrId(ProtoAdapter.UINT64.decode(reader)); break;
          case 7: builder.insureNO(ProtoAdapter.STRING.decode(reader)); break;
          case 8: builder.kinsId(ProtoAdapter.UINT64.decode(reader)); break;
          default: {
            FieldEncoding fieldEncoding = reader.peekFieldEncoding();
            Object value = fieldEncoding.rawProtoAdapter().decode(reader);
            builder.addUnknownField(tag, fieldEncoding, value);
          }
        }
      }
      reader.endMessage(token);
      return builder.build();
    }

    @Override
    public CreateInsureOrderReq redact(CreateInsureOrderReq value) {
      Builder builder = value.newBuilder();
      builder.clearUnknownFields();
      return builder.build();
    }
  }
}
