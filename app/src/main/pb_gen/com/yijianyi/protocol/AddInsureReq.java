// Code generated by Wire protocol buffer compiler, do not edit.
// Source file: AppInterface.proto at 564:1
package com.yijianyi.protocol;

import com.squareup.wire.FieldEncoding;
import com.squareup.wire.Message;
import com.squareup.wire.ProtoAdapter;
import com.squareup.wire.ProtoReader;
import com.squareup.wire.ProtoWriter;
import com.squareup.wire.WireField;
import com.squareup.wire.internal.Internal;
import java.io.IOException;
import java.lang.Integer;
import java.lang.Long;
import java.lang.Object;
import java.lang.Override;
import java.lang.String;
import java.lang.StringBuilder;
import okio.ByteString;

/**
 * 申请长护险资质
 */
public final class AddInsureReq extends Message<AddInsureReq, AddInsureReq.Builder> {
  public static final ProtoAdapter<AddInsureReq> ADAPTER = new ProtoAdapter_AddInsureReq();

  private static final long serialVersionUID = 0L;

  public static final Long DEFAULT_KINSID = 0L;

  public static final Long DEFAULT_ADDRID = 0L;

  public static final String DEFAULT_HEALTHCARENO = "";

  public static final Integer DEFAULT_INSUREGETTYPE = 0;

  public static final String DEFAULT_AGENCYNAME = "";

  public static final String DEFAULT_AGENCYRELATION = "";

  public static final String DEFAULT_AGENCYPHONE = "";

  public static final Long DEFAULT_USERID = 0L;

  public static final Integer DEFAULT_DUDAOSCOREADL = 0;

  public static final Integer DEFAULT_APPLYTREATMENTTYPE = 0;

  public static final Integer DEFAULT_TREATMENTTYPE = 0;

  public static final Integer DEFAULT_ASSESSTYPE = 0;

  public static final String DEFAULT_SECURITYASSESS = "";

  public static final String DEFAULT_USERSTATUSREMARK = "";

  public static final String DEFAULT_USERSIGNPIC = "";

  public static final String DEFAULT_ENTRUSTPIC = "";

  public static final Long DEFAULT_ASSESSID = 0L;

  @WireField(
      tag = 1,
      adapter = "com.squareup.wire.ProtoAdapter#UINT64"
  )
  public final Long kinsId;

  @WireField(
      tag = 2,
      adapter = "com.squareup.wire.ProtoAdapter#UINT64"
  )
  public final Long addrId;

  /**
   * 医保卡号
   */
  @WireField(
      tag = 3,
      adapter = "com.squareup.wire.ProtoAdapter#STRING"
  )
  public final String healthCareNO;

  /**
   * 领取方式 1 邮寄 2 自行领取
   */
  @WireField(
      tag = 4,
      adapter = "com.squareup.wire.ProtoAdapter#UINT32"
  )
  public final Integer insureGetType;

  /**
   * 代理人昵称
   */
  @WireField(
      tag = 5,
      adapter = "com.squareup.wire.ProtoAdapter#STRING"
  )
  public final String agencyName;

  /**
   * 代理人关系
   */
  @WireField(
      tag = 6,
      adapter = "com.squareup.wire.ProtoAdapter#STRING"
  )
  public final String agencyRelation;

  /**
   * 代理人电话
   */
  @WireField(
      tag = 7,
      adapter = "com.squareup.wire.ProtoAdapter#STRING"
  )
  public final String agencyPhone;

  /**
   * 用户id
   */
  @WireField(
      tag = 8,
      adapter = "com.squareup.wire.ProtoAdapter#UINT64"
  )
  public final Long userId;

  /**
   * 健康经理adl评估的分数		没有评分传-1
   */
  @WireField(
      tag = 9,
      adapter = "com.squareup.wire.ProtoAdapter#UINT32"
  )
  public final Integer dudaoScoreADL;

  /**
   * 申请待遇类别 1-生活照料 2-生活照料+医疗护理
   */
  @WireField(
      tag = 10,
      adapter = "com.squareup.wire.ProtoAdapter#UINT32"
  )
  public final Integer applyTreatmentType;

  /**
   * 待遇类型 1-机构护理 2-居家护理
   */
  @WireField(
      tag = 11,
      adapter = "com.squareup.wire.ProtoAdapter#UINT32"
  )
  public final Integer treatmentType;

  /**
   * 评估类别 1-首次评估 2-复检评估 3-变更评估
   */
  @WireField(
      tag = 12,
      adapter = "com.squareup.wire.ProtoAdapter#UINT32"
  )
  public final Integer assessType;

  /**
   * 安全风险评估
   */
  @WireField(
      tag = 13,
      adapter = "com.squareup.wire.ProtoAdapter#STRING"
  )
  public final String securityAssess;

  /**
   * 客服状态描述
   */
  @WireField(
      tag = 14,
      adapter = "com.squareup.wire.ProtoAdapter#STRING"
  )
  public final String userStatusRemark;

  /**
   * 申请人签名
   */
  @WireField(
      tag = 15,
      adapter = "com.squareup.wire.ProtoAdapter#STRING"
  )
  public final String userSignPic;

  /**
   * 用户委托书
   */
  @WireField(
      tag = 16,
      adapter = "com.squareup.wire.ProtoAdapter#STRING"
  )
  public final String entrustPic;

  /**
   * 健康经理adl评估id
   */
  @WireField(
      tag = 17,
      adapter = "com.squareup.wire.ProtoAdapter#UINT64"
  )
  public final Long assessId;

  public AddInsureReq(Long kinsId, Long addrId, String healthCareNO, Integer insureGetType, String agencyName, String agencyRelation, String agencyPhone, Long userId, Integer dudaoScoreADL, Integer applyTreatmentType, Integer treatmentType, Integer assessType, String securityAssess, String userStatusRemark, String userSignPic, String entrustPic, Long assessId) {
    this(kinsId, addrId, healthCareNO, insureGetType, agencyName, agencyRelation, agencyPhone, userId, dudaoScoreADL, applyTreatmentType, treatmentType, assessType, securityAssess, userStatusRemark, userSignPic, entrustPic, assessId, ByteString.EMPTY);
  }

  public AddInsureReq(Long kinsId, Long addrId, String healthCareNO, Integer insureGetType, String agencyName, String agencyRelation, String agencyPhone, Long userId, Integer dudaoScoreADL, Integer applyTreatmentType, Integer treatmentType, Integer assessType, String securityAssess, String userStatusRemark, String userSignPic, String entrustPic, Long assessId, ByteString unknownFields) {
    super(ADAPTER, unknownFields);
    this.kinsId = kinsId;
    this.addrId = addrId;
    this.healthCareNO = healthCareNO;
    this.insureGetType = insureGetType;
    this.agencyName = agencyName;
    this.agencyRelation = agencyRelation;
    this.agencyPhone = agencyPhone;
    this.userId = userId;
    this.dudaoScoreADL = dudaoScoreADL;
    this.applyTreatmentType = applyTreatmentType;
    this.treatmentType = treatmentType;
    this.assessType = assessType;
    this.securityAssess = securityAssess;
    this.userStatusRemark = userStatusRemark;
    this.userSignPic = userSignPic;
    this.entrustPic = entrustPic;
    this.assessId = assessId;
  }

  @Override
  public Builder newBuilder() {
    Builder builder = new Builder();
    builder.kinsId = kinsId;
    builder.addrId = addrId;
    builder.healthCareNO = healthCareNO;
    builder.insureGetType = insureGetType;
    builder.agencyName = agencyName;
    builder.agencyRelation = agencyRelation;
    builder.agencyPhone = agencyPhone;
    builder.userId = userId;
    builder.dudaoScoreADL = dudaoScoreADL;
    builder.applyTreatmentType = applyTreatmentType;
    builder.treatmentType = treatmentType;
    builder.assessType = assessType;
    builder.securityAssess = securityAssess;
    builder.userStatusRemark = userStatusRemark;
    builder.userSignPic = userSignPic;
    builder.entrustPic = entrustPic;
    builder.assessId = assessId;
    builder.addUnknownFields(unknownFields());
    return builder;
  }

  @Override
  public boolean equals(Object other) {
    if (other == this) return true;
    if (!(other instanceof AddInsureReq)) return false;
    AddInsureReq o = (AddInsureReq) other;
    return unknownFields().equals(o.unknownFields())
        && Internal.equals(kinsId, o.kinsId)
        && Internal.equals(addrId, o.addrId)
        && Internal.equals(healthCareNO, o.healthCareNO)
        && Internal.equals(insureGetType, o.insureGetType)
        && Internal.equals(agencyName, o.agencyName)
        && Internal.equals(agencyRelation, o.agencyRelation)
        && Internal.equals(agencyPhone, o.agencyPhone)
        && Internal.equals(userId, o.userId)
        && Internal.equals(dudaoScoreADL, o.dudaoScoreADL)
        && Internal.equals(applyTreatmentType, o.applyTreatmentType)
        && Internal.equals(treatmentType, o.treatmentType)
        && Internal.equals(assessType, o.assessType)
        && Internal.equals(securityAssess, o.securityAssess)
        && Internal.equals(userStatusRemark, o.userStatusRemark)
        && Internal.equals(userSignPic, o.userSignPic)
        && Internal.equals(entrustPic, o.entrustPic)
        && Internal.equals(assessId, o.assessId);
  }

  @Override
  public int hashCode() {
    int result = super.hashCode;
    if (result == 0) {
      result = unknownFields().hashCode();
      result = result * 37 + (kinsId != null ? kinsId.hashCode() : 0);
      result = result * 37 + (addrId != null ? addrId.hashCode() : 0);
      result = result * 37 + (healthCareNO != null ? healthCareNO.hashCode() : 0);
      result = result * 37 + (insureGetType != null ? insureGetType.hashCode() : 0);
      result = result * 37 + (agencyName != null ? agencyName.hashCode() : 0);
      result = result * 37 + (agencyRelation != null ? agencyRelation.hashCode() : 0);
      result = result * 37 + (agencyPhone != null ? agencyPhone.hashCode() : 0);
      result = result * 37 + (userId != null ? userId.hashCode() : 0);
      result = result * 37 + (dudaoScoreADL != null ? dudaoScoreADL.hashCode() : 0);
      result = result * 37 + (applyTreatmentType != null ? applyTreatmentType.hashCode() : 0);
      result = result * 37 + (treatmentType != null ? treatmentType.hashCode() : 0);
      result = result * 37 + (assessType != null ? assessType.hashCode() : 0);
      result = result * 37 + (securityAssess != null ? securityAssess.hashCode() : 0);
      result = result * 37 + (userStatusRemark != null ? userStatusRemark.hashCode() : 0);
      result = result * 37 + (userSignPic != null ? userSignPic.hashCode() : 0);
      result = result * 37 + (entrustPic != null ? entrustPic.hashCode() : 0);
      result = result * 37 + (assessId != null ? assessId.hashCode() : 0);
      super.hashCode = result;
    }
    return result;
  }

  @Override
  public String toString() {
    StringBuilder builder = new StringBuilder();
    if (kinsId != null) builder.append(", kinsId=").append(kinsId);
    if (addrId != null) builder.append(", addrId=").append(addrId);
    if (healthCareNO != null) builder.append(", healthCareNO=").append(healthCareNO);
    if (insureGetType != null) builder.append(", insureGetType=").append(insureGetType);
    if (agencyName != null) builder.append(", agencyName=").append(agencyName);
    if (agencyRelation != null) builder.append(", agencyRelation=").append(agencyRelation);
    if (agencyPhone != null) builder.append(", agencyPhone=").append(agencyPhone);
    if (userId != null) builder.append(", userId=").append(userId);
    if (dudaoScoreADL != null) builder.append(", dudaoScoreADL=").append(dudaoScoreADL);
    if (applyTreatmentType != null) builder.append(", applyTreatmentType=").append(applyTreatmentType);
    if (treatmentType != null) builder.append(", treatmentType=").append(treatmentType);
    if (assessType != null) builder.append(", assessType=").append(assessType);
    if (securityAssess != null) builder.append(", securityAssess=").append(securityAssess);
    if (userStatusRemark != null) builder.append(", userStatusRemark=").append(userStatusRemark);
    if (userSignPic != null) builder.append(", userSignPic=").append(userSignPic);
    if (entrustPic != null) builder.append(", entrustPic=").append(entrustPic);
    if (assessId != null) builder.append(", assessId=").append(assessId);
    return builder.replace(0, 2, "AddInsureReq{").append('}').toString();
  }

  public static final class Builder extends Message.Builder<AddInsureReq, Builder> {
    public Long kinsId;

    public Long addrId;

    public String healthCareNO;

    public Integer insureGetType;

    public String agencyName;

    public String agencyRelation;

    public String agencyPhone;

    public Long userId;

    public Integer dudaoScoreADL;

    public Integer applyTreatmentType;

    public Integer treatmentType;

    public Integer assessType;

    public String securityAssess;

    public String userStatusRemark;

    public String userSignPic;

    public String entrustPic;

    public Long assessId;

    public Builder() {
    }

    public Builder kinsId(Long kinsId) {
      this.kinsId = kinsId;
      return this;
    }

    public Builder addrId(Long addrId) {
      this.addrId = addrId;
      return this;
    }

    /**
     * 医保卡号
     */
    public Builder healthCareNO(String healthCareNO) {
      this.healthCareNO = healthCareNO;
      return this;
    }

    /**
     * 领取方式 1 邮寄 2 自行领取
     */
    public Builder insureGetType(Integer insureGetType) {
      this.insureGetType = insureGetType;
      return this;
    }

    /**
     * 代理人昵称
     */
    public Builder agencyName(String agencyName) {
      this.agencyName = agencyName;
      return this;
    }

    /**
     * 代理人关系
     */
    public Builder agencyRelation(String agencyRelation) {
      this.agencyRelation = agencyRelation;
      return this;
    }

    /**
     * 代理人电话
     */
    public Builder agencyPhone(String agencyPhone) {
      this.agencyPhone = agencyPhone;
      return this;
    }

    /**
     * 用户id
     */
    public Builder userId(Long userId) {
      this.userId = userId;
      return this;
    }

    /**
     * 健康经理adl评估的分数		没有评分传-1
     */
    public Builder dudaoScoreADL(Integer dudaoScoreADL) {
      this.dudaoScoreADL = dudaoScoreADL;
      return this;
    }

    /**
     * 申请待遇类别 1-生活照料 2-生活照料+医疗护理
     */
    public Builder applyTreatmentType(Integer applyTreatmentType) {
      this.applyTreatmentType = applyTreatmentType;
      return this;
    }

    /**
     * 待遇类型 1-机构护理 2-居家护理
     */
    public Builder treatmentType(Integer treatmentType) {
      this.treatmentType = treatmentType;
      return this;
    }

    /**
     * 评估类别 1-首次评估 2-复检评估 3-变更评估
     */
    public Builder assessType(Integer assessType) {
      this.assessType = assessType;
      return this;
    }

    /**
     * 安全风险评估
     */
    public Builder securityAssess(String securityAssess) {
      this.securityAssess = securityAssess;
      return this;
    }

    /**
     * 客服状态描述
     */
    public Builder userStatusRemark(String userStatusRemark) {
      this.userStatusRemark = userStatusRemark;
      return this;
    }

    /**
     * 申请人签名
     */
    public Builder userSignPic(String userSignPic) {
      this.userSignPic = userSignPic;
      return this;
    }

    /**
     * 用户委托书
     */
    public Builder entrustPic(String entrustPic) {
      this.entrustPic = entrustPic;
      return this;
    }

    /**
     * 健康经理adl评估id
     */
    public Builder assessId(Long assessId) {
      this.assessId = assessId;
      return this;
    }

    @Override
    public AddInsureReq build() {
      return new AddInsureReq(kinsId, addrId, healthCareNO, insureGetType, agencyName, agencyRelation, agencyPhone, userId, dudaoScoreADL, applyTreatmentType, treatmentType, assessType, securityAssess, userStatusRemark, userSignPic, entrustPic, assessId, super.buildUnknownFields());
    }
  }

  private static final class ProtoAdapter_AddInsureReq extends ProtoAdapter<AddInsureReq> {
    ProtoAdapter_AddInsureReq() {
      super(FieldEncoding.LENGTH_DELIMITED, AddInsureReq.class);
    }

    @Override
    public int encodedSize(AddInsureReq value) {
      return (value.kinsId != null ? ProtoAdapter.UINT64.encodedSizeWithTag(1, value.kinsId) : 0)
          + (value.addrId != null ? ProtoAdapter.UINT64.encodedSizeWithTag(2, value.addrId) : 0)
          + (value.healthCareNO != null ? ProtoAdapter.STRING.encodedSizeWithTag(3, value.healthCareNO) : 0)
          + (value.insureGetType != null ? ProtoAdapter.UINT32.encodedSizeWithTag(4, value.insureGetType) : 0)
          + (value.agencyName != null ? ProtoAdapter.STRING.encodedSizeWithTag(5, value.agencyName) : 0)
          + (value.agencyRelation != null ? ProtoAdapter.STRING.encodedSizeWithTag(6, value.agencyRelation) : 0)
          + (value.agencyPhone != null ? ProtoAdapter.STRING.encodedSizeWithTag(7, value.agencyPhone) : 0)
          + (value.userId != null ? ProtoAdapter.UINT64.encodedSizeWithTag(8, value.userId) : 0)
          + (value.dudaoScoreADL != null ? ProtoAdapter.UINT32.encodedSizeWithTag(9, value.dudaoScoreADL) : 0)
          + (value.applyTreatmentType != null ? ProtoAdapter.UINT32.encodedSizeWithTag(10, value.applyTreatmentType) : 0)
          + (value.treatmentType != null ? ProtoAdapter.UINT32.encodedSizeWithTag(11, value.treatmentType) : 0)
          + (value.assessType != null ? ProtoAdapter.UINT32.encodedSizeWithTag(12, value.assessType) : 0)
          + (value.securityAssess != null ? ProtoAdapter.STRING.encodedSizeWithTag(13, value.securityAssess) : 0)
          + (value.userStatusRemark != null ? ProtoAdapter.STRING.encodedSizeWithTag(14, value.userStatusRemark) : 0)
          + (value.userSignPic != null ? ProtoAdapter.STRING.encodedSizeWithTag(15, value.userSignPic) : 0)
          + (value.entrustPic != null ? ProtoAdapter.STRING.encodedSizeWithTag(16, value.entrustPic) : 0)
          + (value.assessId != null ? ProtoAdapter.UINT64.encodedSizeWithTag(17, value.assessId) : 0)
          + value.unknownFields().size();
    }

    @Override
    public void encode(ProtoWriter writer, AddInsureReq value) throws IOException {
      if (value.kinsId != null) ProtoAdapter.UINT64.encodeWithTag(writer, 1, value.kinsId);
      if (value.addrId != null) ProtoAdapter.UINT64.encodeWithTag(writer, 2, value.addrId);
      if (value.healthCareNO != null) ProtoAdapter.STRING.encodeWithTag(writer, 3, value.healthCareNO);
      if (value.insureGetType != null) ProtoAdapter.UINT32.encodeWithTag(writer, 4, value.insureGetType);
      if (value.agencyName != null) ProtoAdapter.STRING.encodeWithTag(writer, 5, value.agencyName);
      if (value.agencyRelation != null) ProtoAdapter.STRING.encodeWithTag(writer, 6, value.agencyRelation);
      if (value.agencyPhone != null) ProtoAdapter.STRING.encodeWithTag(writer, 7, value.agencyPhone);
      if (value.userId != null) ProtoAdapter.UINT64.encodeWithTag(writer, 8, value.userId);
      if (value.dudaoScoreADL != null) ProtoAdapter.UINT32.encodeWithTag(writer, 9, value.dudaoScoreADL);
      if (value.applyTreatmentType != null) ProtoAdapter.UINT32.encodeWithTag(writer, 10, value.applyTreatmentType);
      if (value.treatmentType != null) ProtoAdapter.UINT32.encodeWithTag(writer, 11, value.treatmentType);
      if (value.assessType != null) ProtoAdapter.UINT32.encodeWithTag(writer, 12, value.assessType);
      if (value.securityAssess != null) ProtoAdapter.STRING.encodeWithTag(writer, 13, value.securityAssess);
      if (value.userStatusRemark != null) ProtoAdapter.STRING.encodeWithTag(writer, 14, value.userStatusRemark);
      if (value.userSignPic != null) ProtoAdapter.STRING.encodeWithTag(writer, 15, value.userSignPic);
      if (value.entrustPic != null) ProtoAdapter.STRING.encodeWithTag(writer, 16, value.entrustPic);
      if (value.assessId != null) ProtoAdapter.UINT64.encodeWithTag(writer, 17, value.assessId);
      writer.writeBytes(value.unknownFields());
    }

    @Override
    public AddInsureReq decode(ProtoReader reader) throws IOException {
      Builder builder = new Builder();
      long token = reader.beginMessage();
      for (int tag; (tag = reader.nextTag()) != -1;) {
        switch (tag) {
          case 1: builder.kinsId(ProtoAdapter.UINT64.decode(reader)); break;
          case 2: builder.addrId(ProtoAdapter.UINT64.decode(reader)); break;
          case 3: builder.healthCareNO(ProtoAdapter.STRING.decode(reader)); break;
          case 4: builder.insureGetType(ProtoAdapter.UINT32.decode(reader)); break;
          case 5: builder.agencyName(ProtoAdapter.STRING.decode(reader)); break;
          case 6: builder.agencyRelation(ProtoAdapter.STRING.decode(reader)); break;
          case 7: builder.agencyPhone(ProtoAdapter.STRING.decode(reader)); break;
          case 8: builder.userId(ProtoAdapter.UINT64.decode(reader)); break;
          case 9: builder.dudaoScoreADL(ProtoAdapter.UINT32.decode(reader)); break;
          case 10: builder.applyTreatmentType(ProtoAdapter.UINT32.decode(reader)); break;
          case 11: builder.treatmentType(ProtoAdapter.UINT32.decode(reader)); break;
          case 12: builder.assessType(ProtoAdapter.UINT32.decode(reader)); break;
          case 13: builder.securityAssess(ProtoAdapter.STRING.decode(reader)); break;
          case 14: builder.userStatusRemark(ProtoAdapter.STRING.decode(reader)); break;
          case 15: builder.userSignPic(ProtoAdapter.STRING.decode(reader)); break;
          case 16: builder.entrustPic(ProtoAdapter.STRING.decode(reader)); break;
          case 17: builder.assessId(ProtoAdapter.UINT64.decode(reader)); break;
          default: {
            FieldEncoding fieldEncoding = reader.peekFieldEncoding();
            Object value = fieldEncoding.rawProtoAdapter().decode(reader);
            builder.addUnknownField(tag, fieldEncoding, value);
          }
        }
      }
      reader.endMessage(token);
      return builder.build();
    }

    @Override
    public AddInsureReq redact(AddInsureReq value) {
      Builder builder = value.newBuilder();
      builder.clearUnknownFields();
      return builder.build();
    }
  }
}
