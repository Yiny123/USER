// Code generated by Wire protocol buffer compiler, do not edit.
// Source file: OrderModel.proto at 865:1
package com.yijianyi.protocol;

import com.squareup.wire.FieldEncoding;
import com.squareup.wire.Message;
import com.squareup.wire.ProtoAdapter;
import com.squareup.wire.ProtoReader;
import com.squareup.wire.ProtoWriter;
import com.squareup.wire.WireField;
import com.squareup.wire.internal.Internal;
import java.io.IOException;
import java.lang.Long;
import java.lang.Object;
import java.lang.Override;
import java.lang.String;
import java.lang.StringBuilder;
import java.util.List;
import okio.ByteString;

public final class InsureOrderTendDetailBO extends Message<InsureOrderTendDetailBO, InsureOrderTendDetailBO.Builder> {
  public static final ProtoAdapter<InsureOrderTendDetailBO> ADAPTER = new ProtoAdapter_InsureOrderTendDetailBO();

  private static final long serialVersionUID = 0L;

  public static final String DEFAULT_DETAILTYPENAME = "";

  public static final Long DEFAULT_DETAILTYPEID = 0L;

  /**
   * 标题
   */
  @WireField(
      tag = 1,
      adapter = "com.squareup.wire.ProtoAdapter#STRING"
  )
  public final String detailTypeName;

  /**
   * 明细类型id
   */
  @WireField(
      tag = 2,
      adapter = "com.squareup.wire.ProtoAdapter#UINT64"
  )
  public final Long detailTypeId;

  @WireField(
      tag = 3,
      adapter = "com.yijianyi.protocol.OrderTendDetail#ADAPTER",
      label = WireField.Label.REPEATED
  )
  public final List<OrderTendDetail> tendDetailList;

  public InsureOrderTendDetailBO(String detailTypeName, Long detailTypeId, List<OrderTendDetail> tendDetailList) {
    this(detailTypeName, detailTypeId, tendDetailList, ByteString.EMPTY);
  }

  public InsureOrderTendDetailBO(String detailTypeName, Long detailTypeId, List<OrderTendDetail> tendDetailList, ByteString unknownFields) {
    super(ADAPTER, unknownFields);
    this.detailTypeName = detailTypeName;
    this.detailTypeId = detailTypeId;
    this.tendDetailList = Internal.immutableCopyOf("tendDetailList", tendDetailList);
  }

  @Override
  public Builder newBuilder() {
    Builder builder = new Builder();
    builder.detailTypeName = detailTypeName;
    builder.detailTypeId = detailTypeId;
    builder.tendDetailList = Internal.copyOf("tendDetailList", tendDetailList);
    builder.addUnknownFields(unknownFields());
    return builder;
  }

  @Override
  public boolean equals(Object other) {
    if (other == this) return true;
    if (!(other instanceof InsureOrderTendDetailBO)) return false;
    InsureOrderTendDetailBO o = (InsureOrderTendDetailBO) other;
    return unknownFields().equals(o.unknownFields())
        && Internal.equals(detailTypeName, o.detailTypeName)
        && Internal.equals(detailTypeId, o.detailTypeId)
        && tendDetailList.equals(o.tendDetailList);
  }

  @Override
  public int hashCode() {
    int result = super.hashCode;
    if (result == 0) {
      result = unknownFields().hashCode();
      result = result * 37 + (detailTypeName != null ? detailTypeName.hashCode() : 0);
      result = result * 37 + (detailTypeId != null ? detailTypeId.hashCode() : 0);
      result = result * 37 + tendDetailList.hashCode();
      super.hashCode = result;
    }
    return result;
  }

  @Override
  public String toString() {
    StringBuilder builder = new StringBuilder();
    if (detailTypeName != null) builder.append(", detailTypeName=").append(detailTypeName);
    if (detailTypeId != null) builder.append(", detailTypeId=").append(detailTypeId);
    if (!tendDetailList.isEmpty()) builder.append(", tendDetailList=").append(tendDetailList);
    return builder.replace(0, 2, "InsureOrderTendDetailBO{").append('}').toString();
  }

  public static final class Builder extends Message.Builder<InsureOrderTendDetailBO, Builder> {
    public String detailTypeName;

    public Long detailTypeId;

    public List<OrderTendDetail> tendDetailList;

    public Builder() {
      tendDetailList = Internal.newMutableList();
    }

    /**
     * 标题
     */
    public Builder detailTypeName(String detailTypeName) {
      this.detailTypeName = detailTypeName;
      return this;
    }

    /**
     * 明细类型id
     */
    public Builder detailTypeId(Long detailTypeId) {
      this.detailTypeId = detailTypeId;
      return this;
    }

    public Builder tendDetailList(List<OrderTendDetail> tendDetailList) {
      Internal.checkElementsNotNull(tendDetailList);
      this.tendDetailList = tendDetailList;
      return this;
    }

    @Override
    public InsureOrderTendDetailBO build() {
      return new InsureOrderTendDetailBO(detailTypeName, detailTypeId, tendDetailList, super.buildUnknownFields());
    }
  }

  private static final class ProtoAdapter_InsureOrderTendDetailBO extends ProtoAdapter<InsureOrderTendDetailBO> {
    ProtoAdapter_InsureOrderTendDetailBO() {
      super(FieldEncoding.LENGTH_DELIMITED, InsureOrderTendDetailBO.class);
    }

    @Override
    public int encodedSize(InsureOrderTendDetailBO value) {
      return (value.detailTypeName != null ? ProtoAdapter.STRING.encodedSizeWithTag(1, value.detailTypeName) : 0)
          + (value.detailTypeId != null ? ProtoAdapter.UINT64.encodedSizeWithTag(2, value.detailTypeId) : 0)
          + OrderTendDetail.ADAPTER.asRepeated().encodedSizeWithTag(3, value.tendDetailList)
          + value.unknownFields().size();
    }

    @Override
    public void encode(ProtoWriter writer, InsureOrderTendDetailBO value) throws IOException {
      if (value.detailTypeName != null) ProtoAdapter.STRING.encodeWithTag(writer, 1, value.detailTypeName);
      if (value.detailTypeId != null) ProtoAdapter.UINT64.encodeWithTag(writer, 2, value.detailTypeId);
      OrderTendDetail.ADAPTER.asRepeated().encodeWithTag(writer, 3, value.tendDetailList);
      writer.writeBytes(value.unknownFields());
    }

    @Override
    public InsureOrderTendDetailBO decode(ProtoReader reader) throws IOException {
      Builder builder = new Builder();
      long token = reader.beginMessage();
      for (int tag; (tag = reader.nextTag()) != -1;) {
        switch (tag) {
          case 1: builder.detailTypeName(ProtoAdapter.STRING.decode(reader)); break;
          case 2: builder.detailTypeId(ProtoAdapter.UINT64.decode(reader)); break;
          case 3: builder.tendDetailList.add(OrderTendDetail.ADAPTER.decode(reader)); break;
          default: {
            FieldEncoding fieldEncoding = reader.peekFieldEncoding();
            Object value = fieldEncoding.rawProtoAdapter().decode(reader);
            builder.addUnknownField(tag, fieldEncoding, value);
          }
        }
      }
      reader.endMessage(token);
      return builder.build();
    }

    @Override
    public InsureOrderTendDetailBO redact(InsureOrderTendDetailBO value) {
      Builder builder = value.newBuilder();
      Internal.redactElements(builder.tendDetailList, OrderTendDetail.ADAPTER);
      builder.clearUnknownFields();
      return builder.build();
    }
  }
}
