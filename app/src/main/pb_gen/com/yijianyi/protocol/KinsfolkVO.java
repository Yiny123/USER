// Code generated by Wire protocol buffer compiler, do not edit.
// Source file: SaasModel.proto at 621:1
package com.yijianyi.protocol;

import com.squareup.wire.FieldEncoding;
import com.squareup.wire.Message;
import com.squareup.wire.ProtoAdapter;
import com.squareup.wire.ProtoReader;
import com.squareup.wire.ProtoWriter;
import com.squareup.wire.WireField;
import com.squareup.wire.internal.Internal;
import java.io.IOException;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.Long;
import java.lang.Object;
import java.lang.Override;
import java.lang.String;
import java.lang.StringBuilder;
import java.util.List;
import okio.ByteString;

/**
 * 用户亲属VO
 */
public final class KinsfolkVO extends Message<KinsfolkVO, KinsfolkVO.Builder> {
  public static final ProtoAdapter<KinsfolkVO> ADAPTER = new ProtoAdapter_KinsfolkVO();

  private static final long serialVersionUID = 0L;

  public static final Long DEFAULT_KINSID = 0L;

  public static final String DEFAULT_NAME = "";

  public static final Integer DEFAULT_AGE = 0;

  public static final Integer DEFAULT_SEX = 0;

  public static final String DEFAULT_RELATION = "";

  public static final String DEFAULT_IDCARDNO = "";

  public static final String DEFAULT_HEIGHT = "";

  public static final String DEFAULT_WEIGHT = "";

  public static final String DEFAULT_PHYSICALSTATE = "";

  public static final String DEFAULT_IDPIC = "";

  public static final String DEFAULT_MEDICALNO = "";

  public static final String DEFAULT_IDPICURL = "";

  public static final Integer DEFAULT_ACTABILITY = 0;

  public static final Boolean DEFAULT_DEFAULTUSE = false;

  public static final Integer DEFAULT_MEDICARETYPE = 0;

  public static final String DEFAULT_MEDICARE = "";

  public static final Boolean DEFAULT_INSUREFLAG = false;

  public static final String DEFAULT_INSUREDESC = "";

  public static final Integer DEFAULT_SCORE = 0;

  public static final String DEFAULT_HEALTHCARENO = "";

  public static final String DEFAULT_EXTRAINFO = "";

  public static final Integer DEFAULT_INSUREFLAGTYPE = 0;

  public static final String DEFAULT_HEALTHCAREIMGURL = "";

  public static final String DEFAULT_KINSFOLKIMGURL = "";

  public static final Integer DEFAULT_STAFFTYPE = 0;

  public static final String DEFAULT_IDPIC2URL = "";

  public static final String DEFAULT_HEALTHCAREIMGID = "";

  public static final String DEFAULT_KINSFOLKIMGID = "";

  public static final String DEFAULT_IDPIC2ID = "";

  @WireField(
      tag = 1,
      adapter = "com.squareup.wire.ProtoAdapter#UINT64"
  )
  public final Long kinsId;

  @WireField(
      tag = 2,
      adapter = "com.squareup.wire.ProtoAdapter#STRING"
  )
  public final String name;

  @WireField(
      tag = 3,
      adapter = "com.squareup.wire.ProtoAdapter#UINT32"
  )
  public final Integer age;

  /**
   * 1 - 男, 2 - 女
   */
  @WireField(
      tag = 4,
      adapter = "com.squareup.wire.ProtoAdapter#UINT32"
  )
  public final Integer sex;

  /**
   * 亲属关系
   */
  @WireField(
      tag = 5,
      adapter = "com.squareup.wire.ProtoAdapter#STRING"
  )
  public final String relation;

  /**
   * 身份证号
   */
  @WireField(
      tag = 6,
      adapter = "com.squareup.wire.ProtoAdapter#STRING"
  )
  public final String idCardNo;

  /**
   * 身高
   */
  @WireField(
      tag = 7,
      adapter = "com.squareup.wire.ProtoAdapter#STRING"
  )
  public final String height;

  /**
   * 体重
   */
  @WireField(
      tag = 8,
      adapter = "com.squareup.wire.ProtoAdapter#STRING"
  )
  public final String weight;

  /**
   * 行动能力
   */
  @WireField(
      tag = 9,
      adapter = "com.squareup.wire.ProtoAdapter#STRING"
  )
  public final String physicalState;

  /**
   * 身份证图片ID
   */
  @WireField(
      tag = 10,
      adapter = "com.squareup.wire.ProtoAdapter#STRING"
  )
  public final String idPic;

  /**
   * 医院就诊卡号
   */
  @WireField(
      tag = 11,
      adapter = "com.squareup.wire.ProtoAdapter#STRING"
  )
  public final String medicalNO;

  /**
   * 常用语言 1 - 普通话  2 - 粤语 3 - 客家话 4 - 潮汕话
   */
  @WireField(
      tag = 12,
      adapter = "com.squareup.wire.ProtoAdapter#UINT32",
      label = WireField.Label.REPEATED
  )
  public final List<Integer> language;

  /**
   * 身份证图片URL
   */
  @WireField(
      tag = 13,
      adapter = "com.squareup.wire.ProtoAdapter#STRING"
  )
  public final String idPicUrl;

  /**
   * 行动能力 1-自理 2-半失能 3-失能
   */
  @WireField(
      tag = 14,
      adapter = "com.squareup.wire.ProtoAdapter#UINT32"
  )
  public final Integer actAbility;

  @WireField(
      tag = 15,
      adapter = "com.squareup.wire.ProtoAdapter#BOOL"
  )
  public final Boolean defaultUse;

  /**
   * 医保类型
   */
  @WireField(
      tag = 16,
      adapter = "com.squareup.wire.ProtoAdapter#UINT32"
  )
  public final Integer medicareType;

  /**
   * 医保
   */
  @WireField(
      tag = 17,
      adapter = "com.squareup.wire.ProtoAdapter#STRING"
  )
  public final String medicare;

  /**
   * 是否可以申请长护险
   */
  @WireField(
      tag = 18,
      adapter = "com.squareup.wire.ProtoAdapter#BOOL"
  )
  public final Boolean insureFlag;

  /**
   * 长护险状态描述
   */
  @WireField(
      tag = 19,
      adapter = "com.squareup.wire.ProtoAdapter#STRING"
  )
  public final String insureDesc;

  /**
   * -1即没有自评得分 大于等于0即算有效自评得分
   */
  @WireField(
      tag = 20,
      adapter = "com.squareup.wire.ProtoAdapter#INT32"
  )
  public final Integer score;

  /**
   * 医保卡号
   */
  @WireField(
      tag = 21,
      adapter = "com.squareup.wire.ProtoAdapter#STRING"
  )
  public final String healthCareNO;

  /**
   * 补充说明
   */
  @WireField(
      tag = 22,
      adapter = "com.squareup.wire.ProtoAdapter#STRING"
  )
  public final String extraInfo;

  /**
   * 可操作状态：0-可申请 1-不可申请 2-补全资料
   */
  @WireField(
      tag = 23,
      adapter = "com.squareup.wire.ProtoAdapter#UINT32"
  )
  public final Integer insureFlagType;

  /**
   * 医保卡信息照片
   */
  @WireField(
      tag = 24,
      adapter = "com.squareup.wire.ProtoAdapter#STRING"
  )
  public final String healthCareImgUrl;

  /**
   * 参保人照片
   */
  @WireField(
      tag = 25,
      adapter = "com.squareup.wire.ProtoAdapter#STRING"
  )
  public final String kinsfolkImgUrl;

  /**
   * 人员类型 0-未设置 1-在职 2-离职
   */
  @WireField(
      tag = 26,
      adapter = "com.squareup.wire.ProtoAdapter#UINT32"
  )
  public final Integer staffType;

  /**
   * 身份证反面图片URL
   */
  @WireField(
      tag = 27,
      adapter = "com.squareup.wire.ProtoAdapter#STRING"
  )
  public final String idPic2Url;

  /**
   * 医保卡信息照片id
   */
  @WireField(
      tag = 28,
      adapter = "com.squareup.wire.ProtoAdapter#STRING"
  )
  public final String healthCareImgId;

  /**
   * 参保人照片id
   */
  @WireField(
      tag = 29,
      adapter = "com.squareup.wire.ProtoAdapter#STRING"
  )
  public final String kinsfolkImgId;

  /**
   * 身份证反面图片id
   */
  @WireField(
      tag = 30,
      adapter = "com.squareup.wire.ProtoAdapter#STRING"
  )
  public final String idPic2Id;

  public KinsfolkVO(Long kinsId, String name, Integer age, Integer sex, String relation, String idCardNo, String height, String weight, String physicalState, String idPic, String medicalNO, List<Integer> language, String idPicUrl, Integer actAbility, Boolean defaultUse, Integer medicareType, String medicare, Boolean insureFlag, String insureDesc, Integer score, String healthCareNO, String extraInfo, Integer insureFlagType, String healthCareImgUrl, String kinsfolkImgUrl, Integer staffType, String idPic2Url, String healthCareImgId, String kinsfolkImgId, String idPic2Id) {
    this(kinsId, name, age, sex, relation, idCardNo, height, weight, physicalState, idPic, medicalNO, language, idPicUrl, actAbility, defaultUse, medicareType, medicare, insureFlag, insureDesc, score, healthCareNO, extraInfo, insureFlagType, healthCareImgUrl, kinsfolkImgUrl, staffType, idPic2Url, healthCareImgId, kinsfolkImgId, idPic2Id, ByteString.EMPTY);
  }

  public KinsfolkVO(Long kinsId, String name, Integer age, Integer sex, String relation, String idCardNo, String height, String weight, String physicalState, String idPic, String medicalNO, List<Integer> language, String idPicUrl, Integer actAbility, Boolean defaultUse, Integer medicareType, String medicare, Boolean insureFlag, String insureDesc, Integer score, String healthCareNO, String extraInfo, Integer insureFlagType, String healthCareImgUrl, String kinsfolkImgUrl, Integer staffType, String idPic2Url, String healthCareImgId, String kinsfolkImgId, String idPic2Id, ByteString unknownFields) {
    super(ADAPTER, unknownFields);
    this.kinsId = kinsId;
    this.name = name;
    this.age = age;
    this.sex = sex;
    this.relation = relation;
    this.idCardNo = idCardNo;
    this.height = height;
    this.weight = weight;
    this.physicalState = physicalState;
    this.idPic = idPic;
    this.medicalNO = medicalNO;
    this.language = Internal.immutableCopyOf("language", language);
    this.idPicUrl = idPicUrl;
    this.actAbility = actAbility;
    this.defaultUse = defaultUse;
    this.medicareType = medicareType;
    this.medicare = medicare;
    this.insureFlag = insureFlag;
    this.insureDesc = insureDesc;
    this.score = score;
    this.healthCareNO = healthCareNO;
    this.extraInfo = extraInfo;
    this.insureFlagType = insureFlagType;
    this.healthCareImgUrl = healthCareImgUrl;
    this.kinsfolkImgUrl = kinsfolkImgUrl;
    this.staffType = staffType;
    this.idPic2Url = idPic2Url;
    this.healthCareImgId = healthCareImgId;
    this.kinsfolkImgId = kinsfolkImgId;
    this.idPic2Id = idPic2Id;
  }

  @Override
  public Builder newBuilder() {
    Builder builder = new Builder();
    builder.kinsId = kinsId;
    builder.name = name;
    builder.age = age;
    builder.sex = sex;
    builder.relation = relation;
    builder.idCardNo = idCardNo;
    builder.height = height;
    builder.weight = weight;
    builder.physicalState = physicalState;
    builder.idPic = idPic;
    builder.medicalNO = medicalNO;
    builder.language = Internal.copyOf("language", language);
    builder.idPicUrl = idPicUrl;
    builder.actAbility = actAbility;
    builder.defaultUse = defaultUse;
    builder.medicareType = medicareType;
    builder.medicare = medicare;
    builder.insureFlag = insureFlag;
    builder.insureDesc = insureDesc;
    builder.score = score;
    builder.healthCareNO = healthCareNO;
    builder.extraInfo = extraInfo;
    builder.insureFlagType = insureFlagType;
    builder.healthCareImgUrl = healthCareImgUrl;
    builder.kinsfolkImgUrl = kinsfolkImgUrl;
    builder.staffType = staffType;
    builder.idPic2Url = idPic2Url;
    builder.healthCareImgId = healthCareImgId;
    builder.kinsfolkImgId = kinsfolkImgId;
    builder.idPic2Id = idPic2Id;
    builder.addUnknownFields(unknownFields());
    return builder;
  }

  @Override
  public boolean equals(Object other) {
    if (other == this) return true;
    if (!(other instanceof KinsfolkVO)) return false;
    KinsfolkVO o = (KinsfolkVO) other;
    return unknownFields().equals(o.unknownFields())
        && Internal.equals(kinsId, o.kinsId)
        && Internal.equals(name, o.name)
        && Internal.equals(age, o.age)
        && Internal.equals(sex, o.sex)
        && Internal.equals(relation, o.relation)
        && Internal.equals(idCardNo, o.idCardNo)
        && Internal.equals(height, o.height)
        && Internal.equals(weight, o.weight)
        && Internal.equals(physicalState, o.physicalState)
        && Internal.equals(idPic, o.idPic)
        && Internal.equals(medicalNO, o.medicalNO)
        && language.equals(o.language)
        && Internal.equals(idPicUrl, o.idPicUrl)
        && Internal.equals(actAbility, o.actAbility)
        && Internal.equals(defaultUse, o.defaultUse)
        && Internal.equals(medicareType, o.medicareType)
        && Internal.equals(medicare, o.medicare)
        && Internal.equals(insureFlag, o.insureFlag)
        && Internal.equals(insureDesc, o.insureDesc)
        && Internal.equals(score, o.score)
        && Internal.equals(healthCareNO, o.healthCareNO)
        && Internal.equals(extraInfo, o.extraInfo)
        && Internal.equals(insureFlagType, o.insureFlagType)
        && Internal.equals(healthCareImgUrl, o.healthCareImgUrl)
        && Internal.equals(kinsfolkImgUrl, o.kinsfolkImgUrl)
        && Internal.equals(staffType, o.staffType)
        && Internal.equals(idPic2Url, o.idPic2Url)
        && Internal.equals(healthCareImgId, o.healthCareImgId)
        && Internal.equals(kinsfolkImgId, o.kinsfolkImgId)
        && Internal.equals(idPic2Id, o.idPic2Id);
  }

  @Override
  public int hashCode() {
    int result = super.hashCode;
    if (result == 0) {
      result = unknownFields().hashCode();
      result = result * 37 + (kinsId != null ? kinsId.hashCode() : 0);
      result = result * 37 + (name != null ? name.hashCode() : 0);
      result = result * 37 + (age != null ? age.hashCode() : 0);
      result = result * 37 + (sex != null ? sex.hashCode() : 0);
      result = result * 37 + (relation != null ? relation.hashCode() : 0);
      result = result * 37 + (idCardNo != null ? idCardNo.hashCode() : 0);
      result = result * 37 + (height != null ? height.hashCode() : 0);
      result = result * 37 + (weight != null ? weight.hashCode() : 0);
      result = result * 37 + (physicalState != null ? physicalState.hashCode() : 0);
      result = result * 37 + (idPic != null ? idPic.hashCode() : 0);
      result = result * 37 + (medicalNO != null ? medicalNO.hashCode() : 0);
      result = result * 37 + language.hashCode();
      result = result * 37 + (idPicUrl != null ? idPicUrl.hashCode() : 0);
      result = result * 37 + (actAbility != null ? actAbility.hashCode() : 0);
      result = result * 37 + (defaultUse != null ? defaultUse.hashCode() : 0);
      result = result * 37 + (medicareType != null ? medicareType.hashCode() : 0);
      result = result * 37 + (medicare != null ? medicare.hashCode() : 0);
      result = result * 37 + (insureFlag != null ? insureFlag.hashCode() : 0);
      result = result * 37 + (insureDesc != null ? insureDesc.hashCode() : 0);
      result = result * 37 + (score != null ? score.hashCode() : 0);
      result = result * 37 + (healthCareNO != null ? healthCareNO.hashCode() : 0);
      result = result * 37 + (extraInfo != null ? extraInfo.hashCode() : 0);
      result = result * 37 + (insureFlagType != null ? insureFlagType.hashCode() : 0);
      result = result * 37 + (healthCareImgUrl != null ? healthCareImgUrl.hashCode() : 0);
      result = result * 37 + (kinsfolkImgUrl != null ? kinsfolkImgUrl.hashCode() : 0);
      result = result * 37 + (staffType != null ? staffType.hashCode() : 0);
      result = result * 37 + (idPic2Url != null ? idPic2Url.hashCode() : 0);
      result = result * 37 + (healthCareImgId != null ? healthCareImgId.hashCode() : 0);
      result = result * 37 + (kinsfolkImgId != null ? kinsfolkImgId.hashCode() : 0);
      result = result * 37 + (idPic2Id != null ? idPic2Id.hashCode() : 0);
      super.hashCode = result;
    }
    return result;
  }

  @Override
  public String toString() {
    StringBuilder builder = new StringBuilder();
    if (kinsId != null) builder.append(", kinsId=").append(kinsId);
    if (name != null) builder.append(", name=").append(name);
    if (age != null) builder.append(", age=").append(age);
    if (sex != null) builder.append(", sex=").append(sex);
    if (relation != null) builder.append(", relation=").append(relation);
    if (idCardNo != null) builder.append(", idCardNo=").append(idCardNo);
    if (height != null) builder.append(", height=").append(height);
    if (weight != null) builder.append(", weight=").append(weight);
    if (physicalState != null) builder.append(", physicalState=").append(physicalState);
    if (idPic != null) builder.append(", idPic=").append(idPic);
    if (medicalNO != null) builder.append(", medicalNO=").append(medicalNO);
    if (!language.isEmpty()) builder.append(", language=").append(language);
    if (idPicUrl != null) builder.append(", idPicUrl=").append(idPicUrl);
    if (actAbility != null) builder.append(", actAbility=").append(actAbility);
    if (defaultUse != null) builder.append(", defaultUse=").append(defaultUse);
    if (medicareType != null) builder.append(", medicareType=").append(medicareType);
    if (medicare != null) builder.append(", medicare=").append(medicare);
    if (insureFlag != null) builder.append(", insureFlag=").append(insureFlag);
    if (insureDesc != null) builder.append(", insureDesc=").append(insureDesc);
    if (score != null) builder.append(", score=").append(score);
    if (healthCareNO != null) builder.append(", healthCareNO=").append(healthCareNO);
    if (extraInfo != null) builder.append(", extraInfo=").append(extraInfo);
    if (insureFlagType != null) builder.append(", insureFlagType=").append(insureFlagType);
    if (healthCareImgUrl != null) builder.append(", healthCareImgUrl=").append(healthCareImgUrl);
    if (kinsfolkImgUrl != null) builder.append(", kinsfolkImgUrl=").append(kinsfolkImgUrl);
    if (staffType != null) builder.append(", staffType=").append(staffType);
    if (idPic2Url != null) builder.append(", idPic2Url=").append(idPic2Url);
    if (healthCareImgId != null) builder.append(", healthCareImgId=").append(healthCareImgId);
    if (kinsfolkImgId != null) builder.append(", kinsfolkImgId=").append(kinsfolkImgId);
    if (idPic2Id != null) builder.append(", idPic2Id=").append(idPic2Id);
    return builder.replace(0, 2, "KinsfolkVO{").append('}').toString();
  }

  public static final class Builder extends Message.Builder<KinsfolkVO, Builder> {
    public Long kinsId;

    public String name;

    public Integer age;

    public Integer sex;

    public String relation;

    public String idCardNo;

    public String height;

    public String weight;

    public String physicalState;

    public String idPic;

    public String medicalNO;

    public List<Integer> language;

    public String idPicUrl;

    public Integer actAbility;

    public Boolean defaultUse;

    public Integer medicareType;

    public String medicare;

    public Boolean insureFlag;

    public String insureDesc;

    public Integer score;

    public String healthCareNO;

    public String extraInfo;

    public Integer insureFlagType;

    public String healthCareImgUrl;

    public String kinsfolkImgUrl;

    public Integer staffType;

    public String idPic2Url;

    public String healthCareImgId;

    public String kinsfolkImgId;

    public String idPic2Id;

    public Builder() {
      language = Internal.newMutableList();
    }

    public Builder kinsId(Long kinsId) {
      this.kinsId = kinsId;
      return this;
    }

    public Builder name(String name) {
      this.name = name;
      return this;
    }

    public Builder age(Integer age) {
      this.age = age;
      return this;
    }

    /**
     * 1 - 男, 2 - 女
     */
    public Builder sex(Integer sex) {
      this.sex = sex;
      return this;
    }

    /**
     * 亲属关系
     */
    public Builder relation(String relation) {
      this.relation = relation;
      return this;
    }

    /**
     * 身份证号
     */
    public Builder idCardNo(String idCardNo) {
      this.idCardNo = idCardNo;
      return this;
    }

    /**
     * 身高
     */
    public Builder height(String height) {
      this.height = height;
      return this;
    }

    /**
     * 体重
     */
    public Builder weight(String weight) {
      this.weight = weight;
      return this;
    }

    /**
     * 行动能力
     */
    public Builder physicalState(String physicalState) {
      this.physicalState = physicalState;
      return this;
    }

    /**
     * 身份证图片ID
     */
    public Builder idPic(String idPic) {
      this.idPic = idPic;
      return this;
    }

    /**
     * 医院就诊卡号
     */
    public Builder medicalNO(String medicalNO) {
      this.medicalNO = medicalNO;
      return this;
    }

    /**
     * 常用语言 1 - 普通话  2 - 粤语 3 - 客家话 4 - 潮汕话
     */
    public Builder language(List<Integer> language) {
      Internal.checkElementsNotNull(language);
      this.language = language;
      return this;
    }

    /**
     * 身份证图片URL
     */
    public Builder idPicUrl(String idPicUrl) {
      this.idPicUrl = idPicUrl;
      return this;
    }

    /**
     * 行动能力 1-自理 2-半失能 3-失能
     */
    public Builder actAbility(Integer actAbility) {
      this.actAbility = actAbility;
      return this;
    }

    public Builder defaultUse(Boolean defaultUse) {
      this.defaultUse = defaultUse;
      return this;
    }

    /**
     * 医保类型
     */
    public Builder medicareType(Integer medicareType) {
      this.medicareType = medicareType;
      return this;
    }

    /**
     * 医保
     */
    public Builder medicare(String medicare) {
      this.medicare = medicare;
      return this;
    }

    /**
     * 是否可以申请长护险
     */
    public Builder insureFlag(Boolean insureFlag) {
      this.insureFlag = insureFlag;
      return this;
    }

    /**
     * 长护险状态描述
     */
    public Builder insureDesc(String insureDesc) {
      this.insureDesc = insureDesc;
      return this;
    }

    /**
     * -1即没有自评得分 大于等于0即算有效自评得分
     */
    public Builder score(Integer score) {
      this.score = score;
      return this;
    }

    /**
     * 医保卡号
     */
    public Builder healthCareNO(String healthCareNO) {
      this.healthCareNO = healthCareNO;
      return this;
    }

    /**
     * 补充说明
     */
    public Builder extraInfo(String extraInfo) {
      this.extraInfo = extraInfo;
      return this;
    }

    /**
     * 可操作状态：0-可申请 1-不可申请 2-补全资料
     */
    public Builder insureFlagType(Integer insureFlagType) {
      this.insureFlagType = insureFlagType;
      return this;
    }

    /**
     * 医保卡信息照片
     */
    public Builder healthCareImgUrl(String healthCareImgUrl) {
      this.healthCareImgUrl = healthCareImgUrl;
      return this;
    }

    /**
     * 参保人照片
     */
    public Builder kinsfolkImgUrl(String kinsfolkImgUrl) {
      this.kinsfolkImgUrl = kinsfolkImgUrl;
      return this;
    }

    /**
     * 人员类型 0-未设置 1-在职 2-离职
     */
    public Builder staffType(Integer staffType) {
      this.staffType = staffType;
      return this;
    }

    /**
     * 身份证反面图片URL
     */
    public Builder idPic2Url(String idPic2Url) {
      this.idPic2Url = idPic2Url;
      return this;
    }

    /**
     * 医保卡信息照片id
     */
    public Builder healthCareImgId(String healthCareImgId) {
      this.healthCareImgId = healthCareImgId;
      return this;
    }

    /**
     * 参保人照片id
     */
    public Builder kinsfolkImgId(String kinsfolkImgId) {
      this.kinsfolkImgId = kinsfolkImgId;
      return this;
    }

    /**
     * 身份证反面图片id
     */
    public Builder idPic2Id(String idPic2Id) {
      this.idPic2Id = idPic2Id;
      return this;
    }

    @Override
    public KinsfolkVO build() {
      return new KinsfolkVO(kinsId, name, age, sex, relation, idCardNo, height, weight, physicalState, idPic, medicalNO, language, idPicUrl, actAbility, defaultUse, medicareType, medicare, insureFlag, insureDesc, score, healthCareNO, extraInfo, insureFlagType, healthCareImgUrl, kinsfolkImgUrl, staffType, idPic2Url, healthCareImgId, kinsfolkImgId, idPic2Id, super.buildUnknownFields());
    }
  }

  private static final class ProtoAdapter_KinsfolkVO extends ProtoAdapter<KinsfolkVO> {
    ProtoAdapter_KinsfolkVO() {
      super(FieldEncoding.LENGTH_DELIMITED, KinsfolkVO.class);
    }

    @Override
    public int encodedSize(KinsfolkVO value) {
      return (value.kinsId != null ? ProtoAdapter.UINT64.encodedSizeWithTag(1, value.kinsId) : 0)
          + (value.name != null ? ProtoAdapter.STRING.encodedSizeWithTag(2, value.name) : 0)
          + (value.age != null ? ProtoAdapter.UINT32.encodedSizeWithTag(3, value.age) : 0)
          + (value.sex != null ? ProtoAdapter.UINT32.encodedSizeWithTag(4, value.sex) : 0)
          + (value.relation != null ? ProtoAdapter.STRING.encodedSizeWithTag(5, value.relation) : 0)
          + (value.idCardNo != null ? ProtoAdapter.STRING.encodedSizeWithTag(6, value.idCardNo) : 0)
          + (value.height != null ? ProtoAdapter.STRING.encodedSizeWithTag(7, value.height) : 0)
          + (value.weight != null ? ProtoAdapter.STRING.encodedSizeWithTag(8, value.weight) : 0)
          + (value.physicalState != null ? ProtoAdapter.STRING.encodedSizeWithTag(9, value.physicalState) : 0)
          + (value.idPic != null ? ProtoAdapter.STRING.encodedSizeWithTag(10, value.idPic) : 0)
          + (value.medicalNO != null ? ProtoAdapter.STRING.encodedSizeWithTag(11, value.medicalNO) : 0)
          + ProtoAdapter.UINT32.asRepeated().encodedSizeWithTag(12, value.language)
          + (value.idPicUrl != null ? ProtoAdapter.STRING.encodedSizeWithTag(13, value.idPicUrl) : 0)
          + (value.actAbility != null ? ProtoAdapter.UINT32.encodedSizeWithTag(14, value.actAbility) : 0)
          + (value.defaultUse != null ? ProtoAdapter.BOOL.encodedSizeWithTag(15, value.defaultUse) : 0)
          + (value.medicareType != null ? ProtoAdapter.UINT32.encodedSizeWithTag(16, value.medicareType) : 0)
          + (value.medicare != null ? ProtoAdapter.STRING.encodedSizeWithTag(17, value.medicare) : 0)
          + (value.insureFlag != null ? ProtoAdapter.BOOL.encodedSizeWithTag(18, value.insureFlag) : 0)
          + (value.insureDesc != null ? ProtoAdapter.STRING.encodedSizeWithTag(19, value.insureDesc) : 0)
          + (value.score != null ? ProtoAdapter.INT32.encodedSizeWithTag(20, value.score) : 0)
          + (value.healthCareNO != null ? ProtoAdapter.STRING.encodedSizeWithTag(21, value.healthCareNO) : 0)
          + (value.extraInfo != null ? ProtoAdapter.STRING.encodedSizeWithTag(22, value.extraInfo) : 0)
          + (value.insureFlagType != null ? ProtoAdapter.UINT32.encodedSizeWithTag(23, value.insureFlagType) : 0)
          + (value.healthCareImgUrl != null ? ProtoAdapter.STRING.encodedSizeWithTag(24, value.healthCareImgUrl) : 0)
          + (value.kinsfolkImgUrl != null ? ProtoAdapter.STRING.encodedSizeWithTag(25, value.kinsfolkImgUrl) : 0)
          + (value.staffType != null ? ProtoAdapter.UINT32.encodedSizeWithTag(26, value.staffType) : 0)
          + (value.idPic2Url != null ? ProtoAdapter.STRING.encodedSizeWithTag(27, value.idPic2Url) : 0)
          + (value.healthCareImgId != null ? ProtoAdapter.STRING.encodedSizeWithTag(28, value.healthCareImgId) : 0)
          + (value.kinsfolkImgId != null ? ProtoAdapter.STRING.encodedSizeWithTag(29, value.kinsfolkImgId) : 0)
          + (value.idPic2Id != null ? ProtoAdapter.STRING.encodedSizeWithTag(30, value.idPic2Id) : 0)
          + value.unknownFields().size();
    }

    @Override
    public void encode(ProtoWriter writer, KinsfolkVO value) throws IOException {
      if (value.kinsId != null) ProtoAdapter.UINT64.encodeWithTag(writer, 1, value.kinsId);
      if (value.name != null) ProtoAdapter.STRING.encodeWithTag(writer, 2, value.name);
      if (value.age != null) ProtoAdapter.UINT32.encodeWithTag(writer, 3, value.age);
      if (value.sex != null) ProtoAdapter.UINT32.encodeWithTag(writer, 4, value.sex);
      if (value.relation != null) ProtoAdapter.STRING.encodeWithTag(writer, 5, value.relation);
      if (value.idCardNo != null) ProtoAdapter.STRING.encodeWithTag(writer, 6, value.idCardNo);
      if (value.height != null) ProtoAdapter.STRING.encodeWithTag(writer, 7, value.height);
      if (value.weight != null) ProtoAdapter.STRING.encodeWithTag(writer, 8, value.weight);
      if (value.physicalState != null) ProtoAdapter.STRING.encodeWithTag(writer, 9, value.physicalState);
      if (value.idPic != null) ProtoAdapter.STRING.encodeWithTag(writer, 10, value.idPic);
      if (value.medicalNO != null) ProtoAdapter.STRING.encodeWithTag(writer, 11, value.medicalNO);
      ProtoAdapter.UINT32.asRepeated().encodeWithTag(writer, 12, value.language);
      if (value.idPicUrl != null) ProtoAdapter.STRING.encodeWithTag(writer, 13, value.idPicUrl);
      if (value.actAbility != null) ProtoAdapter.UINT32.encodeWithTag(writer, 14, value.actAbility);
      if (value.defaultUse != null) ProtoAdapter.BOOL.encodeWithTag(writer, 15, value.defaultUse);
      if (value.medicareType != null) ProtoAdapter.UINT32.encodeWithTag(writer, 16, value.medicareType);
      if (value.medicare != null) ProtoAdapter.STRING.encodeWithTag(writer, 17, value.medicare);
      if (value.insureFlag != null) ProtoAdapter.BOOL.encodeWithTag(writer, 18, value.insureFlag);
      if (value.insureDesc != null) ProtoAdapter.STRING.encodeWithTag(writer, 19, value.insureDesc);
      if (value.score != null) ProtoAdapter.INT32.encodeWithTag(writer, 20, value.score);
      if (value.healthCareNO != null) ProtoAdapter.STRING.encodeWithTag(writer, 21, value.healthCareNO);
      if (value.extraInfo != null) ProtoAdapter.STRING.encodeWithTag(writer, 22, value.extraInfo);
      if (value.insureFlagType != null) ProtoAdapter.UINT32.encodeWithTag(writer, 23, value.insureFlagType);
      if (value.healthCareImgUrl != null) ProtoAdapter.STRING.encodeWithTag(writer, 24, value.healthCareImgUrl);
      if (value.kinsfolkImgUrl != null) ProtoAdapter.STRING.encodeWithTag(writer, 25, value.kinsfolkImgUrl);
      if (value.staffType != null) ProtoAdapter.UINT32.encodeWithTag(writer, 26, value.staffType);
      if (value.idPic2Url != null) ProtoAdapter.STRING.encodeWithTag(writer, 27, value.idPic2Url);
      if (value.healthCareImgId != null) ProtoAdapter.STRING.encodeWithTag(writer, 28, value.healthCareImgId);
      if (value.kinsfolkImgId != null) ProtoAdapter.STRING.encodeWithTag(writer, 29, value.kinsfolkImgId);
      if (value.idPic2Id != null) ProtoAdapter.STRING.encodeWithTag(writer, 30, value.idPic2Id);
      writer.writeBytes(value.unknownFields());
    }

    @Override
    public KinsfolkVO decode(ProtoReader reader) throws IOException {
      Builder builder = new Builder();
      long token = reader.beginMessage();
      for (int tag; (tag = reader.nextTag()) != -1;) {
        switch (tag) {
          case 1: builder.kinsId(ProtoAdapter.UINT64.decode(reader)); break;
          case 2: builder.name(ProtoAdapter.STRING.decode(reader)); break;
          case 3: builder.age(ProtoAdapter.UINT32.decode(reader)); break;
          case 4: builder.sex(ProtoAdapter.UINT32.decode(reader)); break;
          case 5: builder.relation(ProtoAdapter.STRING.decode(reader)); break;
          case 6: builder.idCardNo(ProtoAdapter.STRING.decode(reader)); break;
          case 7: builder.height(ProtoAdapter.STRING.decode(reader)); break;
          case 8: builder.weight(ProtoAdapter.STRING.decode(reader)); break;
          case 9: builder.physicalState(ProtoAdapter.STRING.decode(reader)); break;
          case 10: builder.idPic(ProtoAdapter.STRING.decode(reader)); break;
          case 11: builder.medicalNO(ProtoAdapter.STRING.decode(reader)); break;
          case 12: builder.language.add(ProtoAdapter.UINT32.decode(reader)); break;
          case 13: builder.idPicUrl(ProtoAdapter.STRING.decode(reader)); break;
          case 14: builder.actAbility(ProtoAdapter.UINT32.decode(reader)); break;
          case 15: builder.defaultUse(ProtoAdapter.BOOL.decode(reader)); break;
          case 16: builder.medicareType(ProtoAdapter.UINT32.decode(reader)); break;
          case 17: builder.medicare(ProtoAdapter.STRING.decode(reader)); break;
          case 18: builder.insureFlag(ProtoAdapter.BOOL.decode(reader)); break;
          case 19: builder.insureDesc(ProtoAdapter.STRING.decode(reader)); break;
          case 20: builder.score(ProtoAdapter.INT32.decode(reader)); break;
          case 21: builder.healthCareNO(ProtoAdapter.STRING.decode(reader)); break;
          case 22: builder.extraInfo(ProtoAdapter.STRING.decode(reader)); break;
          case 23: builder.insureFlagType(ProtoAdapter.UINT32.decode(reader)); break;
          case 24: builder.healthCareImgUrl(ProtoAdapter.STRING.decode(reader)); break;
          case 25: builder.kinsfolkImgUrl(ProtoAdapter.STRING.decode(reader)); break;
          case 26: builder.staffType(ProtoAdapter.UINT32.decode(reader)); break;
          case 27: builder.idPic2Url(ProtoAdapter.STRING.decode(reader)); break;
          case 28: builder.healthCareImgId(ProtoAdapter.STRING.decode(reader)); break;
          case 29: builder.kinsfolkImgId(ProtoAdapter.STRING.decode(reader)); break;
          case 30: builder.idPic2Id(ProtoAdapter.STRING.decode(reader)); break;
          default: {
            FieldEncoding fieldEncoding = reader.peekFieldEncoding();
            Object value = fieldEncoding.rawProtoAdapter().decode(reader);
            builder.addUnknownField(tag, fieldEncoding, value);
          }
        }
      }
      reader.endMessage(token);
      return builder.build();
    }

    @Override
    public KinsfolkVO redact(KinsfolkVO value) {
      Builder builder = value.newBuilder();
      builder.clearUnknownFields();
      return builder.build();
    }
  }
}
