// Code generated by Wire protocol buffer compiler, do not edit.
// Source file: Model.proto at 246:1
package com.yijianyi.protocol;

import com.squareup.wire.FieldEncoding;
import com.squareup.wire.Message;
import com.squareup.wire.ProtoAdapter;
import com.squareup.wire.ProtoReader;
import com.squareup.wire.ProtoWriter;
import com.squareup.wire.WireField;
import com.squareup.wire.internal.Internal;
import java.io.IOException;
import java.lang.Integer;
import java.lang.Long;
import java.lang.Object;
import java.lang.Override;
import java.lang.String;
import java.lang.StringBuilder;
import okio.ByteString;

/**
 * 入院通知单或住院手环识别对象
 */
public final class HospitalBra extends Message<HospitalBra, HospitalBra.Builder> {
  public static final ProtoAdapter<HospitalBra> ADAPTER = new ProtoAdapter_HospitalBra();

  private static final long serialVersionUID = 0L;

  public static final String DEFAULT_NAME = "";

  public static final Integer DEFAULT_SEX = 0;

  public static final Integer DEFAULT_AGE = 0;

  public static final String DEFAULT_PHONE = "";

  public static final String DEFAULT_BRANCHNAME = "";

  public static final String DEFAULT_ORGNAME = "";

  public static final String DEFAULT_ORGNO = "";

  public static final String DEFAULT_ADMISSIONDATE = "";

  public static final Long DEFAULT_ORGID = 0L;

  public static final Long DEFAULT_BRANCHID = 0L;

  public static final Long DEFAULT_KINSID = 0L;

  public static final String DEFAULT_IMGID = "";

  public static final String DEFAULT_BEDNO = "";

  /**
   * 姓名
   */
  @WireField(
      tag = 1,
      adapter = "com.squareup.wire.ProtoAdapter#STRING"
  )
  public final String name;

  /**
   * 性别 0-未知 1-男 2-女
   */
  @WireField(
      tag = 2,
      adapter = "com.squareup.wire.ProtoAdapter#UINT32"
  )
  public final Integer sex;

  /**
   * 年龄
   */
  @WireField(
      tag = 3,
      adapter = "com.squareup.wire.ProtoAdapter#UINT32"
  )
  public final Integer age;

  /**
   * 手机号
   */
  @WireField(
      tag = 4,
      adapter = "com.squareup.wire.ProtoAdapter#STRING"
  )
  public final String phone;

  /**
   * 科室名
   */
  @WireField(
      tag = 5,
      adapter = "com.squareup.wire.ProtoAdapter#STRING"
  )
  public final String branchName;

  /**
   * 机构名
   */
  @WireField(
      tag = 6,
      adapter = "com.squareup.wire.ProtoAdapter#STRING"
  )
  public final String orgName;

  /**
   * 住院号
   */
  @WireField(
      tag = 7,
      adapter = "com.squareup.wire.ProtoAdapter#STRING"
  )
  public final String orgNO;

  /**
   * 入院日期
   */
  @WireField(
      tag = 8,
      adapter = "com.squareup.wire.ProtoAdapter#STRING"
  )
  public final String admissionDate;

  /**
   * 机构id
   */
  @WireField(
      tag = 9,
      adapter = "com.squareup.wire.ProtoAdapter#UINT64"
  )
  public final Long orgId;

  /**
   * 科室id
   */
  @WireField(
      tag = 10,
      adapter = "com.squareup.wire.ProtoAdapter#UINT64"
  )
  public final Long branchId;

  /**
   * 被陪护人id
   */
  @WireField(
      tag = 11,
      adapter = "com.squareup.wire.ProtoAdapter#UINT64"
  )
  public final Long kinsId;

  /**
   * 识别图片的图片id
   */
  @WireField(
      tag = 12,
      adapter = "com.squareup.wire.ProtoAdapter#STRING"
  )
  public final String imgId;

  /**
   * 床号
   */
  @WireField(
      tag = 13,
      adapter = "com.squareup.wire.ProtoAdapter#STRING"
  )
  public final String bedNO;

  public HospitalBra(String name, Integer sex, Integer age, String phone, String branchName, String orgName, String orgNO, String admissionDate, Long orgId, Long branchId, Long kinsId, String imgId, String bedNO) {
    this(name, sex, age, phone, branchName, orgName, orgNO, admissionDate, orgId, branchId, kinsId, imgId, bedNO, ByteString.EMPTY);
  }

  public HospitalBra(String name, Integer sex, Integer age, String phone, String branchName, String orgName, String orgNO, String admissionDate, Long orgId, Long branchId, Long kinsId, String imgId, String bedNO, ByteString unknownFields) {
    super(ADAPTER, unknownFields);
    this.name = name;
    this.sex = sex;
    this.age = age;
    this.phone = phone;
    this.branchName = branchName;
    this.orgName = orgName;
    this.orgNO = orgNO;
    this.admissionDate = admissionDate;
    this.orgId = orgId;
    this.branchId = branchId;
    this.kinsId = kinsId;
    this.imgId = imgId;
    this.bedNO = bedNO;
  }

  @Override
  public Builder newBuilder() {
    Builder builder = new Builder();
    builder.name = name;
    builder.sex = sex;
    builder.age = age;
    builder.phone = phone;
    builder.branchName = branchName;
    builder.orgName = orgName;
    builder.orgNO = orgNO;
    builder.admissionDate = admissionDate;
    builder.orgId = orgId;
    builder.branchId = branchId;
    builder.kinsId = kinsId;
    builder.imgId = imgId;
    builder.bedNO = bedNO;
    builder.addUnknownFields(unknownFields());
    return builder;
  }

  @Override
  public boolean equals(Object other) {
    if (other == this) return true;
    if (!(other instanceof HospitalBra)) return false;
    HospitalBra o = (HospitalBra) other;
    return unknownFields().equals(o.unknownFields())
        && Internal.equals(name, o.name)
        && Internal.equals(sex, o.sex)
        && Internal.equals(age, o.age)
        && Internal.equals(phone, o.phone)
        && Internal.equals(branchName, o.branchName)
        && Internal.equals(orgName, o.orgName)
        && Internal.equals(orgNO, o.orgNO)
        && Internal.equals(admissionDate, o.admissionDate)
        && Internal.equals(orgId, o.orgId)
        && Internal.equals(branchId, o.branchId)
        && Internal.equals(kinsId, o.kinsId)
        && Internal.equals(imgId, o.imgId)
        && Internal.equals(bedNO, o.bedNO);
  }

  @Override
  public int hashCode() {
    int result = super.hashCode;
    if (result == 0) {
      result = unknownFields().hashCode();
      result = result * 37 + (name != null ? name.hashCode() : 0);
      result = result * 37 + (sex != null ? sex.hashCode() : 0);
      result = result * 37 + (age != null ? age.hashCode() : 0);
      result = result * 37 + (phone != null ? phone.hashCode() : 0);
      result = result * 37 + (branchName != null ? branchName.hashCode() : 0);
      result = result * 37 + (orgName != null ? orgName.hashCode() : 0);
      result = result * 37 + (orgNO != null ? orgNO.hashCode() : 0);
      result = result * 37 + (admissionDate != null ? admissionDate.hashCode() : 0);
      result = result * 37 + (orgId != null ? orgId.hashCode() : 0);
      result = result * 37 + (branchId != null ? branchId.hashCode() : 0);
      result = result * 37 + (kinsId != null ? kinsId.hashCode() : 0);
      result = result * 37 + (imgId != null ? imgId.hashCode() : 0);
      result = result * 37 + (bedNO != null ? bedNO.hashCode() : 0);
      super.hashCode = result;
    }
    return result;
  }

  @Override
  public String toString() {
    StringBuilder builder = new StringBuilder();
    if (name != null) builder.append(", name=").append(name);
    if (sex != null) builder.append(", sex=").append(sex);
    if (age != null) builder.append(", age=").append(age);
    if (phone != null) builder.append(", phone=").append(phone);
    if (branchName != null) builder.append(", branchName=").append(branchName);
    if (orgName != null) builder.append(", orgName=").append(orgName);
    if (orgNO != null) builder.append(", orgNO=").append(orgNO);
    if (admissionDate != null) builder.append(", admissionDate=").append(admissionDate);
    if (orgId != null) builder.append(", orgId=").append(orgId);
    if (branchId != null) builder.append(", branchId=").append(branchId);
    if (kinsId != null) builder.append(", kinsId=").append(kinsId);
    if (imgId != null) builder.append(", imgId=").append(imgId);
    if (bedNO != null) builder.append(", bedNO=").append(bedNO);
    return builder.replace(0, 2, "HospitalBra{").append('}').toString();
  }

  public static final class Builder extends Message.Builder<HospitalBra, Builder> {
    public String name;

    public Integer sex;

    public Integer age;

    public String phone;

    public String branchName;

    public String orgName;

    public String orgNO;

    public String admissionDate;

    public Long orgId;

    public Long branchId;

    public Long kinsId;

    public String imgId;

    public String bedNO;

    public Builder() {
    }

    /**
     * 姓名
     */
    public Builder name(String name) {
      this.name = name;
      return this;
    }

    /**
     * 性别 0-未知 1-男 2-女
     */
    public Builder sex(Integer sex) {
      this.sex = sex;
      return this;
    }

    /**
     * 年龄
     */
    public Builder age(Integer age) {
      this.age = age;
      return this;
    }

    /**
     * 手机号
     */
    public Builder phone(String phone) {
      this.phone = phone;
      return this;
    }

    /**
     * 科室名
     */
    public Builder branchName(String branchName) {
      this.branchName = branchName;
      return this;
    }

    /**
     * 机构名
     */
    public Builder orgName(String orgName) {
      this.orgName = orgName;
      return this;
    }

    /**
     * 住院号
     */
    public Builder orgNO(String orgNO) {
      this.orgNO = orgNO;
      return this;
    }

    /**
     * 入院日期
     */
    public Builder admissionDate(String admissionDate) {
      this.admissionDate = admissionDate;
      return this;
    }

    /**
     * 机构id
     */
    public Builder orgId(Long orgId) {
      this.orgId = orgId;
      return this;
    }

    /**
     * 科室id
     */
    public Builder branchId(Long branchId) {
      this.branchId = branchId;
      return this;
    }

    /**
     * 被陪护人id
     */
    public Builder kinsId(Long kinsId) {
      this.kinsId = kinsId;
      return this;
    }

    /**
     * 识别图片的图片id
     */
    public Builder imgId(String imgId) {
      this.imgId = imgId;
      return this;
    }

    /**
     * 床号
     */
    public Builder bedNO(String bedNO) {
      this.bedNO = bedNO;
      return this;
    }

    @Override
    public HospitalBra build() {
      return new HospitalBra(name, sex, age, phone, branchName, orgName, orgNO, admissionDate, orgId, branchId, kinsId, imgId, bedNO, super.buildUnknownFields());
    }
  }

  private static final class ProtoAdapter_HospitalBra extends ProtoAdapter<HospitalBra> {
    ProtoAdapter_HospitalBra() {
      super(FieldEncoding.LENGTH_DELIMITED, HospitalBra.class);
    }

    @Override
    public int encodedSize(HospitalBra value) {
      return (value.name != null ? ProtoAdapter.STRING.encodedSizeWithTag(1, value.name) : 0)
          + (value.sex != null ? ProtoAdapter.UINT32.encodedSizeWithTag(2, value.sex) : 0)
          + (value.age != null ? ProtoAdapter.UINT32.encodedSizeWithTag(3, value.age) : 0)
          + (value.phone != null ? ProtoAdapter.STRING.encodedSizeWithTag(4, value.phone) : 0)
          + (value.branchName != null ? ProtoAdapter.STRING.encodedSizeWithTag(5, value.branchName) : 0)
          + (value.orgName != null ? ProtoAdapter.STRING.encodedSizeWithTag(6, value.orgName) : 0)
          + (value.orgNO != null ? ProtoAdapter.STRING.encodedSizeWithTag(7, value.orgNO) : 0)
          + (value.admissionDate != null ? ProtoAdapter.STRING.encodedSizeWithTag(8, value.admissionDate) : 0)
          + (value.orgId != null ? ProtoAdapter.UINT64.encodedSizeWithTag(9, value.orgId) : 0)
          + (value.branchId != null ? ProtoAdapter.UINT64.encodedSizeWithTag(10, value.branchId) : 0)
          + (value.kinsId != null ? ProtoAdapter.UINT64.encodedSizeWithTag(11, value.kinsId) : 0)
          + (value.imgId != null ? ProtoAdapter.STRING.encodedSizeWithTag(12, value.imgId) : 0)
          + (value.bedNO != null ? ProtoAdapter.STRING.encodedSizeWithTag(13, value.bedNO) : 0)
          + value.unknownFields().size();
    }

    @Override
    public void encode(ProtoWriter writer, HospitalBra value) throws IOException {
      if (value.name != null) ProtoAdapter.STRING.encodeWithTag(writer, 1, value.name);
      if (value.sex != null) ProtoAdapter.UINT32.encodeWithTag(writer, 2, value.sex);
      if (value.age != null) ProtoAdapter.UINT32.encodeWithTag(writer, 3, value.age);
      if (value.phone != null) ProtoAdapter.STRING.encodeWithTag(writer, 4, value.phone);
      if (value.branchName != null) ProtoAdapter.STRING.encodeWithTag(writer, 5, value.branchName);
      if (value.orgName != null) ProtoAdapter.STRING.encodeWithTag(writer, 6, value.orgName);
      if (value.orgNO != null) ProtoAdapter.STRING.encodeWithTag(writer, 7, value.orgNO);
      if (value.admissionDate != null) ProtoAdapter.STRING.encodeWithTag(writer, 8, value.admissionDate);
      if (value.orgId != null) ProtoAdapter.UINT64.encodeWithTag(writer, 9, value.orgId);
      if (value.branchId != null) ProtoAdapter.UINT64.encodeWithTag(writer, 10, value.branchId);
      if (value.kinsId != null) ProtoAdapter.UINT64.encodeWithTag(writer, 11, value.kinsId);
      if (value.imgId != null) ProtoAdapter.STRING.encodeWithTag(writer, 12, value.imgId);
      if (value.bedNO != null) ProtoAdapter.STRING.encodeWithTag(writer, 13, value.bedNO);
      writer.writeBytes(value.unknownFields());
    }

    @Override
    public HospitalBra decode(ProtoReader reader) throws IOException {
      Builder builder = new Builder();
      long token = reader.beginMessage();
      for (int tag; (tag = reader.nextTag()) != -1;) {
        switch (tag) {
          case 1: builder.name(ProtoAdapter.STRING.decode(reader)); break;
          case 2: builder.sex(ProtoAdapter.UINT32.decode(reader)); break;
          case 3: builder.age(ProtoAdapter.UINT32.decode(reader)); break;
          case 4: builder.phone(ProtoAdapter.STRING.decode(reader)); break;
          case 5: builder.branchName(ProtoAdapter.STRING.decode(reader)); break;
          case 6: builder.orgName(ProtoAdapter.STRING.decode(reader)); break;
          case 7: builder.orgNO(ProtoAdapter.STRING.decode(reader)); break;
          case 8: builder.admissionDate(ProtoAdapter.STRING.decode(reader)); break;
          case 9: builder.orgId(ProtoAdapter.UINT64.decode(reader)); break;
          case 10: builder.branchId(ProtoAdapter.UINT64.decode(reader)); break;
          case 11: builder.kinsId(ProtoAdapter.UINT64.decode(reader)); break;
          case 12: builder.imgId(ProtoAdapter.STRING.decode(reader)); break;
          case 13: builder.bedNO(ProtoAdapter.STRING.decode(reader)); break;
          default: {
            FieldEncoding fieldEncoding = reader.peekFieldEncoding();
            Object value = fieldEncoding.rawProtoAdapter().decode(reader);
            builder.addUnknownField(tag, fieldEncoding, value);
          }
        }
      }
      reader.endMessage(token);
      return builder.build();
    }

    @Override
    public HospitalBra redact(HospitalBra value) {
      Builder builder = value.newBuilder();
      builder.clearUnknownFields();
      return builder.build();
    }
  }
}
