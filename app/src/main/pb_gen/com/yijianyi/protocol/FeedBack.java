// Code generated by Wire protocol buffer compiler, do not edit.
// Source file: Model.proto at 212:1
package com.yijianyi.protocol;

import com.squareup.wire.FieldEncoding;
import com.squareup.wire.Message;
import com.squareup.wire.ProtoAdapter;
import com.squareup.wire.ProtoReader;
import com.squareup.wire.ProtoWriter;
import com.squareup.wire.WireField;
import com.squareup.wire.internal.Internal;
import java.io.IOException;
import java.lang.Integer;
import java.lang.Long;
import java.lang.Object;
import java.lang.Override;
import java.lang.String;
import java.lang.StringBuilder;
import okio.ByteString;

/**
 * 意见反馈
 */
public final class FeedBack extends Message<FeedBack, FeedBack.Builder> {
  public static final ProtoAdapter<FeedBack> ADAPTER = new ProtoAdapter_FeedBack();

  private static final long serialVersionUID = 0L;

  public static final Long DEFAULT_ID = 0L;

  public static final Long DEFAULT_USERID = 0L;

  public static final String DEFAULT_SUGGEST = "";

  public static final String DEFAULT_CREATECHANNEL = "";

  public static final String DEFAULT_CREATETIME = "";

  public static final String DEFAULT_REPLY = "";

  public static final Integer DEFAULT_STATE = 0;

  public static final Long DEFAULT_REPLYSTAFFID = 0L;

  public static final String DEFAULT_REPLYSTAFFNAME = "";

  public static final Integer DEFAULT_FBTYPE = 0;

  public static final String DEFAULT_USERNAME = "";

  public static final String DEFAULT_PHONE = "";

  @WireField(
      tag = 1,
      adapter = "com.squareup.wire.ProtoAdapter#UINT64"
  )
  public final Long id;

  @WireField(
      tag = 2,
      adapter = "com.squareup.wire.ProtoAdapter#UINT64"
  )
  public final Long userId;

  /**
   * 意见内容
   */
  @WireField(
      tag = 3,
      adapter = "com.squareup.wire.ProtoAdapter#STRING"
  )
  public final String suggest;

  @WireField(
      tag = 4,
      adapter = "com.squareup.wire.ProtoAdapter#STRING"
  )
  public final String createChannel;

  @WireField(
      tag = 5,
      adapter = "com.squareup.wire.ProtoAdapter#STRING"
  )
  public final String createTime;

  /**
   * 客服回复
   */
  @WireField(
      tag = 6,
      adapter = "com.squareup.wire.ProtoAdapter#STRING"
  )
  public final String reply;

  /**
   * 1 未回复 2已回复
   */
  @WireField(
      tag = 7,
      adapter = "com.squareup.wire.ProtoAdapter#UINT32"
  )
  public final Integer state;

  /**
   * 回复人id
   */
  @WireField(
      tag = 8,
      adapter = "com.squareup.wire.ProtoAdapter#UINT64"
  )
  public final Long replyStaffId;

  /**
   * 回复人姓名
   */
  @WireField(
      tag = 9,
      adapter = "com.squareup.wire.ProtoAdapter#STRING"
  )
  public final String replyStaffName;

  /**
   * 类型 1-用户端 2-企业端
   */
  @WireField(
      tag = 10,
      adapter = "com.squareup.wire.ProtoAdapter#UINT32"
  )
  public final Integer fbType;

  /**
   * 反馈人
   */
  @WireField(
      tag = 11,
      adapter = "com.squareup.wire.ProtoAdapter#STRING"
  )
  public final String userName;

  /**
   * 反馈人手机号
   */
  @WireField(
      tag = 12,
      adapter = "com.squareup.wire.ProtoAdapter#STRING"
  )
  public final String phone;

  public FeedBack(Long id, Long userId, String suggest, String createChannel, String createTime, String reply, Integer state, Long replyStaffId, String replyStaffName, Integer fbType, String userName, String phone) {
    this(id, userId, suggest, createChannel, createTime, reply, state, replyStaffId, replyStaffName, fbType, userName, phone, ByteString.EMPTY);
  }

  public FeedBack(Long id, Long userId, String suggest, String createChannel, String createTime, String reply, Integer state, Long replyStaffId, String replyStaffName, Integer fbType, String userName, String phone, ByteString unknownFields) {
    super(ADAPTER, unknownFields);
    this.id = id;
    this.userId = userId;
    this.suggest = suggest;
    this.createChannel = createChannel;
    this.createTime = createTime;
    this.reply = reply;
    this.state = state;
    this.replyStaffId = replyStaffId;
    this.replyStaffName = replyStaffName;
    this.fbType = fbType;
    this.userName = userName;
    this.phone = phone;
  }

  @Override
  public Builder newBuilder() {
    Builder builder = new Builder();
    builder.id = id;
    builder.userId = userId;
    builder.suggest = suggest;
    builder.createChannel = createChannel;
    builder.createTime = createTime;
    builder.reply = reply;
    builder.state = state;
    builder.replyStaffId = replyStaffId;
    builder.replyStaffName = replyStaffName;
    builder.fbType = fbType;
    builder.userName = userName;
    builder.phone = phone;
    builder.addUnknownFields(unknownFields());
    return builder;
  }

  @Override
  public boolean equals(Object other) {
    if (other == this) return true;
    if (!(other instanceof FeedBack)) return false;
    FeedBack o = (FeedBack) other;
    return unknownFields().equals(o.unknownFields())
        && Internal.equals(id, o.id)
        && Internal.equals(userId, o.userId)
        && Internal.equals(suggest, o.suggest)
        && Internal.equals(createChannel, o.createChannel)
        && Internal.equals(createTime, o.createTime)
        && Internal.equals(reply, o.reply)
        && Internal.equals(state, o.state)
        && Internal.equals(replyStaffId, o.replyStaffId)
        && Internal.equals(replyStaffName, o.replyStaffName)
        && Internal.equals(fbType, o.fbType)
        && Internal.equals(userName, o.userName)
        && Internal.equals(phone, o.phone);
  }

  @Override
  public int hashCode() {
    int result = super.hashCode;
    if (result == 0) {
      result = unknownFields().hashCode();
      result = result * 37 + (id != null ? id.hashCode() : 0);
      result = result * 37 + (userId != null ? userId.hashCode() : 0);
      result = result * 37 + (suggest != null ? suggest.hashCode() : 0);
      result = result * 37 + (createChannel != null ? createChannel.hashCode() : 0);
      result = result * 37 + (createTime != null ? createTime.hashCode() : 0);
      result = result * 37 + (reply != null ? reply.hashCode() : 0);
      result = result * 37 + (state != null ? state.hashCode() : 0);
      result = result * 37 + (replyStaffId != null ? replyStaffId.hashCode() : 0);
      result = result * 37 + (replyStaffName != null ? replyStaffName.hashCode() : 0);
      result = result * 37 + (fbType != null ? fbType.hashCode() : 0);
      result = result * 37 + (userName != null ? userName.hashCode() : 0);
      result = result * 37 + (phone != null ? phone.hashCode() : 0);
      super.hashCode = result;
    }
    return result;
  }

  @Override
  public String toString() {
    StringBuilder builder = new StringBuilder();
    if (id != null) builder.append(", id=").append(id);
    if (userId != null) builder.append(", userId=").append(userId);
    if (suggest != null) builder.append(", suggest=").append(suggest);
    if (createChannel != null) builder.append(", createChannel=").append(createChannel);
    if (createTime != null) builder.append(", createTime=").append(createTime);
    if (reply != null) builder.append(", reply=").append(reply);
    if (state != null) builder.append(", state=").append(state);
    if (replyStaffId != null) builder.append(", replyStaffId=").append(replyStaffId);
    if (replyStaffName != null) builder.append(", replyStaffName=").append(replyStaffName);
    if (fbType != null) builder.append(", fbType=").append(fbType);
    if (userName != null) builder.append(", userName=").append(userName);
    if (phone != null) builder.append(", phone=").append(phone);
    return builder.replace(0, 2, "FeedBack{").append('}').toString();
  }

  public static final class Builder extends Message.Builder<FeedBack, Builder> {
    public Long id;

    public Long userId;

    public String suggest;

    public String createChannel;

    public String createTime;

    public String reply;

    public Integer state;

    public Long replyStaffId;

    public String replyStaffName;

    public Integer fbType;

    public String userName;

    public String phone;

    public Builder() {
    }

    public Builder id(Long id) {
      this.id = id;
      return this;
    }

    public Builder userId(Long userId) {
      this.userId = userId;
      return this;
    }

    /**
     * 意见内容
     */
    public Builder suggest(String suggest) {
      this.suggest = suggest;
      return this;
    }

    public Builder createChannel(String createChannel) {
      this.createChannel = createChannel;
      return this;
    }

    public Builder createTime(String createTime) {
      this.createTime = createTime;
      return this;
    }

    /**
     * 客服回复
     */
    public Builder reply(String reply) {
      this.reply = reply;
      return this;
    }

    /**
     * 1 未回复 2已回复
     */
    public Builder state(Integer state) {
      this.state = state;
      return this;
    }

    /**
     * 回复人id
     */
    public Builder replyStaffId(Long replyStaffId) {
      this.replyStaffId = replyStaffId;
      return this;
    }

    /**
     * 回复人姓名
     */
    public Builder replyStaffName(String replyStaffName) {
      this.replyStaffName = replyStaffName;
      return this;
    }

    /**
     * 类型 1-用户端 2-企业端
     */
    public Builder fbType(Integer fbType) {
      this.fbType = fbType;
      return this;
    }

    /**
     * 反馈人
     */
    public Builder userName(String userName) {
      this.userName = userName;
      return this;
    }

    /**
     * 反馈人手机号
     */
    public Builder phone(String phone) {
      this.phone = phone;
      return this;
    }

    @Override
    public FeedBack build() {
      return new FeedBack(id, userId, suggest, createChannel, createTime, reply, state, replyStaffId, replyStaffName, fbType, userName, phone, super.buildUnknownFields());
    }
  }

  private static final class ProtoAdapter_FeedBack extends ProtoAdapter<FeedBack> {
    ProtoAdapter_FeedBack() {
      super(FieldEncoding.LENGTH_DELIMITED, FeedBack.class);
    }

    @Override
    public int encodedSize(FeedBack value) {
      return (value.id != null ? ProtoAdapter.UINT64.encodedSizeWithTag(1, value.id) : 0)
          + (value.userId != null ? ProtoAdapter.UINT64.encodedSizeWithTag(2, value.userId) : 0)
          + (value.suggest != null ? ProtoAdapter.STRING.encodedSizeWithTag(3, value.suggest) : 0)
          + (value.createChannel != null ? ProtoAdapter.STRING.encodedSizeWithTag(4, value.createChannel) : 0)
          + (value.createTime != null ? ProtoAdapter.STRING.encodedSizeWithTag(5, value.createTime) : 0)
          + (value.reply != null ? ProtoAdapter.STRING.encodedSizeWithTag(6, value.reply) : 0)
          + (value.state != null ? ProtoAdapter.UINT32.encodedSizeWithTag(7, value.state) : 0)
          + (value.replyStaffId != null ? ProtoAdapter.UINT64.encodedSizeWithTag(8, value.replyStaffId) : 0)
          + (value.replyStaffName != null ? ProtoAdapter.STRING.encodedSizeWithTag(9, value.replyStaffName) : 0)
          + (value.fbType != null ? ProtoAdapter.UINT32.encodedSizeWithTag(10, value.fbType) : 0)
          + (value.userName != null ? ProtoAdapter.STRING.encodedSizeWithTag(11, value.userName) : 0)
          + (value.phone != null ? ProtoAdapter.STRING.encodedSizeWithTag(12, value.phone) : 0)
          + value.unknownFields().size();
    }

    @Override
    public void encode(ProtoWriter writer, FeedBack value) throws IOException {
      if (value.id != null) ProtoAdapter.UINT64.encodeWithTag(writer, 1, value.id);
      if (value.userId != null) ProtoAdapter.UINT64.encodeWithTag(writer, 2, value.userId);
      if (value.suggest != null) ProtoAdapter.STRING.encodeWithTag(writer, 3, value.suggest);
      if (value.createChannel != null) ProtoAdapter.STRING.encodeWithTag(writer, 4, value.createChannel);
      if (value.createTime != null) ProtoAdapter.STRING.encodeWithTag(writer, 5, value.createTime);
      if (value.reply != null) ProtoAdapter.STRING.encodeWithTag(writer, 6, value.reply);
      if (value.state != null) ProtoAdapter.UINT32.encodeWithTag(writer, 7, value.state);
      if (value.replyStaffId != null) ProtoAdapter.UINT64.encodeWithTag(writer, 8, value.replyStaffId);
      if (value.replyStaffName != null) ProtoAdapter.STRING.encodeWithTag(writer, 9, value.replyStaffName);
      if (value.fbType != null) ProtoAdapter.UINT32.encodeWithTag(writer, 10, value.fbType);
      if (value.userName != null) ProtoAdapter.STRING.encodeWithTag(writer, 11, value.userName);
      if (value.phone != null) ProtoAdapter.STRING.encodeWithTag(writer, 12, value.phone);
      writer.writeBytes(value.unknownFields());
    }

    @Override
    public FeedBack decode(ProtoReader reader) throws IOException {
      Builder builder = new Builder();
      long token = reader.beginMessage();
      for (int tag; (tag = reader.nextTag()) != -1;) {
        switch (tag) {
          case 1: builder.id(ProtoAdapter.UINT64.decode(reader)); break;
          case 2: builder.userId(ProtoAdapter.UINT64.decode(reader)); break;
          case 3: builder.suggest(ProtoAdapter.STRING.decode(reader)); break;
          case 4: builder.createChannel(ProtoAdapter.STRING.decode(reader)); break;
          case 5: builder.createTime(ProtoAdapter.STRING.decode(reader)); break;
          case 6: builder.reply(ProtoAdapter.STRING.decode(reader)); break;
          case 7: builder.state(ProtoAdapter.UINT32.decode(reader)); break;
          case 8: builder.replyStaffId(ProtoAdapter.UINT64.decode(reader)); break;
          case 9: builder.replyStaffName(ProtoAdapter.STRING.decode(reader)); break;
          case 10: builder.fbType(ProtoAdapter.UINT32.decode(reader)); break;
          case 11: builder.userName(ProtoAdapter.STRING.decode(reader)); break;
          case 12: builder.phone(ProtoAdapter.STRING.decode(reader)); break;
          default: {
            FieldEncoding fieldEncoding = reader.peekFieldEncoding();
            Object value = fieldEncoding.rawProtoAdapter().decode(reader);
            builder.addUnknownField(tag, fieldEncoding, value);
          }
        }
      }
      reader.endMessage(token);
      return builder.build();
    }

    @Override
    public FeedBack redact(FeedBack value) {
      Builder builder = value.newBuilder();
      builder.clearUnknownFields();
      return builder.build();
    }
  }
}
