// Code generated by Wire protocol buffer compiler, do not edit.
// Source file: AppInterface.proto at 1392:1
package com.yijianyi.protocol;

import com.squareup.wire.FieldEncoding;
import com.squareup.wire.Message;
import com.squareup.wire.ProtoAdapter;
import com.squareup.wire.ProtoReader;
import com.squareup.wire.ProtoWriter;
import com.squareup.wire.WireField;
import com.squareup.wire.internal.Internal;
import java.io.IOException;
import java.lang.Long;
import java.lang.Object;
import java.lang.Override;
import java.lang.String;
import java.lang.StringBuilder;
import java.util.List;
import okio.ByteString;

/**
 * 订单明细（修改用）
 */
public final class GetOrderItemRsp extends Message<GetOrderItemRsp, GetOrderItemRsp.Builder> {
  public static final ProtoAdapter<GetOrderItemRsp> ADAPTER = new ProtoAdapter_GetOrderItemRsp();

  private static final long serialVersionUID = 0L;

  public static final Long DEFAULT_TOTALFEE = 0L;

  public static final Long DEFAULT_TOTALCOSTPRC = 0L;

  public static final Long DEFAULT_NUMBERPRC = 0L;

  public static final Long DEFAULT_SERVICETOTALFEE = 0L;

  public static final String DEFAULT_TOTALFEESTR = "";

  public static final String DEFAULT_TOTALCOSTPRCSTR = "";

  public static final String DEFAULT_SERVICETOTALFEESTR = "";

  public static final String DEFAULT_HGREBATEFEESTR = "";

  public static final Long DEFAULT_HGREBATETYPE = 0L;

  public static final String DEFAULT_HGREBATETYPESTR = "";

  /**
   * 基础服务
   */
  @WireField(
      tag = 1,
      adapter = "com.yijianyi.protocol.OrderItemVO3#ADAPTER",
      label = WireField.Label.REPEATED
  )
  public final List<OrderItemVO3> serviceList;

  /**
   * 附加服务
   */
  @WireField(
      tag = 2,
      adapter = "com.yijianyi.protocol.OrderItemVO2#ADAPTER",
      label = WireField.Label.REPEATED
  )
  public final List<OrderItemVO2> extraList;

  /**
   * 总消费
   */
  @WireField(
      tag = 3,
      adapter = "com.squareup.wire.ProtoAdapter#INT64"
  )
  public final Long totalFee;

  /**
   * 陪人床总费用
   */
  @WireField(
      tag = 4,
      adapter = "com.squareup.wire.ProtoAdapter#INT64"
  )
  public final Long totalCostPRC;

  /**
   * 陪人床总次数
   */
  @WireField(
      tag = 6,
      adapter = "com.squareup.wire.ProtoAdapter#INT64"
  )
  public final Long numberPRC;

  /**
   * 陪护费
   */
  @WireField(
      tag = 7,
      adapter = "com.squareup.wire.ProtoAdapter#INT64"
  )
  public final Long serviceTotalFee;

  /**
   * 总消费
   */
  @WireField(
      tag = 8,
      adapter = "com.squareup.wire.ProtoAdapter#STRING"
  )
  public final String totalFeeStr;

  /**
   * 陪人床总费用
   */
  @WireField(
      tag = 9,
      adapter = "com.squareup.wire.ProtoAdapter#STRING"
  )
  public final String totalCostPRCStr;

  /**
   * 陪护费
   */
  @WireField(
      tag = 10,
      adapter = "com.squareup.wire.ProtoAdapter#STRING"
  )
  public final String serviceTotalFeeStr;

  /**
   * 订单信息
   */
  @WireField(
      tag = 11,
      adapter = "com.yijianyi.protocol.OrderVO#ADAPTER"
  )
  public final OrderVO order;

  /**
   * 普通附加服务
   */
  @WireField(
      tag = 12,
      adapter = "com.yijianyi.protocol.CompanyPriceVO#ADAPTER",
      label = WireField.Label.REPEATED
  )
  public final List<CompanyPriceVO> priceVOOrdinaryList;

  /**
   * 金额调整附加服务
   */
  @WireField(
      tag = 13,
      adapter = "com.yijianyi.protocol.CompanyPriceVO#ADAPTER",
      label = WireField.Label.REPEATED
  )
  public final List<CompanyPriceVO> priceVOAdjustList;

  /**
   * 陪人床附加服务
   */
  @WireField(
      tag = 14,
      adapter = "com.yijianyi.protocol.CompanyPriceVO#ADAPTER",
      label = WireField.Label.REPEATED
  )
  public final List<CompanyPriceVO> priceVOPrcList;

  /**
   * 优惠金额
   */
  @WireField(
      tag = 15,
      adapter = "com.squareup.wire.ProtoAdapter#STRING"
  )
  public final String hgRebateFeeStr;

  /**
   * 优惠类型 // 职工优惠类型 0-无优惠 1-职工 2-职工家属
   */
  @WireField(
      tag = 16,
      adapter = "com.squareup.wire.ProtoAdapter#INT64"
  )
  public final Long hgRebateType;

  /**
   * 优惠类型
   */
  @WireField(
      tag = 17,
      adapter = "com.squareup.wire.ProtoAdapter#STRING"
  )
  public final String hgRebateTypeStr;

  public GetOrderItemRsp(List<OrderItemVO3> serviceList, List<OrderItemVO2> extraList, Long totalFee, Long totalCostPRC, Long numberPRC, Long serviceTotalFee, String totalFeeStr, String totalCostPRCStr, String serviceTotalFeeStr, OrderVO order, List<CompanyPriceVO> priceVOOrdinaryList, List<CompanyPriceVO> priceVOAdjustList, List<CompanyPriceVO> priceVOPrcList, String hgRebateFeeStr, Long hgRebateType, String hgRebateTypeStr) {
    this(serviceList, extraList, totalFee, totalCostPRC, numberPRC, serviceTotalFee, totalFeeStr, totalCostPRCStr, serviceTotalFeeStr, order, priceVOOrdinaryList, priceVOAdjustList, priceVOPrcList, hgRebateFeeStr, hgRebateType, hgRebateTypeStr, ByteString.EMPTY);
  }

  public GetOrderItemRsp(List<OrderItemVO3> serviceList, List<OrderItemVO2> extraList, Long totalFee, Long totalCostPRC, Long numberPRC, Long serviceTotalFee, String totalFeeStr, String totalCostPRCStr, String serviceTotalFeeStr, OrderVO order, List<CompanyPriceVO> priceVOOrdinaryList, List<CompanyPriceVO> priceVOAdjustList, List<CompanyPriceVO> priceVOPrcList, String hgRebateFeeStr, Long hgRebateType, String hgRebateTypeStr, ByteString unknownFields) {
    super(ADAPTER, unknownFields);
    this.serviceList = Internal.immutableCopyOf("serviceList", serviceList);
    this.extraList = Internal.immutableCopyOf("extraList", extraList);
    this.totalFee = totalFee;
    this.totalCostPRC = totalCostPRC;
    this.numberPRC = numberPRC;
    this.serviceTotalFee = serviceTotalFee;
    this.totalFeeStr = totalFeeStr;
    this.totalCostPRCStr = totalCostPRCStr;
    this.serviceTotalFeeStr = serviceTotalFeeStr;
    this.order = order;
    this.priceVOOrdinaryList = Internal.immutableCopyOf("priceVOOrdinaryList", priceVOOrdinaryList);
    this.priceVOAdjustList = Internal.immutableCopyOf("priceVOAdjustList", priceVOAdjustList);
    this.priceVOPrcList = Internal.immutableCopyOf("priceVOPrcList", priceVOPrcList);
    this.hgRebateFeeStr = hgRebateFeeStr;
    this.hgRebateType = hgRebateType;
    this.hgRebateTypeStr = hgRebateTypeStr;
  }

  @Override
  public Builder newBuilder() {
    Builder builder = new Builder();
    builder.serviceList = Internal.copyOf("serviceList", serviceList);
    builder.extraList = Internal.copyOf("extraList", extraList);
    builder.totalFee = totalFee;
    builder.totalCostPRC = totalCostPRC;
    builder.numberPRC = numberPRC;
    builder.serviceTotalFee = serviceTotalFee;
    builder.totalFeeStr = totalFeeStr;
    builder.totalCostPRCStr = totalCostPRCStr;
    builder.serviceTotalFeeStr = serviceTotalFeeStr;
    builder.order = order;
    builder.priceVOOrdinaryList = Internal.copyOf("priceVOOrdinaryList", priceVOOrdinaryList);
    builder.priceVOAdjustList = Internal.copyOf("priceVOAdjustList", priceVOAdjustList);
    builder.priceVOPrcList = Internal.copyOf("priceVOPrcList", priceVOPrcList);
    builder.hgRebateFeeStr = hgRebateFeeStr;
    builder.hgRebateType = hgRebateType;
    builder.hgRebateTypeStr = hgRebateTypeStr;
    builder.addUnknownFields(unknownFields());
    return builder;
  }

  @Override
  public boolean equals(Object other) {
    if (other == this) return true;
    if (!(other instanceof GetOrderItemRsp)) return false;
    GetOrderItemRsp o = (GetOrderItemRsp) other;
    return unknownFields().equals(o.unknownFields())
        && serviceList.equals(o.serviceList)
        && extraList.equals(o.extraList)
        && Internal.equals(totalFee, o.totalFee)
        && Internal.equals(totalCostPRC, o.totalCostPRC)
        && Internal.equals(numberPRC, o.numberPRC)
        && Internal.equals(serviceTotalFee, o.serviceTotalFee)
        && Internal.equals(totalFeeStr, o.totalFeeStr)
        && Internal.equals(totalCostPRCStr, o.totalCostPRCStr)
        && Internal.equals(serviceTotalFeeStr, o.serviceTotalFeeStr)
        && Internal.equals(order, o.order)
        && priceVOOrdinaryList.equals(o.priceVOOrdinaryList)
        && priceVOAdjustList.equals(o.priceVOAdjustList)
        && priceVOPrcList.equals(o.priceVOPrcList)
        && Internal.equals(hgRebateFeeStr, o.hgRebateFeeStr)
        && Internal.equals(hgRebateType, o.hgRebateType)
        && Internal.equals(hgRebateTypeStr, o.hgRebateTypeStr);
  }

  @Override
  public int hashCode() {
    int result = super.hashCode;
    if (result == 0) {
      result = unknownFields().hashCode();
      result = result * 37 + serviceList.hashCode();
      result = result * 37 + extraList.hashCode();
      result = result * 37 + (totalFee != null ? totalFee.hashCode() : 0);
      result = result * 37 + (totalCostPRC != null ? totalCostPRC.hashCode() : 0);
      result = result * 37 + (numberPRC != null ? numberPRC.hashCode() : 0);
      result = result * 37 + (serviceTotalFee != null ? serviceTotalFee.hashCode() : 0);
      result = result * 37 + (totalFeeStr != null ? totalFeeStr.hashCode() : 0);
      result = result * 37 + (totalCostPRCStr != null ? totalCostPRCStr.hashCode() : 0);
      result = result * 37 + (serviceTotalFeeStr != null ? serviceTotalFeeStr.hashCode() : 0);
      result = result * 37 + (order != null ? order.hashCode() : 0);
      result = result * 37 + priceVOOrdinaryList.hashCode();
      result = result * 37 + priceVOAdjustList.hashCode();
      result = result * 37 + priceVOPrcList.hashCode();
      result = result * 37 + (hgRebateFeeStr != null ? hgRebateFeeStr.hashCode() : 0);
      result = result * 37 + (hgRebateType != null ? hgRebateType.hashCode() : 0);
      result = result * 37 + (hgRebateTypeStr != null ? hgRebateTypeStr.hashCode() : 0);
      super.hashCode = result;
    }
    return result;
  }

  @Override
  public String toString() {
    StringBuilder builder = new StringBuilder();
    if (!serviceList.isEmpty()) builder.append(", serviceList=").append(serviceList);
    if (!extraList.isEmpty()) builder.append(", extraList=").append(extraList);
    if (totalFee != null) builder.append(", totalFee=").append(totalFee);
    if (totalCostPRC != null) builder.append(", totalCostPRC=").append(totalCostPRC);
    if (numberPRC != null) builder.append(", numberPRC=").append(numberPRC);
    if (serviceTotalFee != null) builder.append(", serviceTotalFee=").append(serviceTotalFee);
    if (totalFeeStr != null) builder.append(", totalFeeStr=").append(totalFeeStr);
    if (totalCostPRCStr != null) builder.append(", totalCostPRCStr=").append(totalCostPRCStr);
    if (serviceTotalFeeStr != null) builder.append(", serviceTotalFeeStr=").append(serviceTotalFeeStr);
    if (order != null) builder.append(", order=").append(order);
    if (!priceVOOrdinaryList.isEmpty()) builder.append(", priceVOOrdinaryList=").append(priceVOOrdinaryList);
    if (!priceVOAdjustList.isEmpty()) builder.append(", priceVOAdjustList=").append(priceVOAdjustList);
    if (!priceVOPrcList.isEmpty()) builder.append(", priceVOPrcList=").append(priceVOPrcList);
    if (hgRebateFeeStr != null) builder.append(", hgRebateFeeStr=").append(hgRebateFeeStr);
    if (hgRebateType != null) builder.append(", hgRebateType=").append(hgRebateType);
    if (hgRebateTypeStr != null) builder.append(", hgRebateTypeStr=").append(hgRebateTypeStr);
    return builder.replace(0, 2, "GetOrderItemRsp{").append('}').toString();
  }

  public static final class Builder extends Message.Builder<GetOrderItemRsp, Builder> {
    public List<OrderItemVO3> serviceList;

    public List<OrderItemVO2> extraList;

    public Long totalFee;

    public Long totalCostPRC;

    public Long numberPRC;

    public Long serviceTotalFee;

    public String totalFeeStr;

    public String totalCostPRCStr;

    public String serviceTotalFeeStr;

    public OrderVO order;

    public List<CompanyPriceVO> priceVOOrdinaryList;

    public List<CompanyPriceVO> priceVOAdjustList;

    public List<CompanyPriceVO> priceVOPrcList;

    public String hgRebateFeeStr;

    public Long hgRebateType;

    public String hgRebateTypeStr;

    public Builder() {
      serviceList = Internal.newMutableList();
      extraList = Internal.newMutableList();
      priceVOOrdinaryList = Internal.newMutableList();
      priceVOAdjustList = Internal.newMutableList();
      priceVOPrcList = Internal.newMutableList();
    }

    /**
     * 基础服务
     */
    public Builder serviceList(List<OrderItemVO3> serviceList) {
      Internal.checkElementsNotNull(serviceList);
      this.serviceList = serviceList;
      return this;
    }

    /**
     * 附加服务
     */
    public Builder extraList(List<OrderItemVO2> extraList) {
      Internal.checkElementsNotNull(extraList);
      this.extraList = extraList;
      return this;
    }

    /**
     * 总消费
     */
    public Builder totalFee(Long totalFee) {
      this.totalFee = totalFee;
      return this;
    }

    /**
     * 陪人床总费用
     */
    public Builder totalCostPRC(Long totalCostPRC) {
      this.totalCostPRC = totalCostPRC;
      return this;
    }

    /**
     * 陪人床总次数
     */
    public Builder numberPRC(Long numberPRC) {
      this.numberPRC = numberPRC;
      return this;
    }

    /**
     * 陪护费
     */
    public Builder serviceTotalFee(Long serviceTotalFee) {
      this.serviceTotalFee = serviceTotalFee;
      return this;
    }

    /**
     * 总消费
     */
    public Builder totalFeeStr(String totalFeeStr) {
      this.totalFeeStr = totalFeeStr;
      return this;
    }

    /**
     * 陪人床总费用
     */
    public Builder totalCostPRCStr(String totalCostPRCStr) {
      this.totalCostPRCStr = totalCostPRCStr;
      return this;
    }

    /**
     * 陪护费
     */
    public Builder serviceTotalFeeStr(String serviceTotalFeeStr) {
      this.serviceTotalFeeStr = serviceTotalFeeStr;
      return this;
    }

    /**
     * 订单信息
     */
    public Builder order(OrderVO order) {
      this.order = order;
      return this;
    }

    /**
     * 普通附加服务
     */
    public Builder priceVOOrdinaryList(List<CompanyPriceVO> priceVOOrdinaryList) {
      Internal.checkElementsNotNull(priceVOOrdinaryList);
      this.priceVOOrdinaryList = priceVOOrdinaryList;
      return this;
    }

    /**
     * 金额调整附加服务
     */
    public Builder priceVOAdjustList(List<CompanyPriceVO> priceVOAdjustList) {
      Internal.checkElementsNotNull(priceVOAdjustList);
      this.priceVOAdjustList = priceVOAdjustList;
      return this;
    }

    /**
     * 陪人床附加服务
     */
    public Builder priceVOPrcList(List<CompanyPriceVO> priceVOPrcList) {
      Internal.checkElementsNotNull(priceVOPrcList);
      this.priceVOPrcList = priceVOPrcList;
      return this;
    }

    /**
     * 优惠金额
     */
    public Builder hgRebateFeeStr(String hgRebateFeeStr) {
      this.hgRebateFeeStr = hgRebateFeeStr;
      return this;
    }

    /**
     * 优惠类型 // 职工优惠类型 0-无优惠 1-职工 2-职工家属
     */
    public Builder hgRebateType(Long hgRebateType) {
      this.hgRebateType = hgRebateType;
      return this;
    }

    /**
     * 优惠类型
     */
    public Builder hgRebateTypeStr(String hgRebateTypeStr) {
      this.hgRebateTypeStr = hgRebateTypeStr;
      return this;
    }

    @Override
    public GetOrderItemRsp build() {
      return new GetOrderItemRsp(serviceList, extraList, totalFee, totalCostPRC, numberPRC, serviceTotalFee, totalFeeStr, totalCostPRCStr, serviceTotalFeeStr, order, priceVOOrdinaryList, priceVOAdjustList, priceVOPrcList, hgRebateFeeStr, hgRebateType, hgRebateTypeStr, super.buildUnknownFields());
    }
  }

  private static final class ProtoAdapter_GetOrderItemRsp extends ProtoAdapter<GetOrderItemRsp> {
    ProtoAdapter_GetOrderItemRsp() {
      super(FieldEncoding.LENGTH_DELIMITED, GetOrderItemRsp.class);
    }

    @Override
    public int encodedSize(GetOrderItemRsp value) {
      return OrderItemVO3.ADAPTER.asRepeated().encodedSizeWithTag(1, value.serviceList)
          + OrderItemVO2.ADAPTER.asRepeated().encodedSizeWithTag(2, value.extraList)
          + (value.totalFee != null ? ProtoAdapter.INT64.encodedSizeWithTag(3, value.totalFee) : 0)
          + (value.totalCostPRC != null ? ProtoAdapter.INT64.encodedSizeWithTag(4, value.totalCostPRC) : 0)
          + (value.numberPRC != null ? ProtoAdapter.INT64.encodedSizeWithTag(6, value.numberPRC) : 0)
          + (value.serviceTotalFee != null ? ProtoAdapter.INT64.encodedSizeWithTag(7, value.serviceTotalFee) : 0)
          + (value.totalFeeStr != null ? ProtoAdapter.STRING.encodedSizeWithTag(8, value.totalFeeStr) : 0)
          + (value.totalCostPRCStr != null ? ProtoAdapter.STRING.encodedSizeWithTag(9, value.totalCostPRCStr) : 0)
          + (value.serviceTotalFeeStr != null ? ProtoAdapter.STRING.encodedSizeWithTag(10, value.serviceTotalFeeStr) : 0)
          + (value.order != null ? OrderVO.ADAPTER.encodedSizeWithTag(11, value.order) : 0)
          + CompanyPriceVO.ADAPTER.asRepeated().encodedSizeWithTag(12, value.priceVOOrdinaryList)
          + CompanyPriceVO.ADAPTER.asRepeated().encodedSizeWithTag(13, value.priceVOAdjustList)
          + CompanyPriceVO.ADAPTER.asRepeated().encodedSizeWithTag(14, value.priceVOPrcList)
          + (value.hgRebateFeeStr != null ? ProtoAdapter.STRING.encodedSizeWithTag(15, value.hgRebateFeeStr) : 0)
          + (value.hgRebateType != null ? ProtoAdapter.INT64.encodedSizeWithTag(16, value.hgRebateType) : 0)
          + (value.hgRebateTypeStr != null ? ProtoAdapter.STRING.encodedSizeWithTag(17, value.hgRebateTypeStr) : 0)
          + value.unknownFields().size();
    }

    @Override
    public void encode(ProtoWriter writer, GetOrderItemRsp value) throws IOException {
      OrderItemVO3.ADAPTER.asRepeated().encodeWithTag(writer, 1, value.serviceList);
      OrderItemVO2.ADAPTER.asRepeated().encodeWithTag(writer, 2, value.extraList);
      if (value.totalFee != null) ProtoAdapter.INT64.encodeWithTag(writer, 3, value.totalFee);
      if (value.totalCostPRC != null) ProtoAdapter.INT64.encodeWithTag(writer, 4, value.totalCostPRC);
      if (value.numberPRC != null) ProtoAdapter.INT64.encodeWithTag(writer, 6, value.numberPRC);
      if (value.serviceTotalFee != null) ProtoAdapter.INT64.encodeWithTag(writer, 7, value.serviceTotalFee);
      if (value.totalFeeStr != null) ProtoAdapter.STRING.encodeWithTag(writer, 8, value.totalFeeStr);
      if (value.totalCostPRCStr != null) ProtoAdapter.STRING.encodeWithTag(writer, 9, value.totalCostPRCStr);
      if (value.serviceTotalFeeStr != null) ProtoAdapter.STRING.encodeWithTag(writer, 10, value.serviceTotalFeeStr);
      if (value.order != null) OrderVO.ADAPTER.encodeWithTag(writer, 11, value.order);
      CompanyPriceVO.ADAPTER.asRepeated().encodeWithTag(writer, 12, value.priceVOOrdinaryList);
      CompanyPriceVO.ADAPTER.asRepeated().encodeWithTag(writer, 13, value.priceVOAdjustList);
      CompanyPriceVO.ADAPTER.asRepeated().encodeWithTag(writer, 14, value.priceVOPrcList);
      if (value.hgRebateFeeStr != null) ProtoAdapter.STRING.encodeWithTag(writer, 15, value.hgRebateFeeStr);
      if (value.hgRebateType != null) ProtoAdapter.INT64.encodeWithTag(writer, 16, value.hgRebateType);
      if (value.hgRebateTypeStr != null) ProtoAdapter.STRING.encodeWithTag(writer, 17, value.hgRebateTypeStr);
      writer.writeBytes(value.unknownFields());
    }

    @Override
    public GetOrderItemRsp decode(ProtoReader reader) throws IOException {
      Builder builder = new Builder();
      long token = reader.beginMessage();
      for (int tag; (tag = reader.nextTag()) != -1;) {
        switch (tag) {
          case 1: builder.serviceList.add(OrderItemVO3.ADAPTER.decode(reader)); break;
          case 2: builder.extraList.add(OrderItemVO2.ADAPTER.decode(reader)); break;
          case 3: builder.totalFee(ProtoAdapter.INT64.decode(reader)); break;
          case 4: builder.totalCostPRC(ProtoAdapter.INT64.decode(reader)); break;
          case 6: builder.numberPRC(ProtoAdapter.INT64.decode(reader)); break;
          case 7: builder.serviceTotalFee(ProtoAdapter.INT64.decode(reader)); break;
          case 8: builder.totalFeeStr(ProtoAdapter.STRING.decode(reader)); break;
          case 9: builder.totalCostPRCStr(ProtoAdapter.STRING.decode(reader)); break;
          case 10: builder.serviceTotalFeeStr(ProtoAdapter.STRING.decode(reader)); break;
          case 11: builder.order(OrderVO.ADAPTER.decode(reader)); break;
          case 12: builder.priceVOOrdinaryList.add(CompanyPriceVO.ADAPTER.decode(reader)); break;
          case 13: builder.priceVOAdjustList.add(CompanyPriceVO.ADAPTER.decode(reader)); break;
          case 14: builder.priceVOPrcList.add(CompanyPriceVO.ADAPTER.decode(reader)); break;
          case 15: builder.hgRebateFeeStr(ProtoAdapter.STRING.decode(reader)); break;
          case 16: builder.hgRebateType(ProtoAdapter.INT64.decode(reader)); break;
          case 17: builder.hgRebateTypeStr(ProtoAdapter.STRING.decode(reader)); break;
          default: {
            FieldEncoding fieldEncoding = reader.peekFieldEncoding();
            Object value = fieldEncoding.rawProtoAdapter().decode(reader);
            builder.addUnknownField(tag, fieldEncoding, value);
          }
        }
      }
      reader.endMessage(token);
      return builder.build();
    }

    @Override
    public GetOrderItemRsp redact(GetOrderItemRsp value) {
      Builder builder = value.newBuilder();
      Internal.redactElements(builder.serviceList, OrderItemVO3.ADAPTER);
      Internal.redactElements(builder.extraList, OrderItemVO2.ADAPTER);
      if (builder.order != null) builder.order = OrderVO.ADAPTER.redact(builder.order);
      Internal.redactElements(builder.priceVOOrdinaryList, CompanyPriceVO.ADAPTER);
      Internal.redactElements(builder.priceVOAdjustList, CompanyPriceVO.ADAPTER);
      Internal.redactElements(builder.priceVOPrcList, CompanyPriceVO.ADAPTER);
      builder.clearUnknownFields();
      return builder.build();
    }
  }
}
