// Code generated by Wire protocol buffer compiler, do not edit.
// Source file: AppInterface.proto at 1757:1
package com.yijianyi.protocol;

import com.squareup.wire.FieldEncoding;
import com.squareup.wire.Message;
import com.squareup.wire.ProtoAdapter;
import com.squareup.wire.ProtoReader;
import com.squareup.wire.ProtoWriter;
import com.squareup.wire.WireField;
import com.squareup.wire.internal.Internal;
import java.io.IOException;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.Object;
import java.lang.Override;
import java.lang.String;
import java.lang.StringBuilder;
import java.util.List;
import okio.ByteString;

/**
 * 客户端获取居家长护险订单详情
 */
public final class GetHomeOrderDetailRsp extends Message<GetHomeOrderDetailRsp, GetHomeOrderDetailRsp.Builder> {
  public static final ProtoAdapter<GetHomeOrderDetailRsp> ADAPTER = new ProtoAdapter_GetHomeOrderDetailRsp();

  private static final long serialVersionUID = 0L;

  public static final String DEFAULT_KFPHONE = "";

  public static final String DEFAULT_STATUSSTR = "";

  public static final String DEFAULT_STATUSDESC = "";

  public static final String DEFAULT_COMPANYNAME = "";

  public static final String DEFAULT_CREATETIME = "";

  public static final Boolean DEFAULT_ISHG = false;

  public static final Integer DEFAULT_SERVICEDATENUM = 0;

  public static final String DEFAULT_ORDERSTARTTIME = "";

  public static final String DEFAULT_ORDERENDTIME = "";

  public static final String DEFAULT_ADDRDETAIL = "";

  public static final Boolean DEFAULT_ISHSNEW = false;

  public static final Boolean DEFAULT_ISTENDNEW = false;

  @WireField(
      tag = 1,
      adapter = "com.yijianyi.protocol.Order#ADAPTER"
  )
  public final Order order;

  /**
   * 客服热线电话
   */
  @WireField(
      tag = 2,
      adapter = "com.squareup.wire.ProtoAdapter#STRING"
  )
  public final String kfPhone;

  /**
   * 状态
   */
  @WireField(
      tag = 3,
      adapter = "com.squareup.wire.ProtoAdapter#STRING"
  )
  public final String statusStr;

  /**
   * 改状态下的提示
   */
  @WireField(
      tag = 4,
      adapter = "com.squareup.wire.ProtoAdapter#STRING"
  )
  public final String statusDesc;

  /**
   * 状态流转信息
   */
  @WireField(
      tag = 5,
      adapter = "com.yijianyi.protocol.OrderStatusVO#ADAPTER",
      label = WireField.Label.REPEATED
  )
  public final List<OrderStatusVO> statusVOList;

  /**
   * 服务商家
   */
  @WireField(
      tag = 6,
      adapter = "com.squareup.wire.ProtoAdapter#STRING"
  )
  public final String companyName;

  /**
   * 下单时间
   */
  @WireField(
      tag = 7,
      adapter = "com.squareup.wire.ProtoAdapter#STRING"
  )
  public final String createTime;

  /**
   * 是否已发放资质
   */
  @WireField(
      tag = 8,
      adapter = "com.squareup.wire.ProtoAdapter#BOOL"
  )
  public final Boolean isHG;

  /**
   * 服务天数
   */
  @WireField(
      tag = 9,
      adapter = "com.squareup.wire.ProtoAdapter#UINT32"
  )
  public final Integer serviceDateNum;

  /**
   * 订单开始时间
   */
  @WireField(
      tag = 10,
      adapter = "com.squareup.wire.ProtoAdapter#STRING"
  )
  public final String orderStartTime;

  /**
   * 订单结束时间
   */
  @WireField(
      tag = 11,
      adapter = "com.squareup.wire.ProtoAdapter#STRING"
  )
  public final String orderEndTime;

  /**
   * 详细地址
   */
  @WireField(
      tag = 12,
      adapter = "com.squareup.wire.ProtoAdapter#STRING"
  )
  public final String addrDetail;

  /**
   * 是否有新护士
   */
  @WireField(
      tag = 13,
      adapter = "com.squareup.wire.ProtoAdapter#BOOL"
  )
  public final Boolean isHSNew;

  /**
   * 是否有照护计划
   */
  @WireField(
      tag = 14,
      adapter = "com.squareup.wire.ProtoAdapter#BOOL"
  )
  public final Boolean isTendNew;

  public GetHomeOrderDetailRsp(Order order, String kfPhone, String statusStr, String statusDesc, List<OrderStatusVO> statusVOList, String companyName, String createTime, Boolean isHG, Integer serviceDateNum, String orderStartTime, String orderEndTime, String addrDetail, Boolean isHSNew, Boolean isTendNew) {
    this(order, kfPhone, statusStr, statusDesc, statusVOList, companyName, createTime, isHG, serviceDateNum, orderStartTime, orderEndTime, addrDetail, isHSNew, isTendNew, ByteString.EMPTY);
  }

  public GetHomeOrderDetailRsp(Order order, String kfPhone, String statusStr, String statusDesc, List<OrderStatusVO> statusVOList, String companyName, String createTime, Boolean isHG, Integer serviceDateNum, String orderStartTime, String orderEndTime, String addrDetail, Boolean isHSNew, Boolean isTendNew, ByteString unknownFields) {
    super(ADAPTER, unknownFields);
    this.order = order;
    this.kfPhone = kfPhone;
    this.statusStr = statusStr;
    this.statusDesc = statusDesc;
    this.statusVOList = Internal.immutableCopyOf("statusVOList", statusVOList);
    this.companyName = companyName;
    this.createTime = createTime;
    this.isHG = isHG;
    this.serviceDateNum = serviceDateNum;
    this.orderStartTime = orderStartTime;
    this.orderEndTime = orderEndTime;
    this.addrDetail = addrDetail;
    this.isHSNew = isHSNew;
    this.isTendNew = isTendNew;
  }

  @Override
  public Builder newBuilder() {
    Builder builder = new Builder();
    builder.order = order;
    builder.kfPhone = kfPhone;
    builder.statusStr = statusStr;
    builder.statusDesc = statusDesc;
    builder.statusVOList = Internal.copyOf("statusVOList", statusVOList);
    builder.companyName = companyName;
    builder.createTime = createTime;
    builder.isHG = isHG;
    builder.serviceDateNum = serviceDateNum;
    builder.orderStartTime = orderStartTime;
    builder.orderEndTime = orderEndTime;
    builder.addrDetail = addrDetail;
    builder.isHSNew = isHSNew;
    builder.isTendNew = isTendNew;
    builder.addUnknownFields(unknownFields());
    return builder;
  }

  @Override
  public boolean equals(Object other) {
    if (other == this) return true;
    if (!(other instanceof GetHomeOrderDetailRsp)) return false;
    GetHomeOrderDetailRsp o = (GetHomeOrderDetailRsp) other;
    return unknownFields().equals(o.unknownFields())
        && Internal.equals(order, o.order)
        && Internal.equals(kfPhone, o.kfPhone)
        && Internal.equals(statusStr, o.statusStr)
        && Internal.equals(statusDesc, o.statusDesc)
        && statusVOList.equals(o.statusVOList)
        && Internal.equals(companyName, o.companyName)
        && Internal.equals(createTime, o.createTime)
        && Internal.equals(isHG, o.isHG)
        && Internal.equals(serviceDateNum, o.serviceDateNum)
        && Internal.equals(orderStartTime, o.orderStartTime)
        && Internal.equals(orderEndTime, o.orderEndTime)
        && Internal.equals(addrDetail, o.addrDetail)
        && Internal.equals(isHSNew, o.isHSNew)
        && Internal.equals(isTendNew, o.isTendNew);
  }

  @Override
  public int hashCode() {
    int result = super.hashCode;
    if (result == 0) {
      result = unknownFields().hashCode();
      result = result * 37 + (order != null ? order.hashCode() : 0);
      result = result * 37 + (kfPhone != null ? kfPhone.hashCode() : 0);
      result = result * 37 + (statusStr != null ? statusStr.hashCode() : 0);
      result = result * 37 + (statusDesc != null ? statusDesc.hashCode() : 0);
      result = result * 37 + statusVOList.hashCode();
      result = result * 37 + (companyName != null ? companyName.hashCode() : 0);
      result = result * 37 + (createTime != null ? createTime.hashCode() : 0);
      result = result * 37 + (isHG != null ? isHG.hashCode() : 0);
      result = result * 37 + (serviceDateNum != null ? serviceDateNum.hashCode() : 0);
      result = result * 37 + (orderStartTime != null ? orderStartTime.hashCode() : 0);
      result = result * 37 + (orderEndTime != null ? orderEndTime.hashCode() : 0);
      result = result * 37 + (addrDetail != null ? addrDetail.hashCode() : 0);
      result = result * 37 + (isHSNew != null ? isHSNew.hashCode() : 0);
      result = result * 37 + (isTendNew != null ? isTendNew.hashCode() : 0);
      super.hashCode = result;
    }
    return result;
  }

  @Override
  public String toString() {
    StringBuilder builder = new StringBuilder();
    if (order != null) builder.append(", order=").append(order);
    if (kfPhone != null) builder.append(", kfPhone=").append(kfPhone);
    if (statusStr != null) builder.append(", statusStr=").append(statusStr);
    if (statusDesc != null) builder.append(", statusDesc=").append(statusDesc);
    if (!statusVOList.isEmpty()) builder.append(", statusVOList=").append(statusVOList);
    if (companyName != null) builder.append(", companyName=").append(companyName);
    if (createTime != null) builder.append(", createTime=").append(createTime);
    if (isHG != null) builder.append(", isHG=").append(isHG);
    if (serviceDateNum != null) builder.append(", serviceDateNum=").append(serviceDateNum);
    if (orderStartTime != null) builder.append(", orderStartTime=").append(orderStartTime);
    if (orderEndTime != null) builder.append(", orderEndTime=").append(orderEndTime);
    if (addrDetail != null) builder.append(", addrDetail=").append(addrDetail);
    if (isHSNew != null) builder.append(", isHSNew=").append(isHSNew);
    if (isTendNew != null) builder.append(", isTendNew=").append(isTendNew);
    return builder.replace(0, 2, "GetHomeOrderDetailRsp{").append('}').toString();
  }

  public static final class Builder extends Message.Builder<GetHomeOrderDetailRsp, Builder> {
    public Order order;

    public String kfPhone;

    public String statusStr;

    public String statusDesc;

    public List<OrderStatusVO> statusVOList;

    public String companyName;

    public String createTime;

    public Boolean isHG;

    public Integer serviceDateNum;

    public String orderStartTime;

    public String orderEndTime;

    public String addrDetail;

    public Boolean isHSNew;

    public Boolean isTendNew;

    public Builder() {
      statusVOList = Internal.newMutableList();
    }

    public Builder order(Order order) {
      this.order = order;
      return this;
    }

    /**
     * 客服热线电话
     */
    public Builder kfPhone(String kfPhone) {
      this.kfPhone = kfPhone;
      return this;
    }

    /**
     * 状态
     */
    public Builder statusStr(String statusStr) {
      this.statusStr = statusStr;
      return this;
    }

    /**
     * 改状态下的提示
     */
    public Builder statusDesc(String statusDesc) {
      this.statusDesc = statusDesc;
      return this;
    }

    /**
     * 状态流转信息
     */
    public Builder statusVOList(List<OrderStatusVO> statusVOList) {
      Internal.checkElementsNotNull(statusVOList);
      this.statusVOList = statusVOList;
      return this;
    }

    /**
     * 服务商家
     */
    public Builder companyName(String companyName) {
      this.companyName = companyName;
      return this;
    }

    /**
     * 下单时间
     */
    public Builder createTime(String createTime) {
      this.createTime = createTime;
      return this;
    }

    /**
     * 是否已发放资质
     */
    public Builder isHG(Boolean isHG) {
      this.isHG = isHG;
      return this;
    }

    /**
     * 服务天数
     */
    public Builder serviceDateNum(Integer serviceDateNum) {
      this.serviceDateNum = serviceDateNum;
      return this;
    }

    /**
     * 订单开始时间
     */
    public Builder orderStartTime(String orderStartTime) {
      this.orderStartTime = orderStartTime;
      return this;
    }

    /**
     * 订单结束时间
     */
    public Builder orderEndTime(String orderEndTime) {
      this.orderEndTime = orderEndTime;
      return this;
    }

    /**
     * 详细地址
     */
    public Builder addrDetail(String addrDetail) {
      this.addrDetail = addrDetail;
      return this;
    }

    /**
     * 是否有新护士
     */
    public Builder isHSNew(Boolean isHSNew) {
      this.isHSNew = isHSNew;
      return this;
    }

    /**
     * 是否有照护计划
     */
    public Builder isTendNew(Boolean isTendNew) {
      this.isTendNew = isTendNew;
      return this;
    }

    @Override
    public GetHomeOrderDetailRsp build() {
      return new GetHomeOrderDetailRsp(order, kfPhone, statusStr, statusDesc, statusVOList, companyName, createTime, isHG, serviceDateNum, orderStartTime, orderEndTime, addrDetail, isHSNew, isTendNew, super.buildUnknownFields());
    }
  }

  private static final class ProtoAdapter_GetHomeOrderDetailRsp extends ProtoAdapter<GetHomeOrderDetailRsp> {
    ProtoAdapter_GetHomeOrderDetailRsp() {
      super(FieldEncoding.LENGTH_DELIMITED, GetHomeOrderDetailRsp.class);
    }

    @Override
    public int encodedSize(GetHomeOrderDetailRsp value) {
      return (value.order != null ? Order.ADAPTER.encodedSizeWithTag(1, value.order) : 0)
          + (value.kfPhone != null ? ProtoAdapter.STRING.encodedSizeWithTag(2, value.kfPhone) : 0)
          + (value.statusStr != null ? ProtoAdapter.STRING.encodedSizeWithTag(3, value.statusStr) : 0)
          + (value.statusDesc != null ? ProtoAdapter.STRING.encodedSizeWithTag(4, value.statusDesc) : 0)
          + OrderStatusVO.ADAPTER.asRepeated().encodedSizeWithTag(5, value.statusVOList)
          + (value.companyName != null ? ProtoAdapter.STRING.encodedSizeWithTag(6, value.companyName) : 0)
          + (value.createTime != null ? ProtoAdapter.STRING.encodedSizeWithTag(7, value.createTime) : 0)
          + (value.isHG != null ? ProtoAdapter.BOOL.encodedSizeWithTag(8, value.isHG) : 0)
          + (value.serviceDateNum != null ? ProtoAdapter.UINT32.encodedSizeWithTag(9, value.serviceDateNum) : 0)
          + (value.orderStartTime != null ? ProtoAdapter.STRING.encodedSizeWithTag(10, value.orderStartTime) : 0)
          + (value.orderEndTime != null ? ProtoAdapter.STRING.encodedSizeWithTag(11, value.orderEndTime) : 0)
          + (value.addrDetail != null ? ProtoAdapter.STRING.encodedSizeWithTag(12, value.addrDetail) : 0)
          + (value.isHSNew != null ? ProtoAdapter.BOOL.encodedSizeWithTag(13, value.isHSNew) : 0)
          + (value.isTendNew != null ? ProtoAdapter.BOOL.encodedSizeWithTag(14, value.isTendNew) : 0)
          + value.unknownFields().size();
    }

    @Override
    public void encode(ProtoWriter writer, GetHomeOrderDetailRsp value) throws IOException {
      if (value.order != null) Order.ADAPTER.encodeWithTag(writer, 1, value.order);
      if (value.kfPhone != null) ProtoAdapter.STRING.encodeWithTag(writer, 2, value.kfPhone);
      if (value.statusStr != null) ProtoAdapter.STRING.encodeWithTag(writer, 3, value.statusStr);
      if (value.statusDesc != null) ProtoAdapter.STRING.encodeWithTag(writer, 4, value.statusDesc);
      OrderStatusVO.ADAPTER.asRepeated().encodeWithTag(writer, 5, value.statusVOList);
      if (value.companyName != null) ProtoAdapter.STRING.encodeWithTag(writer, 6, value.companyName);
      if (value.createTime != null) ProtoAdapter.STRING.encodeWithTag(writer, 7, value.createTime);
      if (value.isHG != null) ProtoAdapter.BOOL.encodeWithTag(writer, 8, value.isHG);
      if (value.serviceDateNum != null) ProtoAdapter.UINT32.encodeWithTag(writer, 9, value.serviceDateNum);
      if (value.orderStartTime != null) ProtoAdapter.STRING.encodeWithTag(writer, 10, value.orderStartTime);
      if (value.orderEndTime != null) ProtoAdapter.STRING.encodeWithTag(writer, 11, value.orderEndTime);
      if (value.addrDetail != null) ProtoAdapter.STRING.encodeWithTag(writer, 12, value.addrDetail);
      if (value.isHSNew != null) ProtoAdapter.BOOL.encodeWithTag(writer, 13, value.isHSNew);
      if (value.isTendNew != null) ProtoAdapter.BOOL.encodeWithTag(writer, 14, value.isTendNew);
      writer.writeBytes(value.unknownFields());
    }

    @Override
    public GetHomeOrderDetailRsp decode(ProtoReader reader) throws IOException {
      Builder builder = new Builder();
      long token = reader.beginMessage();
      for (int tag; (tag = reader.nextTag()) != -1;) {
        switch (tag) {
          case 1: builder.order(Order.ADAPTER.decode(reader)); break;
          case 2: builder.kfPhone(ProtoAdapter.STRING.decode(reader)); break;
          case 3: builder.statusStr(ProtoAdapter.STRING.decode(reader)); break;
          case 4: builder.statusDesc(ProtoAdapter.STRING.decode(reader)); break;
          case 5: builder.statusVOList.add(OrderStatusVO.ADAPTER.decode(reader)); break;
          case 6: builder.companyName(ProtoAdapter.STRING.decode(reader)); break;
          case 7: builder.createTime(ProtoAdapter.STRING.decode(reader)); break;
          case 8: builder.isHG(ProtoAdapter.BOOL.decode(reader)); break;
          case 9: builder.serviceDateNum(ProtoAdapter.UINT32.decode(reader)); break;
          case 10: builder.orderStartTime(ProtoAdapter.STRING.decode(reader)); break;
          case 11: builder.orderEndTime(ProtoAdapter.STRING.decode(reader)); break;
          case 12: builder.addrDetail(ProtoAdapter.STRING.decode(reader)); break;
          case 13: builder.isHSNew(ProtoAdapter.BOOL.decode(reader)); break;
          case 14: builder.isTendNew(ProtoAdapter.BOOL.decode(reader)); break;
          default: {
            FieldEncoding fieldEncoding = reader.peekFieldEncoding();
            Object value = fieldEncoding.rawProtoAdapter().decode(reader);
            builder.addUnknownField(tag, fieldEncoding, value);
          }
        }
      }
      reader.endMessage(token);
      return builder.build();
    }

    @Override
    public GetHomeOrderDetailRsp redact(GetHomeOrderDetailRsp value) {
      Builder builder = value.newBuilder();
      if (builder.order != null) builder.order = Order.ADAPTER.redact(builder.order);
      Internal.redactElements(builder.statusVOList, OrderStatusVO.ADAPTER);
      builder.clearUnknownFields();
      return builder.build();
    }
  }
}
