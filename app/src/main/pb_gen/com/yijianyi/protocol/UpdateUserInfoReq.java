// Code generated by Wire protocol buffer compiler, do not edit.
// Source file: AppInterface.proto at 111:1
package com.yijianyi.protocol;

import com.squareup.wire.FieldEncoding;
import com.squareup.wire.Message;
import com.squareup.wire.ProtoAdapter;
import com.squareup.wire.ProtoReader;
import com.squareup.wire.ProtoWriter;
import com.squareup.wire.WireField;
import com.squareup.wire.internal.Internal;
import java.io.IOException;
import java.lang.Integer;
import java.lang.Object;
import java.lang.Override;
import java.lang.String;
import java.lang.StringBuilder;
import okio.ByteString;

/**
 * 更新用户信息的请求
 */
public final class UpdateUserInfoReq extends Message<UpdateUserInfoReq, UpdateUserInfoReq.Builder> {
  public static final ProtoAdapter<UpdateUserInfoReq> ADAPTER = new ProtoAdapter_UpdateUserInfoReq();

  private static final long serialVersionUID = 0L;

  public static final String DEFAULT_NAME = "";

  public static final String DEFAULT_HEADIMG = "";

  public static final Integer DEFAULT_SEX = 0;

  public static final String DEFAULT_BIRTHDAY = "";

  public static final String DEFAULT_IDCARD = "";

  public static final String DEFAULT_REALNAME = "";

  /**
   * 用户的昵称
   */
  @WireField(
      tag = 1,
      adapter = "com.squareup.wire.ProtoAdapter#STRING"
  )
  public final String name;

  /**
   * 用户的头像图片id
   */
  @WireField(
      tag = 2,
      adapter = "com.squareup.wire.ProtoAdapter#STRING"
  )
  public final String headImg;

  /**
   * 性别 1-男 2-女
   */
  @WireField(
      tag = 3,
      adapter = "com.squareup.wire.ProtoAdapter#UINT32"
  )
  public final Integer sex;

  /**
   * 生日
   */
  @WireField(
      tag = 4,
      adapter = "com.squareup.wire.ProtoAdapter#STRING"
  )
  public final String birthday;

  /**
   * 身份证号
   */
  @WireField(
      tag = 5,
      adapter = "com.squareup.wire.ProtoAdapter#STRING"
  )
  public final String idcard;

  /**
   * 实名制姓名
   */
  @WireField(
      tag = 6,
      adapter = "com.squareup.wire.ProtoAdapter#STRING"
  )
  public final String realName;

  public UpdateUserInfoReq(String name, String headImg, Integer sex, String birthday, String idcard, String realName) {
    this(name, headImg, sex, birthday, idcard, realName, ByteString.EMPTY);
  }

  public UpdateUserInfoReq(String name, String headImg, Integer sex, String birthday, String idcard, String realName, ByteString unknownFields) {
    super(ADAPTER, unknownFields);
    this.name = name;
    this.headImg = headImg;
    this.sex = sex;
    this.birthday = birthday;
    this.idcard = idcard;
    this.realName = realName;
  }

  @Override
  public Builder newBuilder() {
    Builder builder = new Builder();
    builder.name = name;
    builder.headImg = headImg;
    builder.sex = sex;
    builder.birthday = birthday;
    builder.idcard = idcard;
    builder.realName = realName;
    builder.addUnknownFields(unknownFields());
    return builder;
  }

  @Override
  public boolean equals(Object other) {
    if (other == this) return true;
    if (!(other instanceof UpdateUserInfoReq)) return false;
    UpdateUserInfoReq o = (UpdateUserInfoReq) other;
    return unknownFields().equals(o.unknownFields())
        && Internal.equals(name, o.name)
        && Internal.equals(headImg, o.headImg)
        && Internal.equals(sex, o.sex)
        && Internal.equals(birthday, o.birthday)
        && Internal.equals(idcard, o.idcard)
        && Internal.equals(realName, o.realName);
  }

  @Override
  public int hashCode() {
    int result = super.hashCode;
    if (result == 0) {
      result = unknownFields().hashCode();
      result = result * 37 + (name != null ? name.hashCode() : 0);
      result = result * 37 + (headImg != null ? headImg.hashCode() : 0);
      result = result * 37 + (sex != null ? sex.hashCode() : 0);
      result = result * 37 + (birthday != null ? birthday.hashCode() : 0);
      result = result * 37 + (idcard != null ? idcard.hashCode() : 0);
      result = result * 37 + (realName != null ? realName.hashCode() : 0);
      super.hashCode = result;
    }
    return result;
  }

  @Override
  public String toString() {
    StringBuilder builder = new StringBuilder();
    if (name != null) builder.append(", name=").append(name);
    if (headImg != null) builder.append(", headImg=").append(headImg);
    if (sex != null) builder.append(", sex=").append(sex);
    if (birthday != null) builder.append(", birthday=").append(birthday);
    if (idcard != null) builder.append(", idcard=").append(idcard);
    if (realName != null) builder.append(", realName=").append(realName);
    return builder.replace(0, 2, "UpdateUserInfoReq{").append('}').toString();
  }

  public static final class Builder extends Message.Builder<UpdateUserInfoReq, Builder> {
    public String name;

    public String headImg;

    public Integer sex;

    public String birthday;

    public String idcard;

    public String realName;

    public Builder() {
    }

    /**
     * 用户的昵称
     */
    public Builder name(String name) {
      this.name = name;
      return this;
    }

    /**
     * 用户的头像图片id
     */
    public Builder headImg(String headImg) {
      this.headImg = headImg;
      return this;
    }

    /**
     * 性别 1-男 2-女
     */
    public Builder sex(Integer sex) {
      this.sex = sex;
      return this;
    }

    /**
     * 生日
     */
    public Builder birthday(String birthday) {
      this.birthday = birthday;
      return this;
    }

    /**
     * 身份证号
     */
    public Builder idcard(String idcard) {
      this.idcard = idcard;
      return this;
    }

    /**
     * 实名制姓名
     */
    public Builder realName(String realName) {
      this.realName = realName;
      return this;
    }

    @Override
    public UpdateUserInfoReq build() {
      return new UpdateUserInfoReq(name, headImg, sex, birthday, idcard, realName, super.buildUnknownFields());
    }
  }

  private static final class ProtoAdapter_UpdateUserInfoReq extends ProtoAdapter<UpdateUserInfoReq> {
    ProtoAdapter_UpdateUserInfoReq() {
      super(FieldEncoding.LENGTH_DELIMITED, UpdateUserInfoReq.class);
    }

    @Override
    public int encodedSize(UpdateUserInfoReq value) {
      return (value.name != null ? ProtoAdapter.STRING.encodedSizeWithTag(1, value.name) : 0)
          + (value.headImg != null ? ProtoAdapter.STRING.encodedSizeWithTag(2, value.headImg) : 0)
          + (value.sex != null ? ProtoAdapter.UINT32.encodedSizeWithTag(3, value.sex) : 0)
          + (value.birthday != null ? ProtoAdapter.STRING.encodedSizeWithTag(4, value.birthday) : 0)
          + (value.idcard != null ? ProtoAdapter.STRING.encodedSizeWithTag(5, value.idcard) : 0)
          + (value.realName != null ? ProtoAdapter.STRING.encodedSizeWithTag(6, value.realName) : 0)
          + value.unknownFields().size();
    }

    @Override
    public void encode(ProtoWriter writer, UpdateUserInfoReq value) throws IOException {
      if (value.name != null) ProtoAdapter.STRING.encodeWithTag(writer, 1, value.name);
      if (value.headImg != null) ProtoAdapter.STRING.encodeWithTag(writer, 2, value.headImg);
      if (value.sex != null) ProtoAdapter.UINT32.encodeWithTag(writer, 3, value.sex);
      if (value.birthday != null) ProtoAdapter.STRING.encodeWithTag(writer, 4, value.birthday);
      if (value.idcard != null) ProtoAdapter.STRING.encodeWithTag(writer, 5, value.idcard);
      if (value.realName != null) ProtoAdapter.STRING.encodeWithTag(writer, 6, value.realName);
      writer.writeBytes(value.unknownFields());
    }

    @Override
    public UpdateUserInfoReq decode(ProtoReader reader) throws IOException {
      Builder builder = new Builder();
      long token = reader.beginMessage();
      for (int tag; (tag = reader.nextTag()) != -1;) {
        switch (tag) {
          case 1: builder.name(ProtoAdapter.STRING.decode(reader)); break;
          case 2: builder.headImg(ProtoAdapter.STRING.decode(reader)); break;
          case 3: builder.sex(ProtoAdapter.UINT32.decode(reader)); break;
          case 4: builder.birthday(ProtoAdapter.STRING.decode(reader)); break;
          case 5: builder.idcard(ProtoAdapter.STRING.decode(reader)); break;
          case 6: builder.realName(ProtoAdapter.STRING.decode(reader)); break;
          default: {
            FieldEncoding fieldEncoding = reader.peekFieldEncoding();
            Object value = fieldEncoding.rawProtoAdapter().decode(reader);
            builder.addUnknownField(tag, fieldEncoding, value);
          }
        }
      }
      reader.endMessage(token);
      return builder.build();
    }

    @Override
    public UpdateUserInfoReq redact(UpdateUserInfoReq value) {
      Builder builder = value.newBuilder();
      builder.clearUnknownFields();
      return builder.build();
    }
  }
}
