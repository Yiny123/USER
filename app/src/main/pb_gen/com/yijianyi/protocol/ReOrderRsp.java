// Code generated by Wire protocol buffer compiler, do not edit.
// Source file: AppInterface.proto at 444:1
package com.yijianyi.protocol;

import com.squareup.wire.FieldEncoding;
import com.squareup.wire.Message;
import com.squareup.wire.ProtoAdapter;
import com.squareup.wire.ProtoReader;
import com.squareup.wire.ProtoWriter;
import com.squareup.wire.WireField;
import com.squareup.wire.internal.Internal;
import java.io.IOException;
import java.lang.Integer;
import java.lang.Long;
import java.lang.Object;
import java.lang.Override;
import java.lang.String;
import java.lang.StringBuilder;
import okio.ByteString;

/**
 * 重下订单Rsp
 */
public final class ReOrderRsp extends Message<ReOrderRsp, ReOrderRsp.Builder> {
  public static final ProtoAdapter<ReOrderRsp> ADAPTER = new ProtoAdapter_ReOrderRsp();

  private static final long serialVersionUID = 0L;

  public static final Long DEFAULT_ORGID = 0L;

  public static final String DEFAULT_ORGNAME = "";

  public static final Long DEFAULT_BRANCHID = 0L;

  public static final String DEFAULT_BRANCHNAME = "";

  public static final Long DEFAULT_ROOMID = 0L;

  public static final String DEFAULT_ROOMNO = "";

  public static final Long DEFAULT_KINSID = 0L;

  public static final String DEFAULT_FULLNAME = "";

  public static final Long DEFAULT_BEDID = 0L;

  public static final String DEFAULT_BEDNO = "";

  public static final Long DEFAULT_PRICEID = 0L;

  public static final Integer DEFAULT_ORDERTYPE = 0;

  public static final String DEFAULT_PHONE = "";

  public static final Long DEFAULT_ADDRID = 0L;

  public static final String DEFAULT_SERVICESTARTTIME = "";

  public static final Long DEFAULT_PREPAYAMOUNT = 0L;

  /**
   * 机构ID
   */
  @WireField(
      tag = 1,
      adapter = "com.squareup.wire.ProtoAdapter#UINT64"
  )
  public final Long orgId;

  /**
   * 机构名
   */
  @WireField(
      tag = 2,
      adapter = "com.squareup.wire.ProtoAdapter#STRING"
  )
  public final String orgName;

  /**
   * 科室ID
   */
  @WireField(
      tag = 3,
      adapter = "com.squareup.wire.ProtoAdapter#UINT64"
  )
  public final Long branchId;

  /**
   * 科室名称
   */
  @WireField(
      tag = 4,
      adapter = "com.squareup.wire.ProtoAdapter#STRING"
  )
  public final String branchName;

  /**
   * 房间ID
   */
  @WireField(
      tag = 5,
      adapter = "com.squareup.wire.ProtoAdapter#UINT64"
  )
  public final Long roomId;

  /**
   * 房间编号
   */
  @WireField(
      tag = 6,
      adapter = "com.squareup.wire.ProtoAdapter#STRING"
  )
  public final String roomNo;

  /**
   * 亲属ID
   */
  @WireField(
      tag = 7,
      adapter = "com.squareup.wire.ProtoAdapter#UINT64"
  )
  public final Long kinsId;

  /**
   * 亲属名字
   */
  @WireField(
      tag = 8,
      adapter = "com.squareup.wire.ProtoAdapter#STRING"
  )
  public final String fullName;

  /**
   * 床ID
   */
  @WireField(
      tag = 9,
      adapter = "com.squareup.wire.ProtoAdapter#UINT64"
  )
  public final Long bedId;

  /**
   * 床号
   */
  @WireField(
      tag = 10,
      adapter = "com.squareup.wire.ProtoAdapter#STRING"
  )
  public final String bedNo;

  /**
   * 套餐ID
   */
  @WireField(
      tag = 11,
      adapter = "com.squareup.wire.ProtoAdapter#UINT64"
  )
  public final Long priceId;

  /**
   * 订单类型 1-机构订单 2-居家订单
   */
  @WireField(
      tag = 12,
      adapter = "com.squareup.wire.ProtoAdapter#UINT32"
  )
  public final Integer orderType;

  /**
   * 手机号
   */
  @WireField(
      tag = 13,
      adapter = "com.squareup.wire.ProtoAdapter#STRING"
  )
  public final String phone;

  /**
   * 地址ID
   */
  @WireField(
      tag = 14,
      adapter = "com.squareup.wire.ProtoAdapter#UINT64"
  )
  public final Long addrId;

  /**
   * 服务开始时间
   */
  @WireField(
      tag = 15,
      adapter = "com.squareup.wire.ProtoAdapter#STRING"
  )
  public final String serviceStartTime;

  /**
   * 预交金
   */
  @WireField(
      tag = 16,
      adapter = "com.squareup.wire.ProtoAdapter#UINT64"
  )
  public final Long prepayAmount;

  public ReOrderRsp(Long orgId, String orgName, Long branchId, String branchName, Long roomId, String roomNo, Long kinsId, String fullName, Long bedId, String bedNo, Long priceId, Integer orderType, String phone, Long addrId, String serviceStartTime, Long prepayAmount) {
    this(orgId, orgName, branchId, branchName, roomId, roomNo, kinsId, fullName, bedId, bedNo, priceId, orderType, phone, addrId, serviceStartTime, prepayAmount, ByteString.EMPTY);
  }

  public ReOrderRsp(Long orgId, String orgName, Long branchId, String branchName, Long roomId, String roomNo, Long kinsId, String fullName, Long bedId, String bedNo, Long priceId, Integer orderType, String phone, Long addrId, String serviceStartTime, Long prepayAmount, ByteString unknownFields) {
    super(ADAPTER, unknownFields);
    this.orgId = orgId;
    this.orgName = orgName;
    this.branchId = branchId;
    this.branchName = branchName;
    this.roomId = roomId;
    this.roomNo = roomNo;
    this.kinsId = kinsId;
    this.fullName = fullName;
    this.bedId = bedId;
    this.bedNo = bedNo;
    this.priceId = priceId;
    this.orderType = orderType;
    this.phone = phone;
    this.addrId = addrId;
    this.serviceStartTime = serviceStartTime;
    this.prepayAmount = prepayAmount;
  }

  @Override
  public Builder newBuilder() {
    Builder builder = new Builder();
    builder.orgId = orgId;
    builder.orgName = orgName;
    builder.branchId = branchId;
    builder.branchName = branchName;
    builder.roomId = roomId;
    builder.roomNo = roomNo;
    builder.kinsId = kinsId;
    builder.fullName = fullName;
    builder.bedId = bedId;
    builder.bedNo = bedNo;
    builder.priceId = priceId;
    builder.orderType = orderType;
    builder.phone = phone;
    builder.addrId = addrId;
    builder.serviceStartTime = serviceStartTime;
    builder.prepayAmount = prepayAmount;
    builder.addUnknownFields(unknownFields());
    return builder;
  }

  @Override
  public boolean equals(Object other) {
    if (other == this) return true;
    if (!(other instanceof ReOrderRsp)) return false;
    ReOrderRsp o = (ReOrderRsp) other;
    return unknownFields().equals(o.unknownFields())
        && Internal.equals(orgId, o.orgId)
        && Internal.equals(orgName, o.orgName)
        && Internal.equals(branchId, o.branchId)
        && Internal.equals(branchName, o.branchName)
        && Internal.equals(roomId, o.roomId)
        && Internal.equals(roomNo, o.roomNo)
        && Internal.equals(kinsId, o.kinsId)
        && Internal.equals(fullName, o.fullName)
        && Internal.equals(bedId, o.bedId)
        && Internal.equals(bedNo, o.bedNo)
        && Internal.equals(priceId, o.priceId)
        && Internal.equals(orderType, o.orderType)
        && Internal.equals(phone, o.phone)
        && Internal.equals(addrId, o.addrId)
        && Internal.equals(serviceStartTime, o.serviceStartTime)
        && Internal.equals(prepayAmount, o.prepayAmount);
  }

  @Override
  public int hashCode() {
    int result = super.hashCode;
    if (result == 0) {
      result = unknownFields().hashCode();
      result = result * 37 + (orgId != null ? orgId.hashCode() : 0);
      result = result * 37 + (orgName != null ? orgName.hashCode() : 0);
      result = result * 37 + (branchId != null ? branchId.hashCode() : 0);
      result = result * 37 + (branchName != null ? branchName.hashCode() : 0);
      result = result * 37 + (roomId != null ? roomId.hashCode() : 0);
      result = result * 37 + (roomNo != null ? roomNo.hashCode() : 0);
      result = result * 37 + (kinsId != null ? kinsId.hashCode() : 0);
      result = result * 37 + (fullName != null ? fullName.hashCode() : 0);
      result = result * 37 + (bedId != null ? bedId.hashCode() : 0);
      result = result * 37 + (bedNo != null ? bedNo.hashCode() : 0);
      result = result * 37 + (priceId != null ? priceId.hashCode() : 0);
      result = result * 37 + (orderType != null ? orderType.hashCode() : 0);
      result = result * 37 + (phone != null ? phone.hashCode() : 0);
      result = result * 37 + (addrId != null ? addrId.hashCode() : 0);
      result = result * 37 + (serviceStartTime != null ? serviceStartTime.hashCode() : 0);
      result = result * 37 + (prepayAmount != null ? prepayAmount.hashCode() : 0);
      super.hashCode = result;
    }
    return result;
  }

  @Override
  public String toString() {
    StringBuilder builder = new StringBuilder();
    if (orgId != null) builder.append(", orgId=").append(orgId);
    if (orgName != null) builder.append(", orgName=").append(orgName);
    if (branchId != null) builder.append(", branchId=").append(branchId);
    if (branchName != null) builder.append(", branchName=").append(branchName);
    if (roomId != null) builder.append(", roomId=").append(roomId);
    if (roomNo != null) builder.append(", roomNo=").append(roomNo);
    if (kinsId != null) builder.append(", kinsId=").append(kinsId);
    if (fullName != null) builder.append(", fullName=").append(fullName);
    if (bedId != null) builder.append(", bedId=").append(bedId);
    if (bedNo != null) builder.append(", bedNo=").append(bedNo);
    if (priceId != null) builder.append(", priceId=").append(priceId);
    if (orderType != null) builder.append(", orderType=").append(orderType);
    if (phone != null) builder.append(", phone=").append(phone);
    if (addrId != null) builder.append(", addrId=").append(addrId);
    if (serviceStartTime != null) builder.append(", serviceStartTime=").append(serviceStartTime);
    if (prepayAmount != null) builder.append(", prepayAmount=").append(prepayAmount);
    return builder.replace(0, 2, "ReOrderRsp{").append('}').toString();
  }

  public static final class Builder extends Message.Builder<ReOrderRsp, Builder> {
    public Long orgId;

    public String orgName;

    public Long branchId;

    public String branchName;

    public Long roomId;

    public String roomNo;

    public Long kinsId;

    public String fullName;

    public Long bedId;

    public String bedNo;

    public Long priceId;

    public Integer orderType;

    public String phone;

    public Long addrId;

    public String serviceStartTime;

    public Long prepayAmount;

    public Builder() {
    }

    /**
     * 机构ID
     */
    public Builder orgId(Long orgId) {
      this.orgId = orgId;
      return this;
    }

    /**
     * 机构名
     */
    public Builder orgName(String orgName) {
      this.orgName = orgName;
      return this;
    }

    /**
     * 科室ID
     */
    public Builder branchId(Long branchId) {
      this.branchId = branchId;
      return this;
    }

    /**
     * 科室名称
     */
    public Builder branchName(String branchName) {
      this.branchName = branchName;
      return this;
    }

    /**
     * 房间ID
     */
    public Builder roomId(Long roomId) {
      this.roomId = roomId;
      return this;
    }

    /**
     * 房间编号
     */
    public Builder roomNo(String roomNo) {
      this.roomNo = roomNo;
      return this;
    }

    /**
     * 亲属ID
     */
    public Builder kinsId(Long kinsId) {
      this.kinsId = kinsId;
      return this;
    }

    /**
     * 亲属名字
     */
    public Builder fullName(String fullName) {
      this.fullName = fullName;
      return this;
    }

    /**
     * 床ID
     */
    public Builder bedId(Long bedId) {
      this.bedId = bedId;
      return this;
    }

    /**
     * 床号
     */
    public Builder bedNo(String bedNo) {
      this.bedNo = bedNo;
      return this;
    }

    /**
     * 套餐ID
     */
    public Builder priceId(Long priceId) {
      this.priceId = priceId;
      return this;
    }

    /**
     * 订单类型 1-机构订单 2-居家订单
     */
    public Builder orderType(Integer orderType) {
      this.orderType = orderType;
      return this;
    }

    /**
     * 手机号
     */
    public Builder phone(String phone) {
      this.phone = phone;
      return this;
    }

    /**
     * 地址ID
     */
    public Builder addrId(Long addrId) {
      this.addrId = addrId;
      return this;
    }

    /**
     * 服务开始时间
     */
    public Builder serviceStartTime(String serviceStartTime) {
      this.serviceStartTime = serviceStartTime;
      return this;
    }

    /**
     * 预交金
     */
    public Builder prepayAmount(Long prepayAmount) {
      this.prepayAmount = prepayAmount;
      return this;
    }

    @Override
    public ReOrderRsp build() {
      return new ReOrderRsp(orgId, orgName, branchId, branchName, roomId, roomNo, kinsId, fullName, bedId, bedNo, priceId, orderType, phone, addrId, serviceStartTime, prepayAmount, super.buildUnknownFields());
    }
  }

  private static final class ProtoAdapter_ReOrderRsp extends ProtoAdapter<ReOrderRsp> {
    ProtoAdapter_ReOrderRsp() {
      super(FieldEncoding.LENGTH_DELIMITED, ReOrderRsp.class);
    }

    @Override
    public int encodedSize(ReOrderRsp value) {
      return (value.orgId != null ? ProtoAdapter.UINT64.encodedSizeWithTag(1, value.orgId) : 0)
          + (value.orgName != null ? ProtoAdapter.STRING.encodedSizeWithTag(2, value.orgName) : 0)
          + (value.branchId != null ? ProtoAdapter.UINT64.encodedSizeWithTag(3, value.branchId) : 0)
          + (value.branchName != null ? ProtoAdapter.STRING.encodedSizeWithTag(4, value.branchName) : 0)
          + (value.roomId != null ? ProtoAdapter.UINT64.encodedSizeWithTag(5, value.roomId) : 0)
          + (value.roomNo != null ? ProtoAdapter.STRING.encodedSizeWithTag(6, value.roomNo) : 0)
          + (value.kinsId != null ? ProtoAdapter.UINT64.encodedSizeWithTag(7, value.kinsId) : 0)
          + (value.fullName != null ? ProtoAdapter.STRING.encodedSizeWithTag(8, value.fullName) : 0)
          + (value.bedId != null ? ProtoAdapter.UINT64.encodedSizeWithTag(9, value.bedId) : 0)
          + (value.bedNo != null ? ProtoAdapter.STRING.encodedSizeWithTag(10, value.bedNo) : 0)
          + (value.priceId != null ? ProtoAdapter.UINT64.encodedSizeWithTag(11, value.priceId) : 0)
          + (value.orderType != null ? ProtoAdapter.UINT32.encodedSizeWithTag(12, value.orderType) : 0)
          + (value.phone != null ? ProtoAdapter.STRING.encodedSizeWithTag(13, value.phone) : 0)
          + (value.addrId != null ? ProtoAdapter.UINT64.encodedSizeWithTag(14, value.addrId) : 0)
          + (value.serviceStartTime != null ? ProtoAdapter.STRING.encodedSizeWithTag(15, value.serviceStartTime) : 0)
          + (value.prepayAmount != null ? ProtoAdapter.UINT64.encodedSizeWithTag(16, value.prepayAmount) : 0)
          + value.unknownFields().size();
    }

    @Override
    public void encode(ProtoWriter writer, ReOrderRsp value) throws IOException {
      if (value.orgId != null) ProtoAdapter.UINT64.encodeWithTag(writer, 1, value.orgId);
      if (value.orgName != null) ProtoAdapter.STRING.encodeWithTag(writer, 2, value.orgName);
      if (value.branchId != null) ProtoAdapter.UINT64.encodeWithTag(writer, 3, value.branchId);
      if (value.branchName != null) ProtoAdapter.STRING.encodeWithTag(writer, 4, value.branchName);
      if (value.roomId != null) ProtoAdapter.UINT64.encodeWithTag(writer, 5, value.roomId);
      if (value.roomNo != null) ProtoAdapter.STRING.encodeWithTag(writer, 6, value.roomNo);
      if (value.kinsId != null) ProtoAdapter.UINT64.encodeWithTag(writer, 7, value.kinsId);
      if (value.fullName != null) ProtoAdapter.STRING.encodeWithTag(writer, 8, value.fullName);
      if (value.bedId != null) ProtoAdapter.UINT64.encodeWithTag(writer, 9, value.bedId);
      if (value.bedNo != null) ProtoAdapter.STRING.encodeWithTag(writer, 10, value.bedNo);
      if (value.priceId != null) ProtoAdapter.UINT64.encodeWithTag(writer, 11, value.priceId);
      if (value.orderType != null) ProtoAdapter.UINT32.encodeWithTag(writer, 12, value.orderType);
      if (value.phone != null) ProtoAdapter.STRING.encodeWithTag(writer, 13, value.phone);
      if (value.addrId != null) ProtoAdapter.UINT64.encodeWithTag(writer, 14, value.addrId);
      if (value.serviceStartTime != null) ProtoAdapter.STRING.encodeWithTag(writer, 15, value.serviceStartTime);
      if (value.prepayAmount != null) ProtoAdapter.UINT64.encodeWithTag(writer, 16, value.prepayAmount);
      writer.writeBytes(value.unknownFields());
    }

    @Override
    public ReOrderRsp decode(ProtoReader reader) throws IOException {
      Builder builder = new Builder();
      long token = reader.beginMessage();
      for (int tag; (tag = reader.nextTag()) != -1;) {
        switch (tag) {
          case 1: builder.orgId(ProtoAdapter.UINT64.decode(reader)); break;
          case 2: builder.orgName(ProtoAdapter.STRING.decode(reader)); break;
          case 3: builder.branchId(ProtoAdapter.UINT64.decode(reader)); break;
          case 4: builder.branchName(ProtoAdapter.STRING.decode(reader)); break;
          case 5: builder.roomId(ProtoAdapter.UINT64.decode(reader)); break;
          case 6: builder.roomNo(ProtoAdapter.STRING.decode(reader)); break;
          case 7: builder.kinsId(ProtoAdapter.UINT64.decode(reader)); break;
          case 8: builder.fullName(ProtoAdapter.STRING.decode(reader)); break;
          case 9: builder.bedId(ProtoAdapter.UINT64.decode(reader)); break;
          case 10: builder.bedNo(ProtoAdapter.STRING.decode(reader)); break;
          case 11: builder.priceId(ProtoAdapter.UINT64.decode(reader)); break;
          case 12: builder.orderType(ProtoAdapter.UINT32.decode(reader)); break;
          case 13: builder.phone(ProtoAdapter.STRING.decode(reader)); break;
          case 14: builder.addrId(ProtoAdapter.UINT64.decode(reader)); break;
          case 15: builder.serviceStartTime(ProtoAdapter.STRING.decode(reader)); break;
          case 16: builder.prepayAmount(ProtoAdapter.UINT64.decode(reader)); break;
          default: {
            FieldEncoding fieldEncoding = reader.peekFieldEncoding();
            Object value = fieldEncoding.rawProtoAdapter().decode(reader);
            builder.addUnknownField(tag, fieldEncoding, value);
          }
        }
      }
      reader.endMessage(token);
      return builder.build();
    }

    @Override
    public ReOrderRsp redact(ReOrderRsp value) {
      Builder builder = value.newBuilder();
      builder.clearUnknownFields();
      return builder.build();
    }
  }
}
