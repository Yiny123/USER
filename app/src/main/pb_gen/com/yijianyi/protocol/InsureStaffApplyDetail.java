// Code generated by Wire protocol buffer compiler, do not edit.
// Source file: SaasModel.proto at 1146:1
package com.yijianyi.protocol;

import com.squareup.wire.FieldEncoding;
import com.squareup.wire.Message;
import com.squareup.wire.ProtoAdapter;
import com.squareup.wire.ProtoReader;
import com.squareup.wire.ProtoWriter;
import com.squareup.wire.WireField;
import com.squareup.wire.internal.Internal;
import java.io.IOException;
import java.lang.Integer;
import java.lang.Long;
import java.lang.Object;
import java.lang.Override;
import java.lang.String;
import java.lang.StringBuilder;
import okio.ByteString;

/**
 * 自照护理员申请记录流水
 */
public final class InsureStaffApplyDetail extends Message<InsureStaffApplyDetail, InsureStaffApplyDetail.Builder> {
  public static final ProtoAdapter<InsureStaffApplyDetail> ADAPTER = new ProtoAdapter_InsureStaffApplyDetail();

  private static final long serialVersionUID = 0L;

  public static final Long DEFAULT_ID = 0L;

  public static final String DEFAULT_APPLYID = "";

  public static final String DEFAULT_CONTENT = "";

  public static final Integer DEFAULT_STATUS = 0;

  public static final String DEFAULT_REJECTDESC = "";

  public static final Long DEFAULT_CREATETIME = 0L;

  public static final Long DEFAULT_CREATESTAFFID = 0L;

  public static final String DEFAULT_CREATESTAFFNAME = "";

  @WireField(
      tag = 1,
      adapter = "com.squareup.wire.ProtoAdapter#UINT64"
  )
  public final Long id;

  /**
   * 申请单号
   */
  @WireField(
      tag = 2,
      adapter = "com.squareup.wire.ProtoAdapter#STRING"
  )
  public final String applyId;

  /**
   * 操作内容
   */
  @WireField(
      tag = 3,
      adapter = "com.squareup.wire.ProtoAdapter#STRING"
  )
  public final String content;

  /**
   * 状态 1-下一步 2-通过 3-驳回
   */
  @WireField(
      tag = 4,
      adapter = "com.squareup.wire.ProtoAdapter#UINT32"
  )
  public final Integer status;

  /**
   * 驳回原因（审核不通过时使用）
   */
  @WireField(
      tag = 5,
      adapter = "com.squareup.wire.ProtoAdapter#STRING"
  )
  public final String rejectDesc;

  /**
   * 创建时间
   */
  @WireField(
      tag = 6,
      adapter = "com.squareup.wire.ProtoAdapter#UINT64"
  )
  public final Long createTime;

  @WireField(
      tag = 7,
      adapter = "com.squareup.wire.ProtoAdapter#UINT64"
  )
  public final Long createStaffId;

  @WireField(
      tag = 8,
      adapter = "com.squareup.wire.ProtoAdapter#STRING"
  )
  public final String createStaffName;

  public InsureStaffApplyDetail(Long id, String applyId, String content, Integer status, String rejectDesc, Long createTime, Long createStaffId, String createStaffName) {
    this(id, applyId, content, status, rejectDesc, createTime, createStaffId, createStaffName, ByteString.EMPTY);
  }

  public InsureStaffApplyDetail(Long id, String applyId, String content, Integer status, String rejectDesc, Long createTime, Long createStaffId, String createStaffName, ByteString unknownFields) {
    super(ADAPTER, unknownFields);
    this.id = id;
    this.applyId = applyId;
    this.content = content;
    this.status = status;
    this.rejectDesc = rejectDesc;
    this.createTime = createTime;
    this.createStaffId = createStaffId;
    this.createStaffName = createStaffName;
  }

  @Override
  public Builder newBuilder() {
    Builder builder = new Builder();
    builder.id = id;
    builder.applyId = applyId;
    builder.content = content;
    builder.status = status;
    builder.rejectDesc = rejectDesc;
    builder.createTime = createTime;
    builder.createStaffId = createStaffId;
    builder.createStaffName = createStaffName;
    builder.addUnknownFields(unknownFields());
    return builder;
  }

  @Override
  public boolean equals(Object other) {
    if (other == this) return true;
    if (!(other instanceof InsureStaffApplyDetail)) return false;
    InsureStaffApplyDetail o = (InsureStaffApplyDetail) other;
    return unknownFields().equals(o.unknownFields())
        && Internal.equals(id, o.id)
        && Internal.equals(applyId, o.applyId)
        && Internal.equals(content, o.content)
        && Internal.equals(status, o.status)
        && Internal.equals(rejectDesc, o.rejectDesc)
        && Internal.equals(createTime, o.createTime)
        && Internal.equals(createStaffId, o.createStaffId)
        && Internal.equals(createStaffName, o.createStaffName);
  }

  @Override
  public int hashCode() {
    int result = super.hashCode;
    if (result == 0) {
      result = unknownFields().hashCode();
      result = result * 37 + (id != null ? id.hashCode() : 0);
      result = result * 37 + (applyId != null ? applyId.hashCode() : 0);
      result = result * 37 + (content != null ? content.hashCode() : 0);
      result = result * 37 + (status != null ? status.hashCode() : 0);
      result = result * 37 + (rejectDesc != null ? rejectDesc.hashCode() : 0);
      result = result * 37 + (createTime != null ? createTime.hashCode() : 0);
      result = result * 37 + (createStaffId != null ? createStaffId.hashCode() : 0);
      result = result * 37 + (createStaffName != null ? createStaffName.hashCode() : 0);
      super.hashCode = result;
    }
    return result;
  }

  @Override
  public String toString() {
    StringBuilder builder = new StringBuilder();
    if (id != null) builder.append(", id=").append(id);
    if (applyId != null) builder.append(", applyId=").append(applyId);
    if (content != null) builder.append(", content=").append(content);
    if (status != null) builder.append(", status=").append(status);
    if (rejectDesc != null) builder.append(", rejectDesc=").append(rejectDesc);
    if (createTime != null) builder.append(", createTime=").append(createTime);
    if (createStaffId != null) builder.append(", createStaffId=").append(createStaffId);
    if (createStaffName != null) builder.append(", createStaffName=").append(createStaffName);
    return builder.replace(0, 2, "InsureStaffApplyDetail{").append('}').toString();
  }

  public static final class Builder extends Message.Builder<InsureStaffApplyDetail, Builder> {
    public Long id;

    public String applyId;

    public String content;

    public Integer status;

    public String rejectDesc;

    public Long createTime;

    public Long createStaffId;

    public String createStaffName;

    public Builder() {
    }

    public Builder id(Long id) {
      this.id = id;
      return this;
    }

    /**
     * 申请单号
     */
    public Builder applyId(String applyId) {
      this.applyId = applyId;
      return this;
    }

    /**
     * 操作内容
     */
    public Builder content(String content) {
      this.content = content;
      return this;
    }

    /**
     * 状态 1-下一步 2-通过 3-驳回
     */
    public Builder status(Integer status) {
      this.status = status;
      return this;
    }

    /**
     * 驳回原因（审核不通过时使用）
     */
    public Builder rejectDesc(String rejectDesc) {
      this.rejectDesc = rejectDesc;
      return this;
    }

    /**
     * 创建时间
     */
    public Builder createTime(Long createTime) {
      this.createTime = createTime;
      return this;
    }

    public Builder createStaffId(Long createStaffId) {
      this.createStaffId = createStaffId;
      return this;
    }

    public Builder createStaffName(String createStaffName) {
      this.createStaffName = createStaffName;
      return this;
    }

    @Override
    public InsureStaffApplyDetail build() {
      return new InsureStaffApplyDetail(id, applyId, content, status, rejectDesc, createTime, createStaffId, createStaffName, super.buildUnknownFields());
    }
  }

  private static final class ProtoAdapter_InsureStaffApplyDetail extends ProtoAdapter<InsureStaffApplyDetail> {
    ProtoAdapter_InsureStaffApplyDetail() {
      super(FieldEncoding.LENGTH_DELIMITED, InsureStaffApplyDetail.class);
    }

    @Override
    public int encodedSize(InsureStaffApplyDetail value) {
      return (value.id != null ? ProtoAdapter.UINT64.encodedSizeWithTag(1, value.id) : 0)
          + (value.applyId != null ? ProtoAdapter.STRING.encodedSizeWithTag(2, value.applyId) : 0)
          + (value.content != null ? ProtoAdapter.STRING.encodedSizeWithTag(3, value.content) : 0)
          + (value.status != null ? ProtoAdapter.UINT32.encodedSizeWithTag(4, value.status) : 0)
          + (value.rejectDesc != null ? ProtoAdapter.STRING.encodedSizeWithTag(5, value.rejectDesc) : 0)
          + (value.createTime != null ? ProtoAdapter.UINT64.encodedSizeWithTag(6, value.createTime) : 0)
          + (value.createStaffId != null ? ProtoAdapter.UINT64.encodedSizeWithTag(7, value.createStaffId) : 0)
          + (value.createStaffName != null ? ProtoAdapter.STRING.encodedSizeWithTag(8, value.createStaffName) : 0)
          + value.unknownFields().size();
    }

    @Override
    public void encode(ProtoWriter writer, InsureStaffApplyDetail value) throws IOException {
      if (value.id != null) ProtoAdapter.UINT64.encodeWithTag(writer, 1, value.id);
      if (value.applyId != null) ProtoAdapter.STRING.encodeWithTag(writer, 2, value.applyId);
      if (value.content != null) ProtoAdapter.STRING.encodeWithTag(writer, 3, value.content);
      if (value.status != null) ProtoAdapter.UINT32.encodeWithTag(writer, 4, value.status);
      if (value.rejectDesc != null) ProtoAdapter.STRING.encodeWithTag(writer, 5, value.rejectDesc);
      if (value.createTime != null) ProtoAdapter.UINT64.encodeWithTag(writer, 6, value.createTime);
      if (value.createStaffId != null) ProtoAdapter.UINT64.encodeWithTag(writer, 7, value.createStaffId);
      if (value.createStaffName != null) ProtoAdapter.STRING.encodeWithTag(writer, 8, value.createStaffName);
      writer.writeBytes(value.unknownFields());
    }

    @Override
    public InsureStaffApplyDetail decode(ProtoReader reader) throws IOException {
      Builder builder = new Builder();
      long token = reader.beginMessage();
      for (int tag; (tag = reader.nextTag()) != -1;) {
        switch (tag) {
          case 1: builder.id(ProtoAdapter.UINT64.decode(reader)); break;
          case 2: builder.applyId(ProtoAdapter.STRING.decode(reader)); break;
          case 3: builder.content(ProtoAdapter.STRING.decode(reader)); break;
          case 4: builder.status(ProtoAdapter.UINT32.decode(reader)); break;
          case 5: builder.rejectDesc(ProtoAdapter.STRING.decode(reader)); break;
          case 6: builder.createTime(ProtoAdapter.UINT64.decode(reader)); break;
          case 7: builder.createStaffId(ProtoAdapter.UINT64.decode(reader)); break;
          case 8: builder.createStaffName(ProtoAdapter.STRING.decode(reader)); break;
          default: {
            FieldEncoding fieldEncoding = reader.peekFieldEncoding();
            Object value = fieldEncoding.rawProtoAdapter().decode(reader);
            builder.addUnknownField(tag, fieldEncoding, value);
          }
        }
      }
      reader.endMessage(token);
      return builder.build();
    }

    @Override
    public InsureStaffApplyDetail redact(InsureStaffApplyDetail value) {
      Builder builder = value.newBuilder();
      builder.clearUnknownFields();
      return builder.build();
    }
  }
}
