// Code generated by Wire protocol buffer compiler, do not edit.
// Source file: OrderModel.proto at 728:1
package com.yijianyi.protocol;

import com.squareup.wire.FieldEncoding;
import com.squareup.wire.Message;
import com.squareup.wire.ProtoAdapter;
import com.squareup.wire.ProtoReader;
import com.squareup.wire.ProtoWriter;
import com.squareup.wire.WireField;
import com.squareup.wire.internal.Internal;
import java.io.IOException;
import java.lang.Integer;
import java.lang.Long;
import java.lang.Object;
import java.lang.Override;
import java.lang.String;
import java.lang.StringBuilder;
import okio.ByteString;

/**
 * 长护险订单自照考核
 */
public final class InsureOrderCheck extends Message<InsureOrderCheck, InsureOrderCheck.Builder> {
  public static final ProtoAdapter<InsureOrderCheck> ADAPTER = new ProtoAdapter_InsureOrderCheck();

  private static final long serialVersionUID = 0L;

  public static final Long DEFAULT_ID = 0L;

  public static final Long DEFAULT_COMPANYID = 0L;

  public static final String DEFAULT_ORDERID = "";

  public static final Integer DEFAULT_CHECKTYPE = 0;

  public static final Long DEFAULT_SCORE = 0L;

  public static final Long DEFAULT_CREATESTAFFID = 0L;

  public static final String DEFAULT_CREATESTAFFNAME = "";

  public static final Long DEFAULT_CREATETIME = 0L;

  /**
   * id
   */
  @WireField(
      tag = 1,
      adapter = "com.squareup.wire.ProtoAdapter#UINT64"
  )
  public final Long id;

  /**
   * 公司ID
   */
  @WireField(
      tag = 2,
      adapter = "com.squareup.wire.ProtoAdapter#UINT64"
  )
  public final Long companyId;

  /**
   * 订单号
   */
  @WireField(
      tag = 3,
      adapter = "com.squareup.wire.ProtoAdapter#STRING"
  )
  public final String orderId;

  /**
   * 考核类型  0-长护险生活照护类操作考核 1-居家照护质量标准检查 2-最终考核
   */
  @WireField(
      tag = 4,
      adapter = "com.squareup.wire.ProtoAdapter#UINT32"
  )
  public final Integer checkType;

  /**
   * 考核分数
   */
  @WireField(
      tag = 5,
      adapter = "com.squareup.wire.ProtoAdapter#UINT64"
  )
  public final Long score;

  /**
   * 服务员工ID
   */
  @WireField(
      tag = 6,
      adapter = "com.squareup.wire.ProtoAdapter#UINT64"
  )
  public final Long createStaffId;

  /**
   * 服务员工名称
   */
  @WireField(
      tag = 7,
      adapter = "com.squareup.wire.ProtoAdapter#STRING"
  )
  public final String createStaffName;

  /**
   * 创建时间
   */
  @WireField(
      tag = 8,
      adapter = "com.squareup.wire.ProtoAdapter#UINT64"
  )
  public final Long createTime;

  public InsureOrderCheck(Long id, Long companyId, String orderId, Integer checkType, Long score, Long createStaffId, String createStaffName, Long createTime) {
    this(id, companyId, orderId, checkType, score, createStaffId, createStaffName, createTime, ByteString.EMPTY);
  }

  public InsureOrderCheck(Long id, Long companyId, String orderId, Integer checkType, Long score, Long createStaffId, String createStaffName, Long createTime, ByteString unknownFields) {
    super(ADAPTER, unknownFields);
    this.id = id;
    this.companyId = companyId;
    this.orderId = orderId;
    this.checkType = checkType;
    this.score = score;
    this.createStaffId = createStaffId;
    this.createStaffName = createStaffName;
    this.createTime = createTime;
  }

  @Override
  public Builder newBuilder() {
    Builder builder = new Builder();
    builder.id = id;
    builder.companyId = companyId;
    builder.orderId = orderId;
    builder.checkType = checkType;
    builder.score = score;
    builder.createStaffId = createStaffId;
    builder.createStaffName = createStaffName;
    builder.createTime = createTime;
    builder.addUnknownFields(unknownFields());
    return builder;
  }

  @Override
  public boolean equals(Object other) {
    if (other == this) return true;
    if (!(other instanceof InsureOrderCheck)) return false;
    InsureOrderCheck o = (InsureOrderCheck) other;
    return unknownFields().equals(o.unknownFields())
        && Internal.equals(id, o.id)
        && Internal.equals(companyId, o.companyId)
        && Internal.equals(orderId, o.orderId)
        && Internal.equals(checkType, o.checkType)
        && Internal.equals(score, o.score)
        && Internal.equals(createStaffId, o.createStaffId)
        && Internal.equals(createStaffName, o.createStaffName)
        && Internal.equals(createTime, o.createTime);
  }

  @Override
  public int hashCode() {
    int result = super.hashCode;
    if (result == 0) {
      result = unknownFields().hashCode();
      result = result * 37 + (id != null ? id.hashCode() : 0);
      result = result * 37 + (companyId != null ? companyId.hashCode() : 0);
      result = result * 37 + (orderId != null ? orderId.hashCode() : 0);
      result = result * 37 + (checkType != null ? checkType.hashCode() : 0);
      result = result * 37 + (score != null ? score.hashCode() : 0);
      result = result * 37 + (createStaffId != null ? createStaffId.hashCode() : 0);
      result = result * 37 + (createStaffName != null ? createStaffName.hashCode() : 0);
      result = result * 37 + (createTime != null ? createTime.hashCode() : 0);
      super.hashCode = result;
    }
    return result;
  }

  @Override
  public String toString() {
    StringBuilder builder = new StringBuilder();
    if (id != null) builder.append(", id=").append(id);
    if (companyId != null) builder.append(", companyId=").append(companyId);
    if (orderId != null) builder.append(", orderId=").append(orderId);
    if (checkType != null) builder.append(", checkType=").append(checkType);
    if (score != null) builder.append(", score=").append(score);
    if (createStaffId != null) builder.append(", createStaffId=").append(createStaffId);
    if (createStaffName != null) builder.append(", createStaffName=").append(createStaffName);
    if (createTime != null) builder.append(", createTime=").append(createTime);
    return builder.replace(0, 2, "InsureOrderCheck{").append('}').toString();
  }

  public static final class Builder extends Message.Builder<InsureOrderCheck, Builder> {
    public Long id;

    public Long companyId;

    public String orderId;

    public Integer checkType;

    public Long score;

    public Long createStaffId;

    public String createStaffName;

    public Long createTime;

    public Builder() {
    }

    /**
     * id
     */
    public Builder id(Long id) {
      this.id = id;
      return this;
    }

    /**
     * 公司ID
     */
    public Builder companyId(Long companyId) {
      this.companyId = companyId;
      return this;
    }

    /**
     * 订单号
     */
    public Builder orderId(String orderId) {
      this.orderId = orderId;
      return this;
    }

    /**
     * 考核类型  0-长护险生活照护类操作考核 1-居家照护质量标准检查 2-最终考核
     */
    public Builder checkType(Integer checkType) {
      this.checkType = checkType;
      return this;
    }

    /**
     * 考核分数
     */
    public Builder score(Long score) {
      this.score = score;
      return this;
    }

    /**
     * 服务员工ID
     */
    public Builder createStaffId(Long createStaffId) {
      this.createStaffId = createStaffId;
      return this;
    }

    /**
     * 服务员工名称
     */
    public Builder createStaffName(String createStaffName) {
      this.createStaffName = createStaffName;
      return this;
    }

    /**
     * 创建时间
     */
    public Builder createTime(Long createTime) {
      this.createTime = createTime;
      return this;
    }

    @Override
    public InsureOrderCheck build() {
      return new InsureOrderCheck(id, companyId, orderId, checkType, score, createStaffId, createStaffName, createTime, super.buildUnknownFields());
    }
  }

  private static final class ProtoAdapter_InsureOrderCheck extends ProtoAdapter<InsureOrderCheck> {
    ProtoAdapter_InsureOrderCheck() {
      super(FieldEncoding.LENGTH_DELIMITED, InsureOrderCheck.class);
    }

    @Override
    public int encodedSize(InsureOrderCheck value) {
      return (value.id != null ? ProtoAdapter.UINT64.encodedSizeWithTag(1, value.id) : 0)
          + (value.companyId != null ? ProtoAdapter.UINT64.encodedSizeWithTag(2, value.companyId) : 0)
          + (value.orderId != null ? ProtoAdapter.STRING.encodedSizeWithTag(3, value.orderId) : 0)
          + (value.checkType != null ? ProtoAdapter.UINT32.encodedSizeWithTag(4, value.checkType) : 0)
          + (value.score != null ? ProtoAdapter.UINT64.encodedSizeWithTag(5, value.score) : 0)
          + (value.createStaffId != null ? ProtoAdapter.UINT64.encodedSizeWithTag(6, value.createStaffId) : 0)
          + (value.createStaffName != null ? ProtoAdapter.STRING.encodedSizeWithTag(7, value.createStaffName) : 0)
          + (value.createTime != null ? ProtoAdapter.UINT64.encodedSizeWithTag(8, value.createTime) : 0)
          + value.unknownFields().size();
    }

    @Override
    public void encode(ProtoWriter writer, InsureOrderCheck value) throws IOException {
      if (value.id != null) ProtoAdapter.UINT64.encodeWithTag(writer, 1, value.id);
      if (value.companyId != null) ProtoAdapter.UINT64.encodeWithTag(writer, 2, value.companyId);
      if (value.orderId != null) ProtoAdapter.STRING.encodeWithTag(writer, 3, value.orderId);
      if (value.checkType != null) ProtoAdapter.UINT32.encodeWithTag(writer, 4, value.checkType);
      if (value.score != null) ProtoAdapter.UINT64.encodeWithTag(writer, 5, value.score);
      if (value.createStaffId != null) ProtoAdapter.UINT64.encodeWithTag(writer, 6, value.createStaffId);
      if (value.createStaffName != null) ProtoAdapter.STRING.encodeWithTag(writer, 7, value.createStaffName);
      if (value.createTime != null) ProtoAdapter.UINT64.encodeWithTag(writer, 8, value.createTime);
      writer.writeBytes(value.unknownFields());
    }

    @Override
    public InsureOrderCheck decode(ProtoReader reader) throws IOException {
      Builder builder = new Builder();
      long token = reader.beginMessage();
      for (int tag; (tag = reader.nextTag()) != -1;) {
        switch (tag) {
          case 1: builder.id(ProtoAdapter.UINT64.decode(reader)); break;
          case 2: builder.companyId(ProtoAdapter.UINT64.decode(reader)); break;
          case 3: builder.orderId(ProtoAdapter.STRING.decode(reader)); break;
          case 4: builder.checkType(ProtoAdapter.UINT32.decode(reader)); break;
          case 5: builder.score(ProtoAdapter.UINT64.decode(reader)); break;
          case 6: builder.createStaffId(ProtoAdapter.UINT64.decode(reader)); break;
          case 7: builder.createStaffName(ProtoAdapter.STRING.decode(reader)); break;
          case 8: builder.createTime(ProtoAdapter.UINT64.decode(reader)); break;
          default: {
            FieldEncoding fieldEncoding = reader.peekFieldEncoding();
            Object value = fieldEncoding.rawProtoAdapter().decode(reader);
            builder.addUnknownField(tag, fieldEncoding, value);
          }
        }
      }
      reader.endMessage(token);
      return builder.build();
    }

    @Override
    public InsureOrderCheck redact(InsureOrderCheck value) {
      Builder builder = value.newBuilder();
      builder.clearUnknownFields();
      return builder.build();
    }
  }
}
