// Code generated by Wire protocol buffer compiler, do not edit.
// Source file: OrderModel.proto at 680:1
package com.yijianyi.protocol;

import com.squareup.wire.FieldEncoding;
import com.squareup.wire.Message;
import com.squareup.wire.ProtoAdapter;
import com.squareup.wire.ProtoReader;
import com.squareup.wire.ProtoWriter;
import com.squareup.wire.WireField;
import com.squareup.wire.internal.Internal;
import java.io.IOException;
import java.lang.Long;
import java.lang.Object;
import java.lang.Override;
import java.lang.String;
import java.lang.StringBuilder;
import okio.ByteString;

/**
 * 长护险订单照护计划明细
 */
public final class OrderTendDetail extends Message<OrderTendDetail, OrderTendDetail.Builder> {
  public static final ProtoAdapter<OrderTendDetail> ADAPTER = new ProtoAdapter_OrderTendDetail();

  private static final long serialVersionUID = 0L;

  public static final Long DEFAULT_ID = 0L;

  public static final Long DEFAULT_ORDERTENDID = 0L;

  public static final Long DEFAULT_TENDDETAILTYPEID = 0L;

  public static final Long DEFAULT_TENDDETAILID = 0L;

  public static final String DEFAULT_CONTENT = "";

  public static final Long DEFAULT_CREATESTAFFID = 0L;

  public static final String DEFAULT_CREATESTAFFNAME = "";

  public static final Long DEFAULT_CREATETIME = 0L;

  /**
   * id
   */
  @WireField(
      tag = 1,
      adapter = "com.squareup.wire.ProtoAdapter#UINT64"
  )
  public final Long id;

  /**
   * 照护计划ID
   */
  @WireField(
      tag = 2,
      adapter = "com.squareup.wire.ProtoAdapter#UINT64"
  )
  public final Long orderTendId;

  /**
   * 照护明细类型id
   */
  @WireField(
      tag = 3,
      adapter = "com.squareup.wire.ProtoAdapter#UINT64"
  )
  public final Long tendDetailTypeId;

  /**
   * 照护明细ID(如果是手动输入，则为-1)
   */
  @WireField(
      tag = 4,
      adapter = "com.squareup.wire.ProtoAdapter#UINT64"
  )
  public final Long tendDetailId;

  /**
   * 照护明细内容
   */
  @WireField(
      tag = 5,
      adapter = "com.squareup.wire.ProtoAdapter#STRING"
  )
  public final String content;

  /**
   * 创建员工id
   */
  @WireField(
      tag = 6,
      adapter = "com.squareup.wire.ProtoAdapter#UINT64"
  )
  public final Long createStaffId;

  /**
   * 创建员工名称
   */
  @WireField(
      tag = 7,
      adapter = "com.squareup.wire.ProtoAdapter#STRING"
  )
  public final String createStaffName;

  /**
   * 创建时间
   */
  @WireField(
      tag = 8,
      adapter = "com.squareup.wire.ProtoAdapter#UINT64"
  )
  public final Long createTime;

  public OrderTendDetail(Long id, Long orderTendId, Long tendDetailTypeId, Long tendDetailId, String content, Long createStaffId, String createStaffName, Long createTime) {
    this(id, orderTendId, tendDetailTypeId, tendDetailId, content, createStaffId, createStaffName, createTime, ByteString.EMPTY);
  }

  public OrderTendDetail(Long id, Long orderTendId, Long tendDetailTypeId, Long tendDetailId, String content, Long createStaffId, String createStaffName, Long createTime, ByteString unknownFields) {
    super(ADAPTER, unknownFields);
    this.id = id;
    this.orderTendId = orderTendId;
    this.tendDetailTypeId = tendDetailTypeId;
    this.tendDetailId = tendDetailId;
    this.content = content;
    this.createStaffId = createStaffId;
    this.createStaffName = createStaffName;
    this.createTime = createTime;
  }

  @Override
  public Builder newBuilder() {
    Builder builder = new Builder();
    builder.id = id;
    builder.orderTendId = orderTendId;
    builder.tendDetailTypeId = tendDetailTypeId;
    builder.tendDetailId = tendDetailId;
    builder.content = content;
    builder.createStaffId = createStaffId;
    builder.createStaffName = createStaffName;
    builder.createTime = createTime;
    builder.addUnknownFields(unknownFields());
    return builder;
  }

  @Override
  public boolean equals(Object other) {
    if (other == this) return true;
    if (!(other instanceof OrderTendDetail)) return false;
    OrderTendDetail o = (OrderTendDetail) other;
    return unknownFields().equals(o.unknownFields())
        && Internal.equals(id, o.id)
        && Internal.equals(orderTendId, o.orderTendId)
        && Internal.equals(tendDetailTypeId, o.tendDetailTypeId)
        && Internal.equals(tendDetailId, o.tendDetailId)
        && Internal.equals(content, o.content)
        && Internal.equals(createStaffId, o.createStaffId)
        && Internal.equals(createStaffName, o.createStaffName)
        && Internal.equals(createTime, o.createTime);
  }

  @Override
  public int hashCode() {
    int result = super.hashCode;
    if (result == 0) {
      result = unknownFields().hashCode();
      result = result * 37 + (id != null ? id.hashCode() : 0);
      result = result * 37 + (orderTendId != null ? orderTendId.hashCode() : 0);
      result = result * 37 + (tendDetailTypeId != null ? tendDetailTypeId.hashCode() : 0);
      result = result * 37 + (tendDetailId != null ? tendDetailId.hashCode() : 0);
      result = result * 37 + (content != null ? content.hashCode() : 0);
      result = result * 37 + (createStaffId != null ? createStaffId.hashCode() : 0);
      result = result * 37 + (createStaffName != null ? createStaffName.hashCode() : 0);
      result = result * 37 + (createTime != null ? createTime.hashCode() : 0);
      super.hashCode = result;
    }
    return result;
  }

  @Override
  public String toString() {
    StringBuilder builder = new StringBuilder();
    if (id != null) builder.append(", id=").append(id);
    if (orderTendId != null) builder.append(", orderTendId=").append(orderTendId);
    if (tendDetailTypeId != null) builder.append(", tendDetailTypeId=").append(tendDetailTypeId);
    if (tendDetailId != null) builder.append(", tendDetailId=").append(tendDetailId);
    if (content != null) builder.append(", content=").append(content);
    if (createStaffId != null) builder.append(", createStaffId=").append(createStaffId);
    if (createStaffName != null) builder.append(", createStaffName=").append(createStaffName);
    if (createTime != null) builder.append(", createTime=").append(createTime);
    return builder.replace(0, 2, "OrderTendDetail{").append('}').toString();
  }

  public static final class Builder extends Message.Builder<OrderTendDetail, Builder> {
    public Long id;

    public Long orderTendId;

    public Long tendDetailTypeId;

    public Long tendDetailId;

    public String content;

    public Long createStaffId;

    public String createStaffName;

    public Long createTime;

    public Builder() {
    }

    /**
     * id
     */
    public Builder id(Long id) {
      this.id = id;
      return this;
    }

    /**
     * 照护计划ID
     */
    public Builder orderTendId(Long orderTendId) {
      this.orderTendId = orderTendId;
      return this;
    }

    /**
     * 照护明细类型id
     */
    public Builder tendDetailTypeId(Long tendDetailTypeId) {
      this.tendDetailTypeId = tendDetailTypeId;
      return this;
    }

    /**
     * 照护明细ID(如果是手动输入，则为-1)
     */
    public Builder tendDetailId(Long tendDetailId) {
      this.tendDetailId = tendDetailId;
      return this;
    }

    /**
     * 照护明细内容
     */
    public Builder content(String content) {
      this.content = content;
      return this;
    }

    /**
     * 创建员工id
     */
    public Builder createStaffId(Long createStaffId) {
      this.createStaffId = createStaffId;
      return this;
    }

    /**
     * 创建员工名称
     */
    public Builder createStaffName(String createStaffName) {
      this.createStaffName = createStaffName;
      return this;
    }

    /**
     * 创建时间
     */
    public Builder createTime(Long createTime) {
      this.createTime = createTime;
      return this;
    }

    @Override
    public OrderTendDetail build() {
      return new OrderTendDetail(id, orderTendId, tendDetailTypeId, tendDetailId, content, createStaffId, createStaffName, createTime, super.buildUnknownFields());
    }
  }

  private static final class ProtoAdapter_OrderTendDetail extends ProtoAdapter<OrderTendDetail> {
    ProtoAdapter_OrderTendDetail() {
      super(FieldEncoding.LENGTH_DELIMITED, OrderTendDetail.class);
    }

    @Override
    public int encodedSize(OrderTendDetail value) {
      return (value.id != null ? ProtoAdapter.UINT64.encodedSizeWithTag(1, value.id) : 0)
          + (value.orderTendId != null ? ProtoAdapter.UINT64.encodedSizeWithTag(2, value.orderTendId) : 0)
          + (value.tendDetailTypeId != null ? ProtoAdapter.UINT64.encodedSizeWithTag(3, value.tendDetailTypeId) : 0)
          + (value.tendDetailId != null ? ProtoAdapter.UINT64.encodedSizeWithTag(4, value.tendDetailId) : 0)
          + (value.content != null ? ProtoAdapter.STRING.encodedSizeWithTag(5, value.content) : 0)
          + (value.createStaffId != null ? ProtoAdapter.UINT64.encodedSizeWithTag(6, value.createStaffId) : 0)
          + (value.createStaffName != null ? ProtoAdapter.STRING.encodedSizeWithTag(7, value.createStaffName) : 0)
          + (value.createTime != null ? ProtoAdapter.UINT64.encodedSizeWithTag(8, value.createTime) : 0)
          + value.unknownFields().size();
    }

    @Override
    public void encode(ProtoWriter writer, OrderTendDetail value) throws IOException {
      if (value.id != null) ProtoAdapter.UINT64.encodeWithTag(writer, 1, value.id);
      if (value.orderTendId != null) ProtoAdapter.UINT64.encodeWithTag(writer, 2, value.orderTendId);
      if (value.tendDetailTypeId != null) ProtoAdapter.UINT64.encodeWithTag(writer, 3, value.tendDetailTypeId);
      if (value.tendDetailId != null) ProtoAdapter.UINT64.encodeWithTag(writer, 4, value.tendDetailId);
      if (value.content != null) ProtoAdapter.STRING.encodeWithTag(writer, 5, value.content);
      if (value.createStaffId != null) ProtoAdapter.UINT64.encodeWithTag(writer, 6, value.createStaffId);
      if (value.createStaffName != null) ProtoAdapter.STRING.encodeWithTag(writer, 7, value.createStaffName);
      if (value.createTime != null) ProtoAdapter.UINT64.encodeWithTag(writer, 8, value.createTime);
      writer.writeBytes(value.unknownFields());
    }

    @Override
    public OrderTendDetail decode(ProtoReader reader) throws IOException {
      Builder builder = new Builder();
      long token = reader.beginMessage();
      for (int tag; (tag = reader.nextTag()) != -1;) {
        switch (tag) {
          case 1: builder.id(ProtoAdapter.UINT64.decode(reader)); break;
          case 2: builder.orderTendId(ProtoAdapter.UINT64.decode(reader)); break;
          case 3: builder.tendDetailTypeId(ProtoAdapter.UINT64.decode(reader)); break;
          case 4: builder.tendDetailId(ProtoAdapter.UINT64.decode(reader)); break;
          case 5: builder.content(ProtoAdapter.STRING.decode(reader)); break;
          case 6: builder.createStaffId(ProtoAdapter.UINT64.decode(reader)); break;
          case 7: builder.createStaffName(ProtoAdapter.STRING.decode(reader)); break;
          case 8: builder.createTime(ProtoAdapter.UINT64.decode(reader)); break;
          default: {
            FieldEncoding fieldEncoding = reader.peekFieldEncoding();
            Object value = fieldEncoding.rawProtoAdapter().decode(reader);
            builder.addUnknownField(tag, fieldEncoding, value);
          }
        }
      }
      reader.endMessage(token);
      return builder.build();
    }

    @Override
    public OrderTendDetail redact(OrderTendDetail value) {
      Builder builder = value.newBuilder();
      builder.clearUnknownFields();
      return builder.build();
    }
  }
}
