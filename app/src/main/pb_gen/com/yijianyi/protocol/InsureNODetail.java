// Code generated by Wire protocol buffer compiler, do not edit.
// Source file: SaasModel.proto at 876:1
package com.yijianyi.protocol;

import com.squareup.wire.FieldEncoding;
import com.squareup.wire.Message;
import com.squareup.wire.ProtoAdapter;
import com.squareup.wire.ProtoReader;
import com.squareup.wire.ProtoWriter;
import com.squareup.wire.WireField;
import com.squareup.wire.internal.Internal;
import java.io.IOException;
import java.lang.Integer;
import java.lang.Long;
import java.lang.Object;
import java.lang.Override;
import java.lang.String;
import java.lang.StringBuilder;
import okio.ByteString;

/**
 * 长护险申请记录明细
 */
public final class InsureNODetail extends Message<InsureNODetail, InsureNODetail.Builder> {
  public static final ProtoAdapter<InsureNODetail> ADAPTER = new ProtoAdapter_InsureNODetail();

  private static final long serialVersionUID = 0L;

  public static final Long DEFAULT_ID = 0L;

  public static final String DEFAULT_INSURENO = "";

  public static final Integer DEFAULT_STATUS = 0;

  public static final Integer DEFAULT_DETAILTYPE = 0;

  public static final String DEFAULT_CONTENT = "";

  public static final String DEFAULT_REMARK = "";

  public static final Long DEFAULT_CREATESTAFFID = 0L;

  public static final String DEFAULT_CREATESTAFFNAME = "";

  public static final Long DEFAULT_CREATETIME = 0L;

  public static final Long DEFAULT_STARTTIME = 0L;

  public static final Long DEFAULT_ENDTIME = 0L;

  public static final Integer DEFAULT_ISFORCE = 0;

  public static final String DEFAULT_REJECTDESC = "";

  @WireField(
      tag = 1,
      adapter = "com.squareup.wire.ProtoAdapter#UINT64"
  )
  public final Long id;

  /**
   * 申请批次
   */
  @WireField(
      tag = 2,
      adapter = "com.squareup.wire.ProtoAdapter#STRING"
  )
  public final String insureNO;

  /**
   * 状态 0-下一步 1-通过 2-驳回
   */
  @WireField(
      tag = 3,
      adapter = "com.squareup.wire.ProtoAdapter#UINT32"
  )
  public final Integer status;

  /**
   * 操作类型 0-用户提交 1-客服审核 2-指派护士 3-护士初审 4-提交复审 5-专家复审 6-指派健康经理 7-支付保证金 8-资料补全 9-录入复审时间
   */
  @WireField(
      tag = 4,
      adapter = "com.squareup.wire.ProtoAdapter#UINT32"
  )
  public final Integer detailType;

  /**
   * 操作内容
   */
  @WireField(
      tag = 5,
      adapter = "com.squareup.wire.ProtoAdapter#STRING"
  )
  public final String content;

  /**
   * 描述
   */
  @WireField(
      tag = 6,
      adapter = "com.squareup.wire.ProtoAdapter#STRING"
  )
  public final String remark;

  @WireField(
      tag = 7,
      adapter = "com.squareup.wire.ProtoAdapter#UINT64"
  )
  public final Long createStaffId;

  @WireField(
      tag = 8,
      adapter = "com.squareup.wire.ProtoAdapter#STRING"
  )
  public final String createStaffName;

  @WireField(
      tag = 9,
      adapter = "com.squareup.wire.ProtoAdapter#UINT64"
  )
  public final Long createTime;

  /**
   * 有效开始时间
   */
  @WireField(
      tag = 10,
      adapter = "com.squareup.wire.ProtoAdapter#UINT64"
  )
  public final Long startTime;

  /**
   * 有效结束时间
   */
  @WireField(
      tag = 11,
      adapter = "com.squareup.wire.ProtoAdapter#UINT64"
  )
  public final Long endTime;

  /**
   * 是否强制提交申请 0-非强制 1-强制提交
   */
  @WireField(
      tag = 12,
      adapter = "com.squareup.wire.ProtoAdapter#UINT32"
  )
  public final Integer isForce;

  /**
   * 驳回原因
   */
  @WireField(
      tag = 13,
      adapter = "com.squareup.wire.ProtoAdapter#STRING"
  )
  public final String rejectDesc;

  public InsureNODetail(Long id, String insureNO, Integer status, Integer detailType, String content, String remark, Long createStaffId, String createStaffName, Long createTime, Long startTime, Long endTime, Integer isForce, String rejectDesc) {
    this(id, insureNO, status, detailType, content, remark, createStaffId, createStaffName, createTime, startTime, endTime, isForce, rejectDesc, ByteString.EMPTY);
  }

  public InsureNODetail(Long id, String insureNO, Integer status, Integer detailType, String content, String remark, Long createStaffId, String createStaffName, Long createTime, Long startTime, Long endTime, Integer isForce, String rejectDesc, ByteString unknownFields) {
    super(ADAPTER, unknownFields);
    this.id = id;
    this.insureNO = insureNO;
    this.status = status;
    this.detailType = detailType;
    this.content = content;
    this.remark = remark;
    this.createStaffId = createStaffId;
    this.createStaffName = createStaffName;
    this.createTime = createTime;
    this.startTime = startTime;
    this.endTime = endTime;
    this.isForce = isForce;
    this.rejectDesc = rejectDesc;
  }

  @Override
  public Builder newBuilder() {
    Builder builder = new Builder();
    builder.id = id;
    builder.insureNO = insureNO;
    builder.status = status;
    builder.detailType = detailType;
    builder.content = content;
    builder.remark = remark;
    builder.createStaffId = createStaffId;
    builder.createStaffName = createStaffName;
    builder.createTime = createTime;
    builder.startTime = startTime;
    builder.endTime = endTime;
    builder.isForce = isForce;
    builder.rejectDesc = rejectDesc;
    builder.addUnknownFields(unknownFields());
    return builder;
  }

  @Override
  public boolean equals(Object other) {
    if (other == this) return true;
    if (!(other instanceof InsureNODetail)) return false;
    InsureNODetail o = (InsureNODetail) other;
    return unknownFields().equals(o.unknownFields())
        && Internal.equals(id, o.id)
        && Internal.equals(insureNO, o.insureNO)
        && Internal.equals(status, o.status)
        && Internal.equals(detailType, o.detailType)
        && Internal.equals(content, o.content)
        && Internal.equals(remark, o.remark)
        && Internal.equals(createStaffId, o.createStaffId)
        && Internal.equals(createStaffName, o.createStaffName)
        && Internal.equals(createTime, o.createTime)
        && Internal.equals(startTime, o.startTime)
        && Internal.equals(endTime, o.endTime)
        && Internal.equals(isForce, o.isForce)
        && Internal.equals(rejectDesc, o.rejectDesc);
  }

  @Override
  public int hashCode() {
    int result = super.hashCode;
    if (result == 0) {
      result = unknownFields().hashCode();
      result = result * 37 + (id != null ? id.hashCode() : 0);
      result = result * 37 + (insureNO != null ? insureNO.hashCode() : 0);
      result = result * 37 + (status != null ? status.hashCode() : 0);
      result = result * 37 + (detailType != null ? detailType.hashCode() : 0);
      result = result * 37 + (content != null ? content.hashCode() : 0);
      result = result * 37 + (remark != null ? remark.hashCode() : 0);
      result = result * 37 + (createStaffId != null ? createStaffId.hashCode() : 0);
      result = result * 37 + (createStaffName != null ? createStaffName.hashCode() : 0);
      result = result * 37 + (createTime != null ? createTime.hashCode() : 0);
      result = result * 37 + (startTime != null ? startTime.hashCode() : 0);
      result = result * 37 + (endTime != null ? endTime.hashCode() : 0);
      result = result * 37 + (isForce != null ? isForce.hashCode() : 0);
      result = result * 37 + (rejectDesc != null ? rejectDesc.hashCode() : 0);
      super.hashCode = result;
    }
    return result;
  }

  @Override
  public String toString() {
    StringBuilder builder = new StringBuilder();
    if (id != null) builder.append(", id=").append(id);
    if (insureNO != null) builder.append(", insureNO=").append(insureNO);
    if (status != null) builder.append(", status=").append(status);
    if (detailType != null) builder.append(", detailType=").append(detailType);
    if (content != null) builder.append(", content=").append(content);
    if (remark != null) builder.append(", remark=").append(remark);
    if (createStaffId != null) builder.append(", createStaffId=").append(createStaffId);
    if (createStaffName != null) builder.append(", createStaffName=").append(createStaffName);
    if (createTime != null) builder.append(", createTime=").append(createTime);
    if (startTime != null) builder.append(", startTime=").append(startTime);
    if (endTime != null) builder.append(", endTime=").append(endTime);
    if (isForce != null) builder.append(", isForce=").append(isForce);
    if (rejectDesc != null) builder.append(", rejectDesc=").append(rejectDesc);
    return builder.replace(0, 2, "InsureNODetail{").append('}').toString();
  }

  public static final class Builder extends Message.Builder<InsureNODetail, Builder> {
    public Long id;

    public String insureNO;

    public Integer status;

    public Integer detailType;

    public String content;

    public String remark;

    public Long createStaffId;

    public String createStaffName;

    public Long createTime;

    public Long startTime;

    public Long endTime;

    public Integer isForce;

    public String rejectDesc;

    public Builder() {
    }

    public Builder id(Long id) {
      this.id = id;
      return this;
    }

    /**
     * 申请批次
     */
    public Builder insureNO(String insureNO) {
      this.insureNO = insureNO;
      return this;
    }

    /**
     * 状态 0-下一步 1-通过 2-驳回
     */
    public Builder status(Integer status) {
      this.status = status;
      return this;
    }

    /**
     * 操作类型 0-用户提交 1-客服审核 2-指派护士 3-护士初审 4-提交复审 5-专家复审 6-指派健康经理 7-支付保证金 8-资料补全 9-录入复审时间
     */
    public Builder detailType(Integer detailType) {
      this.detailType = detailType;
      return this;
    }

    /**
     * 操作内容
     */
    public Builder content(String content) {
      this.content = content;
      return this;
    }

    /**
     * 描述
     */
    public Builder remark(String remark) {
      this.remark = remark;
      return this;
    }

    public Builder createStaffId(Long createStaffId) {
      this.createStaffId = createStaffId;
      return this;
    }

    public Builder createStaffName(String createStaffName) {
      this.createStaffName = createStaffName;
      return this;
    }

    public Builder createTime(Long createTime) {
      this.createTime = createTime;
      return this;
    }

    /**
     * 有效开始时间
     */
    public Builder startTime(Long startTime) {
      this.startTime = startTime;
      return this;
    }

    /**
     * 有效结束时间
     */
    public Builder endTime(Long endTime) {
      this.endTime = endTime;
      return this;
    }

    /**
     * 是否强制提交申请 0-非强制 1-强制提交
     */
    public Builder isForce(Integer isForce) {
      this.isForce = isForce;
      return this;
    }

    /**
     * 驳回原因
     */
    public Builder rejectDesc(String rejectDesc) {
      this.rejectDesc = rejectDesc;
      return this;
    }

    @Override
    public InsureNODetail build() {
      return new InsureNODetail(id, insureNO, status, detailType, content, remark, createStaffId, createStaffName, createTime, startTime, endTime, isForce, rejectDesc, super.buildUnknownFields());
    }
  }

  private static final class ProtoAdapter_InsureNODetail extends ProtoAdapter<InsureNODetail> {
    ProtoAdapter_InsureNODetail() {
      super(FieldEncoding.LENGTH_DELIMITED, InsureNODetail.class);
    }

    @Override
    public int encodedSize(InsureNODetail value) {
      return (value.id != null ? ProtoAdapter.UINT64.encodedSizeWithTag(1, value.id) : 0)
          + (value.insureNO != null ? ProtoAdapter.STRING.encodedSizeWithTag(2, value.insureNO) : 0)
          + (value.status != null ? ProtoAdapter.UINT32.encodedSizeWithTag(3, value.status) : 0)
          + (value.detailType != null ? ProtoAdapter.UINT32.encodedSizeWithTag(4, value.detailType) : 0)
          + (value.content != null ? ProtoAdapter.STRING.encodedSizeWithTag(5, value.content) : 0)
          + (value.remark != null ? ProtoAdapter.STRING.encodedSizeWithTag(6, value.remark) : 0)
          + (value.createStaffId != null ? ProtoAdapter.UINT64.encodedSizeWithTag(7, value.createStaffId) : 0)
          + (value.createStaffName != null ? ProtoAdapter.STRING.encodedSizeWithTag(8, value.createStaffName) : 0)
          + (value.createTime != null ? ProtoAdapter.UINT64.encodedSizeWithTag(9, value.createTime) : 0)
          + (value.startTime != null ? ProtoAdapter.UINT64.encodedSizeWithTag(10, value.startTime) : 0)
          + (value.endTime != null ? ProtoAdapter.UINT64.encodedSizeWithTag(11, value.endTime) : 0)
          + (value.isForce != null ? ProtoAdapter.UINT32.encodedSizeWithTag(12, value.isForce) : 0)
          + (value.rejectDesc != null ? ProtoAdapter.STRING.encodedSizeWithTag(13, value.rejectDesc) : 0)
          + value.unknownFields().size();
    }

    @Override
    public void encode(ProtoWriter writer, InsureNODetail value) throws IOException {
      if (value.id != null) ProtoAdapter.UINT64.encodeWithTag(writer, 1, value.id);
      if (value.insureNO != null) ProtoAdapter.STRING.encodeWithTag(writer, 2, value.insureNO);
      if (value.status != null) ProtoAdapter.UINT32.encodeWithTag(writer, 3, value.status);
      if (value.detailType != null) ProtoAdapter.UINT32.encodeWithTag(writer, 4, value.detailType);
      if (value.content != null) ProtoAdapter.STRING.encodeWithTag(writer, 5, value.content);
      if (value.remark != null) ProtoAdapter.STRING.encodeWithTag(writer, 6, value.remark);
      if (value.createStaffId != null) ProtoAdapter.UINT64.encodeWithTag(writer, 7, value.createStaffId);
      if (value.createStaffName != null) ProtoAdapter.STRING.encodeWithTag(writer, 8, value.createStaffName);
      if (value.createTime != null) ProtoAdapter.UINT64.encodeWithTag(writer, 9, value.createTime);
      if (value.startTime != null) ProtoAdapter.UINT64.encodeWithTag(writer, 10, value.startTime);
      if (value.endTime != null) ProtoAdapter.UINT64.encodeWithTag(writer, 11, value.endTime);
      if (value.isForce != null) ProtoAdapter.UINT32.encodeWithTag(writer, 12, value.isForce);
      if (value.rejectDesc != null) ProtoAdapter.STRING.encodeWithTag(writer, 13, value.rejectDesc);
      writer.writeBytes(value.unknownFields());
    }

    @Override
    public InsureNODetail decode(ProtoReader reader) throws IOException {
      Builder builder = new Builder();
      long token = reader.beginMessage();
      for (int tag; (tag = reader.nextTag()) != -1;) {
        switch (tag) {
          case 1: builder.id(ProtoAdapter.UINT64.decode(reader)); break;
          case 2: builder.insureNO(ProtoAdapter.STRING.decode(reader)); break;
          case 3: builder.status(ProtoAdapter.UINT32.decode(reader)); break;
          case 4: builder.detailType(ProtoAdapter.UINT32.decode(reader)); break;
          case 5: builder.content(ProtoAdapter.STRING.decode(reader)); break;
          case 6: builder.remark(ProtoAdapter.STRING.decode(reader)); break;
          case 7: builder.createStaffId(ProtoAdapter.UINT64.decode(reader)); break;
          case 8: builder.createStaffName(ProtoAdapter.STRING.decode(reader)); break;
          case 9: builder.createTime(ProtoAdapter.UINT64.decode(reader)); break;
          case 10: builder.startTime(ProtoAdapter.UINT64.decode(reader)); break;
          case 11: builder.endTime(ProtoAdapter.UINT64.decode(reader)); break;
          case 12: builder.isForce(ProtoAdapter.UINT32.decode(reader)); break;
          case 13: builder.rejectDesc(ProtoAdapter.STRING.decode(reader)); break;
          default: {
            FieldEncoding fieldEncoding = reader.peekFieldEncoding();
            Object value = fieldEncoding.rawProtoAdapter().decode(reader);
            builder.addUnknownField(tag, fieldEncoding, value);
          }
        }
      }
      reader.endMessage(token);
      return builder.build();
    }

    @Override
    public InsureNODetail redact(InsureNODetail value) {
      Builder builder = value.newBuilder();
      builder.clearUnknownFields();
      return builder.build();
    }
  }
}
