// Code generated by Wire protocol buffer compiler, do not edit.
// Source file: AppInterface.proto at 1572:1
package com.yijianyi.protocol;

import com.squareup.wire.FieldEncoding;
import com.squareup.wire.Message;
import com.squareup.wire.ProtoAdapter;
import com.squareup.wire.ProtoReader;
import com.squareup.wire.ProtoWriter;
import com.squareup.wire.WireField;
import com.squareup.wire.internal.Internal;
import java.io.IOException;
import java.lang.Integer;
import java.lang.Long;
import java.lang.Object;
import java.lang.Override;
import java.lang.String;
import java.lang.StringBuilder;
import okio.ByteString;

/**
 * 长护险护士信息
 */
public final class GetInsureHGInfoRsp extends Message<GetInsureHGInfoRsp, GetInsureHGInfoRsp.Builder> {
  public static final ProtoAdapter<GetInsureHGInfoRsp> ADAPTER = new ProtoAdapter_GetInsureHGInfoRsp();

  private static final long serialVersionUID = 0L;

  public static final Long DEFAULT_ID = 0L;

  public static final String DEFAULT_FULLNAME = "";

  public static final String DEFAULT_PICURL = "";

  public static final Integer DEFAULT_SEX = 0;

  public static final Long DEFAULT_AGE = 0L;

  public static final String DEFAULT_NATIVEPLACE = "";

  public static final Long DEFAULT_SERVICENUM = 0L;

  public static final Integer DEFAULT_PRAISE = 0;

  public static final String DEFAULT_SERVICEORG = "";

  public static final String DEFAULT_HGNO = "";

  public static final Integer DEFAULT_SENIORITY = 0;

  public static final String DEFAULT_LANGUAGE = "";

  public static final String DEFAULT_COMPANYNAME = "";

  public static final String DEFAULT_GOODATPROJECT = "";

  public static final String DEFAULT_HEALTHCERTIFICATE = "";

  public static final String DEFAULT_HEALTHCERTIFICATEURL = "";

  public static final String DEFAULT_NURSINGCERTIFICATE = "";

  public static final String DEFAULT_NURSINGCERTIFICATEURL = "";

  /**
   * 护工id
   */
  @WireField(
      tag = 1,
      adapter = "com.squareup.wire.ProtoAdapter#UINT64"
  )
  public final Long id;

  /**
   * 全名
   */
  @WireField(
      tag = 2,
      adapter = "com.squareup.wire.ProtoAdapter#STRING"
  )
  public final String fullName;

  /**
   * 个人照片
   */
  @WireField(
      tag = 3,
      adapter = "com.squareup.wire.ProtoAdapter#STRING"
  )
  public final String picUrl;

  /**
   * 0未设置 1男 2 女
   */
  @WireField(
      tag = 4,
      adapter = "com.squareup.wire.ProtoAdapter#UINT32"
  )
  public final Integer sex;

  /**
   * 年龄
   */
  @WireField(
      tag = 5,
      adapter = "com.squareup.wire.ProtoAdapter#UINT64"
  )
  public final Long age;

  /**
   * 籍贯
   */
  @WireField(
      tag = 6,
      adapter = "com.squareup.wire.ProtoAdapter#STRING"
  )
  public final String nativeplace;

  /**
   * 已服务人数
   */
  @WireField(
      tag = 7,
      adapter = "com.squareup.wire.ProtoAdapter#UINT64"
  )
  public final Long serviceNum;

  /**
   * 评分
   */
  @WireField(
      tag = 8,
      adapter = "com.squareup.wire.ProtoAdapter#UINT32"
  )
  public final Integer praise;

  /**
   * 任职医院
   */
  @WireField(
      tag = 9,
      adapter = "com.squareup.wire.ProtoAdapter#STRING"
  )
  public final String serviceOrg;

  /**
   * 工号
   */
  @WireField(
      tag = 10,
      adapter = "com.squareup.wire.ProtoAdapter#STRING"
  )
  public final String hgno;

  /**
   * 工龄
   */
  @WireField(
      tag = 11,
      adapter = "com.squareup.wire.ProtoAdapter#UINT32"
  )
  public final Integer seniority;

  /**
   * 多种语言
   */
  @WireField(
      tag = 12,
      adapter = "com.squareup.wire.ProtoAdapter#STRING"
  )
  public final String language;

  /**
   * 服务供应商
   */
  @WireField(
      tag = 13,
      adapter = "com.squareup.wire.ProtoAdapter#STRING"
  )
  public final String companyName;

  /**
   * 擅长项目
   */
  @WireField(
      tag = 14,
      adapter = "com.squareup.wire.ProtoAdapter#STRING"
  )
  public final String goodAtProject;

  /**
   * 健康证id
   */
  @WireField(
      tag = 15,
      adapter = "com.squareup.wire.ProtoAdapter#STRING"
  )
  public final String healthCertificate;

  /**
   * 健康证Url
   */
  @WireField(
      tag = 16,
      adapter = "com.squareup.wire.ProtoAdapter#STRING"
  )
  public final String healthCertificateUrl;

  /**
   * 护理证id
   */
  @WireField(
      tag = 17,
      adapter = "com.squareup.wire.ProtoAdapter#STRING"
  )
  public final String nursingCertificate;

  /**
   * 护理证Url
   */
  @WireField(
      tag = 18,
      adapter = "com.squareup.wire.ProtoAdapter#STRING"
  )
  public final String nursingCertificateUrl;

  public GetInsureHGInfoRsp(Long id, String fullName, String picUrl, Integer sex, Long age, String nativeplace, Long serviceNum, Integer praise, String serviceOrg, String hgno, Integer seniority, String language, String companyName, String goodAtProject, String healthCertificate, String healthCertificateUrl, String nursingCertificate, String nursingCertificateUrl) {
    this(id, fullName, picUrl, sex, age, nativeplace, serviceNum, praise, serviceOrg, hgno, seniority, language, companyName, goodAtProject, healthCertificate, healthCertificateUrl, nursingCertificate, nursingCertificateUrl, ByteString.EMPTY);
  }

  public GetInsureHGInfoRsp(Long id, String fullName, String picUrl, Integer sex, Long age, String nativeplace, Long serviceNum, Integer praise, String serviceOrg, String hgno, Integer seniority, String language, String companyName, String goodAtProject, String healthCertificate, String healthCertificateUrl, String nursingCertificate, String nursingCertificateUrl, ByteString unknownFields) {
    super(ADAPTER, unknownFields);
    this.id = id;
    this.fullName = fullName;
    this.picUrl = picUrl;
    this.sex = sex;
    this.age = age;
    this.nativeplace = nativeplace;
    this.serviceNum = serviceNum;
    this.praise = praise;
    this.serviceOrg = serviceOrg;
    this.hgno = hgno;
    this.seniority = seniority;
    this.language = language;
    this.companyName = companyName;
    this.goodAtProject = goodAtProject;
    this.healthCertificate = healthCertificate;
    this.healthCertificateUrl = healthCertificateUrl;
    this.nursingCertificate = nursingCertificate;
    this.nursingCertificateUrl = nursingCertificateUrl;
  }

  @Override
  public Builder newBuilder() {
    Builder builder = new Builder();
    builder.id = id;
    builder.fullName = fullName;
    builder.picUrl = picUrl;
    builder.sex = sex;
    builder.age = age;
    builder.nativeplace = nativeplace;
    builder.serviceNum = serviceNum;
    builder.praise = praise;
    builder.serviceOrg = serviceOrg;
    builder.hgno = hgno;
    builder.seniority = seniority;
    builder.language = language;
    builder.companyName = companyName;
    builder.goodAtProject = goodAtProject;
    builder.healthCertificate = healthCertificate;
    builder.healthCertificateUrl = healthCertificateUrl;
    builder.nursingCertificate = nursingCertificate;
    builder.nursingCertificateUrl = nursingCertificateUrl;
    builder.addUnknownFields(unknownFields());
    return builder;
  }

  @Override
  public boolean equals(Object other) {
    if (other == this) return true;
    if (!(other instanceof GetInsureHGInfoRsp)) return false;
    GetInsureHGInfoRsp o = (GetInsureHGInfoRsp) other;
    return unknownFields().equals(o.unknownFields())
        && Internal.equals(id, o.id)
        && Internal.equals(fullName, o.fullName)
        && Internal.equals(picUrl, o.picUrl)
        && Internal.equals(sex, o.sex)
        && Internal.equals(age, o.age)
        && Internal.equals(nativeplace, o.nativeplace)
        && Internal.equals(serviceNum, o.serviceNum)
        && Internal.equals(praise, o.praise)
        && Internal.equals(serviceOrg, o.serviceOrg)
        && Internal.equals(hgno, o.hgno)
        && Internal.equals(seniority, o.seniority)
        && Internal.equals(language, o.language)
        && Internal.equals(companyName, o.companyName)
        && Internal.equals(goodAtProject, o.goodAtProject)
        && Internal.equals(healthCertificate, o.healthCertificate)
        && Internal.equals(healthCertificateUrl, o.healthCertificateUrl)
        && Internal.equals(nursingCertificate, o.nursingCertificate)
        && Internal.equals(nursingCertificateUrl, o.nursingCertificateUrl);
  }

  @Override
  public int hashCode() {
    int result = super.hashCode;
    if (result == 0) {
      result = unknownFields().hashCode();
      result = result * 37 + (id != null ? id.hashCode() : 0);
      result = result * 37 + (fullName != null ? fullName.hashCode() : 0);
      result = result * 37 + (picUrl != null ? picUrl.hashCode() : 0);
      result = result * 37 + (sex != null ? sex.hashCode() : 0);
      result = result * 37 + (age != null ? age.hashCode() : 0);
      result = result * 37 + (nativeplace != null ? nativeplace.hashCode() : 0);
      result = result * 37 + (serviceNum != null ? serviceNum.hashCode() : 0);
      result = result * 37 + (praise != null ? praise.hashCode() : 0);
      result = result * 37 + (serviceOrg != null ? serviceOrg.hashCode() : 0);
      result = result * 37 + (hgno != null ? hgno.hashCode() : 0);
      result = result * 37 + (seniority != null ? seniority.hashCode() : 0);
      result = result * 37 + (language != null ? language.hashCode() : 0);
      result = result * 37 + (companyName != null ? companyName.hashCode() : 0);
      result = result * 37 + (goodAtProject != null ? goodAtProject.hashCode() : 0);
      result = result * 37 + (healthCertificate != null ? healthCertificate.hashCode() : 0);
      result = result * 37 + (healthCertificateUrl != null ? healthCertificateUrl.hashCode() : 0);
      result = result * 37 + (nursingCertificate != null ? nursingCertificate.hashCode() : 0);
      result = result * 37 + (nursingCertificateUrl != null ? nursingCertificateUrl.hashCode() : 0);
      super.hashCode = result;
    }
    return result;
  }

  @Override
  public String toString() {
    StringBuilder builder = new StringBuilder();
    if (id != null) builder.append(", id=").append(id);
    if (fullName != null) builder.append(", fullName=").append(fullName);
    if (picUrl != null) builder.append(", picUrl=").append(picUrl);
    if (sex != null) builder.append(", sex=").append(sex);
    if (age != null) builder.append(", age=").append(age);
    if (nativeplace != null) builder.append(", nativeplace=").append(nativeplace);
    if (serviceNum != null) builder.append(", serviceNum=").append(serviceNum);
    if (praise != null) builder.append(", praise=").append(praise);
    if (serviceOrg != null) builder.append(", serviceOrg=").append(serviceOrg);
    if (hgno != null) builder.append(", hgno=").append(hgno);
    if (seniority != null) builder.append(", seniority=").append(seniority);
    if (language != null) builder.append(", language=").append(language);
    if (companyName != null) builder.append(", companyName=").append(companyName);
    if (goodAtProject != null) builder.append(", goodAtProject=").append(goodAtProject);
    if (healthCertificate != null) builder.append(", healthCertificate=").append(healthCertificate);
    if (healthCertificateUrl != null) builder.append(", healthCertificateUrl=").append(healthCertificateUrl);
    if (nursingCertificate != null) builder.append(", nursingCertificate=").append(nursingCertificate);
    if (nursingCertificateUrl != null) builder.append(", nursingCertificateUrl=").append(nursingCertificateUrl);
    return builder.replace(0, 2, "GetInsureHGInfoRsp{").append('}').toString();
  }

  public static final class Builder extends Message.Builder<GetInsureHGInfoRsp, Builder> {
    public Long id;

    public String fullName;

    public String picUrl;

    public Integer sex;

    public Long age;

    public String nativeplace;

    public Long serviceNum;

    public Integer praise;

    public String serviceOrg;

    public String hgno;

    public Integer seniority;

    public String language;

    public String companyName;

    public String goodAtProject;

    public String healthCertificate;

    public String healthCertificateUrl;

    public String nursingCertificate;

    public String nursingCertificateUrl;

    public Builder() {
    }

    /**
     * 护工id
     */
    public Builder id(Long id) {
      this.id = id;
      return this;
    }

    /**
     * 全名
     */
    public Builder fullName(String fullName) {
      this.fullName = fullName;
      return this;
    }

    /**
     * 个人照片
     */
    public Builder picUrl(String picUrl) {
      this.picUrl = picUrl;
      return this;
    }

    /**
     * 0未设置 1男 2 女
     */
    public Builder sex(Integer sex) {
      this.sex = sex;
      return this;
    }

    /**
     * 年龄
     */
    public Builder age(Long age) {
      this.age = age;
      return this;
    }

    /**
     * 籍贯
     */
    public Builder nativeplace(String nativeplace) {
      this.nativeplace = nativeplace;
      return this;
    }

    /**
     * 已服务人数
     */
    public Builder serviceNum(Long serviceNum) {
      this.serviceNum = serviceNum;
      return this;
    }

    /**
     * 评分
     */
    public Builder praise(Integer praise) {
      this.praise = praise;
      return this;
    }

    /**
     * 任职医院
     */
    public Builder serviceOrg(String serviceOrg) {
      this.serviceOrg = serviceOrg;
      return this;
    }

    /**
     * 工号
     */
    public Builder hgno(String hgno) {
      this.hgno = hgno;
      return this;
    }

    /**
     * 工龄
     */
    public Builder seniority(Integer seniority) {
      this.seniority = seniority;
      return this;
    }

    /**
     * 多种语言
     */
    public Builder language(String language) {
      this.language = language;
      return this;
    }

    /**
     * 服务供应商
     */
    public Builder companyName(String companyName) {
      this.companyName = companyName;
      return this;
    }

    /**
     * 擅长项目
     */
    public Builder goodAtProject(String goodAtProject) {
      this.goodAtProject = goodAtProject;
      return this;
    }

    /**
     * 健康证id
     */
    public Builder healthCertificate(String healthCertificate) {
      this.healthCertificate = healthCertificate;
      return this;
    }

    /**
     * 健康证Url
     */
    public Builder healthCertificateUrl(String healthCertificateUrl) {
      this.healthCertificateUrl = healthCertificateUrl;
      return this;
    }

    /**
     * 护理证id
     */
    public Builder nursingCertificate(String nursingCertificate) {
      this.nursingCertificate = nursingCertificate;
      return this;
    }

    /**
     * 护理证Url
     */
    public Builder nursingCertificateUrl(String nursingCertificateUrl) {
      this.nursingCertificateUrl = nursingCertificateUrl;
      return this;
    }

    @Override
    public GetInsureHGInfoRsp build() {
      return new GetInsureHGInfoRsp(id, fullName, picUrl, sex, age, nativeplace, serviceNum, praise, serviceOrg, hgno, seniority, language, companyName, goodAtProject, healthCertificate, healthCertificateUrl, nursingCertificate, nursingCertificateUrl, super.buildUnknownFields());
    }
  }

  private static final class ProtoAdapter_GetInsureHGInfoRsp extends ProtoAdapter<GetInsureHGInfoRsp> {
    ProtoAdapter_GetInsureHGInfoRsp() {
      super(FieldEncoding.LENGTH_DELIMITED, GetInsureHGInfoRsp.class);
    }

    @Override
    public int encodedSize(GetInsureHGInfoRsp value) {
      return (value.id != null ? ProtoAdapter.UINT64.encodedSizeWithTag(1, value.id) : 0)
          + (value.fullName != null ? ProtoAdapter.STRING.encodedSizeWithTag(2, value.fullName) : 0)
          + (value.picUrl != null ? ProtoAdapter.STRING.encodedSizeWithTag(3, value.picUrl) : 0)
          + (value.sex != null ? ProtoAdapter.UINT32.encodedSizeWithTag(4, value.sex) : 0)
          + (value.age != null ? ProtoAdapter.UINT64.encodedSizeWithTag(5, value.age) : 0)
          + (value.nativeplace != null ? ProtoAdapter.STRING.encodedSizeWithTag(6, value.nativeplace) : 0)
          + (value.serviceNum != null ? ProtoAdapter.UINT64.encodedSizeWithTag(7, value.serviceNum) : 0)
          + (value.praise != null ? ProtoAdapter.UINT32.encodedSizeWithTag(8, value.praise) : 0)
          + (value.serviceOrg != null ? ProtoAdapter.STRING.encodedSizeWithTag(9, value.serviceOrg) : 0)
          + (value.hgno != null ? ProtoAdapter.STRING.encodedSizeWithTag(10, value.hgno) : 0)
          + (value.seniority != null ? ProtoAdapter.UINT32.encodedSizeWithTag(11, value.seniority) : 0)
          + (value.language != null ? ProtoAdapter.STRING.encodedSizeWithTag(12, value.language) : 0)
          + (value.companyName != null ? ProtoAdapter.STRING.encodedSizeWithTag(13, value.companyName) : 0)
          + (value.goodAtProject != null ? ProtoAdapter.STRING.encodedSizeWithTag(14, value.goodAtProject) : 0)
          + (value.healthCertificate != null ? ProtoAdapter.STRING.encodedSizeWithTag(15, value.healthCertificate) : 0)
          + (value.healthCertificateUrl != null ? ProtoAdapter.STRING.encodedSizeWithTag(16, value.healthCertificateUrl) : 0)
          + (value.nursingCertificate != null ? ProtoAdapter.STRING.encodedSizeWithTag(17, value.nursingCertificate) : 0)
          + (value.nursingCertificateUrl != null ? ProtoAdapter.STRING.encodedSizeWithTag(18, value.nursingCertificateUrl) : 0)
          + value.unknownFields().size();
    }

    @Override
    public void encode(ProtoWriter writer, GetInsureHGInfoRsp value) throws IOException {
      if (value.id != null) ProtoAdapter.UINT64.encodeWithTag(writer, 1, value.id);
      if (value.fullName != null) ProtoAdapter.STRING.encodeWithTag(writer, 2, value.fullName);
      if (value.picUrl != null) ProtoAdapter.STRING.encodeWithTag(writer, 3, value.picUrl);
      if (value.sex != null) ProtoAdapter.UINT32.encodeWithTag(writer, 4, value.sex);
      if (value.age != null) ProtoAdapter.UINT64.encodeWithTag(writer, 5, value.age);
      if (value.nativeplace != null) ProtoAdapter.STRING.encodeWithTag(writer, 6, value.nativeplace);
      if (value.serviceNum != null) ProtoAdapter.UINT64.encodeWithTag(writer, 7, value.serviceNum);
      if (value.praise != null) ProtoAdapter.UINT32.encodeWithTag(writer, 8, value.praise);
      if (value.serviceOrg != null) ProtoAdapter.STRING.encodeWithTag(writer, 9, value.serviceOrg);
      if (value.hgno != null) ProtoAdapter.STRING.encodeWithTag(writer, 10, value.hgno);
      if (value.seniority != null) ProtoAdapter.UINT32.encodeWithTag(writer, 11, value.seniority);
      if (value.language != null) ProtoAdapter.STRING.encodeWithTag(writer, 12, value.language);
      if (value.companyName != null) ProtoAdapter.STRING.encodeWithTag(writer, 13, value.companyName);
      if (value.goodAtProject != null) ProtoAdapter.STRING.encodeWithTag(writer, 14, value.goodAtProject);
      if (value.healthCertificate != null) ProtoAdapter.STRING.encodeWithTag(writer, 15, value.healthCertificate);
      if (value.healthCertificateUrl != null) ProtoAdapter.STRING.encodeWithTag(writer, 16, value.healthCertificateUrl);
      if (value.nursingCertificate != null) ProtoAdapter.STRING.encodeWithTag(writer, 17, value.nursingCertificate);
      if (value.nursingCertificateUrl != null) ProtoAdapter.STRING.encodeWithTag(writer, 18, value.nursingCertificateUrl);
      writer.writeBytes(value.unknownFields());
    }

    @Override
    public GetInsureHGInfoRsp decode(ProtoReader reader) throws IOException {
      Builder builder = new Builder();
      long token = reader.beginMessage();
      for (int tag; (tag = reader.nextTag()) != -1;) {
        switch (tag) {
          case 1: builder.id(ProtoAdapter.UINT64.decode(reader)); break;
          case 2: builder.fullName(ProtoAdapter.STRING.decode(reader)); break;
          case 3: builder.picUrl(ProtoAdapter.STRING.decode(reader)); break;
          case 4: builder.sex(ProtoAdapter.UINT32.decode(reader)); break;
          case 5: builder.age(ProtoAdapter.UINT64.decode(reader)); break;
          case 6: builder.nativeplace(ProtoAdapter.STRING.decode(reader)); break;
          case 7: builder.serviceNum(ProtoAdapter.UINT64.decode(reader)); break;
          case 8: builder.praise(ProtoAdapter.UINT32.decode(reader)); break;
          case 9: builder.serviceOrg(ProtoAdapter.STRING.decode(reader)); break;
          case 10: builder.hgno(ProtoAdapter.STRING.decode(reader)); break;
          case 11: builder.seniority(ProtoAdapter.UINT32.decode(reader)); break;
          case 12: builder.language(ProtoAdapter.STRING.decode(reader)); break;
          case 13: builder.companyName(ProtoAdapter.STRING.decode(reader)); break;
          case 14: builder.goodAtProject(ProtoAdapter.STRING.decode(reader)); break;
          case 15: builder.healthCertificate(ProtoAdapter.STRING.decode(reader)); break;
          case 16: builder.healthCertificateUrl(ProtoAdapter.STRING.decode(reader)); break;
          case 17: builder.nursingCertificate(ProtoAdapter.STRING.decode(reader)); break;
          case 18: builder.nursingCertificateUrl(ProtoAdapter.STRING.decode(reader)); break;
          default: {
            FieldEncoding fieldEncoding = reader.peekFieldEncoding();
            Object value = fieldEncoding.rawProtoAdapter().decode(reader);
            builder.addUnknownField(tag, fieldEncoding, value);
          }
        }
      }
      reader.endMessage(token);
      return builder.build();
    }

    @Override
    public GetInsureHGInfoRsp redact(GetInsureHGInfoRsp value) {
      Builder builder = value.newBuilder();
      builder.clearUnknownFields();
      return builder.build();
    }
  }
}
