// Code generated by Wire protocol buffer compiler, do not edit.
// Source file: OrderModel.proto at 33:1
package com.yijianyi.protocol;

import com.squareup.wire.FieldEncoding;
import com.squareup.wire.Message;
import com.squareup.wire.ProtoAdapter;
import com.squareup.wire.ProtoReader;
import com.squareup.wire.ProtoWriter;
import com.squareup.wire.WireField;
import com.squareup.wire.internal.Internal;
import java.io.IOException;
import java.lang.Double;
import java.lang.Integer;
import java.lang.Long;
import java.lang.Object;
import java.lang.Override;
import java.lang.String;
import java.lang.StringBuilder;
import okio.ByteString;

/**
 * 订单
 */
public final class Order extends Message<Order, Order.Builder> {
  public static final ProtoAdapter<Order> ADAPTER = new ProtoAdapter_Order();

  private static final long serialVersionUID = 0L;

  public static final String DEFAULT_ORDERID = "";

  public static final Long DEFAULT_USERID = 0L;

  public static final Long DEFAULT_COMPANYID = 0L;

  public static final Long DEFAULT_ORGID = 0L;

  public static final String DEFAULT_ORGNAME = "";

  public static final Long DEFAULT_BRANCHID = 0L;

  public static final String DEFAULT_BRANCHNAME = "";

  public static final Integer DEFAULT_COMPANYBRANCHID = 0;

  public static final Long DEFAULT_ROOMID = 0L;

  public static final String DEFAULT_ROOMNO = "";

  public static final Long DEFAULT_BEDID = 0L;

  public static final String DEFAULT_BEDNO = "";

  public static final Long DEFAULT_ADDRID = 0L;

  public static final String DEFAULT_PROVINCE = "";

  public static final String DEFAULT_CITY = "";

  public static final String DEFAULT_CITYCODE = "";

  public static final String DEFAULT_DISTRICT = "";

  public static final String DEFAULT_ADCODE = "";

  public static final String DEFAULT_STREET = "";

  public static final String DEFAULT_BUILDING = "";

  public static final String DEFAULT_ADDRDETAIL = "";

  public static final String DEFAULT_PHONE = "";

  public static final String DEFAULT_CONTACTS = "";

  public static final String DEFAULT_PHONE2 = "";

  public static final String DEFAULT_CONTACTS2 = "";

  public static final Integer DEFAULT_GPSTYPE = 0;

  public static final Double DEFAULT_LNG = 0.0d;

  public static final Double DEFAULT_LAT = 0.0d;

  public static final Integer DEFAULT_PAYSTATUS = 0;

  public static final Integer DEFAULT_PREREALFEE = 0;

  public static final Integer DEFAULT_ORIGINALFEE = 0;

  public static final String DEFAULT_COUPONCODE = "";

  public static final Integer DEFAULT_REBATE = 0;

  public static final Integer DEFAULT_FEE = 0;

  public static final Integer DEFAULT_REALFEE = 0;

  public static final String DEFAULT_CONSENTIMGID = "";

  public static final Integer DEFAULT_STATUS = 0;

  public static final String DEFAULT_USERMEMO = "";

  public static final String DEFAULT_KFMEMO = "";

  public static final Long DEFAULT_CREATETIME = 0L;

  public static final Integer DEFAULT_CREATETYPE = 0;

  public static final String DEFAULT_CHANNELID = "";

  public static final Long DEFAULT_CREATESTAFFID = 0L;

  public static final String DEFAULT_CREATESTAFFNAME = "";

  public static final Long DEFAULT_SERVICESTARTTIME = 0L;

  public static final Long DEFAULT_SERVICEENDTIME = 0L;

  public static final Long DEFAULT_PRICEID = 0L;

  public static final Long DEFAULT_HGID = 0L;

  public static final Long DEFAULT_KINSID = 0L;

  public static final Integer DEFAULT_ORDERTYPE = 0;

  public static final Integer DEFAULT_EXTRAFEE = 0;

  public static final Long DEFAULT_INVALIDTIME = 0L;

  public static final String DEFAULT_USERNAME = "";

  public static final String DEFAULT_FULLNAME = "";

  public static final String DEFAULT_IDCARD = "";

  public static final String DEFAULT_HGNAME = "";

  public static final Long DEFAULT_HGID2 = 0L;

  public static final String DEFAULT_HGNAME2 = "";

  public static final Long DEFAULT_HGID3 = 0L;

  public static final String DEFAULT_HGNAME3 = "";

  public static final String DEFAULT_SERVICEITEM = "";

  public static final Integer DEFAULT_SERVICEUNIT = 0;

  public static final Long DEFAULT_PRICE = 0L;

  public static final String DEFAULT_CONTACTPHONE = "";

  public static final String DEFAULT_INSURENO = "";

  public static final String DEFAULT_MANAGERNAME = "";

  public static final Long DEFAULT_MANAGERID = 0L;

  public static final Long DEFAULT_ORDERSTARTTIME = 0L;

  public static final Long DEFAULT_ORDERENDTIME = 0L;

  public static final String DEFAULT_SIGNPIC = "";

  public static final Integer DEFAULT_PGSTATUS = 0;

  public static final Integer DEFAULT_SERVICETYPE = 0;

  public static final Integer DEFAULT_SERVICESTATUS = 0;

  public static final String DEFAULT_ORGNO = "";

  public static final String DEFAULT_ADMISSIONDATE = "";

  public static final String DEFAULT_SECURITYASSESS = "";

  public static final Long DEFAULT_DISCHARGEDTIME = 0L;

  public static final String DEFAULT_PIC1 = "";

  public static final String DEFAULT_PIC2 = "";

  public static final Long DEFAULT_HGREBATEFEE = 0L;

  public static final Integer DEFAULT_HGREBATETYPE = 0;

  public static final String DEFAULT_REBATEDESC = "";

  public static final Long DEFAULT_SETTLETIME = 0L;

  public static final Long DEFAULT_ENDSTAFFID = 0L;

  public static final String DEFAULT_ENDSTAFFNAME = "";

  public static final Long DEFAULT_UPDATETIME = 0L;

  public static final Integer DEFAULT_REFUNDSTATUS = 0;

  public static final Integer DEFAULT_SETTLETYPE = 0;

  public static final Integer DEFAULT_FINISHTYPE = 0;

  public static final Integer DEFAULT_ISHIS = 0;

  public static final Long DEFAULT_FIRSTHGREBATEFEE = 0L;

  public static final Integer DEFAULT_FIRSTHGREBATETYPE = 0;

  public static final String DEFAULT_RELATIONNAME = "";

  public static final String DEFAULT_RELATION = "";

  public static final String DEFAULT_RELATIONPHONE = "";

  public static final String DEFAULT_RELATIONIDCARD = "";

  public static final String DEFAULT_RECOMMENDHGNO = "";

  public static final Long DEFAULT_INSUREHSID = 0L;

  public static final String DEFAULT_INSUREHSNAME = "";

  public static final Long DEFAULT_INSURENURSELEADERID = 0L;

  public static final String DEFAULT_INSURENURSELEADERNAME = "";

  public static final Integer DEFAULT_CANCELORDERID = 0;

  public static final String DEFAULT_CANCELORDERDESC = "";

  public static final Integer DEFAULT_CANCELSTATUS = 0;

  /**
   * 订单号
   */
  @WireField(
      tag = 1,
      adapter = "com.squareup.wire.ProtoAdapter#STRING"
  )
  public final String orderId;

  /**
   * 用户ID
   */
  @WireField(
      tag = 2,
      adapter = "com.squareup.wire.ProtoAdapter#UINT64"
  )
  public final Long userId;

  /**
   * 公司ID
   */
  @WireField(
      tag = 3,
      adapter = "com.squareup.wire.ProtoAdapter#UINT64"
  )
  public final Long companyId;

  /**
   * 机构ID
   */
  @WireField(
      tag = 4,
      adapter = "com.squareup.wire.ProtoAdapter#UINT64"
  )
  public final Long orgId;

  /**
   * 机构名称
   */
  @WireField(
      tag = 5,
      adapter = "com.squareup.wire.ProtoAdapter#STRING"
  )
  public final String orgName;

  /**
   * 科室ID
   */
  @WireField(
      tag = 6,
      adapter = "com.squareup.wire.ProtoAdapter#UINT64"
  )
  public final Long branchId;

  /**
   * 科室名称
   */
  @WireField(
      tag = 7,
      adapter = "com.squareup.wire.ProtoAdapter#STRING"
  )
  public final String branchName;

  /**
   * 公司科室ID
   */
  @WireField(
      tag = 8,
      adapter = "com.squareup.wire.ProtoAdapter#UINT32"
  )
  public final Integer companyBranchId;

  /**
   * 房间ID
   */
  @WireField(
      tag = 9,
      adapter = "com.squareup.wire.ProtoAdapter#UINT64"
  )
  public final Long roomId;

  /**
   * 房号
   */
  @WireField(
      tag = 10,
      adapter = "com.squareup.wire.ProtoAdapter#STRING"
  )
  public final String roomNo;

  /**
   * 床ID
   */
  @WireField(
      tag = 11,
      adapter = "com.squareup.wire.ProtoAdapter#UINT64"
  )
  public final Long bedId;

  /**
   * 床号
   */
  @WireField(
      tag = 12,
      adapter = "com.squareup.wire.ProtoAdapter#STRING"
  )
  public final String bedNo;

  /**
   * 用户地址ID
   */
  @WireField(
      tag = 13,
      adapter = "com.squareup.wire.ProtoAdapter#UINT64"
  )
  public final Long addrId;

  /**
   * 省
   */
  @WireField(
      tag = 14,
      adapter = "com.squareup.wire.ProtoAdapter#STRING"
  )
  public final String province;

  /**
   * 市
   */
  @WireField(
      tag = 15,
      adapter = "com.squareup.wire.ProtoAdapter#STRING"
  )
  public final String city;

  /**
   * 城市编码
   */
  @WireField(
      tag = 16,
      adapter = "com.squareup.wire.ProtoAdapter#STRING"
  )
  public final String cityCode;

  /**
   * 区
   */
  @WireField(
      tag = 17,
      adapter = "com.squareup.wire.ProtoAdapter#STRING"
  )
  public final String district;

  /**
   * 高德 区编码
   */
  @WireField(
      tag = 18,
      adapter = "com.squareup.wire.ProtoAdapter#STRING"
  )
  public final String adCode;

  /**
   * 街道
   */
  @WireField(
      tag = 19,
      adapter = "com.squareup.wire.ProtoAdapter#STRING"
  )
  public final String street;

  /**
   * 小区
   */
  @WireField(
      tag = 20,
      adapter = "com.squareup.wire.ProtoAdapter#STRING"
  )
  public final String building;

  /**
   * 详细地址
   */
  @WireField(
      tag = 21,
      adapter = "com.squareup.wire.ProtoAdapter#STRING"
  )
  public final String addrDetail;

  /**
   * 第一联系人手机号
   */
  @WireField(
      tag = 22,
      adapter = "com.squareup.wire.ProtoAdapter#STRING"
  )
  public final String phone;

  /**
   * 第一联系人
   */
  @WireField(
      tag = 23,
      adapter = "com.squareup.wire.ProtoAdapter#STRING"
  )
  public final String contacts;

  /**
   * 第二联系人手机号
   */
  @WireField(
      tag = 24,
      adapter = "com.squareup.wire.ProtoAdapter#STRING"
  )
  public final String phone2;

  /**
   * 第二联系人
   */
  @WireField(
      tag = 25,
      adapter = "com.squareup.wire.ProtoAdapter#STRING"
  )
  public final String contacts2;

  /**
   * 经纬度类型 1-百度  2-高德
   */
  @WireField(
      tag = 26,
      adapter = "com.squareup.wire.ProtoAdapter#UINT32"
  )
  public final Integer gpsType;

  /**
   * 经度
   */
  @WireField(
      tag = 27,
      adapter = "com.squareup.wire.ProtoAdapter#DOUBLE"
  )
  public final Double lng;

  /**
   * 纬度
   */
  @WireField(
      tag = 28,
      adapter = "com.squareup.wire.ProtoAdapter#DOUBLE"
  )
  public final Double lat;

  /**
   * 支付状态  0-未支付  1-已支付  2-部分支付
   */
  @WireField(
      tag = 29,
      adapter = "com.squareup.wire.ProtoAdapter#UINT32"
  )
  public final Integer payStatus;

  /**
   * 预交金
   */
  @WireField(
      tag = 30,
      adapter = "com.squareup.wire.ProtoAdapter#UINT32"
  )
  public final Integer preRealFee;

  /**
   * 原价
   */
  @WireField(
      tag = 31,
      adapter = "com.squareup.wire.ProtoAdapter#UINT32"
  )
  public final Integer originalFee;

  /**
   * 优惠码
   */
  @WireField(
      tag = 32,
      adapter = "com.squareup.wire.ProtoAdapter#STRING"
  )
  public final String couponCode;

  /**
   * 减免
   */
  @WireField(
      tag = 33,
      adapter = "com.squareup.wire.ProtoAdapter#UINT32"
  )
  public final Integer rebate;

  /**
   * 应付价格 = 原价-减免
   */
  @WireField(
      tag = 34,
      adapter = "com.squareup.wire.ProtoAdapter#UINT32"
  )
  public final Integer fee;

  /**
   * 实际支付费用
   */
  @WireField(
      tag = 35,
      adapter = "com.squareup.wire.ProtoAdapter#UINT32"
  )
  public final Integer realFee;

  /**
   * 知情同意书图片id
   */
  @WireField(
      tag = 36,
      adapter = "com.squareup.wire.ProtoAdapter#STRING"
  )
  public final String consentImgId;

  /**
   * -1-已取消 0-待付款预交金,1-待派工,2-待服务,3-服务中,4-服务完成,5-待评价,6-已完成
   */
  @WireField(
      tag = 37,
      adapter = "com.squareup.wire.ProtoAdapter#INT32"
  )
  public final Integer status;

  /**
   * 用户备注
   */
  @WireField(
      tag = 38,
      adapter = "com.squareup.wire.ProtoAdapter#STRING"
  )
  public final String userMemo;

  /**
   * 客服备注
   */
  @WireField(
      tag = 39,
      adapter = "com.squareup.wire.ProtoAdapter#STRING"
  )
  public final String kfMemo;

  @WireField(
      tag = 40,
      adapter = "com.squareup.wire.ProtoAdapter#UINT64"
  )
  public final Long createTime;

  /**
   * 1-用户app下单 2-saas下单 3-企业app下单 4-用户h5下单
   */
  @WireField(
      tag = 41,
      adapter = "com.squareup.wire.ProtoAdapter#UINT32"
  )
  public final Integer createType;

  /**
   * 渠道来源
   */
  @WireField(
      tag = 42,
      adapter = "com.squareup.wire.ProtoAdapter#STRING"
  )
  public final String channelId;

  /**
   * 创建员工ID
   */
  @WireField(
      tag = 43,
      adapter = "com.squareup.wire.ProtoAdapter#UINT64"
  )
  public final Long createStaffId;

  /**
   * 创建员工名字
   */
  @WireField(
      tag = 44,
      adapter = "com.squareup.wire.ProtoAdapter#STRING"
  )
  public final String createStaffName;

  /**
   * 预约开始时间
   */
  @WireField(
      tag = 45,
      adapter = "com.squareup.wire.ProtoAdapter#UINT64"
  )
  public final Long serviceStartTime;

  /**
   * 预约截止时间
   */
  @WireField(
      tag = 46,
      adapter = "com.squareup.wire.ProtoAdapter#UINT64"
  )
  public final Long serviceEndTime;

  /**
   * 定价ID
   */
  @WireField(
      tag = 47,
      adapter = "com.squareup.wire.ProtoAdapter#UINT64"
  )
  public final Long priceId;

  /**
   * 护工ID
   */
  @WireField(
      tag = 48,
      adapter = "com.squareup.wire.ProtoAdapter#UINT64"
  )
  public final Long hgId;

  /**
   * 被陪护人ID
   */
  @WireField(
      tag = 49,
      adapter = "com.squareup.wire.ProtoAdapter#UINT64"
  )
  public final Long kinsId;

  /**
   * 订单类型 1-机构订单 2-居家订单 3-长护险订单
   */
  @WireField(
      tag = 50,
      adapter = "com.squareup.wire.ProtoAdapter#UINT32"
  )
  public final Integer orderType;

  /**
   * 门禁卡押金费用
   */
  @WireField(
      tag = 51,
      adapter = "com.squareup.wire.ProtoAdapter#UINT32"
  )
  public final Integer extraFee;

  /**
   * 订单失效时间
   */
  @WireField(
      tag = 52,
      adapter = "com.squareup.wire.ProtoAdapter#UINT64"
  )
  public final Long invalidTime;

  /**
   * 用户姓名
   */
  @WireField(
      tag = 54,
      adapter = "com.squareup.wire.ProtoAdapter#STRING"
  )
  public final String userName;

  /**
   * 照护人名字
   */
  @WireField(
      tag = 55,
      adapter = "com.squareup.wire.ProtoAdapter#STRING"
  )
  public final String fullName;

  /**
   * 被照护人身份证号
   */
  @WireField(
      tag = 56,
      adapter = "com.squareup.wire.ProtoAdapter#STRING"
  )
  public final String idCard;

  /**
   * 护工姓名
   */
  @WireField(
      tag = 57,
      adapter = "com.squareup.wire.ProtoAdapter#STRING"
  )
  public final String hgName;

  /**
   * 护工ID
   */
  @WireField(
      tag = 58,
      adapter = "com.squareup.wire.ProtoAdapter#UINT64"
  )
  public final Long hgId2;

  /**
   * 护工姓名
   */
  @WireField(
      tag = 59,
      adapter = "com.squareup.wire.ProtoAdapter#STRING"
  )
  public final String hgName2;

  /**
   * 护工ID
   */
  @WireField(
      tag = 60,
      adapter = "com.squareup.wire.ProtoAdapter#UINT64"
  )
  public final Long hgId3;

  /**
   * 护工姓名
   */
  @WireField(
      tag = 61,
      adapter = "com.squareup.wire.ProtoAdapter#STRING"
  )
  public final String hgName3;

  /**
   * 服务项目
   */
  @WireField(
      tag = 62,
      adapter = "com.squareup.wire.ProtoAdapter#STRING"
  )
  public final String serviceItem;

  /**
   * 服务单位 1-次 2-小时 3-天 4-月
   */
  @WireField(
      tag = 63,
      adapter = "com.squareup.wire.ProtoAdapter#UINT32"
  )
  public final Integer serviceUnit;

  /**
   * 套餐定价
   */
  @WireField(
      tag = 64,
      adapter = "com.squareup.wire.ProtoAdapter#UINT64"
  )
  public final Long price;

  /**
   * 联系电话（下单时填入的手机号）
   */
  @WireField(
      tag = 66,
      adapter = "com.squareup.wire.ProtoAdapter#STRING"
  )
  public final String contactPhone;

  /**
   * 长护险申请单号（不为空即为长护险订单）
   */
  @WireField(
      tag = 67,
      adapter = "com.squareup.wire.ProtoAdapter#STRING"
  )
  public final String insureNO;

  /**
   * 客户经理或者督导
   */
  @WireField(
      tag = 68,
      adapter = "com.squareup.wire.ProtoAdapter#STRING"
  )
  public final String managerName;

  /**
   * 客户经理或者督导id
   */
  @WireField(
      tag = 69,
      adapter = "com.squareup.wire.ProtoAdapter#UINT64"
  )
  public final Long managerId;

  /**
   * 服务开始时间
   */
  @WireField(
      tag = 70,
      adapter = "com.squareup.wire.ProtoAdapter#UINT64"
  )
  public final Long orderStartTime;

  /**
   * 服务结束时间
   */
  @WireField(
      tag = 71,
      adapter = "com.squareup.wire.ProtoAdapter#UINT64"
  )
  public final Long orderEndTime;

  /**
   * 被陪护人签名
   */
  @WireField(
      tag = 72,
      adapter = "com.squareup.wire.ProtoAdapter#STRING"
  )
  public final String signPic;

  /**
   * 0-待评估 1-已评估 2-跳过评估
   */
  @WireField(
      tag = 73,
      adapter = "com.squareup.wire.ProtoAdapter#UINT32"
  )
  public final Integer pgStatus;

  /**
   * 服务类型 1-1:1  2-1:N  99 机构附加项目 101 居家照护 102家庭护士 103 康复护理 104 中医理疗 105 金牌月嫂 106 就医陪护 107 心理慰藉 108 产后恢复 109 育婴幼教 110 临终关怀 199 上门服务附加项
   */
  @WireField(
      tag = 74,
      adapter = "com.squareup.wire.ProtoAdapter#UINT32"
  )
  public final Integer serviceType;

  /**
   * 医疗服务状态 0-默认 1-待指派 2-服务中 3-服务完成
   */
  @WireField(
      tag = 75,
      adapter = "com.squareup.wire.ProtoAdapter#UINT32"
  )
  public final Integer serviceStatus;

  /**
   * 住院号
   */
  @WireField(
      tag = 76,
      adapter = "com.squareup.wire.ProtoAdapter#STRING"
  )
  public final String orgNO;

  /**
   * 入院日期
   */
  @WireField(
      tag = 77,
      adapter = "com.squareup.wire.ProtoAdapter#STRING"
  )
  public final String admissionDate;

  /**
   * 安全风险评估
   */
  @WireField(
      tag = 78,
      adapter = "com.squareup.wire.ProtoAdapter#STRING"
  )
  public final String securityAssess;

  /**
   * 预估出院时间
   */
  @WireField(
      tag = 79,
      adapter = "com.squareup.wire.ProtoAdapter#UINT64"
  )
  public final Long dischargedTime;

  /**
   * 手环或入院通知单照片
   */
  @WireField(
      tag = 80,
      adapter = "com.squareup.wire.ProtoAdapter#STRING"
  )
  public final String pic1;

  /**
   * 手环或入院通知单照片
   */
  @WireField(
      tag = 81,
      adapter = "com.squareup.wire.ProtoAdapter#STRING"
  )
  public final String pic2;

  /**
   * 职工优惠金额
   */
  @WireField(
      tag = 82,
      adapter = "com.squareup.wire.ProtoAdapter#INT64"
  )
  public final Long hgRebateFee;

  /**
   * 职工优惠类型 0-无优惠 1-职工 2-职工家属
   */
  @WireField(
      tag = 83,
      adapter = "com.squareup.wire.ProtoAdapter#UINT32"
  )
  public final Integer hgRebateType;

  /**
   * 优惠备注
   */
  @WireField(
      tag = 84,
      adapter = "com.squareup.wire.ProtoAdapter#STRING"
  )
  public final String rebateDesc;

  /**
   * 订单结算时间
   */
  @WireField(
      tag = 85,
      adapter = "com.squareup.wire.ProtoAdapter#UINT64"
  )
  public final Long settleTime;

  /**
   * 结束服务员工ID
   */
  @WireField(
      tag = 86,
      adapter = "com.squareup.wire.ProtoAdapter#UINT64"
  )
  public final Long endStaffId;

  /**
   * 结束服务员工名称
   */
  @WireField(
      tag = 87,
      adapter = "com.squareup.wire.ProtoAdapter#STRING"
  )
  public final String endStaffName;

  /**
   * 服务项变更时间
   */
  @WireField(
      tag = 88,
      adapter = "com.squareup.wire.ProtoAdapter#UINT64"
  )
  public final Long updateTime;

  /**
   * 订单取消是否退过款 0-未退款 1-已退款
   */
  @WireField(
      tag = 89,
      adapter = "com.squareup.wire.ProtoAdapter#UINT32"
  )
  public final Integer refundStatus;

  /**
   * 1-用户app结算 2-saas结算 3-企业app结算 4-用户h5结算
   */
  @WireField(
      tag = 90,
      adapter = "com.squareup.wire.ProtoAdapter#UINT32"
  )
  public final Integer settleType;

  /**
   * 1-saas结束订单 2-企业app结束订单
   */
  @WireField(
      tag = 91,
      adapter = "com.squareup.wire.ProtoAdapter#UINT32"
  )
  public final Integer finishType;

  /**
   * 是否对接了his 0-未对接 1-对接
   */
  @WireField(
      tag = 92,
      adapter = "com.squareup.wire.ProtoAdapter#UINT32"
  )
  public final Integer isHis;

  /**
   * 第一次结算时职工优惠金额
   */
  @WireField(
      tag = 93,
      adapter = "com.squareup.wire.ProtoAdapter#INT64"
  )
  public final Long firstHgRebateFee;

  /**
   * 第一次结算时职工优惠类型 0-无优惠 1-职工 2-职工家属
   */
  @WireField(
      tag = 94,
      adapter = "com.squareup.wire.ProtoAdapter#UINT32"
  )
  public final Integer firstHgRebateType;

  /**
   * 陪护家属姓名
   */
  @WireField(
      tag = 95,
      adapter = "com.squareup.wire.ProtoAdapter#STRING"
  )
  public final String relationName;

  /**
   * 陪护家属与被陪护人关系
   */
  @WireField(
      tag = 96,
      adapter = "com.squareup.wire.ProtoAdapter#STRING"
  )
  public final String relation;

  /**
   * 陪护家属手机号
   */
  @WireField(
      tag = 97,
      adapter = "com.squareup.wire.ProtoAdapter#STRING"
  )
  public final String relationPhone;

  /**
   * 陪护家属身份证号
   */
  @WireField(
      tag = 98,
      adapter = "com.squareup.wire.ProtoAdapter#STRING"
  )
  public final String relationIdcard;

  /**
   * 推荐人工号
   */
  @WireField(
      tag = 99,
      adapter = "com.squareup.wire.ProtoAdapter#STRING"
  )
  public final String recommendHGNo;

  /**
   * 长护险护士id
   */
  @WireField(
      tag = 100,
      adapter = "com.squareup.wire.ProtoAdapter#UINT64"
  )
  public final Long insureHsId;

  /**
   * 长护险护士姓名
   */
  @WireField(
      tag = 101,
      adapter = "com.squareup.wire.ProtoAdapter#STRING"
  )
  public final String insureHsName;

  /**
   * 长护险被指派护士长id
   */
  @WireField(
      tag = 102,
      adapter = "com.squareup.wire.ProtoAdapter#UINT64"
  )
  public final Long insureNurseLeaderId;

  /**
   * 长护险被指派护士长姓名
   */
  @WireField(
      tag = 103,
      adapter = "com.squareup.wire.ProtoAdapter#STRING"
  )
  public final String insureNurseLeaderName;

  /**
   * 取消订单id 1-上门不及时 2-病情变化不需要了 3-订单填写错误 4-其他原因
   */
  @WireField(
      tag = 104,
      adapter = "com.squareup.wire.ProtoAdapter#UINT32"
  )
  public final Integer cancelOrderId;

  /**
   * 取消订单原因
   */
  @WireField(
      tag = 105,
      adapter = "com.squareup.wire.ProtoAdapter#STRING"
  )
  public final String cancelOrderDesc;

  /**
   * 取消订单前的订单状态
   */
  @WireField(
      tag = 106,
      adapter = "com.squareup.wire.ProtoAdapter#UINT32"
  )
  public final Integer cancelStatus;

  public Order(String orderId, Long userId, Long companyId, Long orgId, String orgName, Long branchId, String branchName, Integer companyBranchId, Long roomId, String roomNo, Long bedId, String bedNo, Long addrId, String province, String city, String cityCode, String district, String adCode, String street, String building, String addrDetail, String phone, String contacts, String phone2, String contacts2, Integer gpsType, Double lng, Double lat, Integer payStatus, Integer preRealFee, Integer originalFee, String couponCode, Integer rebate, Integer fee, Integer realFee, String consentImgId, Integer status, String userMemo, String kfMemo, Long createTime, Integer createType, String channelId, Long createStaffId, String createStaffName, Long serviceStartTime, Long serviceEndTime, Long priceId, Long hgId, Long kinsId, Integer orderType, Integer extraFee, Long invalidTime, String userName, String fullName, String idCard, String hgName, Long hgId2, String hgName2, Long hgId3, String hgName3, String serviceItem, Integer serviceUnit, Long price, String contactPhone, String insureNO, String managerName, Long managerId, Long orderStartTime, Long orderEndTime, String signPic, Integer pgStatus, Integer serviceType, Integer serviceStatus, String orgNO, String admissionDate, String securityAssess, Long dischargedTime, String pic1, String pic2, Long hgRebateFee, Integer hgRebateType, String rebateDesc, Long settleTime, Long endStaffId, String endStaffName, Long updateTime, Integer refundStatus, Integer settleType, Integer finishType, Integer isHis, Long firstHgRebateFee, Integer firstHgRebateType, String relationName, String relation, String relationPhone, String relationIdcard, String recommendHGNo, Long insureHsId, String insureHsName, Long insureNurseLeaderId, String insureNurseLeaderName, Integer cancelOrderId, String cancelOrderDesc, Integer cancelStatus) {
    this(orderId, userId, companyId, orgId, orgName, branchId, branchName, companyBranchId, roomId, roomNo, bedId, bedNo, addrId, province, city, cityCode, district, adCode, street, building, addrDetail, phone, contacts, phone2, contacts2, gpsType, lng, lat, payStatus, preRealFee, originalFee, couponCode, rebate, fee, realFee, consentImgId, status, userMemo, kfMemo, createTime, createType, channelId, createStaffId, createStaffName, serviceStartTime, serviceEndTime, priceId, hgId, kinsId, orderType, extraFee, invalidTime, userName, fullName, idCard, hgName, hgId2, hgName2, hgId3, hgName3, serviceItem, serviceUnit, price, contactPhone, insureNO, managerName, managerId, orderStartTime, orderEndTime, signPic, pgStatus, serviceType, serviceStatus, orgNO, admissionDate, securityAssess, dischargedTime, pic1, pic2, hgRebateFee, hgRebateType, rebateDesc, settleTime, endStaffId, endStaffName, updateTime, refundStatus, settleType, finishType, isHis, firstHgRebateFee, firstHgRebateType, relationName, relation, relationPhone, relationIdcard, recommendHGNo, insureHsId, insureHsName, insureNurseLeaderId, insureNurseLeaderName, cancelOrderId, cancelOrderDesc, cancelStatus, ByteString.EMPTY);
  }

  public Order(String orderId, Long userId, Long companyId, Long orgId, String orgName, Long branchId, String branchName, Integer companyBranchId, Long roomId, String roomNo, Long bedId, String bedNo, Long addrId, String province, String city, String cityCode, String district, String adCode, String street, String building, String addrDetail, String phone, String contacts, String phone2, String contacts2, Integer gpsType, Double lng, Double lat, Integer payStatus, Integer preRealFee, Integer originalFee, String couponCode, Integer rebate, Integer fee, Integer realFee, String consentImgId, Integer status, String userMemo, String kfMemo, Long createTime, Integer createType, String channelId, Long createStaffId, String createStaffName, Long serviceStartTime, Long serviceEndTime, Long priceId, Long hgId, Long kinsId, Integer orderType, Integer extraFee, Long invalidTime, String userName, String fullName, String idCard, String hgName, Long hgId2, String hgName2, Long hgId3, String hgName3, String serviceItem, Integer serviceUnit, Long price, String contactPhone, String insureNO, String managerName, Long managerId, Long orderStartTime, Long orderEndTime, String signPic, Integer pgStatus, Integer serviceType, Integer serviceStatus, String orgNO, String admissionDate, String securityAssess, Long dischargedTime, String pic1, String pic2, Long hgRebateFee, Integer hgRebateType, String rebateDesc, Long settleTime, Long endStaffId, String endStaffName, Long updateTime, Integer refundStatus, Integer settleType, Integer finishType, Integer isHis, Long firstHgRebateFee, Integer firstHgRebateType, String relationName, String relation, String relationPhone, String relationIdcard, String recommendHGNo, Long insureHsId, String insureHsName, Long insureNurseLeaderId, String insureNurseLeaderName, Integer cancelOrderId, String cancelOrderDesc, Integer cancelStatus, ByteString unknownFields) {
    super(ADAPTER, unknownFields);
    this.orderId = orderId;
    this.userId = userId;
    this.companyId = companyId;
    this.orgId = orgId;
    this.orgName = orgName;
    this.branchId = branchId;
    this.branchName = branchName;
    this.companyBranchId = companyBranchId;
    this.roomId = roomId;
    this.roomNo = roomNo;
    this.bedId = bedId;
    this.bedNo = bedNo;
    this.addrId = addrId;
    this.province = province;
    this.city = city;
    this.cityCode = cityCode;
    this.district = district;
    this.adCode = adCode;
    this.street = street;
    this.building = building;
    this.addrDetail = addrDetail;
    this.phone = phone;
    this.contacts = contacts;
    this.phone2 = phone2;
    this.contacts2 = contacts2;
    this.gpsType = gpsType;
    this.lng = lng;
    this.lat = lat;
    this.payStatus = payStatus;
    this.preRealFee = preRealFee;
    this.originalFee = originalFee;
    this.couponCode = couponCode;
    this.rebate = rebate;
    this.fee = fee;
    this.realFee = realFee;
    this.consentImgId = consentImgId;
    this.status = status;
    this.userMemo = userMemo;
    this.kfMemo = kfMemo;
    this.createTime = createTime;
    this.createType = createType;
    this.channelId = channelId;
    this.createStaffId = createStaffId;
    this.createStaffName = createStaffName;
    this.serviceStartTime = serviceStartTime;
    this.serviceEndTime = serviceEndTime;
    this.priceId = priceId;
    this.hgId = hgId;
    this.kinsId = kinsId;
    this.orderType = orderType;
    this.extraFee = extraFee;
    this.invalidTime = invalidTime;
    this.userName = userName;
    this.fullName = fullName;
    this.idCard = idCard;
    this.hgName = hgName;
    this.hgId2 = hgId2;
    this.hgName2 = hgName2;
    this.hgId3 = hgId3;
    this.hgName3 = hgName3;
    this.serviceItem = serviceItem;
    this.serviceUnit = serviceUnit;
    this.price = price;
    this.contactPhone = contactPhone;
    this.insureNO = insureNO;
    this.managerName = managerName;
    this.managerId = managerId;
    this.orderStartTime = orderStartTime;
    this.orderEndTime = orderEndTime;
    this.signPic = signPic;
    this.pgStatus = pgStatus;
    this.serviceType = serviceType;
    this.serviceStatus = serviceStatus;
    this.orgNO = orgNO;
    this.admissionDate = admissionDate;
    this.securityAssess = securityAssess;
    this.dischargedTime = dischargedTime;
    this.pic1 = pic1;
    this.pic2 = pic2;
    this.hgRebateFee = hgRebateFee;
    this.hgRebateType = hgRebateType;
    this.rebateDesc = rebateDesc;
    this.settleTime = settleTime;
    this.endStaffId = endStaffId;
    this.endStaffName = endStaffName;
    this.updateTime = updateTime;
    this.refundStatus = refundStatus;
    this.settleType = settleType;
    this.finishType = finishType;
    this.isHis = isHis;
    this.firstHgRebateFee = firstHgRebateFee;
    this.firstHgRebateType = firstHgRebateType;
    this.relationName = relationName;
    this.relation = relation;
    this.relationPhone = relationPhone;
    this.relationIdcard = relationIdcard;
    this.recommendHGNo = recommendHGNo;
    this.insureHsId = insureHsId;
    this.insureHsName = insureHsName;
    this.insureNurseLeaderId = insureNurseLeaderId;
    this.insureNurseLeaderName = insureNurseLeaderName;
    this.cancelOrderId = cancelOrderId;
    this.cancelOrderDesc = cancelOrderDesc;
    this.cancelStatus = cancelStatus;
  }

  @Override
  public Builder newBuilder() {
    Builder builder = new Builder();
    builder.orderId = orderId;
    builder.userId = userId;
    builder.companyId = companyId;
    builder.orgId = orgId;
    builder.orgName = orgName;
    builder.branchId = branchId;
    builder.branchName = branchName;
    builder.companyBranchId = companyBranchId;
    builder.roomId = roomId;
    builder.roomNo = roomNo;
    builder.bedId = bedId;
    builder.bedNo = bedNo;
    builder.addrId = addrId;
    builder.province = province;
    builder.city = city;
    builder.cityCode = cityCode;
    builder.district = district;
    builder.adCode = adCode;
    builder.street = street;
    builder.building = building;
    builder.addrDetail = addrDetail;
    builder.phone = phone;
    builder.contacts = contacts;
    builder.phone2 = phone2;
    builder.contacts2 = contacts2;
    builder.gpsType = gpsType;
    builder.lng = lng;
    builder.lat = lat;
    builder.payStatus = payStatus;
    builder.preRealFee = preRealFee;
    builder.originalFee = originalFee;
    builder.couponCode = couponCode;
    builder.rebate = rebate;
    builder.fee = fee;
    builder.realFee = realFee;
    builder.consentImgId = consentImgId;
    builder.status = status;
    builder.userMemo = userMemo;
    builder.kfMemo = kfMemo;
    builder.createTime = createTime;
    builder.createType = createType;
    builder.channelId = channelId;
    builder.createStaffId = createStaffId;
    builder.createStaffName = createStaffName;
    builder.serviceStartTime = serviceStartTime;
    builder.serviceEndTime = serviceEndTime;
    builder.priceId = priceId;
    builder.hgId = hgId;
    builder.kinsId = kinsId;
    builder.orderType = orderType;
    builder.extraFee = extraFee;
    builder.invalidTime = invalidTime;
    builder.userName = userName;
    builder.fullName = fullName;
    builder.idCard = idCard;
    builder.hgName = hgName;
    builder.hgId2 = hgId2;
    builder.hgName2 = hgName2;
    builder.hgId3 = hgId3;
    builder.hgName3 = hgName3;
    builder.serviceItem = serviceItem;
    builder.serviceUnit = serviceUnit;
    builder.price = price;
    builder.contactPhone = contactPhone;
    builder.insureNO = insureNO;
    builder.managerName = managerName;
    builder.managerId = managerId;
    builder.orderStartTime = orderStartTime;
    builder.orderEndTime = orderEndTime;
    builder.signPic = signPic;
    builder.pgStatus = pgStatus;
    builder.serviceType = serviceType;
    builder.serviceStatus = serviceStatus;
    builder.orgNO = orgNO;
    builder.admissionDate = admissionDate;
    builder.securityAssess = securityAssess;
    builder.dischargedTime = dischargedTime;
    builder.pic1 = pic1;
    builder.pic2 = pic2;
    builder.hgRebateFee = hgRebateFee;
    builder.hgRebateType = hgRebateType;
    builder.rebateDesc = rebateDesc;
    builder.settleTime = settleTime;
    builder.endStaffId = endStaffId;
    builder.endStaffName = endStaffName;
    builder.updateTime = updateTime;
    builder.refundStatus = refundStatus;
    builder.settleType = settleType;
    builder.finishType = finishType;
    builder.isHis = isHis;
    builder.firstHgRebateFee = firstHgRebateFee;
    builder.firstHgRebateType = firstHgRebateType;
    builder.relationName = relationName;
    builder.relation = relation;
    builder.relationPhone = relationPhone;
    builder.relationIdcard = relationIdcard;
    builder.recommendHGNo = recommendHGNo;
    builder.insureHsId = insureHsId;
    builder.insureHsName = insureHsName;
    builder.insureNurseLeaderId = insureNurseLeaderId;
    builder.insureNurseLeaderName = insureNurseLeaderName;
    builder.cancelOrderId = cancelOrderId;
    builder.cancelOrderDesc = cancelOrderDesc;
    builder.cancelStatus = cancelStatus;
    builder.addUnknownFields(unknownFields());
    return builder;
  }

  @Override
  public boolean equals(Object other) {
    if (other == this) return true;
    if (!(other instanceof Order)) return false;
    Order o = (Order) other;
    return unknownFields().equals(o.unknownFields())
        && Internal.equals(orderId, o.orderId)
        && Internal.equals(userId, o.userId)
        && Internal.equals(companyId, o.companyId)
        && Internal.equals(orgId, o.orgId)
        && Internal.equals(orgName, o.orgName)
        && Internal.equals(branchId, o.branchId)
        && Internal.equals(branchName, o.branchName)
        && Internal.equals(companyBranchId, o.companyBranchId)
        && Internal.equals(roomId, o.roomId)
        && Internal.equals(roomNo, o.roomNo)
        && Internal.equals(bedId, o.bedId)
        && Internal.equals(bedNo, o.bedNo)
        && Internal.equals(addrId, o.addrId)
        && Internal.equals(province, o.province)
        && Internal.equals(city, o.city)
        && Internal.equals(cityCode, o.cityCode)
        && Internal.equals(district, o.district)
        && Internal.equals(adCode, o.adCode)
        && Internal.equals(street, o.street)
        && Internal.equals(building, o.building)
        && Internal.equals(addrDetail, o.addrDetail)
        && Internal.equals(phone, o.phone)
        && Internal.equals(contacts, o.contacts)
        && Internal.equals(phone2, o.phone2)
        && Internal.equals(contacts2, o.contacts2)
        && Internal.equals(gpsType, o.gpsType)
        && Internal.equals(lng, o.lng)
        && Internal.equals(lat, o.lat)
        && Internal.equals(payStatus, o.payStatus)
        && Internal.equals(preRealFee, o.preRealFee)
        && Internal.equals(originalFee, o.originalFee)
        && Internal.equals(couponCode, o.couponCode)
        && Internal.equals(rebate, o.rebate)
        && Internal.equals(fee, o.fee)
        && Internal.equals(realFee, o.realFee)
        && Internal.equals(consentImgId, o.consentImgId)
        && Internal.equals(status, o.status)
        && Internal.equals(userMemo, o.userMemo)
        && Internal.equals(kfMemo, o.kfMemo)
        && Internal.equals(createTime, o.createTime)
        && Internal.equals(createType, o.createType)
        && Internal.equals(channelId, o.channelId)
        && Internal.equals(createStaffId, o.createStaffId)
        && Internal.equals(createStaffName, o.createStaffName)
        && Internal.equals(serviceStartTime, o.serviceStartTime)
        && Internal.equals(serviceEndTime, o.serviceEndTime)
        && Internal.equals(priceId, o.priceId)
        && Internal.equals(hgId, o.hgId)
        && Internal.equals(kinsId, o.kinsId)
        && Internal.equals(orderType, o.orderType)
        && Internal.equals(extraFee, o.extraFee)
        && Internal.equals(invalidTime, o.invalidTime)
        && Internal.equals(userName, o.userName)
        && Internal.equals(fullName, o.fullName)
        && Internal.equals(idCard, o.idCard)
        && Internal.equals(hgName, o.hgName)
        && Internal.equals(hgId2, o.hgId2)
        && Internal.equals(hgName2, o.hgName2)
        && Internal.equals(hgId3, o.hgId3)
        && Internal.equals(hgName3, o.hgName3)
        && Internal.equals(serviceItem, o.serviceItem)
        && Internal.equals(serviceUnit, o.serviceUnit)
        && Internal.equals(price, o.price)
        && Internal.equals(contactPhone, o.contactPhone)
        && Internal.equals(insureNO, o.insureNO)
        && Internal.equals(managerName, o.managerName)
        && Internal.equals(managerId, o.managerId)
        && Internal.equals(orderStartTime, o.orderStartTime)
        && Internal.equals(orderEndTime, o.orderEndTime)
        && Internal.equals(signPic, o.signPic)
        && Internal.equals(pgStatus, o.pgStatus)
        && Internal.equals(serviceType, o.serviceType)
        && Internal.equals(serviceStatus, o.serviceStatus)
        && Internal.equals(orgNO, o.orgNO)
        && Internal.equals(admissionDate, o.admissionDate)
        && Internal.equals(securityAssess, o.securityAssess)
        && Internal.equals(dischargedTime, o.dischargedTime)
        && Internal.equals(pic1, o.pic1)
        && Internal.equals(pic2, o.pic2)
        && Internal.equals(hgRebateFee, o.hgRebateFee)
        && Internal.equals(hgRebateType, o.hgRebateType)
        && Internal.equals(rebateDesc, o.rebateDesc)
        && Internal.equals(settleTime, o.settleTime)
        && Internal.equals(endStaffId, o.endStaffId)
        && Internal.equals(endStaffName, o.endStaffName)
        && Internal.equals(updateTime, o.updateTime)
        && Internal.equals(refundStatus, o.refundStatus)
        && Internal.equals(settleType, o.settleType)
        && Internal.equals(finishType, o.finishType)
        && Internal.equals(isHis, o.isHis)
        && Internal.equals(firstHgRebateFee, o.firstHgRebateFee)
        && Internal.equals(firstHgRebateType, o.firstHgRebateType)
        && Internal.equals(relationName, o.relationName)
        && Internal.equals(relation, o.relation)
        && Internal.equals(relationPhone, o.relationPhone)
        && Internal.equals(relationIdcard, o.relationIdcard)
        && Internal.equals(recommendHGNo, o.recommendHGNo)
        && Internal.equals(insureHsId, o.insureHsId)
        && Internal.equals(insureHsName, o.insureHsName)
        && Internal.equals(insureNurseLeaderId, o.insureNurseLeaderId)
        && Internal.equals(insureNurseLeaderName, o.insureNurseLeaderName)
        && Internal.equals(cancelOrderId, o.cancelOrderId)
        && Internal.equals(cancelOrderDesc, o.cancelOrderDesc)
        && Internal.equals(cancelStatus, o.cancelStatus);
  }

  @Override
  public int hashCode() {
    int result = super.hashCode;
    if (result == 0) {
      result = unknownFields().hashCode();
      result = result * 37 + (orderId != null ? orderId.hashCode() : 0);
      result = result * 37 + (userId != null ? userId.hashCode() : 0);
      result = result * 37 + (companyId != null ? companyId.hashCode() : 0);
      result = result * 37 + (orgId != null ? orgId.hashCode() : 0);
      result = result * 37 + (orgName != null ? orgName.hashCode() : 0);
      result = result * 37 + (branchId != null ? branchId.hashCode() : 0);
      result = result * 37 + (branchName != null ? branchName.hashCode() : 0);
      result = result * 37 + (companyBranchId != null ? companyBranchId.hashCode() : 0);
      result = result * 37 + (roomId != null ? roomId.hashCode() : 0);
      result = result * 37 + (roomNo != null ? roomNo.hashCode() : 0);
      result = result * 37 + (bedId != null ? bedId.hashCode() : 0);
      result = result * 37 + (bedNo != null ? bedNo.hashCode() : 0);
      result = result * 37 + (addrId != null ? addrId.hashCode() : 0);
      result = result * 37 + (province != null ? province.hashCode() : 0);
      result = result * 37 + (city != null ? city.hashCode() : 0);
      result = result * 37 + (cityCode != null ? cityCode.hashCode() : 0);
      result = result * 37 + (district != null ? district.hashCode() : 0);
      result = result * 37 + (adCode != null ? adCode.hashCode() : 0);
      result = result * 37 + (street != null ? street.hashCode() : 0);
      result = result * 37 + (building != null ? building.hashCode() : 0);
      result = result * 37 + (addrDetail != null ? addrDetail.hashCode() : 0);
      result = result * 37 + (phone != null ? phone.hashCode() : 0);
      result = result * 37 + (contacts != null ? contacts.hashCode() : 0);
      result = result * 37 + (phone2 != null ? phone2.hashCode() : 0);
      result = result * 37 + (contacts2 != null ? contacts2.hashCode() : 0);
      result = result * 37 + (gpsType != null ? gpsType.hashCode() : 0);
      result = result * 37 + (lng != null ? lng.hashCode() : 0);
      result = result * 37 + (lat != null ? lat.hashCode() : 0);
      result = result * 37 + (payStatus != null ? payStatus.hashCode() : 0);
      result = result * 37 + (preRealFee != null ? preRealFee.hashCode() : 0);
      result = result * 37 + (originalFee != null ? originalFee.hashCode() : 0);
      result = result * 37 + (couponCode != null ? couponCode.hashCode() : 0);
      result = result * 37 + (rebate != null ? rebate.hashCode() : 0);
      result = result * 37 + (fee != null ? fee.hashCode() : 0);
      result = result * 37 + (realFee != null ? realFee.hashCode() : 0);
      result = result * 37 + (consentImgId != null ? consentImgId.hashCode() : 0);
      result = result * 37 + (status != null ? status.hashCode() : 0);
      result = result * 37 + (userMemo != null ? userMemo.hashCode() : 0);
      result = result * 37 + (kfMemo != null ? kfMemo.hashCode() : 0);
      result = result * 37 + (createTime != null ? createTime.hashCode() : 0);
      result = result * 37 + (createType != null ? createType.hashCode() : 0);
      result = result * 37 + (channelId != null ? channelId.hashCode() : 0);
      result = result * 37 + (createStaffId != null ? createStaffId.hashCode() : 0);
      result = result * 37 + (createStaffName != null ? createStaffName.hashCode() : 0);
      result = result * 37 + (serviceStartTime != null ? serviceStartTime.hashCode() : 0);
      result = result * 37 + (serviceEndTime != null ? serviceEndTime.hashCode() : 0);
      result = result * 37 + (priceId != null ? priceId.hashCode() : 0);
      result = result * 37 + (hgId != null ? hgId.hashCode() : 0);
      result = result * 37 + (kinsId != null ? kinsId.hashCode() : 0);
      result = result * 37 + (orderType != null ? orderType.hashCode() : 0);
      result = result * 37 + (extraFee != null ? extraFee.hashCode() : 0);
      result = result * 37 + (invalidTime != null ? invalidTime.hashCode() : 0);
      result = result * 37 + (userName != null ? userName.hashCode() : 0);
      result = result * 37 + (fullName != null ? fullName.hashCode() : 0);
      result = result * 37 + (idCard != null ? idCard.hashCode() : 0);
      result = result * 37 + (hgName != null ? hgName.hashCode() : 0);
      result = result * 37 + (hgId2 != null ? hgId2.hashCode() : 0);
      result = result * 37 + (hgName2 != null ? hgName2.hashCode() : 0);
      result = result * 37 + (hgId3 != null ? hgId3.hashCode() : 0);
      result = result * 37 + (hgName3 != null ? hgName3.hashCode() : 0);
      result = result * 37 + (serviceItem != null ? serviceItem.hashCode() : 0);
      result = result * 37 + (serviceUnit != null ? serviceUnit.hashCode() : 0);
      result = result * 37 + (price != null ? price.hashCode() : 0);
      result = result * 37 + (contactPhone != null ? contactPhone.hashCode() : 0);
      result = result * 37 + (insureNO != null ? insureNO.hashCode() : 0);
      result = result * 37 + (managerName != null ? managerName.hashCode() : 0);
      result = result * 37 + (managerId != null ? managerId.hashCode() : 0);
      result = result * 37 + (orderStartTime != null ? orderStartTime.hashCode() : 0);
      result = result * 37 + (orderEndTime != null ? orderEndTime.hashCode() : 0);
      result = result * 37 + (signPic != null ? signPic.hashCode() : 0);
      result = result * 37 + (pgStatus != null ? pgStatus.hashCode() : 0);
      result = result * 37 + (serviceType != null ? serviceType.hashCode() : 0);
      result = result * 37 + (serviceStatus != null ? serviceStatus.hashCode() : 0);
      result = result * 37 + (orgNO != null ? orgNO.hashCode() : 0);
      result = result * 37 + (admissionDate != null ? admissionDate.hashCode() : 0);
      result = result * 37 + (securityAssess != null ? securityAssess.hashCode() : 0);
      result = result * 37 + (dischargedTime != null ? dischargedTime.hashCode() : 0);
      result = result * 37 + (pic1 != null ? pic1.hashCode() : 0);
      result = result * 37 + (pic2 != null ? pic2.hashCode() : 0);
      result = result * 37 + (hgRebateFee != null ? hgRebateFee.hashCode() : 0);
      result = result * 37 + (hgRebateType != null ? hgRebateType.hashCode() : 0);
      result = result * 37 + (rebateDesc != null ? rebateDesc.hashCode() : 0);
      result = result * 37 + (settleTime != null ? settleTime.hashCode() : 0);
      result = result * 37 + (endStaffId != null ? endStaffId.hashCode() : 0);
      result = result * 37 + (endStaffName != null ? endStaffName.hashCode() : 0);
      result = result * 37 + (updateTime != null ? updateTime.hashCode() : 0);
      result = result * 37 + (refundStatus != null ? refundStatus.hashCode() : 0);
      result = result * 37 + (settleType != null ? settleType.hashCode() : 0);
      result = result * 37 + (finishType != null ? finishType.hashCode() : 0);
      result = result * 37 + (isHis != null ? isHis.hashCode() : 0);
      result = result * 37 + (firstHgRebateFee != null ? firstHgRebateFee.hashCode() : 0);
      result = result * 37 + (firstHgRebateType != null ? firstHgRebateType.hashCode() : 0);
      result = result * 37 + (relationName != null ? relationName.hashCode() : 0);
      result = result * 37 + (relation != null ? relation.hashCode() : 0);
      result = result * 37 + (relationPhone != null ? relationPhone.hashCode() : 0);
      result = result * 37 + (relationIdcard != null ? relationIdcard.hashCode() : 0);
      result = result * 37 + (recommendHGNo != null ? recommendHGNo.hashCode() : 0);
      result = result * 37 + (insureHsId != null ? insureHsId.hashCode() : 0);
      result = result * 37 + (insureHsName != null ? insureHsName.hashCode() : 0);
      result = result * 37 + (insureNurseLeaderId != null ? insureNurseLeaderId.hashCode() : 0);
      result = result * 37 + (insureNurseLeaderName != null ? insureNurseLeaderName.hashCode() : 0);
      result = result * 37 + (cancelOrderId != null ? cancelOrderId.hashCode() : 0);
      result = result * 37 + (cancelOrderDesc != null ? cancelOrderDesc.hashCode() : 0);
      result = result * 37 + (cancelStatus != null ? cancelStatus.hashCode() : 0);
      super.hashCode = result;
    }
    return result;
  }

  @Override
  public String toString() {
    StringBuilder builder = new StringBuilder();
    if (orderId != null) builder.append(", orderId=").append(orderId);
    if (userId != null) builder.append(", userId=").append(userId);
    if (companyId != null) builder.append(", companyId=").append(companyId);
    if (orgId != null) builder.append(", orgId=").append(orgId);
    if (orgName != null) builder.append(", orgName=").append(orgName);
    if (branchId != null) builder.append(", branchId=").append(branchId);
    if (branchName != null) builder.append(", branchName=").append(branchName);
    if (companyBranchId != null) builder.append(", companyBranchId=").append(companyBranchId);
    if (roomId != null) builder.append(", roomId=").append(roomId);
    if (roomNo != null) builder.append(", roomNo=").append(roomNo);
    if (bedId != null) builder.append(", bedId=").append(bedId);
    if (bedNo != null) builder.append(", bedNo=").append(bedNo);
    if (addrId != null) builder.append(", addrId=").append(addrId);
    if (province != null) builder.append(", province=").append(province);
    if (city != null) builder.append(", city=").append(city);
    if (cityCode != null) builder.append(", cityCode=").append(cityCode);
    if (district != null) builder.append(", district=").append(district);
    if (adCode != null) builder.append(", adCode=").append(adCode);
    if (street != null) builder.append(", street=").append(street);
    if (building != null) builder.append(", building=").append(building);
    if (addrDetail != null) builder.append(", addrDetail=").append(addrDetail);
    if (phone != null) builder.append(", phone=").append(phone);
    if (contacts != null) builder.append(", contacts=").append(contacts);
    if (phone2 != null) builder.append(", phone2=").append(phone2);
    if (contacts2 != null) builder.append(", contacts2=").append(contacts2);
    if (gpsType != null) builder.append(", gpsType=").append(gpsType);
    if (lng != null) builder.append(", lng=").append(lng);
    if (lat != null) builder.append(", lat=").append(lat);
    if (payStatus != null) builder.append(", payStatus=").append(payStatus);
    if (preRealFee != null) builder.append(", preRealFee=").append(preRealFee);
    if (originalFee != null) builder.append(", originalFee=").append(originalFee);
    if (couponCode != null) builder.append(", couponCode=").append(couponCode);
    if (rebate != null) builder.append(", rebate=").append(rebate);
    if (fee != null) builder.append(", fee=").append(fee);
    if (realFee != null) builder.append(", realFee=").append(realFee);
    if (consentImgId != null) builder.append(", consentImgId=").append(consentImgId);
    if (status != null) builder.append(", status=").append(status);
    if (userMemo != null) builder.append(", userMemo=").append(userMemo);
    if (kfMemo != null) builder.append(", kfMemo=").append(kfMemo);
    if (createTime != null) builder.append(", createTime=").append(createTime);
    if (createType != null) builder.append(", createType=").append(createType);
    if (channelId != null) builder.append(", channelId=").append(channelId);
    if (createStaffId != null) builder.append(", createStaffId=").append(createStaffId);
    if (createStaffName != null) builder.append(", createStaffName=").append(createStaffName);
    if (serviceStartTime != null) builder.append(", serviceStartTime=").append(serviceStartTime);
    if (serviceEndTime != null) builder.append(", serviceEndTime=").append(serviceEndTime);
    if (priceId != null) builder.append(", priceId=").append(priceId);
    if (hgId != null) builder.append(", hgId=").append(hgId);
    if (kinsId != null) builder.append(", kinsId=").append(kinsId);
    if (orderType != null) builder.append(", orderType=").append(orderType);
    if (extraFee != null) builder.append(", extraFee=").append(extraFee);
    if (invalidTime != null) builder.append(", invalidTime=").append(invalidTime);
    if (userName != null) builder.append(", userName=").append(userName);
    if (fullName != null) builder.append(", fullName=").append(fullName);
    if (idCard != null) builder.append(", idCard=").append(idCard);
    if (hgName != null) builder.append(", hgName=").append(hgName);
    if (hgId2 != null) builder.append(", hgId2=").append(hgId2);
    if (hgName2 != null) builder.append(", hgName2=").append(hgName2);
    if (hgId3 != null) builder.append(", hgId3=").append(hgId3);
    if (hgName3 != null) builder.append(", hgName3=").append(hgName3);
    if (serviceItem != null) builder.append(", serviceItem=").append(serviceItem);
    if (serviceUnit != null) builder.append(", serviceUnit=").append(serviceUnit);
    if (price != null) builder.append(", price=").append(price);
    if (contactPhone != null) builder.append(", contactPhone=").append(contactPhone);
    if (insureNO != null) builder.append(", insureNO=").append(insureNO);
    if (managerName != null) builder.append(", managerName=").append(managerName);
    if (managerId != null) builder.append(", managerId=").append(managerId);
    if (orderStartTime != null) builder.append(", orderStartTime=").append(orderStartTime);
    if (orderEndTime != null) builder.append(", orderEndTime=").append(orderEndTime);
    if (signPic != null) builder.append(", signPic=").append(signPic);
    if (pgStatus != null) builder.append(", pgStatus=").append(pgStatus);
    if (serviceType != null) builder.append(", serviceType=").append(serviceType);
    if (serviceStatus != null) builder.append(", serviceStatus=").append(serviceStatus);
    if (orgNO != null) builder.append(", orgNO=").append(orgNO);
    if (admissionDate != null) builder.append(", admissionDate=").append(admissionDate);
    if (securityAssess != null) builder.append(", securityAssess=").append(securityAssess);
    if (dischargedTime != null) builder.append(", dischargedTime=").append(dischargedTime);
    if (pic1 != null) builder.append(", pic1=").append(pic1);
    if (pic2 != null) builder.append(", pic2=").append(pic2);
    if (hgRebateFee != null) builder.append(", hgRebateFee=").append(hgRebateFee);
    if (hgRebateType != null) builder.append(", hgRebateType=").append(hgRebateType);
    if (rebateDesc != null) builder.append(", rebateDesc=").append(rebateDesc);
    if (settleTime != null) builder.append(", settleTime=").append(settleTime);
    if (endStaffId != null) builder.append(", endStaffId=").append(endStaffId);
    if (endStaffName != null) builder.append(", endStaffName=").append(endStaffName);
    if (updateTime != null) builder.append(", updateTime=").append(updateTime);
    if (refundStatus != null) builder.append(", refundStatus=").append(refundStatus);
    if (settleType != null) builder.append(", settleType=").append(settleType);
    if (finishType != null) builder.append(", finishType=").append(finishType);
    if (isHis != null) builder.append(", isHis=").append(isHis);
    if (firstHgRebateFee != null) builder.append(", firstHgRebateFee=").append(firstHgRebateFee);
    if (firstHgRebateType != null) builder.append(", firstHgRebateType=").append(firstHgRebateType);
    if (relationName != null) builder.append(", relationName=").append(relationName);
    if (relation != null) builder.append(", relation=").append(relation);
    if (relationPhone != null) builder.append(", relationPhone=").append(relationPhone);
    if (relationIdcard != null) builder.append(", relationIdcard=").append(relationIdcard);
    if (recommendHGNo != null) builder.append(", recommendHGNo=").append(recommendHGNo);
    if (insureHsId != null) builder.append(", insureHsId=").append(insureHsId);
    if (insureHsName != null) builder.append(", insureHsName=").append(insureHsName);
    if (insureNurseLeaderId != null) builder.append(", insureNurseLeaderId=").append(insureNurseLeaderId);
    if (insureNurseLeaderName != null) builder.append(", insureNurseLeaderName=").append(insureNurseLeaderName);
    if (cancelOrderId != null) builder.append(", cancelOrderId=").append(cancelOrderId);
    if (cancelOrderDesc != null) builder.append(", cancelOrderDesc=").append(cancelOrderDesc);
    if (cancelStatus != null) builder.append(", cancelStatus=").append(cancelStatus);
    return builder.replace(0, 2, "Order{").append('}').toString();
  }

  public static final class Builder extends Message.Builder<Order, Builder> {
    public String orderId;

    public Long userId;

    public Long companyId;

    public Long orgId;

    public String orgName;

    public Long branchId;

    public String branchName;

    public Integer companyBranchId;

    public Long roomId;

    public String roomNo;

    public Long bedId;

    public String bedNo;

    public Long addrId;

    public String province;

    public String city;

    public String cityCode;

    public String district;

    public String adCode;

    public String street;

    public String building;

    public String addrDetail;

    public String phone;

    public String contacts;

    public String phone2;

    public String contacts2;

    public Integer gpsType;

    public Double lng;

    public Double lat;

    public Integer payStatus;

    public Integer preRealFee;

    public Integer originalFee;

    public String couponCode;

    public Integer rebate;

    public Integer fee;

    public Integer realFee;

    public String consentImgId;

    public Integer status;

    public String userMemo;

    public String kfMemo;

    public Long createTime;

    public Integer createType;

    public String channelId;

    public Long createStaffId;

    public String createStaffName;

    public Long serviceStartTime;

    public Long serviceEndTime;

    public Long priceId;

    public Long hgId;

    public Long kinsId;

    public Integer orderType;

    public Integer extraFee;

    public Long invalidTime;

    public String userName;

    public String fullName;

    public String idCard;

    public String hgName;

    public Long hgId2;

    public String hgName2;

    public Long hgId3;

    public String hgName3;

    public String serviceItem;

    public Integer serviceUnit;

    public Long price;

    public String contactPhone;

    public String insureNO;

    public String managerName;

    public Long managerId;

    public Long orderStartTime;

    public Long orderEndTime;

    public String signPic;

    public Integer pgStatus;

    public Integer serviceType;

    public Integer serviceStatus;

    public String orgNO;

    public String admissionDate;

    public String securityAssess;

    public Long dischargedTime;

    public String pic1;

    public String pic2;

    public Long hgRebateFee;

    public Integer hgRebateType;

    public String rebateDesc;

    public Long settleTime;

    public Long endStaffId;

    public String endStaffName;

    public Long updateTime;

    public Integer refundStatus;

    public Integer settleType;

    public Integer finishType;

    public Integer isHis;

    public Long firstHgRebateFee;

    public Integer firstHgRebateType;

    public String relationName;

    public String relation;

    public String relationPhone;

    public String relationIdcard;

    public String recommendHGNo;

    public Long insureHsId;

    public String insureHsName;

    public Long insureNurseLeaderId;

    public String insureNurseLeaderName;

    public Integer cancelOrderId;

    public String cancelOrderDesc;

    public Integer cancelStatus;

    public Builder() {
    }

    /**
     * 订单号
     */
    public Builder orderId(String orderId) {
      this.orderId = orderId;
      return this;
    }

    /**
     * 用户ID
     */
    public Builder userId(Long userId) {
      this.userId = userId;
      return this;
    }

    /**
     * 公司ID
     */
    public Builder companyId(Long companyId) {
      this.companyId = companyId;
      return this;
    }

    /**
     * 机构ID
     */
    public Builder orgId(Long orgId) {
      this.orgId = orgId;
      return this;
    }

    /**
     * 机构名称
     */
    public Builder orgName(String orgName) {
      this.orgName = orgName;
      return this;
    }

    /**
     * 科室ID
     */
    public Builder branchId(Long branchId) {
      this.branchId = branchId;
      return this;
    }

    /**
     * 科室名称
     */
    public Builder branchName(String branchName) {
      this.branchName = branchName;
      return this;
    }

    /**
     * 公司科室ID
     */
    public Builder companyBranchId(Integer companyBranchId) {
      this.companyBranchId = companyBranchId;
      return this;
    }

    /**
     * 房间ID
     */
    public Builder roomId(Long roomId) {
      this.roomId = roomId;
      return this;
    }

    /**
     * 房号
     */
    public Builder roomNo(String roomNo) {
      this.roomNo = roomNo;
      return this;
    }

    /**
     * 床ID
     */
    public Builder bedId(Long bedId) {
      this.bedId = bedId;
      return this;
    }

    /**
     * 床号
     */
    public Builder bedNo(String bedNo) {
      this.bedNo = bedNo;
      return this;
    }

    /**
     * 用户地址ID
     */
    public Builder addrId(Long addrId) {
      this.addrId = addrId;
      return this;
    }

    /**
     * 省
     */
    public Builder province(String province) {
      this.province = province;
      return this;
    }

    /**
     * 市
     */
    public Builder city(String city) {
      this.city = city;
      return this;
    }

    /**
     * 城市编码
     */
    public Builder cityCode(String cityCode) {
      this.cityCode = cityCode;
      return this;
    }

    /**
     * 区
     */
    public Builder district(String district) {
      this.district = district;
      return this;
    }

    /**
     * 高德 区编码
     */
    public Builder adCode(String adCode) {
      this.adCode = adCode;
      return this;
    }

    /**
     * 街道
     */
    public Builder street(String street) {
      this.street = street;
      return this;
    }

    /**
     * 小区
     */
    public Builder building(String building) {
      this.building = building;
      return this;
    }

    /**
     * 详细地址
     */
    public Builder addrDetail(String addrDetail) {
      this.addrDetail = addrDetail;
      return this;
    }

    /**
     * 第一联系人手机号
     */
    public Builder phone(String phone) {
      this.phone = phone;
      return this;
    }

    /**
     * 第一联系人
     */
    public Builder contacts(String contacts) {
      this.contacts = contacts;
      return this;
    }

    /**
     * 第二联系人手机号
     */
    public Builder phone2(String phone2) {
      this.phone2 = phone2;
      return this;
    }

    /**
     * 第二联系人
     */
    public Builder contacts2(String contacts2) {
      this.contacts2 = contacts2;
      return this;
    }

    /**
     * 经纬度类型 1-百度  2-高德
     */
    public Builder gpsType(Integer gpsType) {
      this.gpsType = gpsType;
      return this;
    }

    /**
     * 经度
     */
    public Builder lng(Double lng) {
      this.lng = lng;
      return this;
    }

    /**
     * 纬度
     */
    public Builder lat(Double lat) {
      this.lat = lat;
      return this;
    }

    /**
     * 支付状态  0-未支付  1-已支付  2-部分支付
     */
    public Builder payStatus(Integer payStatus) {
      this.payStatus = payStatus;
      return this;
    }

    /**
     * 预交金
     */
    public Builder preRealFee(Integer preRealFee) {
      this.preRealFee = preRealFee;
      return this;
    }

    /**
     * 原价
     */
    public Builder originalFee(Integer originalFee) {
      this.originalFee = originalFee;
      return this;
    }

    /**
     * 优惠码
     */
    public Builder couponCode(String couponCode) {
      this.couponCode = couponCode;
      return this;
    }

    /**
     * 减免
     */
    public Builder rebate(Integer rebate) {
      this.rebate = rebate;
      return this;
    }

    /**
     * 应付价格 = 原价-减免
     */
    public Builder fee(Integer fee) {
      this.fee = fee;
      return this;
    }

    /**
     * 实际支付费用
     */
    public Builder realFee(Integer realFee) {
      this.realFee = realFee;
      return this;
    }

    /**
     * 知情同意书图片id
     */
    public Builder consentImgId(String consentImgId) {
      this.consentImgId = consentImgId;
      return this;
    }

    /**
     * -1-已取消 0-待付款预交金,1-待派工,2-待服务,3-服务中,4-服务完成,5-待评价,6-已完成
     */
    public Builder status(Integer status) {
      this.status = status;
      return this;
    }

    /**
     * 用户备注
     */
    public Builder userMemo(String userMemo) {
      this.userMemo = userMemo;
      return this;
    }

    /**
     * 客服备注
     */
    public Builder kfMemo(String kfMemo) {
      this.kfMemo = kfMemo;
      return this;
    }

    public Builder createTime(Long createTime) {
      this.createTime = createTime;
      return this;
    }

    /**
     * 1-用户app下单 2-saas下单 3-企业app下单 4-用户h5下单
     */
    public Builder createType(Integer createType) {
      this.createType = createType;
      return this;
    }

    /**
     * 渠道来源
     */
    public Builder channelId(String channelId) {
      this.channelId = channelId;
      return this;
    }

    /**
     * 创建员工ID
     */
    public Builder createStaffId(Long createStaffId) {
      this.createStaffId = createStaffId;
      return this;
    }

    /**
     * 创建员工名字
     */
    public Builder createStaffName(String createStaffName) {
      this.createStaffName = createStaffName;
      return this;
    }

    /**
     * 预约开始时间
     */
    public Builder serviceStartTime(Long serviceStartTime) {
      this.serviceStartTime = serviceStartTime;
      return this;
    }

    /**
     * 预约截止时间
     */
    public Builder serviceEndTime(Long serviceEndTime) {
      this.serviceEndTime = serviceEndTime;
      return this;
    }

    /**
     * 定价ID
     */
    public Builder priceId(Long priceId) {
      this.priceId = priceId;
      return this;
    }

    /**
     * 护工ID
     */
    public Builder hgId(Long hgId) {
      this.hgId = hgId;
      return this;
    }

    /**
     * 被陪护人ID
     */
    public Builder kinsId(Long kinsId) {
      this.kinsId = kinsId;
      return this;
    }

    /**
     * 订单类型 1-机构订单 2-居家订单 3-长护险订单
     */
    public Builder orderType(Integer orderType) {
      this.orderType = orderType;
      return this;
    }

    /**
     * 门禁卡押金费用
     */
    public Builder extraFee(Integer extraFee) {
      this.extraFee = extraFee;
      return this;
    }

    /**
     * 订单失效时间
     */
    public Builder invalidTime(Long invalidTime) {
      this.invalidTime = invalidTime;
      return this;
    }

    /**
     * 用户姓名
     */
    public Builder userName(String userName) {
      this.userName = userName;
      return this;
    }

    /**
     * 照护人名字
     */
    public Builder fullName(String fullName) {
      this.fullName = fullName;
      return this;
    }

    /**
     * 被照护人身份证号
     */
    public Builder idCard(String idCard) {
      this.idCard = idCard;
      return this;
    }

    /**
     * 护工姓名
     */
    public Builder hgName(String hgName) {
      this.hgName = hgName;
      return this;
    }

    /**
     * 护工ID
     */
    public Builder hgId2(Long hgId2) {
      this.hgId2 = hgId2;
      return this;
    }

    /**
     * 护工姓名
     */
    public Builder hgName2(String hgName2) {
      this.hgName2 = hgName2;
      return this;
    }

    /**
     * 护工ID
     */
    public Builder hgId3(Long hgId3) {
      this.hgId3 = hgId3;
      return this;
    }

    /**
     * 护工姓名
     */
    public Builder hgName3(String hgName3) {
      this.hgName3 = hgName3;
      return this;
    }

    /**
     * 服务项目
     */
    public Builder serviceItem(String serviceItem) {
      this.serviceItem = serviceItem;
      return this;
    }

    /**
     * 服务单位 1-次 2-小时 3-天 4-月
     */
    public Builder serviceUnit(Integer serviceUnit) {
      this.serviceUnit = serviceUnit;
      return this;
    }

    /**
     * 套餐定价
     */
    public Builder price(Long price) {
      this.price = price;
      return this;
    }

    /**
     * 联系电话（下单时填入的手机号）
     */
    public Builder contactPhone(String contactPhone) {
      this.contactPhone = contactPhone;
      return this;
    }

    /**
     * 长护险申请单号（不为空即为长护险订单）
     */
    public Builder insureNO(String insureNO) {
      this.insureNO = insureNO;
      return this;
    }

    /**
     * 客户经理或者督导
     */
    public Builder managerName(String managerName) {
      this.managerName = managerName;
      return this;
    }

    /**
     * 客户经理或者督导id
     */
    public Builder managerId(Long managerId) {
      this.managerId = managerId;
      return this;
    }

    /**
     * 服务开始时间
     */
    public Builder orderStartTime(Long orderStartTime) {
      this.orderStartTime = orderStartTime;
      return this;
    }

    /**
     * 服务结束时间
     */
    public Builder orderEndTime(Long orderEndTime) {
      this.orderEndTime = orderEndTime;
      return this;
    }

    /**
     * 被陪护人签名
     */
    public Builder signPic(String signPic) {
      this.signPic = signPic;
      return this;
    }

    /**
     * 0-待评估 1-已评估 2-跳过评估
     */
    public Builder pgStatus(Integer pgStatus) {
      this.pgStatus = pgStatus;
      return this;
    }

    /**
     * 服务类型 1-1:1  2-1:N  99 机构附加项目 101 居家照护 102家庭护士 103 康复护理 104 中医理疗 105 金牌月嫂 106 就医陪护 107 心理慰藉 108 产后恢复 109 育婴幼教 110 临终关怀 199 上门服务附加项
     */
    public Builder serviceType(Integer serviceType) {
      this.serviceType = serviceType;
      return this;
    }

    /**
     * 医疗服务状态 0-默认 1-待指派 2-服务中 3-服务完成
     */
    public Builder serviceStatus(Integer serviceStatus) {
      this.serviceStatus = serviceStatus;
      return this;
    }

    /**
     * 住院号
     */
    public Builder orgNO(String orgNO) {
      this.orgNO = orgNO;
      return this;
    }

    /**
     * 入院日期
     */
    public Builder admissionDate(String admissionDate) {
      this.admissionDate = admissionDate;
      return this;
    }

    /**
     * 安全风险评估
     */
    public Builder securityAssess(String securityAssess) {
      this.securityAssess = securityAssess;
      return this;
    }

    /**
     * 预估出院时间
     */
    public Builder dischargedTime(Long dischargedTime) {
      this.dischargedTime = dischargedTime;
      return this;
    }

    /**
     * 手环或入院通知单照片
     */
    public Builder pic1(String pic1) {
      this.pic1 = pic1;
      return this;
    }

    /**
     * 手环或入院通知单照片
     */
    public Builder pic2(String pic2) {
      this.pic2 = pic2;
      return this;
    }

    /**
     * 职工优惠金额
     */
    public Builder hgRebateFee(Long hgRebateFee) {
      this.hgRebateFee = hgRebateFee;
      return this;
    }

    /**
     * 职工优惠类型 0-无优惠 1-职工 2-职工家属
     */
    public Builder hgRebateType(Integer hgRebateType) {
      this.hgRebateType = hgRebateType;
      return this;
    }

    /**
     * 优惠备注
     */
    public Builder rebateDesc(String rebateDesc) {
      this.rebateDesc = rebateDesc;
      return this;
    }

    /**
     * 订单结算时间
     */
    public Builder settleTime(Long settleTime) {
      this.settleTime = settleTime;
      return this;
    }

    /**
     * 结束服务员工ID
     */
    public Builder endStaffId(Long endStaffId) {
      this.endStaffId = endStaffId;
      return this;
    }

    /**
     * 结束服务员工名称
     */
    public Builder endStaffName(String endStaffName) {
      this.endStaffName = endStaffName;
      return this;
    }

    /**
     * 服务项变更时间
     */
    public Builder updateTime(Long updateTime) {
      this.updateTime = updateTime;
      return this;
    }

    /**
     * 订单取消是否退过款 0-未退款 1-已退款
     */
    public Builder refundStatus(Integer refundStatus) {
      this.refundStatus = refundStatus;
      return this;
    }

    /**
     * 1-用户app结算 2-saas结算 3-企业app结算 4-用户h5结算
     */
    public Builder settleType(Integer settleType) {
      this.settleType = settleType;
      return this;
    }

    /**
     * 1-saas结束订单 2-企业app结束订单
     */
    public Builder finishType(Integer finishType) {
      this.finishType = finishType;
      return this;
    }

    /**
     * 是否对接了his 0-未对接 1-对接
     */
    public Builder isHis(Integer isHis) {
      this.isHis = isHis;
      return this;
    }

    /**
     * 第一次结算时职工优惠金额
     */
    public Builder firstHgRebateFee(Long firstHgRebateFee) {
      this.firstHgRebateFee = firstHgRebateFee;
      return this;
    }

    /**
     * 第一次结算时职工优惠类型 0-无优惠 1-职工 2-职工家属
     */
    public Builder firstHgRebateType(Integer firstHgRebateType) {
      this.firstHgRebateType = firstHgRebateType;
      return this;
    }

    /**
     * 陪护家属姓名
     */
    public Builder relationName(String relationName) {
      this.relationName = relationName;
      return this;
    }

    /**
     * 陪护家属与被陪护人关系
     */
    public Builder relation(String relation) {
      this.relation = relation;
      return this;
    }

    /**
     * 陪护家属手机号
     */
    public Builder relationPhone(String relationPhone) {
      this.relationPhone = relationPhone;
      return this;
    }

    /**
     * 陪护家属身份证号
     */
    public Builder relationIdcard(String relationIdcard) {
      this.relationIdcard = relationIdcard;
      return this;
    }

    /**
     * 推荐人工号
     */
    public Builder recommendHGNo(String recommendHGNo) {
      this.recommendHGNo = recommendHGNo;
      return this;
    }

    /**
     * 长护险护士id
     */
    public Builder insureHsId(Long insureHsId) {
      this.insureHsId = insureHsId;
      return this;
    }

    /**
     * 长护险护士姓名
     */
    public Builder insureHsName(String insureHsName) {
      this.insureHsName = insureHsName;
      return this;
    }

    /**
     * 长护险被指派护士长id
     */
    public Builder insureNurseLeaderId(Long insureNurseLeaderId) {
      this.insureNurseLeaderId = insureNurseLeaderId;
      return this;
    }

    /**
     * 长护险被指派护士长姓名
     */
    public Builder insureNurseLeaderName(String insureNurseLeaderName) {
      this.insureNurseLeaderName = insureNurseLeaderName;
      return this;
    }

    /**
     * 取消订单id 1-上门不及时 2-病情变化不需要了 3-订单填写错误 4-其他原因
     */
    public Builder cancelOrderId(Integer cancelOrderId) {
      this.cancelOrderId = cancelOrderId;
      return this;
    }

    /**
     * 取消订单原因
     */
    public Builder cancelOrderDesc(String cancelOrderDesc) {
      this.cancelOrderDesc = cancelOrderDesc;
      return this;
    }

    /**
     * 取消订单前的订单状态
     */
    public Builder cancelStatus(Integer cancelStatus) {
      this.cancelStatus = cancelStatus;
      return this;
    }

    @Override
    public Order build() {
      return new Order(orderId, userId, companyId, orgId, orgName, branchId, branchName, companyBranchId, roomId, roomNo, bedId, bedNo, addrId, province, city, cityCode, district, adCode, street, building, addrDetail, phone, contacts, phone2, contacts2, gpsType, lng, lat, payStatus, preRealFee, originalFee, couponCode, rebate, fee, realFee, consentImgId, status, userMemo, kfMemo, createTime, createType, channelId, createStaffId, createStaffName, serviceStartTime, serviceEndTime, priceId, hgId, kinsId, orderType, extraFee, invalidTime, userName, fullName, idCard, hgName, hgId2, hgName2, hgId3, hgName3, serviceItem, serviceUnit, price, contactPhone, insureNO, managerName, managerId, orderStartTime, orderEndTime, signPic, pgStatus, serviceType, serviceStatus, orgNO, admissionDate, securityAssess, dischargedTime, pic1, pic2, hgRebateFee, hgRebateType, rebateDesc, settleTime, endStaffId, endStaffName, updateTime, refundStatus, settleType, finishType, isHis, firstHgRebateFee, firstHgRebateType, relationName, relation, relationPhone, relationIdcard, recommendHGNo, insureHsId, insureHsName, insureNurseLeaderId, insureNurseLeaderName, cancelOrderId, cancelOrderDesc, cancelStatus, super.buildUnknownFields());
    }
  }

  private static final class ProtoAdapter_Order extends ProtoAdapter<Order> {
    ProtoAdapter_Order() {
      super(FieldEncoding.LENGTH_DELIMITED, Order.class);
    }

    @Override
    public int encodedSize(Order value) {
      return (value.orderId != null ? ProtoAdapter.STRING.encodedSizeWithTag(1, value.orderId) : 0)
          + (value.userId != null ? ProtoAdapter.UINT64.encodedSizeWithTag(2, value.userId) : 0)
          + (value.companyId != null ? ProtoAdapter.UINT64.encodedSizeWithTag(3, value.companyId) : 0)
          + (value.orgId != null ? ProtoAdapter.UINT64.encodedSizeWithTag(4, value.orgId) : 0)
          + (value.orgName != null ? ProtoAdapter.STRING.encodedSizeWithTag(5, value.orgName) : 0)
          + (value.branchId != null ? ProtoAdapter.UINT64.encodedSizeWithTag(6, value.branchId) : 0)
          + (value.branchName != null ? ProtoAdapter.STRING.encodedSizeWithTag(7, value.branchName) : 0)
          + (value.companyBranchId != null ? ProtoAdapter.UINT32.encodedSizeWithTag(8, value.companyBranchId) : 0)
          + (value.roomId != null ? ProtoAdapter.UINT64.encodedSizeWithTag(9, value.roomId) : 0)
          + (value.roomNo != null ? ProtoAdapter.STRING.encodedSizeWithTag(10, value.roomNo) : 0)
          + (value.bedId != null ? ProtoAdapter.UINT64.encodedSizeWithTag(11, value.bedId) : 0)
          + (value.bedNo != null ? ProtoAdapter.STRING.encodedSizeWithTag(12, value.bedNo) : 0)
          + (value.addrId != null ? ProtoAdapter.UINT64.encodedSizeWithTag(13, value.addrId) : 0)
          + (value.province != null ? ProtoAdapter.STRING.encodedSizeWithTag(14, value.province) : 0)
          + (value.city != null ? ProtoAdapter.STRING.encodedSizeWithTag(15, value.city) : 0)
          + (value.cityCode != null ? ProtoAdapter.STRING.encodedSizeWithTag(16, value.cityCode) : 0)
          + (value.district != null ? ProtoAdapter.STRING.encodedSizeWithTag(17, value.district) : 0)
          + (value.adCode != null ? ProtoAdapter.STRING.encodedSizeWithTag(18, value.adCode) : 0)
          + (value.street != null ? ProtoAdapter.STRING.encodedSizeWithTag(19, value.street) : 0)
          + (value.building != null ? ProtoAdapter.STRING.encodedSizeWithTag(20, value.building) : 0)
          + (value.addrDetail != null ? ProtoAdapter.STRING.encodedSizeWithTag(21, value.addrDetail) : 0)
          + (value.phone != null ? ProtoAdapter.STRING.encodedSizeWithTag(22, value.phone) : 0)
          + (value.contacts != null ? ProtoAdapter.STRING.encodedSizeWithTag(23, value.contacts) : 0)
          + (value.phone2 != null ? ProtoAdapter.STRING.encodedSizeWithTag(24, value.phone2) : 0)
          + (value.contacts2 != null ? ProtoAdapter.STRING.encodedSizeWithTag(25, value.contacts2) : 0)
          + (value.gpsType != null ? ProtoAdapter.UINT32.encodedSizeWithTag(26, value.gpsType) : 0)
          + (value.lng != null ? ProtoAdapter.DOUBLE.encodedSizeWithTag(27, value.lng) : 0)
          + (value.lat != null ? ProtoAdapter.DOUBLE.encodedSizeWithTag(28, value.lat) : 0)
          + (value.payStatus != null ? ProtoAdapter.UINT32.encodedSizeWithTag(29, value.payStatus) : 0)
          + (value.preRealFee != null ? ProtoAdapter.UINT32.encodedSizeWithTag(30, value.preRealFee) : 0)
          + (value.originalFee != null ? ProtoAdapter.UINT32.encodedSizeWithTag(31, value.originalFee) : 0)
          + (value.couponCode != null ? ProtoAdapter.STRING.encodedSizeWithTag(32, value.couponCode) : 0)
          + (value.rebate != null ? ProtoAdapter.UINT32.encodedSizeWithTag(33, value.rebate) : 0)
          + (value.fee != null ? ProtoAdapter.UINT32.encodedSizeWithTag(34, value.fee) : 0)
          + (value.realFee != null ? ProtoAdapter.UINT32.encodedSizeWithTag(35, value.realFee) : 0)
          + (value.consentImgId != null ? ProtoAdapter.STRING.encodedSizeWithTag(36, value.consentImgId) : 0)
          + (value.status != null ? ProtoAdapter.INT32.encodedSizeWithTag(37, value.status) : 0)
          + (value.userMemo != null ? ProtoAdapter.STRING.encodedSizeWithTag(38, value.userMemo) : 0)
          + (value.kfMemo != null ? ProtoAdapter.STRING.encodedSizeWithTag(39, value.kfMemo) : 0)
          + (value.createTime != null ? ProtoAdapter.UINT64.encodedSizeWithTag(40, value.createTime) : 0)
          + (value.createType != null ? ProtoAdapter.UINT32.encodedSizeWithTag(41, value.createType) : 0)
          + (value.channelId != null ? ProtoAdapter.STRING.encodedSizeWithTag(42, value.channelId) : 0)
          + (value.createStaffId != null ? ProtoAdapter.UINT64.encodedSizeWithTag(43, value.createStaffId) : 0)
          + (value.createStaffName != null ? ProtoAdapter.STRING.encodedSizeWithTag(44, value.createStaffName) : 0)
          + (value.serviceStartTime != null ? ProtoAdapter.UINT64.encodedSizeWithTag(45, value.serviceStartTime) : 0)
          + (value.serviceEndTime != null ? ProtoAdapter.UINT64.encodedSizeWithTag(46, value.serviceEndTime) : 0)
          + (value.priceId != null ? ProtoAdapter.UINT64.encodedSizeWithTag(47, value.priceId) : 0)
          + (value.hgId != null ? ProtoAdapter.UINT64.encodedSizeWithTag(48, value.hgId) : 0)
          + (value.kinsId != null ? ProtoAdapter.UINT64.encodedSizeWithTag(49, value.kinsId) : 0)
          + (value.orderType != null ? ProtoAdapter.UINT32.encodedSizeWithTag(50, value.orderType) : 0)
          + (value.extraFee != null ? ProtoAdapter.UINT32.encodedSizeWithTag(51, value.extraFee) : 0)
          + (value.invalidTime != null ? ProtoAdapter.UINT64.encodedSizeWithTag(52, value.invalidTime) : 0)
          + (value.userName != null ? ProtoAdapter.STRING.encodedSizeWithTag(54, value.userName) : 0)
          + (value.fullName != null ? ProtoAdapter.STRING.encodedSizeWithTag(55, value.fullName) : 0)
          + (value.idCard != null ? ProtoAdapter.STRING.encodedSizeWithTag(56, value.idCard) : 0)
          + (value.hgName != null ? ProtoAdapter.STRING.encodedSizeWithTag(57, value.hgName) : 0)
          + (value.hgId2 != null ? ProtoAdapter.UINT64.encodedSizeWithTag(58, value.hgId2) : 0)
          + (value.hgName2 != null ? ProtoAdapter.STRING.encodedSizeWithTag(59, value.hgName2) : 0)
          + (value.hgId3 != null ? ProtoAdapter.UINT64.encodedSizeWithTag(60, value.hgId3) : 0)
          + (value.hgName3 != null ? ProtoAdapter.STRING.encodedSizeWithTag(61, value.hgName3) : 0)
          + (value.serviceItem != null ? ProtoAdapter.STRING.encodedSizeWithTag(62, value.serviceItem) : 0)
          + (value.serviceUnit != null ? ProtoAdapter.UINT32.encodedSizeWithTag(63, value.serviceUnit) : 0)
          + (value.price != null ? ProtoAdapter.UINT64.encodedSizeWithTag(64, value.price) : 0)
          + (value.contactPhone != null ? ProtoAdapter.STRING.encodedSizeWithTag(66, value.contactPhone) : 0)
          + (value.insureNO != null ? ProtoAdapter.STRING.encodedSizeWithTag(67, value.insureNO) : 0)
          + (value.managerName != null ? ProtoAdapter.STRING.encodedSizeWithTag(68, value.managerName) : 0)
          + (value.managerId != null ? ProtoAdapter.UINT64.encodedSizeWithTag(69, value.managerId) : 0)
          + (value.orderStartTime != null ? ProtoAdapter.UINT64.encodedSizeWithTag(70, value.orderStartTime) : 0)
          + (value.orderEndTime != null ? ProtoAdapter.UINT64.encodedSizeWithTag(71, value.orderEndTime) : 0)
          + (value.signPic != null ? ProtoAdapter.STRING.encodedSizeWithTag(72, value.signPic) : 0)
          + (value.pgStatus != null ? ProtoAdapter.UINT32.encodedSizeWithTag(73, value.pgStatus) : 0)
          + (value.serviceType != null ? ProtoAdapter.UINT32.encodedSizeWithTag(74, value.serviceType) : 0)
          + (value.serviceStatus != null ? ProtoAdapter.UINT32.encodedSizeWithTag(75, value.serviceStatus) : 0)
          + (value.orgNO != null ? ProtoAdapter.STRING.encodedSizeWithTag(76, value.orgNO) : 0)
          + (value.admissionDate != null ? ProtoAdapter.STRING.encodedSizeWithTag(77, value.admissionDate) : 0)
          + (value.securityAssess != null ? ProtoAdapter.STRING.encodedSizeWithTag(78, value.securityAssess) : 0)
          + (value.dischargedTime != null ? ProtoAdapter.UINT64.encodedSizeWithTag(79, value.dischargedTime) : 0)
          + (value.pic1 != null ? ProtoAdapter.STRING.encodedSizeWithTag(80, value.pic1) : 0)
          + (value.pic2 != null ? ProtoAdapter.STRING.encodedSizeWithTag(81, value.pic2) : 0)
          + (value.hgRebateFee != null ? ProtoAdapter.INT64.encodedSizeWithTag(82, value.hgRebateFee) : 0)
          + (value.hgRebateType != null ? ProtoAdapter.UINT32.encodedSizeWithTag(83, value.hgRebateType) : 0)
          + (value.rebateDesc != null ? ProtoAdapter.STRING.encodedSizeWithTag(84, value.rebateDesc) : 0)
          + (value.settleTime != null ? ProtoAdapter.UINT64.encodedSizeWithTag(85, value.settleTime) : 0)
          + (value.endStaffId != null ? ProtoAdapter.UINT64.encodedSizeWithTag(86, value.endStaffId) : 0)
          + (value.endStaffName != null ? ProtoAdapter.STRING.encodedSizeWithTag(87, value.endStaffName) : 0)
          + (value.updateTime != null ? ProtoAdapter.UINT64.encodedSizeWithTag(88, value.updateTime) : 0)
          + (value.refundStatus != null ? ProtoAdapter.UINT32.encodedSizeWithTag(89, value.refundStatus) : 0)
          + (value.settleType != null ? ProtoAdapter.UINT32.encodedSizeWithTag(90, value.settleType) : 0)
          + (value.finishType != null ? ProtoAdapter.UINT32.encodedSizeWithTag(91, value.finishType) : 0)
          + (value.isHis != null ? ProtoAdapter.UINT32.encodedSizeWithTag(92, value.isHis) : 0)
          + (value.firstHgRebateFee != null ? ProtoAdapter.INT64.encodedSizeWithTag(93, value.firstHgRebateFee) : 0)
          + (value.firstHgRebateType != null ? ProtoAdapter.UINT32.encodedSizeWithTag(94, value.firstHgRebateType) : 0)
          + (value.relationName != null ? ProtoAdapter.STRING.encodedSizeWithTag(95, value.relationName) : 0)
          + (value.relation != null ? ProtoAdapter.STRING.encodedSizeWithTag(96, value.relation) : 0)
          + (value.relationPhone != null ? ProtoAdapter.STRING.encodedSizeWithTag(97, value.relationPhone) : 0)
          + (value.relationIdcard != null ? ProtoAdapter.STRING.encodedSizeWithTag(98, value.relationIdcard) : 0)
          + (value.recommendHGNo != null ? ProtoAdapter.STRING.encodedSizeWithTag(99, value.recommendHGNo) : 0)
          + (value.insureHsId != null ? ProtoAdapter.UINT64.encodedSizeWithTag(100, value.insureHsId) : 0)
          + (value.insureHsName != null ? ProtoAdapter.STRING.encodedSizeWithTag(101, value.insureHsName) : 0)
          + (value.insureNurseLeaderId != null ? ProtoAdapter.UINT64.encodedSizeWithTag(102, value.insureNurseLeaderId) : 0)
          + (value.insureNurseLeaderName != null ? ProtoAdapter.STRING.encodedSizeWithTag(103, value.insureNurseLeaderName) : 0)
          + (value.cancelOrderId != null ? ProtoAdapter.UINT32.encodedSizeWithTag(104, value.cancelOrderId) : 0)
          + (value.cancelOrderDesc != null ? ProtoAdapter.STRING.encodedSizeWithTag(105, value.cancelOrderDesc) : 0)
          + (value.cancelStatus != null ? ProtoAdapter.UINT32.encodedSizeWithTag(106, value.cancelStatus) : 0)
          + value.unknownFields().size();
    }

    @Override
    public void encode(ProtoWriter writer, Order value) throws IOException {
      if (value.orderId != null) ProtoAdapter.STRING.encodeWithTag(writer, 1, value.orderId);
      if (value.userId != null) ProtoAdapter.UINT64.encodeWithTag(writer, 2, value.userId);
      if (value.companyId != null) ProtoAdapter.UINT64.encodeWithTag(writer, 3, value.companyId);
      if (value.orgId != null) ProtoAdapter.UINT64.encodeWithTag(writer, 4, value.orgId);
      if (value.orgName != null) ProtoAdapter.STRING.encodeWithTag(writer, 5, value.orgName);
      if (value.branchId != null) ProtoAdapter.UINT64.encodeWithTag(writer, 6, value.branchId);
      if (value.branchName != null) ProtoAdapter.STRING.encodeWithTag(writer, 7, value.branchName);
      if (value.companyBranchId != null) ProtoAdapter.UINT32.encodeWithTag(writer, 8, value.companyBranchId);
      if (value.roomId != null) ProtoAdapter.UINT64.encodeWithTag(writer, 9, value.roomId);
      if (value.roomNo != null) ProtoAdapter.STRING.encodeWithTag(writer, 10, value.roomNo);
      if (value.bedId != null) ProtoAdapter.UINT64.encodeWithTag(writer, 11, value.bedId);
      if (value.bedNo != null) ProtoAdapter.STRING.encodeWithTag(writer, 12, value.bedNo);
      if (value.addrId != null) ProtoAdapter.UINT64.encodeWithTag(writer, 13, value.addrId);
      if (value.province != null) ProtoAdapter.STRING.encodeWithTag(writer, 14, value.province);
      if (value.city != null) ProtoAdapter.STRING.encodeWithTag(writer, 15, value.city);
      if (value.cityCode != null) ProtoAdapter.STRING.encodeWithTag(writer, 16, value.cityCode);
      if (value.district != null) ProtoAdapter.STRING.encodeWithTag(writer, 17, value.district);
      if (value.adCode != null) ProtoAdapter.STRING.encodeWithTag(writer, 18, value.adCode);
      if (value.street != null) ProtoAdapter.STRING.encodeWithTag(writer, 19, value.street);
      if (value.building != null) ProtoAdapter.STRING.encodeWithTag(writer, 20, value.building);
      if (value.addrDetail != null) ProtoAdapter.STRING.encodeWithTag(writer, 21, value.addrDetail);
      if (value.phone != null) ProtoAdapter.STRING.encodeWithTag(writer, 22, value.phone);
      if (value.contacts != null) ProtoAdapter.STRING.encodeWithTag(writer, 23, value.contacts);
      if (value.phone2 != null) ProtoAdapter.STRING.encodeWithTag(writer, 24, value.phone2);
      if (value.contacts2 != null) ProtoAdapter.STRING.encodeWithTag(writer, 25, value.contacts2);
      if (value.gpsType != null) ProtoAdapter.UINT32.encodeWithTag(writer, 26, value.gpsType);
      if (value.lng != null) ProtoAdapter.DOUBLE.encodeWithTag(writer, 27, value.lng);
      if (value.lat != null) ProtoAdapter.DOUBLE.encodeWithTag(writer, 28, value.lat);
      if (value.payStatus != null) ProtoAdapter.UINT32.encodeWithTag(writer, 29, value.payStatus);
      if (value.preRealFee != null) ProtoAdapter.UINT32.encodeWithTag(writer, 30, value.preRealFee);
      if (value.originalFee != null) ProtoAdapter.UINT32.encodeWithTag(writer, 31, value.originalFee);
      if (value.couponCode != null) ProtoAdapter.STRING.encodeWithTag(writer, 32, value.couponCode);
      if (value.rebate != null) ProtoAdapter.UINT32.encodeWithTag(writer, 33, value.rebate);
      if (value.fee != null) ProtoAdapter.UINT32.encodeWithTag(writer, 34, value.fee);
      if (value.realFee != null) ProtoAdapter.UINT32.encodeWithTag(writer, 35, value.realFee);
      if (value.consentImgId != null) ProtoAdapter.STRING.encodeWithTag(writer, 36, value.consentImgId);
      if (value.status != null) ProtoAdapter.INT32.encodeWithTag(writer, 37, value.status);
      if (value.userMemo != null) ProtoAdapter.STRING.encodeWithTag(writer, 38, value.userMemo);
      if (value.kfMemo != null) ProtoAdapter.STRING.encodeWithTag(writer, 39, value.kfMemo);
      if (value.createTime != null) ProtoAdapter.UINT64.encodeWithTag(writer, 40, value.createTime);
      if (value.createType != null) ProtoAdapter.UINT32.encodeWithTag(writer, 41, value.createType);
      if (value.channelId != null) ProtoAdapter.STRING.encodeWithTag(writer, 42, value.channelId);
      if (value.createStaffId != null) ProtoAdapter.UINT64.encodeWithTag(writer, 43, value.createStaffId);
      if (value.createStaffName != null) ProtoAdapter.STRING.encodeWithTag(writer, 44, value.createStaffName);
      if (value.serviceStartTime != null) ProtoAdapter.UINT64.encodeWithTag(writer, 45, value.serviceStartTime);
      if (value.serviceEndTime != null) ProtoAdapter.UINT64.encodeWithTag(writer, 46, value.serviceEndTime);
      if (value.priceId != null) ProtoAdapter.UINT64.encodeWithTag(writer, 47, value.priceId);
      if (value.hgId != null) ProtoAdapter.UINT64.encodeWithTag(writer, 48, value.hgId);
      if (value.kinsId != null) ProtoAdapter.UINT64.encodeWithTag(writer, 49, value.kinsId);
      if (value.orderType != null) ProtoAdapter.UINT32.encodeWithTag(writer, 50, value.orderType);
      if (value.extraFee != null) ProtoAdapter.UINT32.encodeWithTag(writer, 51, value.extraFee);
      if (value.invalidTime != null) ProtoAdapter.UINT64.encodeWithTag(writer, 52, value.invalidTime);
      if (value.userName != null) ProtoAdapter.STRING.encodeWithTag(writer, 54, value.userName);
      if (value.fullName != null) ProtoAdapter.STRING.encodeWithTag(writer, 55, value.fullName);
      if (value.idCard != null) ProtoAdapter.STRING.encodeWithTag(writer, 56, value.idCard);
      if (value.hgName != null) ProtoAdapter.STRING.encodeWithTag(writer, 57, value.hgName);
      if (value.hgId2 != null) ProtoAdapter.UINT64.encodeWithTag(writer, 58, value.hgId2);
      if (value.hgName2 != null) ProtoAdapter.STRING.encodeWithTag(writer, 59, value.hgName2);
      if (value.hgId3 != null) ProtoAdapter.UINT64.encodeWithTag(writer, 60, value.hgId3);
      if (value.hgName3 != null) ProtoAdapter.STRING.encodeWithTag(writer, 61, value.hgName3);
      if (value.serviceItem != null) ProtoAdapter.STRING.encodeWithTag(writer, 62, value.serviceItem);
      if (value.serviceUnit != null) ProtoAdapter.UINT32.encodeWithTag(writer, 63, value.serviceUnit);
      if (value.price != null) ProtoAdapter.UINT64.encodeWithTag(writer, 64, value.price);
      if (value.contactPhone != null) ProtoAdapter.STRING.encodeWithTag(writer, 66, value.contactPhone);
      if (value.insureNO != null) ProtoAdapter.STRING.encodeWithTag(writer, 67, value.insureNO);
      if (value.managerName != null) ProtoAdapter.STRING.encodeWithTag(writer, 68, value.managerName);
      if (value.managerId != null) ProtoAdapter.UINT64.encodeWithTag(writer, 69, value.managerId);
      if (value.orderStartTime != null) ProtoAdapter.UINT64.encodeWithTag(writer, 70, value.orderStartTime);
      if (value.orderEndTime != null) ProtoAdapter.UINT64.encodeWithTag(writer, 71, value.orderEndTime);
      if (value.signPic != null) ProtoAdapter.STRING.encodeWithTag(writer, 72, value.signPic);
      if (value.pgStatus != null) ProtoAdapter.UINT32.encodeWithTag(writer, 73, value.pgStatus);
      if (value.serviceType != null) ProtoAdapter.UINT32.encodeWithTag(writer, 74, value.serviceType);
      if (value.serviceStatus != null) ProtoAdapter.UINT32.encodeWithTag(writer, 75, value.serviceStatus);
      if (value.orgNO != null) ProtoAdapter.STRING.encodeWithTag(writer, 76, value.orgNO);
      if (value.admissionDate != null) ProtoAdapter.STRING.encodeWithTag(writer, 77, value.admissionDate);
      if (value.securityAssess != null) ProtoAdapter.STRING.encodeWithTag(writer, 78, value.securityAssess);
      if (value.dischargedTime != null) ProtoAdapter.UINT64.encodeWithTag(writer, 79, value.dischargedTime);
      if (value.pic1 != null) ProtoAdapter.STRING.encodeWithTag(writer, 80, value.pic1);
      if (value.pic2 != null) ProtoAdapter.STRING.encodeWithTag(writer, 81, value.pic2);
      if (value.hgRebateFee != null) ProtoAdapter.INT64.encodeWithTag(writer, 82, value.hgRebateFee);
      if (value.hgRebateType != null) ProtoAdapter.UINT32.encodeWithTag(writer, 83, value.hgRebateType);
      if (value.rebateDesc != null) ProtoAdapter.STRING.encodeWithTag(writer, 84, value.rebateDesc);
      if (value.settleTime != null) ProtoAdapter.UINT64.encodeWithTag(writer, 85, value.settleTime);
      if (value.endStaffId != null) ProtoAdapter.UINT64.encodeWithTag(writer, 86, value.endStaffId);
      if (value.endStaffName != null) ProtoAdapter.STRING.encodeWithTag(writer, 87, value.endStaffName);
      if (value.updateTime != null) ProtoAdapter.UINT64.encodeWithTag(writer, 88, value.updateTime);
      if (value.refundStatus != null) ProtoAdapter.UINT32.encodeWithTag(writer, 89, value.refundStatus);
      if (value.settleType != null) ProtoAdapter.UINT32.encodeWithTag(writer, 90, value.settleType);
      if (value.finishType != null) ProtoAdapter.UINT32.encodeWithTag(writer, 91, value.finishType);
      if (value.isHis != null) ProtoAdapter.UINT32.encodeWithTag(writer, 92, value.isHis);
      if (value.firstHgRebateFee != null) ProtoAdapter.INT64.encodeWithTag(writer, 93, value.firstHgRebateFee);
      if (value.firstHgRebateType != null) ProtoAdapter.UINT32.encodeWithTag(writer, 94, value.firstHgRebateType);
      if (value.relationName != null) ProtoAdapter.STRING.encodeWithTag(writer, 95, value.relationName);
      if (value.relation != null) ProtoAdapter.STRING.encodeWithTag(writer, 96, value.relation);
      if (value.relationPhone != null) ProtoAdapter.STRING.encodeWithTag(writer, 97, value.relationPhone);
      if (value.relationIdcard != null) ProtoAdapter.STRING.encodeWithTag(writer, 98, value.relationIdcard);
      if (value.recommendHGNo != null) ProtoAdapter.STRING.encodeWithTag(writer, 99, value.recommendHGNo);
      if (value.insureHsId != null) ProtoAdapter.UINT64.encodeWithTag(writer, 100, value.insureHsId);
      if (value.insureHsName != null) ProtoAdapter.STRING.encodeWithTag(writer, 101, value.insureHsName);
      if (value.insureNurseLeaderId != null) ProtoAdapter.UINT64.encodeWithTag(writer, 102, value.insureNurseLeaderId);
      if (value.insureNurseLeaderName != null) ProtoAdapter.STRING.encodeWithTag(writer, 103, value.insureNurseLeaderName);
      if (value.cancelOrderId != null) ProtoAdapter.UINT32.encodeWithTag(writer, 104, value.cancelOrderId);
      if (value.cancelOrderDesc != null) ProtoAdapter.STRING.encodeWithTag(writer, 105, value.cancelOrderDesc);
      if (value.cancelStatus != null) ProtoAdapter.UINT32.encodeWithTag(writer, 106, value.cancelStatus);
      writer.writeBytes(value.unknownFields());
    }

    @Override
    public Order decode(ProtoReader reader) throws IOException {
      Builder builder = new Builder();
      long token = reader.beginMessage();
      for (int tag; (tag = reader.nextTag()) != -1;) {
        switch (tag) {
          case 1: builder.orderId(ProtoAdapter.STRING.decode(reader)); break;
          case 2: builder.userId(ProtoAdapter.UINT64.decode(reader)); break;
          case 3: builder.companyId(ProtoAdapter.UINT64.decode(reader)); break;
          case 4: builder.orgId(ProtoAdapter.UINT64.decode(reader)); break;
          case 5: builder.orgName(ProtoAdapter.STRING.decode(reader)); break;
          case 6: builder.branchId(ProtoAdapter.UINT64.decode(reader)); break;
          case 7: builder.branchName(ProtoAdapter.STRING.decode(reader)); break;
          case 8: builder.companyBranchId(ProtoAdapter.UINT32.decode(reader)); break;
          case 9: builder.roomId(ProtoAdapter.UINT64.decode(reader)); break;
          case 10: builder.roomNo(ProtoAdapter.STRING.decode(reader)); break;
          case 11: builder.bedId(ProtoAdapter.UINT64.decode(reader)); break;
          case 12: builder.bedNo(ProtoAdapter.STRING.decode(reader)); break;
          case 13: builder.addrId(ProtoAdapter.UINT64.decode(reader)); break;
          case 14: builder.province(ProtoAdapter.STRING.decode(reader)); break;
          case 15: builder.city(ProtoAdapter.STRING.decode(reader)); break;
          case 16: builder.cityCode(ProtoAdapter.STRING.decode(reader)); break;
          case 17: builder.district(ProtoAdapter.STRING.decode(reader)); break;
          case 18: builder.adCode(ProtoAdapter.STRING.decode(reader)); break;
          case 19: builder.street(ProtoAdapter.STRING.decode(reader)); break;
          case 20: builder.building(ProtoAdapter.STRING.decode(reader)); break;
          case 21: builder.addrDetail(ProtoAdapter.STRING.decode(reader)); break;
          case 22: builder.phone(ProtoAdapter.STRING.decode(reader)); break;
          case 23: builder.contacts(ProtoAdapter.STRING.decode(reader)); break;
          case 24: builder.phone2(ProtoAdapter.STRING.decode(reader)); break;
          case 25: builder.contacts2(ProtoAdapter.STRING.decode(reader)); break;
          case 26: builder.gpsType(ProtoAdapter.UINT32.decode(reader)); break;
          case 27: builder.lng(ProtoAdapter.DOUBLE.decode(reader)); break;
          case 28: builder.lat(ProtoAdapter.DOUBLE.decode(reader)); break;
          case 29: builder.payStatus(ProtoAdapter.UINT32.decode(reader)); break;
          case 30: builder.preRealFee(ProtoAdapter.UINT32.decode(reader)); break;
          case 31: builder.originalFee(ProtoAdapter.UINT32.decode(reader)); break;
          case 32: builder.couponCode(ProtoAdapter.STRING.decode(reader)); break;
          case 33: builder.rebate(ProtoAdapter.UINT32.decode(reader)); break;
          case 34: builder.fee(ProtoAdapter.UINT32.decode(reader)); break;
          case 35: builder.realFee(ProtoAdapter.UINT32.decode(reader)); break;
          case 36: builder.consentImgId(ProtoAdapter.STRING.decode(reader)); break;
          case 37: builder.status(ProtoAdapter.INT32.decode(reader)); break;
          case 38: builder.userMemo(ProtoAdapter.STRING.decode(reader)); break;
          case 39: builder.kfMemo(ProtoAdapter.STRING.decode(reader)); break;
          case 40: builder.createTime(ProtoAdapter.UINT64.decode(reader)); break;
          case 41: builder.createType(ProtoAdapter.UINT32.decode(reader)); break;
          case 42: builder.channelId(ProtoAdapter.STRING.decode(reader)); break;
          case 43: builder.createStaffId(ProtoAdapter.UINT64.decode(reader)); break;
          case 44: builder.createStaffName(ProtoAdapter.STRING.decode(reader)); break;
          case 45: builder.serviceStartTime(ProtoAdapter.UINT64.decode(reader)); break;
          case 46: builder.serviceEndTime(ProtoAdapter.UINT64.decode(reader)); break;
          case 47: builder.priceId(ProtoAdapter.UINT64.decode(reader)); break;
          case 48: builder.hgId(ProtoAdapter.UINT64.decode(reader)); break;
          case 49: builder.kinsId(ProtoAdapter.UINT64.decode(reader)); break;
          case 50: builder.orderType(ProtoAdapter.UINT32.decode(reader)); break;
          case 51: builder.extraFee(ProtoAdapter.UINT32.decode(reader)); break;
          case 52: builder.invalidTime(ProtoAdapter.UINT64.decode(reader)); break;
          case 54: builder.userName(ProtoAdapter.STRING.decode(reader)); break;
          case 55: builder.fullName(ProtoAdapter.STRING.decode(reader)); break;
          case 56: builder.idCard(ProtoAdapter.STRING.decode(reader)); break;
          case 57: builder.hgName(ProtoAdapter.STRING.decode(reader)); break;
          case 58: builder.hgId2(ProtoAdapter.UINT64.decode(reader)); break;
          case 59: builder.hgName2(ProtoAdapter.STRING.decode(reader)); break;
          case 60: builder.hgId3(ProtoAdapter.UINT64.decode(reader)); break;
          case 61: builder.hgName3(ProtoAdapter.STRING.decode(reader)); break;
          case 62: builder.serviceItem(ProtoAdapter.STRING.decode(reader)); break;
          case 63: builder.serviceUnit(ProtoAdapter.UINT32.decode(reader)); break;
          case 64: builder.price(ProtoAdapter.UINT64.decode(reader)); break;
          case 66: builder.contactPhone(ProtoAdapter.STRING.decode(reader)); break;
          case 67: builder.insureNO(ProtoAdapter.STRING.decode(reader)); break;
          case 68: builder.managerName(ProtoAdapter.STRING.decode(reader)); break;
          case 69: builder.managerId(ProtoAdapter.UINT64.decode(reader)); break;
          case 70: builder.orderStartTime(ProtoAdapter.UINT64.decode(reader)); break;
          case 71: builder.orderEndTime(ProtoAdapter.UINT64.decode(reader)); break;
          case 72: builder.signPic(ProtoAdapter.STRING.decode(reader)); break;
          case 73: builder.pgStatus(ProtoAdapter.UINT32.decode(reader)); break;
          case 74: builder.serviceType(ProtoAdapter.UINT32.decode(reader)); break;
          case 75: builder.serviceStatus(ProtoAdapter.UINT32.decode(reader)); break;
          case 76: builder.orgNO(ProtoAdapter.STRING.decode(reader)); break;
          case 77: builder.admissionDate(ProtoAdapter.STRING.decode(reader)); break;
          case 78: builder.securityAssess(ProtoAdapter.STRING.decode(reader)); break;
          case 79: builder.dischargedTime(ProtoAdapter.UINT64.decode(reader)); break;
          case 80: builder.pic1(ProtoAdapter.STRING.decode(reader)); break;
          case 81: builder.pic2(ProtoAdapter.STRING.decode(reader)); break;
          case 82: builder.hgRebateFee(ProtoAdapter.INT64.decode(reader)); break;
          case 83: builder.hgRebateType(ProtoAdapter.UINT32.decode(reader)); break;
          case 84: builder.rebateDesc(ProtoAdapter.STRING.decode(reader)); break;
          case 85: builder.settleTime(ProtoAdapter.UINT64.decode(reader)); break;
          case 86: builder.endStaffId(ProtoAdapter.UINT64.decode(reader)); break;
          case 87: builder.endStaffName(ProtoAdapter.STRING.decode(reader)); break;
          case 88: builder.updateTime(ProtoAdapter.UINT64.decode(reader)); break;
          case 89: builder.refundStatus(ProtoAdapter.UINT32.decode(reader)); break;
          case 90: builder.settleType(ProtoAdapter.UINT32.decode(reader)); break;
          case 91: builder.finishType(ProtoAdapter.UINT32.decode(reader)); break;
          case 92: builder.isHis(ProtoAdapter.UINT32.decode(reader)); break;
          case 93: builder.firstHgRebateFee(ProtoAdapter.INT64.decode(reader)); break;
          case 94: builder.firstHgRebateType(ProtoAdapter.UINT32.decode(reader)); break;
          case 95: builder.relationName(ProtoAdapter.STRING.decode(reader)); break;
          case 96: builder.relation(ProtoAdapter.STRING.decode(reader)); break;
          case 97: builder.relationPhone(ProtoAdapter.STRING.decode(reader)); break;
          case 98: builder.relationIdcard(ProtoAdapter.STRING.decode(reader)); break;
          case 99: builder.recommendHGNo(ProtoAdapter.STRING.decode(reader)); break;
          case 100: builder.insureHsId(ProtoAdapter.UINT64.decode(reader)); break;
          case 101: builder.insureHsName(ProtoAdapter.STRING.decode(reader)); break;
          case 102: builder.insureNurseLeaderId(ProtoAdapter.UINT64.decode(reader)); break;
          case 103: builder.insureNurseLeaderName(ProtoAdapter.STRING.decode(reader)); break;
          case 104: builder.cancelOrderId(ProtoAdapter.UINT32.decode(reader)); break;
          case 105: builder.cancelOrderDesc(ProtoAdapter.STRING.decode(reader)); break;
          case 106: builder.cancelStatus(ProtoAdapter.UINT32.decode(reader)); break;
          default: {
            FieldEncoding fieldEncoding = reader.peekFieldEncoding();
            Object value = fieldEncoding.rawProtoAdapter().decode(reader);
            builder.addUnknownField(tag, fieldEncoding, value);
          }
        }
      }
      reader.endMessage(token);
      return builder.build();
    }

    @Override
    public Order redact(Order value) {
      Builder builder = value.newBuilder();
      builder.clearUnknownFields();
      return builder.build();
    }
  }
}
