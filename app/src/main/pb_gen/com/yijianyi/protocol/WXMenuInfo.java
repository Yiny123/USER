// Code generated by Wire protocol buffer compiler, do not edit.
// Source file: Model.proto at 63:1
package com.yijianyi.protocol;

import com.squareup.wire.FieldEncoding;
import com.squareup.wire.Message;
import com.squareup.wire.ProtoAdapter;
import com.squareup.wire.ProtoReader;
import com.squareup.wire.ProtoWriter;
import com.squareup.wire.WireField;
import com.squareup.wire.internal.Internal;
import java.io.IOException;
import java.lang.Integer;
import java.lang.Long;
import java.lang.Object;
import java.lang.Override;
import java.lang.String;
import java.lang.StringBuilder;
import java.util.List;
import okio.ByteString;

public final class WXMenuInfo extends Message<WXMenuInfo, WXMenuInfo.Builder> {
  public static final ProtoAdapter<WXMenuInfo> ADAPTER = new ProtoAdapter_WXMenuInfo();

  private static final long serialVersionUID = 0L;

  public static final Long DEFAULT_MENUID = 0L;

  public static final Long DEFAULT_PARENTID = 0L;

  public static final String DEFAULT_MENUNAME = "";

  public static final Integer DEFAULT_MENUTYPE = 0;

  public static final String DEFAULT_MENUURL = "";

  public static final String DEFAULT_MENUMSG = "";

  public static final Long DEFAULT_CREATETIME = 0L;

  public static final String DEFAULT_EDITOR = "";

  public static final Integer DEFAULT_STATE = 0;

  /**
   * 	主键id
   */
  @WireField(
      tag = 1,
      adapter = "com.squareup.wire.ProtoAdapter#UINT64"
  )
  public final Long menuId;

  /**
   * 	父节点id
   */
  @WireField(
      tag = 2,
      adapter = "com.squareup.wire.ProtoAdapter#UINT64"
  )
  public final Long parentId;

  /**
   * 	菜单名称
   */
  @WireField(
      tag = 3,
      adapter = "com.squareup.wire.ProtoAdapter#STRING"
  )
  public final String menuName;

  /**
   *   菜单类型
   */
  @WireField(
      tag = 4,
      adapter = "com.squareup.wire.ProtoAdapter#UINT32"
  )
  public final Integer menuType;

  /**
   * 	菜单链接
   */
  @WireField(
      tag = 6,
      adapter = "com.squareup.wire.ProtoAdapter#STRING"
  )
  public final String menuUrl;

  /**
   *   菜单消息
   */
  @WireField(
      tag = 7,
      adapter = "com.squareup.wire.ProtoAdapter#STRING"
  )
  public final String menuMsg;

  /**
   *   创建时间
   */
  @WireField(
      tag = 8,
      adapter = "com.squareup.wire.ProtoAdapter#UINT64"
  )
  public final Long createTime;

  /**
   * 	修改者
   */
  @WireField(
      tag = 9,
      adapter = "com.squareup.wire.ProtoAdapter#STRING"
  )
  public final String editor;

  /**
   * 		微信菜单详情
   */
  @WireField(
      tag = 10,
      adapter = "com.yijianyi.protocol.WXMenuInfo#ADAPTER",
      label = WireField.Label.REPEATED
  )
  public final List<WXMenuInfo> subMenus;

  /**
   *   状态,  1:正常状态,可以显示   0:删除状态,不予显示
   */
  @WireField(
      tag = 11,
      adapter = "com.squareup.wire.ProtoAdapter#UINT32"
  )
  public final Integer state;

  public WXMenuInfo(Long menuId, Long parentId, String menuName, Integer menuType, String menuUrl, String menuMsg, Long createTime, String editor, List<WXMenuInfo> subMenus, Integer state) {
    this(menuId, parentId, menuName, menuType, menuUrl, menuMsg, createTime, editor, subMenus, state, ByteString.EMPTY);
  }

  public WXMenuInfo(Long menuId, Long parentId, String menuName, Integer menuType, String menuUrl, String menuMsg, Long createTime, String editor, List<WXMenuInfo> subMenus, Integer state, ByteString unknownFields) {
    super(ADAPTER, unknownFields);
    this.menuId = menuId;
    this.parentId = parentId;
    this.menuName = menuName;
    this.menuType = menuType;
    this.menuUrl = menuUrl;
    this.menuMsg = menuMsg;
    this.createTime = createTime;
    this.editor = editor;
    this.subMenus = Internal.immutableCopyOf("subMenus", subMenus);
    this.state = state;
  }

  @Override
  public Builder newBuilder() {
    Builder builder = new Builder();
    builder.menuId = menuId;
    builder.parentId = parentId;
    builder.menuName = menuName;
    builder.menuType = menuType;
    builder.menuUrl = menuUrl;
    builder.menuMsg = menuMsg;
    builder.createTime = createTime;
    builder.editor = editor;
    builder.subMenus = Internal.copyOf("subMenus", subMenus);
    builder.state = state;
    builder.addUnknownFields(unknownFields());
    return builder;
  }

  @Override
  public boolean equals(Object other) {
    if (other == this) return true;
    if (!(other instanceof WXMenuInfo)) return false;
    WXMenuInfo o = (WXMenuInfo) other;
    return unknownFields().equals(o.unknownFields())
        && Internal.equals(menuId, o.menuId)
        && Internal.equals(parentId, o.parentId)
        && Internal.equals(menuName, o.menuName)
        && Internal.equals(menuType, o.menuType)
        && Internal.equals(menuUrl, o.menuUrl)
        && Internal.equals(menuMsg, o.menuMsg)
        && Internal.equals(createTime, o.createTime)
        && Internal.equals(editor, o.editor)
        && subMenus.equals(o.subMenus)
        && Internal.equals(state, o.state);
  }

  @Override
  public int hashCode() {
    int result = super.hashCode;
    if (result == 0) {
      result = unknownFields().hashCode();
      result = result * 37 + (menuId != null ? menuId.hashCode() : 0);
      result = result * 37 + (parentId != null ? parentId.hashCode() : 0);
      result = result * 37 + (menuName != null ? menuName.hashCode() : 0);
      result = result * 37 + (menuType != null ? menuType.hashCode() : 0);
      result = result * 37 + (menuUrl != null ? menuUrl.hashCode() : 0);
      result = result * 37 + (menuMsg != null ? menuMsg.hashCode() : 0);
      result = result * 37 + (createTime != null ? createTime.hashCode() : 0);
      result = result * 37 + (editor != null ? editor.hashCode() : 0);
      result = result * 37 + subMenus.hashCode();
      result = result * 37 + (state != null ? state.hashCode() : 0);
      super.hashCode = result;
    }
    return result;
  }

  @Override
  public String toString() {
    StringBuilder builder = new StringBuilder();
    if (menuId != null) builder.append(", menuId=").append(menuId);
    if (parentId != null) builder.append(", parentId=").append(parentId);
    if (menuName != null) builder.append(", menuName=").append(menuName);
    if (menuType != null) builder.append(", menuType=").append(menuType);
    if (menuUrl != null) builder.append(", menuUrl=").append(menuUrl);
    if (menuMsg != null) builder.append(", menuMsg=").append(menuMsg);
    if (createTime != null) builder.append(", createTime=").append(createTime);
    if (editor != null) builder.append(", editor=").append(editor);
    if (!subMenus.isEmpty()) builder.append(", subMenus=").append(subMenus);
    if (state != null) builder.append(", state=").append(state);
    return builder.replace(0, 2, "WXMenuInfo{").append('}').toString();
  }

  public static final class Builder extends Message.Builder<WXMenuInfo, Builder> {
    public Long menuId;

    public Long parentId;

    public String menuName;

    public Integer menuType;

    public String menuUrl;

    public String menuMsg;

    public Long createTime;

    public String editor;

    public List<WXMenuInfo> subMenus;

    public Integer state;

    public Builder() {
      subMenus = Internal.newMutableList();
    }

    /**
     * 	主键id
     */
    public Builder menuId(Long menuId) {
      this.menuId = menuId;
      return this;
    }

    /**
     * 	父节点id
     */
    public Builder parentId(Long parentId) {
      this.parentId = parentId;
      return this;
    }

    /**
     * 	菜单名称
     */
    public Builder menuName(String menuName) {
      this.menuName = menuName;
      return this;
    }

    /**
     *   菜单类型
     */
    public Builder menuType(Integer menuType) {
      this.menuType = menuType;
      return this;
    }

    /**
     * 	菜单链接
     */
    public Builder menuUrl(String menuUrl) {
      this.menuUrl = menuUrl;
      return this;
    }

    /**
     *   菜单消息
     */
    public Builder menuMsg(String menuMsg) {
      this.menuMsg = menuMsg;
      return this;
    }

    /**
     *   创建时间
     */
    public Builder createTime(Long createTime) {
      this.createTime = createTime;
      return this;
    }

    /**
     * 	修改者
     */
    public Builder editor(String editor) {
      this.editor = editor;
      return this;
    }

    /**
     * 		微信菜单详情
     */
    public Builder subMenus(List<WXMenuInfo> subMenus) {
      Internal.checkElementsNotNull(subMenus);
      this.subMenus = subMenus;
      return this;
    }

    /**
     *   状态,  1:正常状态,可以显示   0:删除状态,不予显示
     */
    public Builder state(Integer state) {
      this.state = state;
      return this;
    }

    @Override
    public WXMenuInfo build() {
      return new WXMenuInfo(menuId, parentId, menuName, menuType, menuUrl, menuMsg, createTime, editor, subMenus, state, super.buildUnknownFields());
    }
  }

  private static final class ProtoAdapter_WXMenuInfo extends ProtoAdapter<WXMenuInfo> {
    ProtoAdapter_WXMenuInfo() {
      super(FieldEncoding.LENGTH_DELIMITED, WXMenuInfo.class);
    }

    @Override
    public int encodedSize(WXMenuInfo value) {
      return (value.menuId != null ? ProtoAdapter.UINT64.encodedSizeWithTag(1, value.menuId) : 0)
          + (value.parentId != null ? ProtoAdapter.UINT64.encodedSizeWithTag(2, value.parentId) : 0)
          + (value.menuName != null ? ProtoAdapter.STRING.encodedSizeWithTag(3, value.menuName) : 0)
          + (value.menuType != null ? ProtoAdapter.UINT32.encodedSizeWithTag(4, value.menuType) : 0)
          + (value.menuUrl != null ? ProtoAdapter.STRING.encodedSizeWithTag(6, value.menuUrl) : 0)
          + (value.menuMsg != null ? ProtoAdapter.STRING.encodedSizeWithTag(7, value.menuMsg) : 0)
          + (value.createTime != null ? ProtoAdapter.UINT64.encodedSizeWithTag(8, value.createTime) : 0)
          + (value.editor != null ? ProtoAdapter.STRING.encodedSizeWithTag(9, value.editor) : 0)
          + WXMenuInfo.ADAPTER.asRepeated().encodedSizeWithTag(10, value.subMenus)
          + (value.state != null ? ProtoAdapter.UINT32.encodedSizeWithTag(11, value.state) : 0)
          + value.unknownFields().size();
    }

    @Override
    public void encode(ProtoWriter writer, WXMenuInfo value) throws IOException {
      if (value.menuId != null) ProtoAdapter.UINT64.encodeWithTag(writer, 1, value.menuId);
      if (value.parentId != null) ProtoAdapter.UINT64.encodeWithTag(writer, 2, value.parentId);
      if (value.menuName != null) ProtoAdapter.STRING.encodeWithTag(writer, 3, value.menuName);
      if (value.menuType != null) ProtoAdapter.UINT32.encodeWithTag(writer, 4, value.menuType);
      if (value.menuUrl != null) ProtoAdapter.STRING.encodeWithTag(writer, 6, value.menuUrl);
      if (value.menuMsg != null) ProtoAdapter.STRING.encodeWithTag(writer, 7, value.menuMsg);
      if (value.createTime != null) ProtoAdapter.UINT64.encodeWithTag(writer, 8, value.createTime);
      if (value.editor != null) ProtoAdapter.STRING.encodeWithTag(writer, 9, value.editor);
      WXMenuInfo.ADAPTER.asRepeated().encodeWithTag(writer, 10, value.subMenus);
      if (value.state != null) ProtoAdapter.UINT32.encodeWithTag(writer, 11, value.state);
      writer.writeBytes(value.unknownFields());
    }

    @Override
    public WXMenuInfo decode(ProtoReader reader) throws IOException {
      Builder builder = new Builder();
      long token = reader.beginMessage();
      for (int tag; (tag = reader.nextTag()) != -1;) {
        switch (tag) {
          case 1: builder.menuId(ProtoAdapter.UINT64.decode(reader)); break;
          case 2: builder.parentId(ProtoAdapter.UINT64.decode(reader)); break;
          case 3: builder.menuName(ProtoAdapter.STRING.decode(reader)); break;
          case 4: builder.menuType(ProtoAdapter.UINT32.decode(reader)); break;
          case 6: builder.menuUrl(ProtoAdapter.STRING.decode(reader)); break;
          case 7: builder.menuMsg(ProtoAdapter.STRING.decode(reader)); break;
          case 8: builder.createTime(ProtoAdapter.UINT64.decode(reader)); break;
          case 9: builder.editor(ProtoAdapter.STRING.decode(reader)); break;
          case 10: builder.subMenus.add(WXMenuInfo.ADAPTER.decode(reader)); break;
          case 11: builder.state(ProtoAdapter.UINT32.decode(reader)); break;
          default: {
            FieldEncoding fieldEncoding = reader.peekFieldEncoding();
            Object value = fieldEncoding.rawProtoAdapter().decode(reader);
            builder.addUnknownField(tag, fieldEncoding, value);
          }
        }
      }
      reader.endMessage(token);
      return builder.build();
    }

    @Override
    public WXMenuInfo redact(WXMenuInfo value) {
      Builder builder = value.newBuilder();
      Internal.redactElements(builder.subMenus, WXMenuInfo.ADAPTER);
      builder.clearUnknownFields();
      return builder.build();
    }
  }
}
