// Code generated by Wire protocol buffer compiler, do not edit.
// Source file: AppInterface.proto at 1481:1
package com.yijianyi.protocol;

import com.squareup.wire.FieldEncoding;
import com.squareup.wire.Message;
import com.squareup.wire.ProtoAdapter;
import com.squareup.wire.ProtoReader;
import com.squareup.wire.ProtoWriter;
import com.squareup.wire.WireField;
import com.squareup.wire.internal.Internal;
import java.io.IOException;
import java.lang.Integer;
import java.lang.Long;
import java.lang.Object;
import java.lang.Override;
import java.lang.String;
import java.lang.StringBuilder;
import okio.ByteString;

public final class GetInsureOrderInfoRsp extends Message<GetInsureOrderInfoRsp, GetInsureOrderInfoRsp.Builder> {
  public static final ProtoAdapter<GetInsureOrderInfoRsp> ADAPTER = new ProtoAdapter_GetInsureOrderInfoRsp();

  private static final long serialVersionUID = 0L;

  public static final Long DEFAULT_KINSID = 0L;

  public static final String DEFAULT_KINSNAME = "";

  public static final Integer DEFAULT_SCOREADL = 0;

  public static final String DEFAULT_COMPANYNAME = "";

  public static final Long DEFAULT_ADDRID = 0L;

  public static final String DEFAULT_CONTACTNAME = "";

  public static final String DEFAULT_CONTACTPHONE = "";

  public static final String DEFAULT_ADDRESS = "";

  public static final String DEFAULT_PHONE = "";

  public static final String DEFAULT_RELATIONNAME = "";

  public static final String DEFAULT_RELATION = "";

  public static final String DEFAULT_RELATIONPHONE = "";

  public static final String DEFAULT_RELATIONIDCARD = "";

  public static final Long DEFAULT_USERID = 0L;

  public static final String DEFAULT_INSURENO = "";

  @WireField(
      tag = 1,
      adapter = "com.squareup.wire.ProtoAdapter#UINT64"
  )
  public final Long kinsId;

  @WireField(
      tag = 2,
      adapter = "com.squareup.wire.ProtoAdapter#STRING"
  )
  public final String kinsName;

  @WireField(
      tag = 3,
      adapter = "com.squareup.wire.ProtoAdapter#UINT32"
  )
  public final Integer scoreADL;

  @WireField(
      tag = 4,
      adapter = "com.squareup.wire.ProtoAdapter#STRING"
  )
  public final String companyName;

  @WireField(
      tag = 5,
      adapter = "com.squareup.wire.ProtoAdapter#UINT64"
  )
  public final Long addrId;

  @WireField(
      tag = 6,
      adapter = "com.squareup.wire.ProtoAdapter#STRING"
  )
  public final String contactName;

  @WireField(
      tag = 7,
      adapter = "com.squareup.wire.ProtoAdapter#STRING"
  )
  public final String contactPhone;

  @WireField(
      tag = 8,
      adapter = "com.squareup.wire.ProtoAdapter#STRING"
  )
  public final String address;

  /**
   * 下单人手机号
   */
  @WireField(
      tag = 9,
      adapter = "com.squareup.wire.ProtoAdapter#STRING"
  )
  public final String phone;

  /**
   * 陪护家属姓名
   */
  @WireField(
      tag = 10,
      adapter = "com.squareup.wire.ProtoAdapter#STRING"
  )
  public final String relationName;

  /**
   * 陪护家属与被陪护人关系
   */
  @WireField(
      tag = 11,
      adapter = "com.squareup.wire.ProtoAdapter#STRING"
  )
  public final String relation;

  /**
   * 陪护家属手机号
   */
  @WireField(
      tag = 12,
      adapter = "com.squareup.wire.ProtoAdapter#STRING"
  )
  public final String relationPhone;

  /**
   * 陪护家属身份证号
   */
  @WireField(
      tag = 13,
      adapter = "com.squareup.wire.ProtoAdapter#STRING"
  )
  public final String relationIdcard;

  @WireField(
      tag = 14,
      adapter = "com.squareup.wire.ProtoAdapter#UINT64"
  )
  public final Long userId;

  @WireField(
      tag = 15,
      adapter = "com.squareup.wire.ProtoAdapter#STRING"
  )
  public final String insureNO;

  public GetInsureOrderInfoRsp(Long kinsId, String kinsName, Integer scoreADL, String companyName, Long addrId, String contactName, String contactPhone, String address, String phone, String relationName, String relation, String relationPhone, String relationIdcard, Long userId, String insureNO) {
    this(kinsId, kinsName, scoreADL, companyName, addrId, contactName, contactPhone, address, phone, relationName, relation, relationPhone, relationIdcard, userId, insureNO, ByteString.EMPTY);
  }

  public GetInsureOrderInfoRsp(Long kinsId, String kinsName, Integer scoreADL, String companyName, Long addrId, String contactName, String contactPhone, String address, String phone, String relationName, String relation, String relationPhone, String relationIdcard, Long userId, String insureNO, ByteString unknownFields) {
    super(ADAPTER, unknownFields);
    this.kinsId = kinsId;
    this.kinsName = kinsName;
    this.scoreADL = scoreADL;
    this.companyName = companyName;
    this.addrId = addrId;
    this.contactName = contactName;
    this.contactPhone = contactPhone;
    this.address = address;
    this.phone = phone;
    this.relationName = relationName;
    this.relation = relation;
    this.relationPhone = relationPhone;
    this.relationIdcard = relationIdcard;
    this.userId = userId;
    this.insureNO = insureNO;
  }

  @Override
  public Builder newBuilder() {
    Builder builder = new Builder();
    builder.kinsId = kinsId;
    builder.kinsName = kinsName;
    builder.scoreADL = scoreADL;
    builder.companyName = companyName;
    builder.addrId = addrId;
    builder.contactName = contactName;
    builder.contactPhone = contactPhone;
    builder.address = address;
    builder.phone = phone;
    builder.relationName = relationName;
    builder.relation = relation;
    builder.relationPhone = relationPhone;
    builder.relationIdcard = relationIdcard;
    builder.userId = userId;
    builder.insureNO = insureNO;
    builder.addUnknownFields(unknownFields());
    return builder;
  }

  @Override
  public boolean equals(Object other) {
    if (other == this) return true;
    if (!(other instanceof GetInsureOrderInfoRsp)) return false;
    GetInsureOrderInfoRsp o = (GetInsureOrderInfoRsp) other;
    return unknownFields().equals(o.unknownFields())
        && Internal.equals(kinsId, o.kinsId)
        && Internal.equals(kinsName, o.kinsName)
        && Internal.equals(scoreADL, o.scoreADL)
        && Internal.equals(companyName, o.companyName)
        && Internal.equals(addrId, o.addrId)
        && Internal.equals(contactName, o.contactName)
        && Internal.equals(contactPhone, o.contactPhone)
        && Internal.equals(address, o.address)
        && Internal.equals(phone, o.phone)
        && Internal.equals(relationName, o.relationName)
        && Internal.equals(relation, o.relation)
        && Internal.equals(relationPhone, o.relationPhone)
        && Internal.equals(relationIdcard, o.relationIdcard)
        && Internal.equals(userId, o.userId)
        && Internal.equals(insureNO, o.insureNO);
  }

  @Override
  public int hashCode() {
    int result = super.hashCode;
    if (result == 0) {
      result = unknownFields().hashCode();
      result = result * 37 + (kinsId != null ? kinsId.hashCode() : 0);
      result = result * 37 + (kinsName != null ? kinsName.hashCode() : 0);
      result = result * 37 + (scoreADL != null ? scoreADL.hashCode() : 0);
      result = result * 37 + (companyName != null ? companyName.hashCode() : 0);
      result = result * 37 + (addrId != null ? addrId.hashCode() : 0);
      result = result * 37 + (contactName != null ? contactName.hashCode() : 0);
      result = result * 37 + (contactPhone != null ? contactPhone.hashCode() : 0);
      result = result * 37 + (address != null ? address.hashCode() : 0);
      result = result * 37 + (phone != null ? phone.hashCode() : 0);
      result = result * 37 + (relationName != null ? relationName.hashCode() : 0);
      result = result * 37 + (relation != null ? relation.hashCode() : 0);
      result = result * 37 + (relationPhone != null ? relationPhone.hashCode() : 0);
      result = result * 37 + (relationIdcard != null ? relationIdcard.hashCode() : 0);
      result = result * 37 + (userId != null ? userId.hashCode() : 0);
      result = result * 37 + (insureNO != null ? insureNO.hashCode() : 0);
      super.hashCode = result;
    }
    return result;
  }

  @Override
  public String toString() {
    StringBuilder builder = new StringBuilder();
    if (kinsId != null) builder.append(", kinsId=").append(kinsId);
    if (kinsName != null) builder.append(", kinsName=").append(kinsName);
    if (scoreADL != null) builder.append(", scoreADL=").append(scoreADL);
    if (companyName != null) builder.append(", companyName=").append(companyName);
    if (addrId != null) builder.append(", addrId=").append(addrId);
    if (contactName != null) builder.append(", contactName=").append(contactName);
    if (contactPhone != null) builder.append(", contactPhone=").append(contactPhone);
    if (address != null) builder.append(", address=").append(address);
    if (phone != null) builder.append(", phone=").append(phone);
    if (relationName != null) builder.append(", relationName=").append(relationName);
    if (relation != null) builder.append(", relation=").append(relation);
    if (relationPhone != null) builder.append(", relationPhone=").append(relationPhone);
    if (relationIdcard != null) builder.append(", relationIdcard=").append(relationIdcard);
    if (userId != null) builder.append(", userId=").append(userId);
    if (insureNO != null) builder.append(", insureNO=").append(insureNO);
    return builder.replace(0, 2, "GetInsureOrderInfoRsp{").append('}').toString();
  }

  public static final class Builder extends Message.Builder<GetInsureOrderInfoRsp, Builder> {
    public Long kinsId;

    public String kinsName;

    public Integer scoreADL;

    public String companyName;

    public Long addrId;

    public String contactName;

    public String contactPhone;

    public String address;

    public String phone;

    public String relationName;

    public String relation;

    public String relationPhone;

    public String relationIdcard;

    public Long userId;

    public String insureNO;

    public Builder() {
    }

    public Builder kinsId(Long kinsId) {
      this.kinsId = kinsId;
      return this;
    }

    public Builder kinsName(String kinsName) {
      this.kinsName = kinsName;
      return this;
    }

    public Builder scoreADL(Integer scoreADL) {
      this.scoreADL = scoreADL;
      return this;
    }

    public Builder companyName(String companyName) {
      this.companyName = companyName;
      return this;
    }

    public Builder addrId(Long addrId) {
      this.addrId = addrId;
      return this;
    }

    public Builder contactName(String contactName) {
      this.contactName = contactName;
      return this;
    }

    public Builder contactPhone(String contactPhone) {
      this.contactPhone = contactPhone;
      return this;
    }

    public Builder address(String address) {
      this.address = address;
      return this;
    }

    /**
     * 下单人手机号
     */
    public Builder phone(String phone) {
      this.phone = phone;
      return this;
    }

    /**
     * 陪护家属姓名
     */
    public Builder relationName(String relationName) {
      this.relationName = relationName;
      return this;
    }

    /**
     * 陪护家属与被陪护人关系
     */
    public Builder relation(String relation) {
      this.relation = relation;
      return this;
    }

    /**
     * 陪护家属手机号
     */
    public Builder relationPhone(String relationPhone) {
      this.relationPhone = relationPhone;
      return this;
    }

    /**
     * 陪护家属身份证号
     */
    public Builder relationIdcard(String relationIdcard) {
      this.relationIdcard = relationIdcard;
      return this;
    }

    public Builder userId(Long userId) {
      this.userId = userId;
      return this;
    }

    public Builder insureNO(String insureNO) {
      this.insureNO = insureNO;
      return this;
    }

    @Override
    public GetInsureOrderInfoRsp build() {
      return new GetInsureOrderInfoRsp(kinsId, kinsName, scoreADL, companyName, addrId, contactName, contactPhone, address, phone, relationName, relation, relationPhone, relationIdcard, userId, insureNO, super.buildUnknownFields());
    }
  }

  private static final class ProtoAdapter_GetInsureOrderInfoRsp extends ProtoAdapter<GetInsureOrderInfoRsp> {
    ProtoAdapter_GetInsureOrderInfoRsp() {
      super(FieldEncoding.LENGTH_DELIMITED, GetInsureOrderInfoRsp.class);
    }

    @Override
    public int encodedSize(GetInsureOrderInfoRsp value) {
      return (value.kinsId != null ? ProtoAdapter.UINT64.encodedSizeWithTag(1, value.kinsId) : 0)
          + (value.kinsName != null ? ProtoAdapter.STRING.encodedSizeWithTag(2, value.kinsName) : 0)
          + (value.scoreADL != null ? ProtoAdapter.UINT32.encodedSizeWithTag(3, value.scoreADL) : 0)
          + (value.companyName != null ? ProtoAdapter.STRING.encodedSizeWithTag(4, value.companyName) : 0)
          + (value.addrId != null ? ProtoAdapter.UINT64.encodedSizeWithTag(5, value.addrId) : 0)
          + (value.contactName != null ? ProtoAdapter.STRING.encodedSizeWithTag(6, value.contactName) : 0)
          + (value.contactPhone != null ? ProtoAdapter.STRING.encodedSizeWithTag(7, value.contactPhone) : 0)
          + (value.address != null ? ProtoAdapter.STRING.encodedSizeWithTag(8, value.address) : 0)
          + (value.phone != null ? ProtoAdapter.STRING.encodedSizeWithTag(9, value.phone) : 0)
          + (value.relationName != null ? ProtoAdapter.STRING.encodedSizeWithTag(10, value.relationName) : 0)
          + (value.relation != null ? ProtoAdapter.STRING.encodedSizeWithTag(11, value.relation) : 0)
          + (value.relationPhone != null ? ProtoAdapter.STRING.encodedSizeWithTag(12, value.relationPhone) : 0)
          + (value.relationIdcard != null ? ProtoAdapter.STRING.encodedSizeWithTag(13, value.relationIdcard) : 0)
          + (value.userId != null ? ProtoAdapter.UINT64.encodedSizeWithTag(14, value.userId) : 0)
          + (value.insureNO != null ? ProtoAdapter.STRING.encodedSizeWithTag(15, value.insureNO) : 0)
          + value.unknownFields().size();
    }

    @Override
    public void encode(ProtoWriter writer, GetInsureOrderInfoRsp value) throws IOException {
      if (value.kinsId != null) ProtoAdapter.UINT64.encodeWithTag(writer, 1, value.kinsId);
      if (value.kinsName != null) ProtoAdapter.STRING.encodeWithTag(writer, 2, value.kinsName);
      if (value.scoreADL != null) ProtoAdapter.UINT32.encodeWithTag(writer, 3, value.scoreADL);
      if (value.companyName != null) ProtoAdapter.STRING.encodeWithTag(writer, 4, value.companyName);
      if (value.addrId != null) ProtoAdapter.UINT64.encodeWithTag(writer, 5, value.addrId);
      if (value.contactName != null) ProtoAdapter.STRING.encodeWithTag(writer, 6, value.contactName);
      if (value.contactPhone != null) ProtoAdapter.STRING.encodeWithTag(writer, 7, value.contactPhone);
      if (value.address != null) ProtoAdapter.STRING.encodeWithTag(writer, 8, value.address);
      if (value.phone != null) ProtoAdapter.STRING.encodeWithTag(writer, 9, value.phone);
      if (value.relationName != null) ProtoAdapter.STRING.encodeWithTag(writer, 10, value.relationName);
      if (value.relation != null) ProtoAdapter.STRING.encodeWithTag(writer, 11, value.relation);
      if (value.relationPhone != null) ProtoAdapter.STRING.encodeWithTag(writer, 12, value.relationPhone);
      if (value.relationIdcard != null) ProtoAdapter.STRING.encodeWithTag(writer, 13, value.relationIdcard);
      if (value.userId != null) ProtoAdapter.UINT64.encodeWithTag(writer, 14, value.userId);
      if (value.insureNO != null) ProtoAdapter.STRING.encodeWithTag(writer, 15, value.insureNO);
      writer.writeBytes(value.unknownFields());
    }

    @Override
    public GetInsureOrderInfoRsp decode(ProtoReader reader) throws IOException {
      Builder builder = new Builder();
      long token = reader.beginMessage();
      for (int tag; (tag = reader.nextTag()) != -1;) {
        switch (tag) {
          case 1: builder.kinsId(ProtoAdapter.UINT64.decode(reader)); break;
          case 2: builder.kinsName(ProtoAdapter.STRING.decode(reader)); break;
          case 3: builder.scoreADL(ProtoAdapter.UINT32.decode(reader)); break;
          case 4: builder.companyName(ProtoAdapter.STRING.decode(reader)); break;
          case 5: builder.addrId(ProtoAdapter.UINT64.decode(reader)); break;
          case 6: builder.contactName(ProtoAdapter.STRING.decode(reader)); break;
          case 7: builder.contactPhone(ProtoAdapter.STRING.decode(reader)); break;
          case 8: builder.address(ProtoAdapter.STRING.decode(reader)); break;
          case 9: builder.phone(ProtoAdapter.STRING.decode(reader)); break;
          case 10: builder.relationName(ProtoAdapter.STRING.decode(reader)); break;
          case 11: builder.relation(ProtoAdapter.STRING.decode(reader)); break;
          case 12: builder.relationPhone(ProtoAdapter.STRING.decode(reader)); break;
          case 13: builder.relationIdcard(ProtoAdapter.STRING.decode(reader)); break;
          case 14: builder.userId(ProtoAdapter.UINT64.decode(reader)); break;
          case 15: builder.insureNO(ProtoAdapter.STRING.decode(reader)); break;
          default: {
            FieldEncoding fieldEncoding = reader.peekFieldEncoding();
            Object value = fieldEncoding.rawProtoAdapter().decode(reader);
            builder.addUnknownField(tag, fieldEncoding, value);
          }
        }
      }
      reader.endMessage(token);
      return builder.build();
    }

    @Override
    public GetInsureOrderInfoRsp redact(GetInsureOrderInfoRsp value) {
      Builder builder = value.newBuilder();
      builder.clearUnknownFields();
      return builder.build();
    }
  }
}
