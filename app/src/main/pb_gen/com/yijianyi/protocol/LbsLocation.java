// Code generated by Wire protocol buffer compiler, do not edit.
// Source file: Lbs.proto at 7:1
package com.yijianyi.protocol;

import com.squareup.wire.FieldEncoding;
import com.squareup.wire.Message;
import com.squareup.wire.ProtoAdapter;
import com.squareup.wire.ProtoReader;
import com.squareup.wire.ProtoWriter;
import com.squareup.wire.WireField;
import com.squareup.wire.internal.Internal;
import java.io.IOException;
import java.lang.Double;
import java.lang.Integer;
import java.lang.Long;
import java.lang.Object;
import java.lang.Override;
import java.lang.String;
import java.lang.StringBuilder;
import okio.ByteString;

/**
 * ///////////// LBSData结构///////////////////////////
 */
public final class LbsLocation extends Message<LbsLocation, LbsLocation.Builder> {
  public static final ProtoAdapter<LbsLocation> ADAPTER = new ProtoAdapter_LbsLocation();

  private static final long serialVersionUID = 0L;

  public static final Double DEFAULT_LATITUDE = 0.0d;

  public static final Double DEFAULT_LONGITUDE = 0.0d;

  public static final Integer DEFAULT_ALTITUDE = 0;

  public static final Integer DEFAULT_ACCURACY = 0;

  public static final Integer DEFAULT_BEARING = 0;

  public static final Integer DEFAULT_SPEED = 0;

  public static final Long DEFAULT_TIME = 0L;

  public static final Long DEFAULT_LOCATIONID = 0L;

  public static final Integer DEFAULT_ADCODE = 0;

  /**
   * 维度
   */
  @WireField(
      tag = 1,
      adapter = "com.squareup.wire.ProtoAdapter#DOUBLE"
  )
  public final Double latitude;

  /**
   * 经度
   */
  @WireField(
      tag = 2,
      adapter = "com.squareup.wire.ProtoAdapter#DOUBLE"
  )
  public final Double longitude;

  /**
   * 海拔高度
   */
  @WireField(
      tag = 3,
      adapter = "com.squareup.wire.ProtoAdapter#UINT32"
  )
  public final Integer altitude;

  /**
   * 精确
   */
  @WireField(
      tag = 4,
      adapter = "com.squareup.wire.ProtoAdapter#UINT32"
  )
  public final Integer accuracy;

  /**
   * 方向
   */
  @WireField(
      tag = 5,
      adapter = "com.squareup.wire.ProtoAdapter#UINT32"
  )
  public final Integer bearing;

  /**
   * 速度
   */
  @WireField(
      tag = 6,
      adapter = "com.squareup.wire.ProtoAdapter#UINT32"
  )
  public final Integer speed;

  @WireField(
      tag = 7,
      adapter = "com.squareup.wire.ProtoAdapter#UINT64"
  )
  public final Long time;

  /**
   * 位置ID
   */
  @WireField(
      tag = 8,
      adapter = "com.squareup.wire.ProtoAdapter#UINT64"
  )
  public final Long locationId;

  /**
   * adCode
   */
  @WireField(
      tag = 9,
      adapter = "com.squareup.wire.ProtoAdapter#UINT32"
  )
  public final Integer adCode;

  public LbsLocation(Double latitude, Double longitude, Integer altitude, Integer accuracy, Integer bearing, Integer speed, Long time, Long locationId, Integer adCode) {
    this(latitude, longitude, altitude, accuracy, bearing, speed, time, locationId, adCode, ByteString.EMPTY);
  }

  public LbsLocation(Double latitude, Double longitude, Integer altitude, Integer accuracy, Integer bearing, Integer speed, Long time, Long locationId, Integer adCode, ByteString unknownFields) {
    super(ADAPTER, unknownFields);
    this.latitude = latitude;
    this.longitude = longitude;
    this.altitude = altitude;
    this.accuracy = accuracy;
    this.bearing = bearing;
    this.speed = speed;
    this.time = time;
    this.locationId = locationId;
    this.adCode = adCode;
  }

  @Override
  public Builder newBuilder() {
    Builder builder = new Builder();
    builder.latitude = latitude;
    builder.longitude = longitude;
    builder.altitude = altitude;
    builder.accuracy = accuracy;
    builder.bearing = bearing;
    builder.speed = speed;
    builder.time = time;
    builder.locationId = locationId;
    builder.adCode = adCode;
    builder.addUnknownFields(unknownFields());
    return builder;
  }

  @Override
  public boolean equals(Object other) {
    if (other == this) return true;
    if (!(other instanceof LbsLocation)) return false;
    LbsLocation o = (LbsLocation) other;
    return unknownFields().equals(o.unknownFields())
        && Internal.equals(latitude, o.latitude)
        && Internal.equals(longitude, o.longitude)
        && Internal.equals(altitude, o.altitude)
        && Internal.equals(accuracy, o.accuracy)
        && Internal.equals(bearing, o.bearing)
        && Internal.equals(speed, o.speed)
        && Internal.equals(time, o.time)
        && Internal.equals(locationId, o.locationId)
        && Internal.equals(adCode, o.adCode);
  }

  @Override
  public int hashCode() {
    int result = super.hashCode;
    if (result == 0) {
      result = unknownFields().hashCode();
      result = result * 37 + (latitude != null ? latitude.hashCode() : 0);
      result = result * 37 + (longitude != null ? longitude.hashCode() : 0);
      result = result * 37 + (altitude != null ? altitude.hashCode() : 0);
      result = result * 37 + (accuracy != null ? accuracy.hashCode() : 0);
      result = result * 37 + (bearing != null ? bearing.hashCode() : 0);
      result = result * 37 + (speed != null ? speed.hashCode() : 0);
      result = result * 37 + (time != null ? time.hashCode() : 0);
      result = result * 37 + (locationId != null ? locationId.hashCode() : 0);
      result = result * 37 + (adCode != null ? adCode.hashCode() : 0);
      super.hashCode = result;
    }
    return result;
  }

  @Override
  public String toString() {
    StringBuilder builder = new StringBuilder();
    if (latitude != null) builder.append(", latitude=").append(latitude);
    if (longitude != null) builder.append(", longitude=").append(longitude);
    if (altitude != null) builder.append(", altitude=").append(altitude);
    if (accuracy != null) builder.append(", accuracy=").append(accuracy);
    if (bearing != null) builder.append(", bearing=").append(bearing);
    if (speed != null) builder.append(", speed=").append(speed);
    if (time != null) builder.append(", time=").append(time);
    if (locationId != null) builder.append(", locationId=").append(locationId);
    if (adCode != null) builder.append(", adCode=").append(adCode);
    return builder.replace(0, 2, "LbsLocation{").append('}').toString();
  }

  public static final class Builder extends Message.Builder<LbsLocation, Builder> {
    public Double latitude;

    public Double longitude;

    public Integer altitude;

    public Integer accuracy;

    public Integer bearing;

    public Integer speed;

    public Long time;

    public Long locationId;

    public Integer adCode;

    public Builder() {
    }

    /**
     * 维度
     */
    public Builder latitude(Double latitude) {
      this.latitude = latitude;
      return this;
    }

    /**
     * 经度
     */
    public Builder longitude(Double longitude) {
      this.longitude = longitude;
      return this;
    }

    /**
     * 海拔高度
     */
    public Builder altitude(Integer altitude) {
      this.altitude = altitude;
      return this;
    }

    /**
     * 精确
     */
    public Builder accuracy(Integer accuracy) {
      this.accuracy = accuracy;
      return this;
    }

    /**
     * 方向
     */
    public Builder bearing(Integer bearing) {
      this.bearing = bearing;
      return this;
    }

    /**
     * 速度
     */
    public Builder speed(Integer speed) {
      this.speed = speed;
      return this;
    }

    public Builder time(Long time) {
      this.time = time;
      return this;
    }

    /**
     * 位置ID
     */
    public Builder locationId(Long locationId) {
      this.locationId = locationId;
      return this;
    }

    /**
     * adCode
     */
    public Builder adCode(Integer adCode) {
      this.adCode = adCode;
      return this;
    }

    @Override
    public LbsLocation build() {
      return new LbsLocation(latitude, longitude, altitude, accuracy, bearing, speed, time, locationId, adCode, super.buildUnknownFields());
    }
  }

  private static final class ProtoAdapter_LbsLocation extends ProtoAdapter<LbsLocation> {
    ProtoAdapter_LbsLocation() {
      super(FieldEncoding.LENGTH_DELIMITED, LbsLocation.class);
    }

    @Override
    public int encodedSize(LbsLocation value) {
      return (value.latitude != null ? ProtoAdapter.DOUBLE.encodedSizeWithTag(1, value.latitude) : 0)
          + (value.longitude != null ? ProtoAdapter.DOUBLE.encodedSizeWithTag(2, value.longitude) : 0)
          + (value.altitude != null ? ProtoAdapter.UINT32.encodedSizeWithTag(3, value.altitude) : 0)
          + (value.accuracy != null ? ProtoAdapter.UINT32.encodedSizeWithTag(4, value.accuracy) : 0)
          + (value.bearing != null ? ProtoAdapter.UINT32.encodedSizeWithTag(5, value.bearing) : 0)
          + (value.speed != null ? ProtoAdapter.UINT32.encodedSizeWithTag(6, value.speed) : 0)
          + (value.time != null ? ProtoAdapter.UINT64.encodedSizeWithTag(7, value.time) : 0)
          + (value.locationId != null ? ProtoAdapter.UINT64.encodedSizeWithTag(8, value.locationId) : 0)
          + (value.adCode != null ? ProtoAdapter.UINT32.encodedSizeWithTag(9, value.adCode) : 0)
          + value.unknownFields().size();
    }

    @Override
    public void encode(ProtoWriter writer, LbsLocation value) throws IOException {
      if (value.latitude != null) ProtoAdapter.DOUBLE.encodeWithTag(writer, 1, value.latitude);
      if (value.longitude != null) ProtoAdapter.DOUBLE.encodeWithTag(writer, 2, value.longitude);
      if (value.altitude != null) ProtoAdapter.UINT32.encodeWithTag(writer, 3, value.altitude);
      if (value.accuracy != null) ProtoAdapter.UINT32.encodeWithTag(writer, 4, value.accuracy);
      if (value.bearing != null) ProtoAdapter.UINT32.encodeWithTag(writer, 5, value.bearing);
      if (value.speed != null) ProtoAdapter.UINT32.encodeWithTag(writer, 6, value.speed);
      if (value.time != null) ProtoAdapter.UINT64.encodeWithTag(writer, 7, value.time);
      if (value.locationId != null) ProtoAdapter.UINT64.encodeWithTag(writer, 8, value.locationId);
      if (value.adCode != null) ProtoAdapter.UINT32.encodeWithTag(writer, 9, value.adCode);
      writer.writeBytes(value.unknownFields());
    }

    @Override
    public LbsLocation decode(ProtoReader reader) throws IOException {
      Builder builder = new Builder();
      long token = reader.beginMessage();
      for (int tag; (tag = reader.nextTag()) != -1;) {
        switch (tag) {
          case 1: builder.latitude(ProtoAdapter.DOUBLE.decode(reader)); break;
          case 2: builder.longitude(ProtoAdapter.DOUBLE.decode(reader)); break;
          case 3: builder.altitude(ProtoAdapter.UINT32.decode(reader)); break;
          case 4: builder.accuracy(ProtoAdapter.UINT32.decode(reader)); break;
          case 5: builder.bearing(ProtoAdapter.UINT32.decode(reader)); break;
          case 6: builder.speed(ProtoAdapter.UINT32.decode(reader)); break;
          case 7: builder.time(ProtoAdapter.UINT64.decode(reader)); break;
          case 8: builder.locationId(ProtoAdapter.UINT64.decode(reader)); break;
          case 9: builder.adCode(ProtoAdapter.UINT32.decode(reader)); break;
          default: {
            FieldEncoding fieldEncoding = reader.peekFieldEncoding();
            Object value = fieldEncoding.rawProtoAdapter().decode(reader);
            builder.addUnknownField(tag, fieldEncoding, value);
          }
        }
      }
      reader.endMessage(token);
      return builder.build();
    }

    @Override
    public LbsLocation redact(LbsLocation value) {
      Builder builder = value.newBuilder();
      builder.clearUnknownFields();
      return builder.build();
    }
  }
}
