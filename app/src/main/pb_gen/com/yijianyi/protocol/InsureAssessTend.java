// Code generated by Wire protocol buffer compiler, do not edit.
// Source file: AssessModel.proto at 222:1
package com.yijianyi.protocol;

import com.squareup.wire.FieldEncoding;
import com.squareup.wire.Message;
import com.squareup.wire.ProtoAdapter;
import com.squareup.wire.ProtoReader;
import com.squareup.wire.ProtoWriter;
import com.squareup.wire.WireField;
import com.squareup.wire.internal.Internal;
import java.io.IOException;
import java.lang.Integer;
import java.lang.Long;
import java.lang.Object;
import java.lang.Override;
import java.lang.String;
import java.lang.StringBuilder;
import okio.ByteString;

/**
 * 养老意愿评估
 */
public final class InsureAssessTend extends Message<InsureAssessTend, InsureAssessTend.Builder> {
  public static final ProtoAdapter<InsureAssessTend> ADAPTER = new ProtoAdapter_InsureAssessTend();

  private static final long serialVersionUID = 0L;

  public static final Long DEFAULT_ID = 0L;

  public static final Long DEFAULT_RESULTID = 0L;

  public static final Integer DEFAULT_DESIRECHANNEL = 0;

  public static final Integer DEFAULT_TENDTYPE = 0;

  public static final Long DEFAULT_CREATETIME = 0L;

  public static final Long DEFAULT_CREATESTAFFID = 0L;

  public static final String DEFAULT_CREATESTAFFNAME = "";

  @WireField(
      tag = 1,
      adapter = "com.squareup.wire.ProtoAdapter#UINT64"
  )
  public final Long id;

  /**
   * 报告id
   */
  @WireField(
      tag = 2,
      adapter = "com.squareup.wire.ProtoAdapter#UINT64"
  )
  public final Long resultId;

  /**
   * 意愿来源 1-个人意愿 2-法定监护人意愿
   */
  @WireField(
      tag = 3,
      adapter = "com.squareup.wire.ProtoAdapter#UINT32"
  )
  public final Integer desireChannel;

  /**
   * 养老意愿 1-家人照护 2-社区居家养老 3-机构养老 4-暂时社区居家，以后考虑机构养老
   */
  @WireField(
      tag = 4,
      adapter = "com.squareup.wire.ProtoAdapter#UINT32"
  )
  public final Integer tendType;

  /**
   * 本次评估时间
   */
  @WireField(
      tag = 5,
      adapter = "com.squareup.wire.ProtoAdapter#UINT64"
  )
  public final Long createTime;

  /**
   * 操作员工ID
   */
  @WireField(
      tag = 6,
      adapter = "com.squareup.wire.ProtoAdapter#UINT64"
  )
  public final Long createStaffId;

  /**
   * 评估人员
   */
  @WireField(
      tag = 7,
      adapter = "com.squareup.wire.ProtoAdapter#STRING"
  )
  public final String createStaffName;

  public InsureAssessTend(Long id, Long resultId, Integer desireChannel, Integer tendType, Long createTime, Long createStaffId, String createStaffName) {
    this(id, resultId, desireChannel, tendType, createTime, createStaffId, createStaffName, ByteString.EMPTY);
  }

  public InsureAssessTend(Long id, Long resultId, Integer desireChannel, Integer tendType, Long createTime, Long createStaffId, String createStaffName, ByteString unknownFields) {
    super(ADAPTER, unknownFields);
    this.id = id;
    this.resultId = resultId;
    this.desireChannel = desireChannel;
    this.tendType = tendType;
    this.createTime = createTime;
    this.createStaffId = createStaffId;
    this.createStaffName = createStaffName;
  }

  @Override
  public Builder newBuilder() {
    Builder builder = new Builder();
    builder.id = id;
    builder.resultId = resultId;
    builder.desireChannel = desireChannel;
    builder.tendType = tendType;
    builder.createTime = createTime;
    builder.createStaffId = createStaffId;
    builder.createStaffName = createStaffName;
    builder.addUnknownFields(unknownFields());
    return builder;
  }

  @Override
  public boolean equals(Object other) {
    if (other == this) return true;
    if (!(other instanceof InsureAssessTend)) return false;
    InsureAssessTend o = (InsureAssessTend) other;
    return unknownFields().equals(o.unknownFields())
        && Internal.equals(id, o.id)
        && Internal.equals(resultId, o.resultId)
        && Internal.equals(desireChannel, o.desireChannel)
        && Internal.equals(tendType, o.tendType)
        && Internal.equals(createTime, o.createTime)
        && Internal.equals(createStaffId, o.createStaffId)
        && Internal.equals(createStaffName, o.createStaffName);
  }

  @Override
  public int hashCode() {
    int result = super.hashCode;
    if (result == 0) {
      result = unknownFields().hashCode();
      result = result * 37 + (id != null ? id.hashCode() : 0);
      result = result * 37 + (resultId != null ? resultId.hashCode() : 0);
      result = result * 37 + (desireChannel != null ? desireChannel.hashCode() : 0);
      result = result * 37 + (tendType != null ? tendType.hashCode() : 0);
      result = result * 37 + (createTime != null ? createTime.hashCode() : 0);
      result = result * 37 + (createStaffId != null ? createStaffId.hashCode() : 0);
      result = result * 37 + (createStaffName != null ? createStaffName.hashCode() : 0);
      super.hashCode = result;
    }
    return result;
  }

  @Override
  public String toString() {
    StringBuilder builder = new StringBuilder();
    if (id != null) builder.append(", id=").append(id);
    if (resultId != null) builder.append(", resultId=").append(resultId);
    if (desireChannel != null) builder.append(", desireChannel=").append(desireChannel);
    if (tendType != null) builder.append(", tendType=").append(tendType);
    if (createTime != null) builder.append(", createTime=").append(createTime);
    if (createStaffId != null) builder.append(", createStaffId=").append(createStaffId);
    if (createStaffName != null) builder.append(", createStaffName=").append(createStaffName);
    return builder.replace(0, 2, "InsureAssessTend{").append('}').toString();
  }

  public static final class Builder extends Message.Builder<InsureAssessTend, Builder> {
    public Long id;

    public Long resultId;

    public Integer desireChannel;

    public Integer tendType;

    public Long createTime;

    public Long createStaffId;

    public String createStaffName;

    public Builder() {
    }

    public Builder id(Long id) {
      this.id = id;
      return this;
    }

    /**
     * 报告id
     */
    public Builder resultId(Long resultId) {
      this.resultId = resultId;
      return this;
    }

    /**
     * 意愿来源 1-个人意愿 2-法定监护人意愿
     */
    public Builder desireChannel(Integer desireChannel) {
      this.desireChannel = desireChannel;
      return this;
    }

    /**
     * 养老意愿 1-家人照护 2-社区居家养老 3-机构养老 4-暂时社区居家，以后考虑机构养老
     */
    public Builder tendType(Integer tendType) {
      this.tendType = tendType;
      return this;
    }

    /**
     * 本次评估时间
     */
    public Builder createTime(Long createTime) {
      this.createTime = createTime;
      return this;
    }

    /**
     * 操作员工ID
     */
    public Builder createStaffId(Long createStaffId) {
      this.createStaffId = createStaffId;
      return this;
    }

    /**
     * 评估人员
     */
    public Builder createStaffName(String createStaffName) {
      this.createStaffName = createStaffName;
      return this;
    }

    @Override
    public InsureAssessTend build() {
      return new InsureAssessTend(id, resultId, desireChannel, tendType, createTime, createStaffId, createStaffName, super.buildUnknownFields());
    }
  }

  private static final class ProtoAdapter_InsureAssessTend extends ProtoAdapter<InsureAssessTend> {
    ProtoAdapter_InsureAssessTend() {
      super(FieldEncoding.LENGTH_DELIMITED, InsureAssessTend.class);
    }

    @Override
    public int encodedSize(InsureAssessTend value) {
      return (value.id != null ? ProtoAdapter.UINT64.encodedSizeWithTag(1, value.id) : 0)
          + (value.resultId != null ? ProtoAdapter.UINT64.encodedSizeWithTag(2, value.resultId) : 0)
          + (value.desireChannel != null ? ProtoAdapter.UINT32.encodedSizeWithTag(3, value.desireChannel) : 0)
          + (value.tendType != null ? ProtoAdapter.UINT32.encodedSizeWithTag(4, value.tendType) : 0)
          + (value.createTime != null ? ProtoAdapter.UINT64.encodedSizeWithTag(5, value.createTime) : 0)
          + (value.createStaffId != null ? ProtoAdapter.UINT64.encodedSizeWithTag(6, value.createStaffId) : 0)
          + (value.createStaffName != null ? ProtoAdapter.STRING.encodedSizeWithTag(7, value.createStaffName) : 0)
          + value.unknownFields().size();
    }

    @Override
    public void encode(ProtoWriter writer, InsureAssessTend value) throws IOException {
      if (value.id != null) ProtoAdapter.UINT64.encodeWithTag(writer, 1, value.id);
      if (value.resultId != null) ProtoAdapter.UINT64.encodeWithTag(writer, 2, value.resultId);
      if (value.desireChannel != null) ProtoAdapter.UINT32.encodeWithTag(writer, 3, value.desireChannel);
      if (value.tendType != null) ProtoAdapter.UINT32.encodeWithTag(writer, 4, value.tendType);
      if (value.createTime != null) ProtoAdapter.UINT64.encodeWithTag(writer, 5, value.createTime);
      if (value.createStaffId != null) ProtoAdapter.UINT64.encodeWithTag(writer, 6, value.createStaffId);
      if (value.createStaffName != null) ProtoAdapter.STRING.encodeWithTag(writer, 7, value.createStaffName);
      writer.writeBytes(value.unknownFields());
    }

    @Override
    public InsureAssessTend decode(ProtoReader reader) throws IOException {
      Builder builder = new Builder();
      long token = reader.beginMessage();
      for (int tag; (tag = reader.nextTag()) != -1;) {
        switch (tag) {
          case 1: builder.id(ProtoAdapter.UINT64.decode(reader)); break;
          case 2: builder.resultId(ProtoAdapter.UINT64.decode(reader)); break;
          case 3: builder.desireChannel(ProtoAdapter.UINT32.decode(reader)); break;
          case 4: builder.tendType(ProtoAdapter.UINT32.decode(reader)); break;
          case 5: builder.createTime(ProtoAdapter.UINT64.decode(reader)); break;
          case 6: builder.createStaffId(ProtoAdapter.UINT64.decode(reader)); break;
          case 7: builder.createStaffName(ProtoAdapter.STRING.decode(reader)); break;
          default: {
            FieldEncoding fieldEncoding = reader.peekFieldEncoding();
            Object value = fieldEncoding.rawProtoAdapter().decode(reader);
            builder.addUnknownField(tag, fieldEncoding, value);
          }
        }
      }
      reader.endMessage(token);
      return builder.build();
    }

    @Override
    public InsureAssessTend redact(InsureAssessTend value) {
      Builder builder = value.newBuilder();
      builder.clearUnknownFields();
      return builder.build();
    }
  }
}
