// Code generated by Wire protocol buffer compiler, do not edit.
// Source file: AppInterface.proto at 2136:1
package com.yijianyi.protocol;

import com.squareup.wire.FieldEncoding;
import com.squareup.wire.Message;
import com.squareup.wire.ProtoAdapter;
import com.squareup.wire.ProtoReader;
import com.squareup.wire.ProtoWriter;
import com.squareup.wire.WireField;
import com.squareup.wire.internal.Internal;
import java.io.IOException;
import java.lang.Boolean;
import java.lang.Long;
import java.lang.Object;
import java.lang.Override;
import java.lang.String;
import java.lang.StringBuilder;
import okio.ByteString;

/**
 * 获取机构科室信息
 */
public final class GetOrgAndBranchReq extends Message<GetOrgAndBranchReq, GetOrgAndBranchReq.Builder> {
  public static final ProtoAdapter<GetOrgAndBranchReq> ADAPTER = new ProtoAdapter_GetOrgAndBranchReq();

  private static final long serialVersionUID = 0L;

  public static final Boolean DEFAULT_ISALL = false;

  public static final Long DEFAULT_ORGID = 0L;

  /**
   * 是否需要获取所有科室
   */
  @WireField(
      tag = 1,
      adapter = "com.squareup.wire.ProtoAdapter#BOOL"
  )
  public final Boolean isAll;

  /**
   * 机构id
   */
  @WireField(
      tag = 2,
      adapter = "com.squareup.wire.ProtoAdapter#UINT64"
  )
  public final Long orgId;

  public GetOrgAndBranchReq(Boolean isAll, Long orgId) {
    this(isAll, orgId, ByteString.EMPTY);
  }

  public GetOrgAndBranchReq(Boolean isAll, Long orgId, ByteString unknownFields) {
    super(ADAPTER, unknownFields);
    this.isAll = isAll;
    this.orgId = orgId;
  }

  @Override
  public Builder newBuilder() {
    Builder builder = new Builder();
    builder.isAll = isAll;
    builder.orgId = orgId;
    builder.addUnknownFields(unknownFields());
    return builder;
  }

  @Override
  public boolean equals(Object other) {
    if (other == this) return true;
    if (!(other instanceof GetOrgAndBranchReq)) return false;
    GetOrgAndBranchReq o = (GetOrgAndBranchReq) other;
    return unknownFields().equals(o.unknownFields())
        && Internal.equals(isAll, o.isAll)
        && Internal.equals(orgId, o.orgId);
  }

  @Override
  public int hashCode() {
    int result = super.hashCode;
    if (result == 0) {
      result = unknownFields().hashCode();
      result = result * 37 + (isAll != null ? isAll.hashCode() : 0);
      result = result * 37 + (orgId != null ? orgId.hashCode() : 0);
      super.hashCode = result;
    }
    return result;
  }

  @Override
  public String toString() {
    StringBuilder builder = new StringBuilder();
    if (isAll != null) builder.append(", isAll=").append(isAll);
    if (orgId != null) builder.append(", orgId=").append(orgId);
    return builder.replace(0, 2, "GetOrgAndBranchReq{").append('}').toString();
  }

  public static final class Builder extends Message.Builder<GetOrgAndBranchReq, Builder> {
    public Boolean isAll;

    public Long orgId;

    public Builder() {
    }

    /**
     * 是否需要获取所有科室
     */
    public Builder isAll(Boolean isAll) {
      this.isAll = isAll;
      return this;
    }

    /**
     * 机构id
     */
    public Builder orgId(Long orgId) {
      this.orgId = orgId;
      return this;
    }

    @Override
    public GetOrgAndBranchReq build() {
      return new GetOrgAndBranchReq(isAll, orgId, super.buildUnknownFields());
    }
  }

  private static final class ProtoAdapter_GetOrgAndBranchReq extends ProtoAdapter<GetOrgAndBranchReq> {
    ProtoAdapter_GetOrgAndBranchReq() {
      super(FieldEncoding.LENGTH_DELIMITED, GetOrgAndBranchReq.class);
    }

    @Override
    public int encodedSize(GetOrgAndBranchReq value) {
      return (value.isAll != null ? ProtoAdapter.BOOL.encodedSizeWithTag(1, value.isAll) : 0)
          + (value.orgId != null ? ProtoAdapter.UINT64.encodedSizeWithTag(2, value.orgId) : 0)
          + value.unknownFields().size();
    }

    @Override
    public void encode(ProtoWriter writer, GetOrgAndBranchReq value) throws IOException {
      if (value.isAll != null) ProtoAdapter.BOOL.encodeWithTag(writer, 1, value.isAll);
      if (value.orgId != null) ProtoAdapter.UINT64.encodeWithTag(writer, 2, value.orgId);
      writer.writeBytes(value.unknownFields());
    }

    @Override
    public GetOrgAndBranchReq decode(ProtoReader reader) throws IOException {
      Builder builder = new Builder();
      long token = reader.beginMessage();
      for (int tag; (tag = reader.nextTag()) != -1;) {
        switch (tag) {
          case 1: builder.isAll(ProtoAdapter.BOOL.decode(reader)); break;
          case 2: builder.orgId(ProtoAdapter.UINT64.decode(reader)); break;
          default: {
            FieldEncoding fieldEncoding = reader.peekFieldEncoding();
            Object value = fieldEncoding.rawProtoAdapter().decode(reader);
            builder.addUnknownField(tag, fieldEncoding, value);
          }
        }
      }
      reader.endMessage(token);
      return builder.build();
    }

    @Override
    public GetOrgAndBranchReq redact(GetOrgAndBranchReq value) {
      Builder builder = value.newBuilder();
      builder.clearUnknownFields();
      return builder.build();
    }
  }
}
