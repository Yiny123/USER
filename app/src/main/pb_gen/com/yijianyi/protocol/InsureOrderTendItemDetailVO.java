// Code generated by Wire protocol buffer compiler, do not edit.
// Source file: OrderModel.proto at 859:1
package com.yijianyi.protocol;

import com.squareup.wire.FieldEncoding;
import com.squareup.wire.Message;
import com.squareup.wire.ProtoAdapter;
import com.squareup.wire.ProtoReader;
import com.squareup.wire.ProtoWriter;
import com.squareup.wire.WireField;
import com.squareup.wire.internal.Internal;
import java.io.IOException;
import java.lang.Long;
import java.lang.Object;
import java.lang.Override;
import java.lang.String;
import java.lang.StringBuilder;
import java.util.List;
import okio.ByteString;

/**
 * 长护险订单每日明细详情
 */
public final class InsureOrderTendItemDetailVO extends Message<InsureOrderTendItemDetailVO, InsureOrderTendItemDetailVO.Builder> {
  public static final ProtoAdapter<InsureOrderTendItemDetailVO> ADAPTER = new ProtoAdapter_InsureOrderTendItemDetailVO();

  private static final long serialVersionUID = 0L;

  public static final String DEFAULT_TITLE = "";

  public static final Long DEFAULT_DETAILTYPEID = 0L;

  /**
   * 标题
   */
  @WireField(
      tag = 1,
      adapter = "com.squareup.wire.ProtoAdapter#STRING"
  )
  public final String title;

  @WireField(
      tag = 2,
      adapter = "com.yijianyi.protocol.InsureTendItemContentVO#ADAPTER",
      label = WireField.Label.REPEATED
  )
  public final List<InsureTendItemContentVO> vo;

  /**
   * 明细类型id
   */
  @WireField(
      tag = 3,
      adapter = "com.squareup.wire.ProtoAdapter#UINT64"
  )
  public final Long detailTypeId;

  public InsureOrderTendItemDetailVO(String title, List<InsureTendItemContentVO> vo, Long detailTypeId) {
    this(title, vo, detailTypeId, ByteString.EMPTY);
  }

  public InsureOrderTendItemDetailVO(String title, List<InsureTendItemContentVO> vo, Long detailTypeId, ByteString unknownFields) {
    super(ADAPTER, unknownFields);
    this.title = title;
    this.vo = Internal.immutableCopyOf("vo", vo);
    this.detailTypeId = detailTypeId;
  }

  @Override
  public Builder newBuilder() {
    Builder builder = new Builder();
    builder.title = title;
    builder.vo = Internal.copyOf("vo", vo);
    builder.detailTypeId = detailTypeId;
    builder.addUnknownFields(unknownFields());
    return builder;
  }

  @Override
  public boolean equals(Object other) {
    if (other == this) return true;
    if (!(other instanceof InsureOrderTendItemDetailVO)) return false;
    InsureOrderTendItemDetailVO o = (InsureOrderTendItemDetailVO) other;
    return unknownFields().equals(o.unknownFields())
        && Internal.equals(title, o.title)
        && vo.equals(o.vo)
        && Internal.equals(detailTypeId, o.detailTypeId);
  }

  @Override
  public int hashCode() {
    int result = super.hashCode;
    if (result == 0) {
      result = unknownFields().hashCode();
      result = result * 37 + (title != null ? title.hashCode() : 0);
      result = result * 37 + vo.hashCode();
      result = result * 37 + (detailTypeId != null ? detailTypeId.hashCode() : 0);
      super.hashCode = result;
    }
    return result;
  }

  @Override
  public String toString() {
    StringBuilder builder = new StringBuilder();
    if (title != null) builder.append(", title=").append(title);
    if (!vo.isEmpty()) builder.append(", vo=").append(vo);
    if (detailTypeId != null) builder.append(", detailTypeId=").append(detailTypeId);
    return builder.replace(0, 2, "InsureOrderTendItemDetailVO{").append('}').toString();
  }

  public static final class Builder extends Message.Builder<InsureOrderTendItemDetailVO, Builder> {
    public String title;

    public List<InsureTendItemContentVO> vo;

    public Long detailTypeId;

    public Builder() {
      vo = Internal.newMutableList();
    }

    /**
     * 标题
     */
    public Builder title(String title) {
      this.title = title;
      return this;
    }

    public Builder vo(List<InsureTendItemContentVO> vo) {
      Internal.checkElementsNotNull(vo);
      this.vo = vo;
      return this;
    }

    /**
     * 明细类型id
     */
    public Builder detailTypeId(Long detailTypeId) {
      this.detailTypeId = detailTypeId;
      return this;
    }

    @Override
    public InsureOrderTendItemDetailVO build() {
      return new InsureOrderTendItemDetailVO(title, vo, detailTypeId, super.buildUnknownFields());
    }
  }

  private static final class ProtoAdapter_InsureOrderTendItemDetailVO extends ProtoAdapter<InsureOrderTendItemDetailVO> {
    ProtoAdapter_InsureOrderTendItemDetailVO() {
      super(FieldEncoding.LENGTH_DELIMITED, InsureOrderTendItemDetailVO.class);
    }

    @Override
    public int encodedSize(InsureOrderTendItemDetailVO value) {
      return (value.title != null ? ProtoAdapter.STRING.encodedSizeWithTag(1, value.title) : 0)
          + InsureTendItemContentVO.ADAPTER.asRepeated().encodedSizeWithTag(2, value.vo)
          + (value.detailTypeId != null ? ProtoAdapter.UINT64.encodedSizeWithTag(3, value.detailTypeId) : 0)
          + value.unknownFields().size();
    }

    @Override
    public void encode(ProtoWriter writer, InsureOrderTendItemDetailVO value) throws IOException {
      if (value.title != null) ProtoAdapter.STRING.encodeWithTag(writer, 1, value.title);
      InsureTendItemContentVO.ADAPTER.asRepeated().encodeWithTag(writer, 2, value.vo);
      if (value.detailTypeId != null) ProtoAdapter.UINT64.encodeWithTag(writer, 3, value.detailTypeId);
      writer.writeBytes(value.unknownFields());
    }

    @Override
    public InsureOrderTendItemDetailVO decode(ProtoReader reader) throws IOException {
      Builder builder = new Builder();
      long token = reader.beginMessage();
      for (int tag; (tag = reader.nextTag()) != -1;) {
        switch (tag) {
          case 1: builder.title(ProtoAdapter.STRING.decode(reader)); break;
          case 2: builder.vo.add(InsureTendItemContentVO.ADAPTER.decode(reader)); break;
          case 3: builder.detailTypeId(ProtoAdapter.UINT64.decode(reader)); break;
          default: {
            FieldEncoding fieldEncoding = reader.peekFieldEncoding();
            Object value = fieldEncoding.rawProtoAdapter().decode(reader);
            builder.addUnknownField(tag, fieldEncoding, value);
          }
        }
      }
      reader.endMessage(token);
      return builder.build();
    }

    @Override
    public InsureOrderTendItemDetailVO redact(InsureOrderTendItemDetailVO value) {
      Builder builder = value.newBuilder();
      Internal.redactElements(builder.vo, InsureTendItemContentVO.ADAPTER);
      builder.clearUnknownFields();
      return builder.build();
    }
  }
}
