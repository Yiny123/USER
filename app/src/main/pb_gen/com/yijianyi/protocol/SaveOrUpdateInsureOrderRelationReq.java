// Code generated by Wire protocol buffer compiler, do not edit.
// Source file: AppInterface.proto at 1987:1
package com.yijianyi.protocol;

import com.squareup.wire.FieldEncoding;
import com.squareup.wire.Message;
import com.squareup.wire.ProtoAdapter;
import com.squareup.wire.ProtoReader;
import com.squareup.wire.ProtoWriter;
import com.squareup.wire.WireField;
import com.squareup.wire.internal.Internal;
import java.io.IOException;
import java.lang.Object;
import java.lang.Override;
import java.lang.String;
import java.lang.StringBuilder;
import okio.ByteString;

/**
 * 变更陪护家属
 */
public final class SaveOrUpdateInsureOrderRelationReq extends Message<SaveOrUpdateInsureOrderRelationReq, SaveOrUpdateInsureOrderRelationReq.Builder> {
  public static final ProtoAdapter<SaveOrUpdateInsureOrderRelationReq> ADAPTER = new ProtoAdapter_SaveOrUpdateInsureOrderRelationReq();

  private static final long serialVersionUID = 0L;

  public static final String DEFAULT_ORDERID = "";

  public static final String DEFAULT_PHONE = "";

  public static final String DEFAULT_NAME = "";

  public static final String DEFAULT_IDCARD = "";

  public static final String DEFAULT_RELATION = "";

  public static final String DEFAULT_SENDDATE = "";

  /**
   * 订单id
   */
  @WireField(
      tag = 1,
      adapter = "com.squareup.wire.ProtoAdapter#STRING"
  )
  public final String orderId;

  /**
   * 手机号
   */
  @WireField(
      tag = 2,
      adapter = "com.squareup.wire.ProtoAdapter#STRING"
  )
  public final String phone;

  /**
   * 姓名
   */
  @WireField(
      tag = 3,
      adapter = "com.squareup.wire.ProtoAdapter#STRING"
  )
  public final String name;

  /**
   * 身份证
   */
  @WireField(
      tag = 4,
      adapter = "com.squareup.wire.ProtoAdapter#STRING"
  )
  public final String idcard;

  /**
   * 关系
   */
  @WireField(
      tag = 5,
      adapter = "com.squareup.wire.ProtoAdapter#STRING"
  )
  public final String relation;

  /**
   * 资质发放时间
   */
  @WireField(
      tag = 6,
      adapter = "com.squareup.wire.ProtoAdapter#STRING"
  )
  public final String sendDate;

  public SaveOrUpdateInsureOrderRelationReq(String orderId, String phone, String name, String idcard, String relation, String sendDate) {
    this(orderId, phone, name, idcard, relation, sendDate, ByteString.EMPTY);
  }

  public SaveOrUpdateInsureOrderRelationReq(String orderId, String phone, String name, String idcard, String relation, String sendDate, ByteString unknownFields) {
    super(ADAPTER, unknownFields);
    this.orderId = orderId;
    this.phone = phone;
    this.name = name;
    this.idcard = idcard;
    this.relation = relation;
    this.sendDate = sendDate;
  }

  @Override
  public Builder newBuilder() {
    Builder builder = new Builder();
    builder.orderId = orderId;
    builder.phone = phone;
    builder.name = name;
    builder.idcard = idcard;
    builder.relation = relation;
    builder.sendDate = sendDate;
    builder.addUnknownFields(unknownFields());
    return builder;
  }

  @Override
  public boolean equals(Object other) {
    if (other == this) return true;
    if (!(other instanceof SaveOrUpdateInsureOrderRelationReq)) return false;
    SaveOrUpdateInsureOrderRelationReq o = (SaveOrUpdateInsureOrderRelationReq) other;
    return unknownFields().equals(o.unknownFields())
        && Internal.equals(orderId, o.orderId)
        && Internal.equals(phone, o.phone)
        && Internal.equals(name, o.name)
        && Internal.equals(idcard, o.idcard)
        && Internal.equals(relation, o.relation)
        && Internal.equals(sendDate, o.sendDate);
  }

  @Override
  public int hashCode() {
    int result = super.hashCode;
    if (result == 0) {
      result = unknownFields().hashCode();
      result = result * 37 + (orderId != null ? orderId.hashCode() : 0);
      result = result * 37 + (phone != null ? phone.hashCode() : 0);
      result = result * 37 + (name != null ? name.hashCode() : 0);
      result = result * 37 + (idcard != null ? idcard.hashCode() : 0);
      result = result * 37 + (relation != null ? relation.hashCode() : 0);
      result = result * 37 + (sendDate != null ? sendDate.hashCode() : 0);
      super.hashCode = result;
    }
    return result;
  }

  @Override
  public String toString() {
    StringBuilder builder = new StringBuilder();
    if (orderId != null) builder.append(", orderId=").append(orderId);
    if (phone != null) builder.append(", phone=").append(phone);
    if (name != null) builder.append(", name=").append(name);
    if (idcard != null) builder.append(", idcard=").append(idcard);
    if (relation != null) builder.append(", relation=").append(relation);
    if (sendDate != null) builder.append(", sendDate=").append(sendDate);
    return builder.replace(0, 2, "SaveOrUpdateInsureOrderRelationReq{").append('}').toString();
  }

  public static final class Builder extends Message.Builder<SaveOrUpdateInsureOrderRelationReq, Builder> {
    public String orderId;

    public String phone;

    public String name;

    public String idcard;

    public String relation;

    public String sendDate;

    public Builder() {
    }

    /**
     * 订单id
     */
    public Builder orderId(String orderId) {
      this.orderId = orderId;
      return this;
    }

    /**
     * 手机号
     */
    public Builder phone(String phone) {
      this.phone = phone;
      return this;
    }

    /**
     * 姓名
     */
    public Builder name(String name) {
      this.name = name;
      return this;
    }

    /**
     * 身份证
     */
    public Builder idcard(String idcard) {
      this.idcard = idcard;
      return this;
    }

    /**
     * 关系
     */
    public Builder relation(String relation) {
      this.relation = relation;
      return this;
    }

    /**
     * 资质发放时间
     */
    public Builder sendDate(String sendDate) {
      this.sendDate = sendDate;
      return this;
    }

    @Override
    public SaveOrUpdateInsureOrderRelationReq build() {
      return new SaveOrUpdateInsureOrderRelationReq(orderId, phone, name, idcard, relation, sendDate, super.buildUnknownFields());
    }
  }

  private static final class ProtoAdapter_SaveOrUpdateInsureOrderRelationReq extends ProtoAdapter<SaveOrUpdateInsureOrderRelationReq> {
    ProtoAdapter_SaveOrUpdateInsureOrderRelationReq() {
      super(FieldEncoding.LENGTH_DELIMITED, SaveOrUpdateInsureOrderRelationReq.class);
    }

    @Override
    public int encodedSize(SaveOrUpdateInsureOrderRelationReq value) {
      return (value.orderId != null ? ProtoAdapter.STRING.encodedSizeWithTag(1, value.orderId) : 0)
          + (value.phone != null ? ProtoAdapter.STRING.encodedSizeWithTag(2, value.phone) : 0)
          + (value.name != null ? ProtoAdapter.STRING.encodedSizeWithTag(3, value.name) : 0)
          + (value.idcard != null ? ProtoAdapter.STRING.encodedSizeWithTag(4, value.idcard) : 0)
          + (value.relation != null ? ProtoAdapter.STRING.encodedSizeWithTag(5, value.relation) : 0)
          + (value.sendDate != null ? ProtoAdapter.STRING.encodedSizeWithTag(6, value.sendDate) : 0)
          + value.unknownFields().size();
    }

    @Override
    public void encode(ProtoWriter writer, SaveOrUpdateInsureOrderRelationReq value) throws IOException {
      if (value.orderId != null) ProtoAdapter.STRING.encodeWithTag(writer, 1, value.orderId);
      if (value.phone != null) ProtoAdapter.STRING.encodeWithTag(writer, 2, value.phone);
      if (value.name != null) ProtoAdapter.STRING.encodeWithTag(writer, 3, value.name);
      if (value.idcard != null) ProtoAdapter.STRING.encodeWithTag(writer, 4, value.idcard);
      if (value.relation != null) ProtoAdapter.STRING.encodeWithTag(writer, 5, value.relation);
      if (value.sendDate != null) ProtoAdapter.STRING.encodeWithTag(writer, 6, value.sendDate);
      writer.writeBytes(value.unknownFields());
    }

    @Override
    public SaveOrUpdateInsureOrderRelationReq decode(ProtoReader reader) throws IOException {
      Builder builder = new Builder();
      long token = reader.beginMessage();
      for (int tag; (tag = reader.nextTag()) != -1;) {
        switch (tag) {
          case 1: builder.orderId(ProtoAdapter.STRING.decode(reader)); break;
          case 2: builder.phone(ProtoAdapter.STRING.decode(reader)); break;
          case 3: builder.name(ProtoAdapter.STRING.decode(reader)); break;
          case 4: builder.idcard(ProtoAdapter.STRING.decode(reader)); break;
          case 5: builder.relation(ProtoAdapter.STRING.decode(reader)); break;
          case 6: builder.sendDate(ProtoAdapter.STRING.decode(reader)); break;
          default: {
            FieldEncoding fieldEncoding = reader.peekFieldEncoding();
            Object value = fieldEncoding.rawProtoAdapter().decode(reader);
            builder.addUnknownField(tag, fieldEncoding, value);
          }
        }
      }
      reader.endMessage(token);
      return builder.build();
    }

    @Override
    public SaveOrUpdateInsureOrderRelationReq redact(SaveOrUpdateInsureOrderRelationReq value) {
      Builder builder = value.newBuilder();
      builder.clearUnknownFields();
      return builder.build();
    }
  }
}
