// Code generated by Wire protocol buffer compiler, do not edit.
// Source file: AppInterface.proto at 1093:1
package com.yijianyi.protocol;

import com.squareup.wire.FieldEncoding;
import com.squareup.wire.Message;
import com.squareup.wire.ProtoAdapter;
import com.squareup.wire.ProtoReader;
import com.squareup.wire.ProtoWriter;
import com.squareup.wire.WireField;
import com.squareup.wire.internal.Internal;
import java.io.IOException;
import java.lang.Integer;
import java.lang.Object;
import java.lang.Override;
import java.lang.String;
import java.lang.StringBuilder;
import okio.ByteString;

public final class UpdateInsureOrderReq extends Message<UpdateInsureOrderReq, UpdateInsureOrderReq.Builder> {
  public static final ProtoAdapter<UpdateInsureOrderReq> ADAPTER = new ProtoAdapter_UpdateInsureOrderReq();

  private static final long serialVersionUID = 0L;

  public static final String DEFAULT_INSURENO = "";

  public static final String DEFAULT_ORDERTIME = "";

  public static final Integer DEFAULT_ORDERSTATUS = 0;

  /**
   * 申请单号
   */
  @WireField(
      tag = 1,
      adapter = "com.squareup.wire.ProtoAdapter#STRING"
  )
  public final String insureNo;

  /**
   * 上门下单时间yyyy-MM-dd hh:mm
   */
  @WireField(
      tag = 2,
      adapter = "com.squareup.wire.ProtoAdapter#STRING"
  )
  public final String orderTime;

  /**
   * 1-暂不下单（设置下单时间时不需要设置此值）
   */
  @WireField(
      tag = 3,
      adapter = "com.squareup.wire.ProtoAdapter#UINT32"
  )
  public final Integer orderStatus;

  public UpdateInsureOrderReq(String insureNo, String orderTime, Integer orderStatus) {
    this(insureNo, orderTime, orderStatus, ByteString.EMPTY);
  }

  public UpdateInsureOrderReq(String insureNo, String orderTime, Integer orderStatus, ByteString unknownFields) {
    super(ADAPTER, unknownFields);
    this.insureNo = insureNo;
    this.orderTime = orderTime;
    this.orderStatus = orderStatus;
  }

  @Override
  public Builder newBuilder() {
    Builder builder = new Builder();
    builder.insureNo = insureNo;
    builder.orderTime = orderTime;
    builder.orderStatus = orderStatus;
    builder.addUnknownFields(unknownFields());
    return builder;
  }

  @Override
  public boolean equals(Object other) {
    if (other == this) return true;
    if (!(other instanceof UpdateInsureOrderReq)) return false;
    UpdateInsureOrderReq o = (UpdateInsureOrderReq) other;
    return unknownFields().equals(o.unknownFields())
        && Internal.equals(insureNo, o.insureNo)
        && Internal.equals(orderTime, o.orderTime)
        && Internal.equals(orderStatus, o.orderStatus);
  }

  @Override
  public int hashCode() {
    int result = super.hashCode;
    if (result == 0) {
      result = unknownFields().hashCode();
      result = result * 37 + (insureNo != null ? insureNo.hashCode() : 0);
      result = result * 37 + (orderTime != null ? orderTime.hashCode() : 0);
      result = result * 37 + (orderStatus != null ? orderStatus.hashCode() : 0);
      super.hashCode = result;
    }
    return result;
  }

  @Override
  public String toString() {
    StringBuilder builder = new StringBuilder();
    if (insureNo != null) builder.append(", insureNo=").append(insureNo);
    if (orderTime != null) builder.append(", orderTime=").append(orderTime);
    if (orderStatus != null) builder.append(", orderStatus=").append(orderStatus);
    return builder.replace(0, 2, "UpdateInsureOrderReq{").append('}').toString();
  }

  public static final class Builder extends Message.Builder<UpdateInsureOrderReq, Builder> {
    public String insureNo;

    public String orderTime;

    public Integer orderStatus;

    public Builder() {
    }

    /**
     * 申请单号
     */
    public Builder insureNo(String insureNo) {
      this.insureNo = insureNo;
      return this;
    }

    /**
     * 上门下单时间yyyy-MM-dd hh:mm
     */
    public Builder orderTime(String orderTime) {
      this.orderTime = orderTime;
      return this;
    }

    /**
     * 1-暂不下单（设置下单时间时不需要设置此值）
     */
    public Builder orderStatus(Integer orderStatus) {
      this.orderStatus = orderStatus;
      return this;
    }

    @Override
    public UpdateInsureOrderReq build() {
      return new UpdateInsureOrderReq(insureNo, orderTime, orderStatus, super.buildUnknownFields());
    }
  }

  private static final class ProtoAdapter_UpdateInsureOrderReq extends ProtoAdapter<UpdateInsureOrderReq> {
    ProtoAdapter_UpdateInsureOrderReq() {
      super(FieldEncoding.LENGTH_DELIMITED, UpdateInsureOrderReq.class);
    }

    @Override
    public int encodedSize(UpdateInsureOrderReq value) {
      return (value.insureNo != null ? ProtoAdapter.STRING.encodedSizeWithTag(1, value.insureNo) : 0)
          + (value.orderTime != null ? ProtoAdapter.STRING.encodedSizeWithTag(2, value.orderTime) : 0)
          + (value.orderStatus != null ? ProtoAdapter.UINT32.encodedSizeWithTag(3, value.orderStatus) : 0)
          + value.unknownFields().size();
    }

    @Override
    public void encode(ProtoWriter writer, UpdateInsureOrderReq value) throws IOException {
      if (value.insureNo != null) ProtoAdapter.STRING.encodeWithTag(writer, 1, value.insureNo);
      if (value.orderTime != null) ProtoAdapter.STRING.encodeWithTag(writer, 2, value.orderTime);
      if (value.orderStatus != null) ProtoAdapter.UINT32.encodeWithTag(writer, 3, value.orderStatus);
      writer.writeBytes(value.unknownFields());
    }

    @Override
    public UpdateInsureOrderReq decode(ProtoReader reader) throws IOException {
      Builder builder = new Builder();
      long token = reader.beginMessage();
      for (int tag; (tag = reader.nextTag()) != -1;) {
        switch (tag) {
          case 1: builder.insureNo(ProtoAdapter.STRING.decode(reader)); break;
          case 2: builder.orderTime(ProtoAdapter.STRING.decode(reader)); break;
          case 3: builder.orderStatus(ProtoAdapter.UINT32.decode(reader)); break;
          default: {
            FieldEncoding fieldEncoding = reader.peekFieldEncoding();
            Object value = fieldEncoding.rawProtoAdapter().decode(reader);
            builder.addUnknownField(tag, fieldEncoding, value);
          }
        }
      }
      reader.endMessage(token);
      return builder.build();
    }

    @Override
    public UpdateInsureOrderReq redact(UpdateInsureOrderReq value) {
      Builder builder = value.newBuilder();
      builder.clearUnknownFields();
      return builder.build();
    }
  }
}
