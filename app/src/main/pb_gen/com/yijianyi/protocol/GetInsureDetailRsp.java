// Code generated by Wire protocol buffer compiler, do not edit.
// Source file: AppInterface.proto at 1275:1
package com.yijianyi.protocol;

import com.squareup.wire.FieldEncoding;
import com.squareup.wire.Message;
import com.squareup.wire.ProtoAdapter;
import com.squareup.wire.ProtoReader;
import com.squareup.wire.ProtoWriter;
import com.squareup.wire.WireField;
import com.squareup.wire.internal.Internal;
import java.io.IOException;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.Long;
import java.lang.Object;
import java.lang.Override;
import java.lang.String;
import java.lang.StringBuilder;
import java.util.List;
import okio.ByteString;

public final class GetInsureDetailRsp extends Message<GetInsureDetailRsp, GetInsureDetailRsp.Builder> {
  public static final ProtoAdapter<GetInsureDetailRsp> ADAPTER = new ProtoAdapter_GetInsureDetailRsp();

  private static final long serialVersionUID = 0L;

  public static final Long DEFAULT_SCOREADL = 0L;

  public static final String DEFAULT_ASSESSTIMESTR = "";

  public static final String DEFAULT_KFTIMESTR = "";

  public static final String DEFAULT_MANAGERASSESSTIMESTR = "";

  public static final String DEFAULT_LOSEAPPOINTTIMESTR = "";

  public static final String DEFAULT_KFNOPASSREMARK = "";

  public static final String DEFAULT_APPOINTTIMESTR = "";

  public static final String DEFAULT_LOSENOPASSREMARK = "";

  public static final Boolean DEFAULT_ISMANAGERSHOW = false;

  public static final String DEFAULT_APTITUDEENDTIMESTR = "";

  public static final Boolean DEFAULT_ASSESSSTATUS = false;

  public static final Boolean DEFAULT_KFSTATUS = false;

  public static final Boolean DEFAULT_LOSEAPPOINTSTATUS = false;

  public static final Boolean DEFAULT_HSOPERATIONSTATUS = false;

  public static final Boolean DEFAULT_NURSELEADERSTATUS = false;

  public static final Integer DEFAULT_ASSIGNSTATUS = 0;

  public static final String DEFAULT_LOSEAPPOINTASSESSTIMESTR = "";

  public static final Boolean DEFAULT_ISORDER = false;

  /**
   * 长护险信息
   */
  @WireField(
      tag = 1,
      adapter = "com.yijianyi.protocol.InsureNOModel#ADAPTER"
  )
  public final InsureNOModel insureNO;

  /**
   * 操作记录
   */
  @WireField(
      tag = 2,
      adapter = "com.yijianyi.protocol.InsureNODetailVO#ADAPTER",
      label = WireField.Label.REPEATED
  )
  public final List<InsureNODetailVO> detailList;

  /**
   * 参保人信息
   */
  @WireField(
      tag = 3,
      adapter = "com.yijianyi.protocol.KinsfolkVO#ADAPTER"
  )
  public final KinsfolkVO kinsfolk;

  /**
   * 用户自评
   */
  @WireField(
      tag = 4,
      adapter = "com.squareup.wire.ProtoAdapter#UINT64"
  )
  public final Long scoreADL;

  /**
   * 护士初审时间
   */
  @WireField(
      tag = 5,
      adapter = "com.squareup.wire.ProtoAdapter#STRING"
  )
  public final String assessTimeStr;

  /**
   * 客服评估时间
   */
  @WireField(
      tag = 6,
      adapter = "com.squareup.wire.ProtoAdapter#STRING"
  )
  public final String kfTimeStr;

  /**
   * 健康经理评估时间
   */
  @WireField(
      tag = 7,
      adapter = "com.squareup.wire.ProtoAdapter#STRING"
  )
  public final String managerAssessTimeStr;

  /**
   * 专家复审时间
   */
  @WireField(
      tag = 8,
      adapter = "com.squareup.wire.ProtoAdapter#STRING"
  )
  public final String loseAppointTimeStr;

  /**
   * 客服不通过备注
   */
  @WireField(
      tag = 9,
      adapter = "com.squareup.wire.ProtoAdapter#STRING"
  )
  public final String kfNoPassRemark;

  /**
   * 预估上门时间
   */
  @WireField(
      tag = 10,
      adapter = "com.squareup.wire.ProtoAdapter#STRING"
  )
  public final String appointTimeStr;

  /**
   * 初审不通过备注
   */
  @WireField(
      tag = 11,
      adapter = "com.squareup.wire.ProtoAdapter#STRING"
  )
  public final String loseNoPassRemark;

  /**
   * 健康经理评估是否显示
   */
  @WireField(
      tag = 12,
      adapter = "com.squareup.wire.ProtoAdapter#BOOL"
  )
  public final Boolean isManagerShow;

  /**
   * 资质有效时间
   */
  @WireField(
      tag = 13,
      adapter = "com.squareup.wire.ProtoAdapter#STRING"
  )
  public final String aptitudeEndTimeStr;

  /**
   * 护士初审状态
   */
  @WireField(
      tag = 14,
      adapter = "com.squareup.wire.ProtoAdapter#BOOL"
  )
  public final Boolean assessStatus;

  /**
   * 客服评估状态
   */
  @WireField(
      tag = 15,
      adapter = "com.squareup.wire.ProtoAdapter#BOOL"
  )
  public final Boolean kfStatus;

  /**
   * 专家复审状态
   */
  @WireField(
      tag = 16,
      adapter = "com.squareup.wire.ProtoAdapter#BOOL"
  )
  public final Boolean loseAppointStatus;

  /**
   * 护士是否能操作
   */
  @WireField(
      tag = 17,
      adapter = "com.squareup.wire.ProtoAdapter#BOOL"
  )
  public final Boolean hsOperationStatus;

  /**
   * 护士长是否能指派变更护士权限
   */
  @WireField(
      tag = 18,
      adapter = "com.squareup.wire.ProtoAdapter#BOOL"
  )
  public final Boolean nurseLeaderStatus;

  /**
   * 指派状态 0-未指派 1-已指派
   */
  @WireField(
      tag = 19,
      adapter = "com.squareup.wire.ProtoAdapter#UINT32"
  )
  public final Integer assignStatus;

  /**
   * 复审上门时间
   */
  @WireField(
      tag = 20,
      adapter = "com.squareup.wire.ProtoAdapter#STRING"
  )
  public final String loseAppointAssessTimeStr;

  /**
   * 病例、诊断等图片
   */
  @WireField(
      tag = 21,
      adapter = "com.yijianyi.protocol.picUrlId#ADAPTER",
      label = WireField.Label.REPEATED
  )
  public final List<picUrlId> caseDiagnosePicUrlId;

  /**
   * 中重度智能障碍照片 如多张，以逗号隔开
   */
  @WireField(
      tag = 22,
      adapter = "com.yijianyi.protocol.picUrlId#ADAPTER",
      label = WireField.Label.REPEATED
  )
  public final List<picUrlId> dysgnosiaePicUrlId;

  /**
   * 是否可以预约服务下单
   */
  @WireField(
      tag = 23,
      adapter = "com.squareup.wire.ProtoAdapter#BOOL"
  )
  public final Boolean isOrder;

  public GetInsureDetailRsp(InsureNOModel insureNO, List<InsureNODetailVO> detailList, KinsfolkVO kinsfolk, Long scoreADL, String assessTimeStr, String kfTimeStr, String managerAssessTimeStr, String loseAppointTimeStr, String kfNoPassRemark, String appointTimeStr, String loseNoPassRemark, Boolean isManagerShow, String aptitudeEndTimeStr, Boolean assessStatus, Boolean kfStatus, Boolean loseAppointStatus, Boolean hsOperationStatus, Boolean nurseLeaderStatus, Integer assignStatus, String loseAppointAssessTimeStr, List<picUrlId> caseDiagnosePicUrlId, List<picUrlId> dysgnosiaePicUrlId, Boolean isOrder) {
    this(insureNO, detailList, kinsfolk, scoreADL, assessTimeStr, kfTimeStr, managerAssessTimeStr, loseAppointTimeStr, kfNoPassRemark, appointTimeStr, loseNoPassRemark, isManagerShow, aptitudeEndTimeStr, assessStatus, kfStatus, loseAppointStatus, hsOperationStatus, nurseLeaderStatus, assignStatus, loseAppointAssessTimeStr, caseDiagnosePicUrlId, dysgnosiaePicUrlId, isOrder, ByteString.EMPTY);
  }

  public GetInsureDetailRsp(InsureNOModel insureNO, List<InsureNODetailVO> detailList, KinsfolkVO kinsfolk, Long scoreADL, String assessTimeStr, String kfTimeStr, String managerAssessTimeStr, String loseAppointTimeStr, String kfNoPassRemark, String appointTimeStr, String loseNoPassRemark, Boolean isManagerShow, String aptitudeEndTimeStr, Boolean assessStatus, Boolean kfStatus, Boolean loseAppointStatus, Boolean hsOperationStatus, Boolean nurseLeaderStatus, Integer assignStatus, String loseAppointAssessTimeStr, List<picUrlId> caseDiagnosePicUrlId, List<picUrlId> dysgnosiaePicUrlId, Boolean isOrder, ByteString unknownFields) {
    super(ADAPTER, unknownFields);
    this.insureNO = insureNO;
    this.detailList = Internal.immutableCopyOf("detailList", detailList);
    this.kinsfolk = kinsfolk;
    this.scoreADL = scoreADL;
    this.assessTimeStr = assessTimeStr;
    this.kfTimeStr = kfTimeStr;
    this.managerAssessTimeStr = managerAssessTimeStr;
    this.loseAppointTimeStr = loseAppointTimeStr;
    this.kfNoPassRemark = kfNoPassRemark;
    this.appointTimeStr = appointTimeStr;
    this.loseNoPassRemark = loseNoPassRemark;
    this.isManagerShow = isManagerShow;
    this.aptitudeEndTimeStr = aptitudeEndTimeStr;
    this.assessStatus = assessStatus;
    this.kfStatus = kfStatus;
    this.loseAppointStatus = loseAppointStatus;
    this.hsOperationStatus = hsOperationStatus;
    this.nurseLeaderStatus = nurseLeaderStatus;
    this.assignStatus = assignStatus;
    this.loseAppointAssessTimeStr = loseAppointAssessTimeStr;
    this.caseDiagnosePicUrlId = Internal.immutableCopyOf("caseDiagnosePicUrlId", caseDiagnosePicUrlId);
    this.dysgnosiaePicUrlId = Internal.immutableCopyOf("dysgnosiaePicUrlId", dysgnosiaePicUrlId);
    this.isOrder = isOrder;
  }

  @Override
  public Builder newBuilder() {
    Builder builder = new Builder();
    builder.insureNO = insureNO;
    builder.detailList = Internal.copyOf("detailList", detailList);
    builder.kinsfolk = kinsfolk;
    builder.scoreADL = scoreADL;
    builder.assessTimeStr = assessTimeStr;
    builder.kfTimeStr = kfTimeStr;
    builder.managerAssessTimeStr = managerAssessTimeStr;
    builder.loseAppointTimeStr = loseAppointTimeStr;
    builder.kfNoPassRemark = kfNoPassRemark;
    builder.appointTimeStr = appointTimeStr;
    builder.loseNoPassRemark = loseNoPassRemark;
    builder.isManagerShow = isManagerShow;
    builder.aptitudeEndTimeStr = aptitudeEndTimeStr;
    builder.assessStatus = assessStatus;
    builder.kfStatus = kfStatus;
    builder.loseAppointStatus = loseAppointStatus;
    builder.hsOperationStatus = hsOperationStatus;
    builder.nurseLeaderStatus = nurseLeaderStatus;
    builder.assignStatus = assignStatus;
    builder.loseAppointAssessTimeStr = loseAppointAssessTimeStr;
    builder.caseDiagnosePicUrlId = Internal.copyOf("caseDiagnosePicUrlId", caseDiagnosePicUrlId);
    builder.dysgnosiaePicUrlId = Internal.copyOf("dysgnosiaePicUrlId", dysgnosiaePicUrlId);
    builder.isOrder = isOrder;
    builder.addUnknownFields(unknownFields());
    return builder;
  }

  @Override
  public boolean equals(Object other) {
    if (other == this) return true;
    if (!(other instanceof GetInsureDetailRsp)) return false;
    GetInsureDetailRsp o = (GetInsureDetailRsp) other;
    return unknownFields().equals(o.unknownFields())
        && Internal.equals(insureNO, o.insureNO)
        && detailList.equals(o.detailList)
        && Internal.equals(kinsfolk, o.kinsfolk)
        && Internal.equals(scoreADL, o.scoreADL)
        && Internal.equals(assessTimeStr, o.assessTimeStr)
        && Internal.equals(kfTimeStr, o.kfTimeStr)
        && Internal.equals(managerAssessTimeStr, o.managerAssessTimeStr)
        && Internal.equals(loseAppointTimeStr, o.loseAppointTimeStr)
        && Internal.equals(kfNoPassRemark, o.kfNoPassRemark)
        && Internal.equals(appointTimeStr, o.appointTimeStr)
        && Internal.equals(loseNoPassRemark, o.loseNoPassRemark)
        && Internal.equals(isManagerShow, o.isManagerShow)
        && Internal.equals(aptitudeEndTimeStr, o.aptitudeEndTimeStr)
        && Internal.equals(assessStatus, o.assessStatus)
        && Internal.equals(kfStatus, o.kfStatus)
        && Internal.equals(loseAppointStatus, o.loseAppointStatus)
        && Internal.equals(hsOperationStatus, o.hsOperationStatus)
        && Internal.equals(nurseLeaderStatus, o.nurseLeaderStatus)
        && Internal.equals(assignStatus, o.assignStatus)
        && Internal.equals(loseAppointAssessTimeStr, o.loseAppointAssessTimeStr)
        && caseDiagnosePicUrlId.equals(o.caseDiagnosePicUrlId)
        && dysgnosiaePicUrlId.equals(o.dysgnosiaePicUrlId)
        && Internal.equals(isOrder, o.isOrder);
  }

  @Override
  public int hashCode() {
    int result = super.hashCode;
    if (result == 0) {
      result = unknownFields().hashCode();
      result = result * 37 + (insureNO != null ? insureNO.hashCode() : 0);
      result = result * 37 + detailList.hashCode();
      result = result * 37 + (kinsfolk != null ? kinsfolk.hashCode() : 0);
      result = result * 37 + (scoreADL != null ? scoreADL.hashCode() : 0);
      result = result * 37 + (assessTimeStr != null ? assessTimeStr.hashCode() : 0);
      result = result * 37 + (kfTimeStr != null ? kfTimeStr.hashCode() : 0);
      result = result * 37 + (managerAssessTimeStr != null ? managerAssessTimeStr.hashCode() : 0);
      result = result * 37 + (loseAppointTimeStr != null ? loseAppointTimeStr.hashCode() : 0);
      result = result * 37 + (kfNoPassRemark != null ? kfNoPassRemark.hashCode() : 0);
      result = result * 37 + (appointTimeStr != null ? appointTimeStr.hashCode() : 0);
      result = result * 37 + (loseNoPassRemark != null ? loseNoPassRemark.hashCode() : 0);
      result = result * 37 + (isManagerShow != null ? isManagerShow.hashCode() : 0);
      result = result * 37 + (aptitudeEndTimeStr != null ? aptitudeEndTimeStr.hashCode() : 0);
      result = result * 37 + (assessStatus != null ? assessStatus.hashCode() : 0);
      result = result * 37 + (kfStatus != null ? kfStatus.hashCode() : 0);
      result = result * 37 + (loseAppointStatus != null ? loseAppointStatus.hashCode() : 0);
      result = result * 37 + (hsOperationStatus != null ? hsOperationStatus.hashCode() : 0);
      result = result * 37 + (nurseLeaderStatus != null ? nurseLeaderStatus.hashCode() : 0);
      result = result * 37 + (assignStatus != null ? assignStatus.hashCode() : 0);
      result = result * 37 + (loseAppointAssessTimeStr != null ? loseAppointAssessTimeStr.hashCode() : 0);
      result = result * 37 + caseDiagnosePicUrlId.hashCode();
      result = result * 37 + dysgnosiaePicUrlId.hashCode();
      result = result * 37 + (isOrder != null ? isOrder.hashCode() : 0);
      super.hashCode = result;
    }
    return result;
  }

  @Override
  public String toString() {
    StringBuilder builder = new StringBuilder();
    if (insureNO != null) builder.append(", insureNO=").append(insureNO);
    if (!detailList.isEmpty()) builder.append(", detailList=").append(detailList);
    if (kinsfolk != null) builder.append(", kinsfolk=").append(kinsfolk);
    if (scoreADL != null) builder.append(", scoreADL=").append(scoreADL);
    if (assessTimeStr != null) builder.append(", assessTimeStr=").append(assessTimeStr);
    if (kfTimeStr != null) builder.append(", kfTimeStr=").append(kfTimeStr);
    if (managerAssessTimeStr != null) builder.append(", managerAssessTimeStr=").append(managerAssessTimeStr);
    if (loseAppointTimeStr != null) builder.append(", loseAppointTimeStr=").append(loseAppointTimeStr);
    if (kfNoPassRemark != null) builder.append(", kfNoPassRemark=").append(kfNoPassRemark);
    if (appointTimeStr != null) builder.append(", appointTimeStr=").append(appointTimeStr);
    if (loseNoPassRemark != null) builder.append(", loseNoPassRemark=").append(loseNoPassRemark);
    if (isManagerShow != null) builder.append(", isManagerShow=").append(isManagerShow);
    if (aptitudeEndTimeStr != null) builder.append(", aptitudeEndTimeStr=").append(aptitudeEndTimeStr);
    if (assessStatus != null) builder.append(", assessStatus=").append(assessStatus);
    if (kfStatus != null) builder.append(", kfStatus=").append(kfStatus);
    if (loseAppointStatus != null) builder.append(", loseAppointStatus=").append(loseAppointStatus);
    if (hsOperationStatus != null) builder.append(", hsOperationStatus=").append(hsOperationStatus);
    if (nurseLeaderStatus != null) builder.append(", nurseLeaderStatus=").append(nurseLeaderStatus);
    if (assignStatus != null) builder.append(", assignStatus=").append(assignStatus);
    if (loseAppointAssessTimeStr != null) builder.append(", loseAppointAssessTimeStr=").append(loseAppointAssessTimeStr);
    if (!caseDiagnosePicUrlId.isEmpty()) builder.append(", caseDiagnosePicUrlId=").append(caseDiagnosePicUrlId);
    if (!dysgnosiaePicUrlId.isEmpty()) builder.append(", dysgnosiaePicUrlId=").append(dysgnosiaePicUrlId);
    if (isOrder != null) builder.append(", isOrder=").append(isOrder);
    return builder.replace(0, 2, "GetInsureDetailRsp{").append('}').toString();
  }

  public static final class Builder extends Message.Builder<GetInsureDetailRsp, Builder> {
    public InsureNOModel insureNO;

    public List<InsureNODetailVO> detailList;

    public KinsfolkVO kinsfolk;

    public Long scoreADL;

    public String assessTimeStr;

    public String kfTimeStr;

    public String managerAssessTimeStr;

    public String loseAppointTimeStr;

    public String kfNoPassRemark;

    public String appointTimeStr;

    public String loseNoPassRemark;

    public Boolean isManagerShow;

    public String aptitudeEndTimeStr;

    public Boolean assessStatus;

    public Boolean kfStatus;

    public Boolean loseAppointStatus;

    public Boolean hsOperationStatus;

    public Boolean nurseLeaderStatus;

    public Integer assignStatus;

    public String loseAppointAssessTimeStr;

    public List<picUrlId> caseDiagnosePicUrlId;

    public List<picUrlId> dysgnosiaePicUrlId;

    public Boolean isOrder;

    public Builder() {
      detailList = Internal.newMutableList();
      caseDiagnosePicUrlId = Internal.newMutableList();
      dysgnosiaePicUrlId = Internal.newMutableList();
    }

    /**
     * 长护险信息
     */
    public Builder insureNO(InsureNOModel insureNO) {
      this.insureNO = insureNO;
      return this;
    }

    /**
     * 操作记录
     */
    public Builder detailList(List<InsureNODetailVO> detailList) {
      Internal.checkElementsNotNull(detailList);
      this.detailList = detailList;
      return this;
    }

    /**
     * 参保人信息
     */
    public Builder kinsfolk(KinsfolkVO kinsfolk) {
      this.kinsfolk = kinsfolk;
      return this;
    }

    /**
     * 用户自评
     */
    public Builder scoreADL(Long scoreADL) {
      this.scoreADL = scoreADL;
      return this;
    }

    /**
     * 护士初审时间
     */
    public Builder assessTimeStr(String assessTimeStr) {
      this.assessTimeStr = assessTimeStr;
      return this;
    }

    /**
     * 客服评估时间
     */
    public Builder kfTimeStr(String kfTimeStr) {
      this.kfTimeStr = kfTimeStr;
      return this;
    }

    /**
     * 健康经理评估时间
     */
    public Builder managerAssessTimeStr(String managerAssessTimeStr) {
      this.managerAssessTimeStr = managerAssessTimeStr;
      return this;
    }

    /**
     * 专家复审时间
     */
    public Builder loseAppointTimeStr(String loseAppointTimeStr) {
      this.loseAppointTimeStr = loseAppointTimeStr;
      return this;
    }

    /**
     * 客服不通过备注
     */
    public Builder kfNoPassRemark(String kfNoPassRemark) {
      this.kfNoPassRemark = kfNoPassRemark;
      return this;
    }

    /**
     * 预估上门时间
     */
    public Builder appointTimeStr(String appointTimeStr) {
      this.appointTimeStr = appointTimeStr;
      return this;
    }

    /**
     * 初审不通过备注
     */
    public Builder loseNoPassRemark(String loseNoPassRemark) {
      this.loseNoPassRemark = loseNoPassRemark;
      return this;
    }

    /**
     * 健康经理评估是否显示
     */
    public Builder isManagerShow(Boolean isManagerShow) {
      this.isManagerShow = isManagerShow;
      return this;
    }

    /**
     * 资质有效时间
     */
    public Builder aptitudeEndTimeStr(String aptitudeEndTimeStr) {
      this.aptitudeEndTimeStr = aptitudeEndTimeStr;
      return this;
    }

    /**
     * 护士初审状态
     */
    public Builder assessStatus(Boolean assessStatus) {
      this.assessStatus = assessStatus;
      return this;
    }

    /**
     * 客服评估状态
     */
    public Builder kfStatus(Boolean kfStatus) {
      this.kfStatus = kfStatus;
      return this;
    }

    /**
     * 专家复审状态
     */
    public Builder loseAppointStatus(Boolean loseAppointStatus) {
      this.loseAppointStatus = loseAppointStatus;
      return this;
    }

    /**
     * 护士是否能操作
     */
    public Builder hsOperationStatus(Boolean hsOperationStatus) {
      this.hsOperationStatus = hsOperationStatus;
      return this;
    }

    /**
     * 护士长是否能指派变更护士权限
     */
    public Builder nurseLeaderStatus(Boolean nurseLeaderStatus) {
      this.nurseLeaderStatus = nurseLeaderStatus;
      return this;
    }

    /**
     * 指派状态 0-未指派 1-已指派
     */
    public Builder assignStatus(Integer assignStatus) {
      this.assignStatus = assignStatus;
      return this;
    }

    /**
     * 复审上门时间
     */
    public Builder loseAppointAssessTimeStr(String loseAppointAssessTimeStr) {
      this.loseAppointAssessTimeStr = loseAppointAssessTimeStr;
      return this;
    }

    /**
     * 病例、诊断等图片
     */
    public Builder caseDiagnosePicUrlId(List<picUrlId> caseDiagnosePicUrlId) {
      Internal.checkElementsNotNull(caseDiagnosePicUrlId);
      this.caseDiagnosePicUrlId = caseDiagnosePicUrlId;
      return this;
    }

    /**
     * 中重度智能障碍照片 如多张，以逗号隔开
     */
    public Builder dysgnosiaePicUrlId(List<picUrlId> dysgnosiaePicUrlId) {
      Internal.checkElementsNotNull(dysgnosiaePicUrlId);
      this.dysgnosiaePicUrlId = dysgnosiaePicUrlId;
      return this;
    }

    /**
     * 是否可以预约服务下单
     */
    public Builder isOrder(Boolean isOrder) {
      this.isOrder = isOrder;
      return this;
    }

    @Override
    public GetInsureDetailRsp build() {
      return new GetInsureDetailRsp(insureNO, detailList, kinsfolk, scoreADL, assessTimeStr, kfTimeStr, managerAssessTimeStr, loseAppointTimeStr, kfNoPassRemark, appointTimeStr, loseNoPassRemark, isManagerShow, aptitudeEndTimeStr, assessStatus, kfStatus, loseAppointStatus, hsOperationStatus, nurseLeaderStatus, assignStatus, loseAppointAssessTimeStr, caseDiagnosePicUrlId, dysgnosiaePicUrlId, isOrder, super.buildUnknownFields());
    }
  }

  private static final class ProtoAdapter_GetInsureDetailRsp extends ProtoAdapter<GetInsureDetailRsp> {
    ProtoAdapter_GetInsureDetailRsp() {
      super(FieldEncoding.LENGTH_DELIMITED, GetInsureDetailRsp.class);
    }

    @Override
    public int encodedSize(GetInsureDetailRsp value) {
      return (value.insureNO != null ? InsureNOModel.ADAPTER.encodedSizeWithTag(1, value.insureNO) : 0)
          + InsureNODetailVO.ADAPTER.asRepeated().encodedSizeWithTag(2, value.detailList)
          + (value.kinsfolk != null ? KinsfolkVO.ADAPTER.encodedSizeWithTag(3, value.kinsfolk) : 0)
          + (value.scoreADL != null ? ProtoAdapter.UINT64.encodedSizeWithTag(4, value.scoreADL) : 0)
          + (value.assessTimeStr != null ? ProtoAdapter.STRING.encodedSizeWithTag(5, value.assessTimeStr) : 0)
          + (value.kfTimeStr != null ? ProtoAdapter.STRING.encodedSizeWithTag(6, value.kfTimeStr) : 0)
          + (value.managerAssessTimeStr != null ? ProtoAdapter.STRING.encodedSizeWithTag(7, value.managerAssessTimeStr) : 0)
          + (value.loseAppointTimeStr != null ? ProtoAdapter.STRING.encodedSizeWithTag(8, value.loseAppointTimeStr) : 0)
          + (value.kfNoPassRemark != null ? ProtoAdapter.STRING.encodedSizeWithTag(9, value.kfNoPassRemark) : 0)
          + (value.appointTimeStr != null ? ProtoAdapter.STRING.encodedSizeWithTag(10, value.appointTimeStr) : 0)
          + (value.loseNoPassRemark != null ? ProtoAdapter.STRING.encodedSizeWithTag(11, value.loseNoPassRemark) : 0)
          + (value.isManagerShow != null ? ProtoAdapter.BOOL.encodedSizeWithTag(12, value.isManagerShow) : 0)
          + (value.aptitudeEndTimeStr != null ? ProtoAdapter.STRING.encodedSizeWithTag(13, value.aptitudeEndTimeStr) : 0)
          + (value.assessStatus != null ? ProtoAdapter.BOOL.encodedSizeWithTag(14, value.assessStatus) : 0)
          + (value.kfStatus != null ? ProtoAdapter.BOOL.encodedSizeWithTag(15, value.kfStatus) : 0)
          + (value.loseAppointStatus != null ? ProtoAdapter.BOOL.encodedSizeWithTag(16, value.loseAppointStatus) : 0)
          + (value.hsOperationStatus != null ? ProtoAdapter.BOOL.encodedSizeWithTag(17, value.hsOperationStatus) : 0)
          + (value.nurseLeaderStatus != null ? ProtoAdapter.BOOL.encodedSizeWithTag(18, value.nurseLeaderStatus) : 0)
          + (value.assignStatus != null ? ProtoAdapter.UINT32.encodedSizeWithTag(19, value.assignStatus) : 0)
          + (value.loseAppointAssessTimeStr != null ? ProtoAdapter.STRING.encodedSizeWithTag(20, value.loseAppointAssessTimeStr) : 0)
          + picUrlId.ADAPTER.asRepeated().encodedSizeWithTag(21, value.caseDiagnosePicUrlId)
          + picUrlId.ADAPTER.asRepeated().encodedSizeWithTag(22, value.dysgnosiaePicUrlId)
          + (value.isOrder != null ? ProtoAdapter.BOOL.encodedSizeWithTag(23, value.isOrder) : 0)
          + value.unknownFields().size();
    }

    @Override
    public void encode(ProtoWriter writer, GetInsureDetailRsp value) throws IOException {
      if (value.insureNO != null) InsureNOModel.ADAPTER.encodeWithTag(writer, 1, value.insureNO);
      InsureNODetailVO.ADAPTER.asRepeated().encodeWithTag(writer, 2, value.detailList);
      if (value.kinsfolk != null) KinsfolkVO.ADAPTER.encodeWithTag(writer, 3, value.kinsfolk);
      if (value.scoreADL != null) ProtoAdapter.UINT64.encodeWithTag(writer, 4, value.scoreADL);
      if (value.assessTimeStr != null) ProtoAdapter.STRING.encodeWithTag(writer, 5, value.assessTimeStr);
      if (value.kfTimeStr != null) ProtoAdapter.STRING.encodeWithTag(writer, 6, value.kfTimeStr);
      if (value.managerAssessTimeStr != null) ProtoAdapter.STRING.encodeWithTag(writer, 7, value.managerAssessTimeStr);
      if (value.loseAppointTimeStr != null) ProtoAdapter.STRING.encodeWithTag(writer, 8, value.loseAppointTimeStr);
      if (value.kfNoPassRemark != null) ProtoAdapter.STRING.encodeWithTag(writer, 9, value.kfNoPassRemark);
      if (value.appointTimeStr != null) ProtoAdapter.STRING.encodeWithTag(writer, 10, value.appointTimeStr);
      if (value.loseNoPassRemark != null) ProtoAdapter.STRING.encodeWithTag(writer, 11, value.loseNoPassRemark);
      if (value.isManagerShow != null) ProtoAdapter.BOOL.encodeWithTag(writer, 12, value.isManagerShow);
      if (value.aptitudeEndTimeStr != null) ProtoAdapter.STRING.encodeWithTag(writer, 13, value.aptitudeEndTimeStr);
      if (value.assessStatus != null) ProtoAdapter.BOOL.encodeWithTag(writer, 14, value.assessStatus);
      if (value.kfStatus != null) ProtoAdapter.BOOL.encodeWithTag(writer, 15, value.kfStatus);
      if (value.loseAppointStatus != null) ProtoAdapter.BOOL.encodeWithTag(writer, 16, value.loseAppointStatus);
      if (value.hsOperationStatus != null) ProtoAdapter.BOOL.encodeWithTag(writer, 17, value.hsOperationStatus);
      if (value.nurseLeaderStatus != null) ProtoAdapter.BOOL.encodeWithTag(writer, 18, value.nurseLeaderStatus);
      if (value.assignStatus != null) ProtoAdapter.UINT32.encodeWithTag(writer, 19, value.assignStatus);
      if (value.loseAppointAssessTimeStr != null) ProtoAdapter.STRING.encodeWithTag(writer, 20, value.loseAppointAssessTimeStr);
      picUrlId.ADAPTER.asRepeated().encodeWithTag(writer, 21, value.caseDiagnosePicUrlId);
      picUrlId.ADAPTER.asRepeated().encodeWithTag(writer, 22, value.dysgnosiaePicUrlId);
      if (value.isOrder != null) ProtoAdapter.BOOL.encodeWithTag(writer, 23, value.isOrder);
      writer.writeBytes(value.unknownFields());
    }

    @Override
    public GetInsureDetailRsp decode(ProtoReader reader) throws IOException {
      Builder builder = new Builder();
      long token = reader.beginMessage();
      for (int tag; (tag = reader.nextTag()) != -1;) {
        switch (tag) {
          case 1: builder.insureNO(InsureNOModel.ADAPTER.decode(reader)); break;
          case 2: builder.detailList.add(InsureNODetailVO.ADAPTER.decode(reader)); break;
          case 3: builder.kinsfolk(KinsfolkVO.ADAPTER.decode(reader)); break;
          case 4: builder.scoreADL(ProtoAdapter.UINT64.decode(reader)); break;
          case 5: builder.assessTimeStr(ProtoAdapter.STRING.decode(reader)); break;
          case 6: builder.kfTimeStr(ProtoAdapter.STRING.decode(reader)); break;
          case 7: builder.managerAssessTimeStr(ProtoAdapter.STRING.decode(reader)); break;
          case 8: builder.loseAppointTimeStr(ProtoAdapter.STRING.decode(reader)); break;
          case 9: builder.kfNoPassRemark(ProtoAdapter.STRING.decode(reader)); break;
          case 10: builder.appointTimeStr(ProtoAdapter.STRING.decode(reader)); break;
          case 11: builder.loseNoPassRemark(ProtoAdapter.STRING.decode(reader)); break;
          case 12: builder.isManagerShow(ProtoAdapter.BOOL.decode(reader)); break;
          case 13: builder.aptitudeEndTimeStr(ProtoAdapter.STRING.decode(reader)); break;
          case 14: builder.assessStatus(ProtoAdapter.BOOL.decode(reader)); break;
          case 15: builder.kfStatus(ProtoAdapter.BOOL.decode(reader)); break;
          case 16: builder.loseAppointStatus(ProtoAdapter.BOOL.decode(reader)); break;
          case 17: builder.hsOperationStatus(ProtoAdapter.BOOL.decode(reader)); break;
          case 18: builder.nurseLeaderStatus(ProtoAdapter.BOOL.decode(reader)); break;
          case 19: builder.assignStatus(ProtoAdapter.UINT32.decode(reader)); break;
          case 20: builder.loseAppointAssessTimeStr(ProtoAdapter.STRING.decode(reader)); break;
          case 21: builder.caseDiagnosePicUrlId.add(picUrlId.ADAPTER.decode(reader)); break;
          case 22: builder.dysgnosiaePicUrlId.add(picUrlId.ADAPTER.decode(reader)); break;
          case 23: builder.isOrder(ProtoAdapter.BOOL.decode(reader)); break;
          default: {
            FieldEncoding fieldEncoding = reader.peekFieldEncoding();
            Object value = fieldEncoding.rawProtoAdapter().decode(reader);
            builder.addUnknownField(tag, fieldEncoding, value);
          }
        }
      }
      reader.endMessage(token);
      return builder.build();
    }

    @Override
    public GetInsureDetailRsp redact(GetInsureDetailRsp value) {
      Builder builder = value.newBuilder();
      if (builder.insureNO != null) builder.insureNO = InsureNOModel.ADAPTER.redact(builder.insureNO);
      Internal.redactElements(builder.detailList, InsureNODetailVO.ADAPTER);
      if (builder.kinsfolk != null) builder.kinsfolk = KinsfolkVO.ADAPTER.redact(builder.kinsfolk);
      Internal.redactElements(builder.caseDiagnosePicUrlId, picUrlId.ADAPTER);
      Internal.redactElements(builder.dysgnosiaePicUrlId, picUrlId.ADAPTER);
      builder.clearUnknownFields();
      return builder.build();
    }
  }
}
