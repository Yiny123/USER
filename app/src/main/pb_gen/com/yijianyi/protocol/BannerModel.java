// Code generated by Wire protocol buffer compiler, do not edit.
// Source file: Model.proto at 100:1
package com.yijianyi.protocol;

import com.squareup.wire.FieldEncoding;
import com.squareup.wire.Message;
import com.squareup.wire.ProtoAdapter;
import com.squareup.wire.ProtoReader;
import com.squareup.wire.ProtoWriter;
import com.squareup.wire.WireField;
import com.squareup.wire.internal.Internal;
import java.io.IOException;
import java.lang.Integer;
import java.lang.Long;
import java.lang.Object;
import java.lang.Override;
import java.lang.String;
import java.lang.StringBuilder;
import okio.ByteString;

public final class BannerModel extends Message<BannerModel, BannerModel.Builder> {
  public static final ProtoAdapter<BannerModel> ADAPTER = new ProtoAdapter_BannerModel();

  private static final long serialVersionUID = 0L;

  public static final Integer DEFAULT_ID = 0;

  public static final String DEFAULT_NAME = "";

  public static final Integer DEFAULT_BANNERTYPE = 0;

  public static final String DEFAULT_URL = "";

  public static final String DEFAULT_IMGURL = "";

  public static final String DEFAULT_DESC = "";

  public static final Long DEFAULT_STARTDATE = 0L;

  public static final Long DEFAULT_ENDDATE = 0L;

  public static final String DEFAULT_EDITOR = "";

  public static final Long DEFAULT_CREATETIME = 0L;

  public static final String DEFAULT_IMGID = "";

  public static final Integer DEFAULT_SORT = 0;

  @WireField(
      tag = 1,
      adapter = "com.squareup.wire.ProtoAdapter#UINT32"
  )
  public final Integer id;

  /**
   *  banner名称
   */
  @WireField(
      tag = 2,
      adapter = "com.squareup.wire.ProtoAdapter#STRING"
  )
  public final String name;

  /**
   *  类型 1-微信banner 2-用户app banner
   */
  @WireField(
      tag = 3,
      adapter = "com.squareup.wire.ProtoAdapter#UINT32"
  )
  public final Integer bannerType;

  /**
   *  跳转路径
   */
  @WireField(
      tag = 4,
      adapter = "com.squareup.wire.ProtoAdapter#STRING"
  )
  public final String url;

  /**
   *  图片路径或图片id
   */
  @WireField(
      tag = 5,
      adapter = "com.squareup.wire.ProtoAdapter#STRING"
  )
  public final String imgUrl;

  /**
   *  banner描述
   */
  @WireField(
      tag = 6,
      adapter = "com.squareup.wire.ProtoAdapter#STRING"
  )
  public final String desc;

  /**
   *  开始时间
   */
  @WireField(
      tag = 7,
      adapter = "com.squareup.wire.ProtoAdapter#UINT64"
  )
  public final Long startDate;

  /**
   *  结束时间
   */
  @WireField(
      tag = 8,
      adapter = "com.squareup.wire.ProtoAdapter#UINT64"
  )
  public final Long endDate;

  /**
   *  创建者
   */
  @WireField(
      tag = 11,
      adapter = "com.squareup.wire.ProtoAdapter#STRING"
  )
  public final String editor;

  /**
   *  创建时间
   */
  @WireField(
      tag = 12,
      adapter = "com.squareup.wire.ProtoAdapter#UINT64"
  )
  public final Long createTime;

  /**
   * 图片id
   */
  @WireField(
      tag = 13,
      adapter = "com.squareup.wire.ProtoAdapter#STRING"
  )
  public final String imgId;

  /**
   * banner排序
   */
  @WireField(
      tag = 14,
      adapter = "com.squareup.wire.ProtoAdapter#UINT32"
  )
  public final Integer sort;

  public BannerModel(Integer id, String name, Integer bannerType, String url, String imgUrl, String desc, Long startDate, Long endDate, String editor, Long createTime, String imgId, Integer sort) {
    this(id, name, bannerType, url, imgUrl, desc, startDate, endDate, editor, createTime, imgId, sort, ByteString.EMPTY);
  }

  public BannerModel(Integer id, String name, Integer bannerType, String url, String imgUrl, String desc, Long startDate, Long endDate, String editor, Long createTime, String imgId, Integer sort, ByteString unknownFields) {
    super(ADAPTER, unknownFields);
    this.id = id;
    this.name = name;
    this.bannerType = bannerType;
    this.url = url;
    this.imgUrl = imgUrl;
    this.desc = desc;
    this.startDate = startDate;
    this.endDate = endDate;
    this.editor = editor;
    this.createTime = createTime;
    this.imgId = imgId;
    this.sort = sort;
  }

  @Override
  public Builder newBuilder() {
    Builder builder = new Builder();
    builder.id = id;
    builder.name = name;
    builder.bannerType = bannerType;
    builder.url = url;
    builder.imgUrl = imgUrl;
    builder.desc = desc;
    builder.startDate = startDate;
    builder.endDate = endDate;
    builder.editor = editor;
    builder.createTime = createTime;
    builder.imgId = imgId;
    builder.sort = sort;
    builder.addUnknownFields(unknownFields());
    return builder;
  }

  @Override
  public boolean equals(Object other) {
    if (other == this) return true;
    if (!(other instanceof BannerModel)) return false;
    BannerModel o = (BannerModel) other;
    return unknownFields().equals(o.unknownFields())
        && Internal.equals(id, o.id)
        && Internal.equals(name, o.name)
        && Internal.equals(bannerType, o.bannerType)
        && Internal.equals(url, o.url)
        && Internal.equals(imgUrl, o.imgUrl)
        && Internal.equals(desc, o.desc)
        && Internal.equals(startDate, o.startDate)
        && Internal.equals(endDate, o.endDate)
        && Internal.equals(editor, o.editor)
        && Internal.equals(createTime, o.createTime)
        && Internal.equals(imgId, o.imgId)
        && Internal.equals(sort, o.sort);
  }

  @Override
  public int hashCode() {
    int result = super.hashCode;
    if (result == 0) {
      result = unknownFields().hashCode();
      result = result * 37 + (id != null ? id.hashCode() : 0);
      result = result * 37 + (name != null ? name.hashCode() : 0);
      result = result * 37 + (bannerType != null ? bannerType.hashCode() : 0);
      result = result * 37 + (url != null ? url.hashCode() : 0);
      result = result * 37 + (imgUrl != null ? imgUrl.hashCode() : 0);
      result = result * 37 + (desc != null ? desc.hashCode() : 0);
      result = result * 37 + (startDate != null ? startDate.hashCode() : 0);
      result = result * 37 + (endDate != null ? endDate.hashCode() : 0);
      result = result * 37 + (editor != null ? editor.hashCode() : 0);
      result = result * 37 + (createTime != null ? createTime.hashCode() : 0);
      result = result * 37 + (imgId != null ? imgId.hashCode() : 0);
      result = result * 37 + (sort != null ? sort.hashCode() : 0);
      super.hashCode = result;
    }
    return result;
  }

  @Override
  public String toString() {
    StringBuilder builder = new StringBuilder();
    if (id != null) builder.append(", id=").append(id);
    if (name != null) builder.append(", name=").append(name);
    if (bannerType != null) builder.append(", bannerType=").append(bannerType);
    if (url != null) builder.append(", url=").append(url);
    if (imgUrl != null) builder.append(", imgUrl=").append(imgUrl);
    if (desc != null) builder.append(", desc=").append(desc);
    if (startDate != null) builder.append(", startDate=").append(startDate);
    if (endDate != null) builder.append(", endDate=").append(endDate);
    if (editor != null) builder.append(", editor=").append(editor);
    if (createTime != null) builder.append(", createTime=").append(createTime);
    if (imgId != null) builder.append(", imgId=").append(imgId);
    if (sort != null) builder.append(", sort=").append(sort);
    return builder.replace(0, 2, "BannerModel{").append('}').toString();
  }

  public static final class Builder extends Message.Builder<BannerModel, Builder> {
    public Integer id;

    public String name;

    public Integer bannerType;

    public String url;

    public String imgUrl;

    public String desc;

    public Long startDate;

    public Long endDate;

    public String editor;

    public Long createTime;

    public String imgId;

    public Integer sort;

    public Builder() {
    }

    public Builder id(Integer id) {
      this.id = id;
      return this;
    }

    /**
     *  banner名称
     */
    public Builder name(String name) {
      this.name = name;
      return this;
    }

    /**
     *  类型 1-微信banner 2-用户app banner
     */
    public Builder bannerType(Integer bannerType) {
      this.bannerType = bannerType;
      return this;
    }

    /**
     *  跳转路径
     */
    public Builder url(String url) {
      this.url = url;
      return this;
    }

    /**
     *  图片路径或图片id
     */
    public Builder imgUrl(String imgUrl) {
      this.imgUrl = imgUrl;
      return this;
    }

    /**
     *  banner描述
     */
    public Builder desc(String desc) {
      this.desc = desc;
      return this;
    }

    /**
     *  开始时间
     */
    public Builder startDate(Long startDate) {
      this.startDate = startDate;
      return this;
    }

    /**
     *  结束时间
     */
    public Builder endDate(Long endDate) {
      this.endDate = endDate;
      return this;
    }

    /**
     *  创建者
     */
    public Builder editor(String editor) {
      this.editor = editor;
      return this;
    }

    /**
     *  创建时间
     */
    public Builder createTime(Long createTime) {
      this.createTime = createTime;
      return this;
    }

    /**
     * 图片id
     */
    public Builder imgId(String imgId) {
      this.imgId = imgId;
      return this;
    }

    /**
     * banner排序
     */
    public Builder sort(Integer sort) {
      this.sort = sort;
      return this;
    }

    @Override
    public BannerModel build() {
      return new BannerModel(id, name, bannerType, url, imgUrl, desc, startDate, endDate, editor, createTime, imgId, sort, super.buildUnknownFields());
    }
  }

  private static final class ProtoAdapter_BannerModel extends ProtoAdapter<BannerModel> {
    ProtoAdapter_BannerModel() {
      super(FieldEncoding.LENGTH_DELIMITED, BannerModel.class);
    }

    @Override
    public int encodedSize(BannerModel value) {
      return (value.id != null ? ProtoAdapter.UINT32.encodedSizeWithTag(1, value.id) : 0)
          + (value.name != null ? ProtoAdapter.STRING.encodedSizeWithTag(2, value.name) : 0)
          + (value.bannerType != null ? ProtoAdapter.UINT32.encodedSizeWithTag(3, value.bannerType) : 0)
          + (value.url != null ? ProtoAdapter.STRING.encodedSizeWithTag(4, value.url) : 0)
          + (value.imgUrl != null ? ProtoAdapter.STRING.encodedSizeWithTag(5, value.imgUrl) : 0)
          + (value.desc != null ? ProtoAdapter.STRING.encodedSizeWithTag(6, value.desc) : 0)
          + (value.startDate != null ? ProtoAdapter.UINT64.encodedSizeWithTag(7, value.startDate) : 0)
          + (value.endDate != null ? ProtoAdapter.UINT64.encodedSizeWithTag(8, value.endDate) : 0)
          + (value.editor != null ? ProtoAdapter.STRING.encodedSizeWithTag(11, value.editor) : 0)
          + (value.createTime != null ? ProtoAdapter.UINT64.encodedSizeWithTag(12, value.createTime) : 0)
          + (value.imgId != null ? ProtoAdapter.STRING.encodedSizeWithTag(13, value.imgId) : 0)
          + (value.sort != null ? ProtoAdapter.UINT32.encodedSizeWithTag(14, value.sort) : 0)
          + value.unknownFields().size();
    }

    @Override
    public void encode(ProtoWriter writer, BannerModel value) throws IOException {
      if (value.id != null) ProtoAdapter.UINT32.encodeWithTag(writer, 1, value.id);
      if (value.name != null) ProtoAdapter.STRING.encodeWithTag(writer, 2, value.name);
      if (value.bannerType != null) ProtoAdapter.UINT32.encodeWithTag(writer, 3, value.bannerType);
      if (value.url != null) ProtoAdapter.STRING.encodeWithTag(writer, 4, value.url);
      if (value.imgUrl != null) ProtoAdapter.STRING.encodeWithTag(writer, 5, value.imgUrl);
      if (value.desc != null) ProtoAdapter.STRING.encodeWithTag(writer, 6, value.desc);
      if (value.startDate != null) ProtoAdapter.UINT64.encodeWithTag(writer, 7, value.startDate);
      if (value.endDate != null) ProtoAdapter.UINT64.encodeWithTag(writer, 8, value.endDate);
      if (value.editor != null) ProtoAdapter.STRING.encodeWithTag(writer, 11, value.editor);
      if (value.createTime != null) ProtoAdapter.UINT64.encodeWithTag(writer, 12, value.createTime);
      if (value.imgId != null) ProtoAdapter.STRING.encodeWithTag(writer, 13, value.imgId);
      if (value.sort != null) ProtoAdapter.UINT32.encodeWithTag(writer, 14, value.sort);
      writer.writeBytes(value.unknownFields());
    }

    @Override
    public BannerModel decode(ProtoReader reader) throws IOException {
      Builder builder = new Builder();
      long token = reader.beginMessage();
      for (int tag; (tag = reader.nextTag()) != -1;) {
        switch (tag) {
          case 1: builder.id(ProtoAdapter.UINT32.decode(reader)); break;
          case 2: builder.name(ProtoAdapter.STRING.decode(reader)); break;
          case 3: builder.bannerType(ProtoAdapter.UINT32.decode(reader)); break;
          case 4: builder.url(ProtoAdapter.STRING.decode(reader)); break;
          case 5: builder.imgUrl(ProtoAdapter.STRING.decode(reader)); break;
          case 6: builder.desc(ProtoAdapter.STRING.decode(reader)); break;
          case 7: builder.startDate(ProtoAdapter.UINT64.decode(reader)); break;
          case 8: builder.endDate(ProtoAdapter.UINT64.decode(reader)); break;
          case 11: builder.editor(ProtoAdapter.STRING.decode(reader)); break;
          case 12: builder.createTime(ProtoAdapter.UINT64.decode(reader)); break;
          case 13: builder.imgId(ProtoAdapter.STRING.decode(reader)); break;
          case 14: builder.sort(ProtoAdapter.UINT32.decode(reader)); break;
          default: {
            FieldEncoding fieldEncoding = reader.peekFieldEncoding();
            Object value = fieldEncoding.rawProtoAdapter().decode(reader);
            builder.addUnknownField(tag, fieldEncoding, value);
          }
        }
      }
      reader.endMessage(token);
      return builder.build();
    }

    @Override
    public BannerModel redact(BannerModel value) {
      Builder builder = value.newBuilder();
      builder.clearUnknownFields();
      return builder.build();
    }
  }
}
