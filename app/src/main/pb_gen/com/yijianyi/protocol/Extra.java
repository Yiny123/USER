// Code generated by Wire protocol buffer compiler, do not edit.
// Source file: OrderModel.proto at 543:1
package com.yijianyi.protocol;

import com.squareup.wire.FieldEncoding;
import com.squareup.wire.Message;
import com.squareup.wire.ProtoAdapter;
import com.squareup.wire.ProtoReader;
import com.squareup.wire.ProtoWriter;
import com.squareup.wire.WireField;
import com.squareup.wire.internal.Internal;
import java.io.IOException;
import java.lang.Integer;
import java.lang.Long;
import java.lang.Object;
import java.lang.Override;
import java.lang.String;
import java.lang.StringBuilder;
import okio.ByteString;

/**
 * 门禁卡管理信息
 */
public final class Extra extends Message<Extra, Extra.Builder> {
  public static final ProtoAdapter<Extra> ADAPTER = new ProtoAdapter_Extra();

  private static final long serialVersionUID = 0L;

  public static final Long DEFAULT_ID = 0L;

  public static final String DEFAULT_EXTRANO = "";

  public static final Integer DEFAULT_STATUS = 0;

  public static final Long DEFAULT_LOSSTIME = 0L;

  public static final Long DEFAULT_CANCELTIME = 0L;

  public static final Long DEFAULT_RETURNTIME = 0L;

  public static final Long DEFAULT_CREATETIME = 0L;

  public static final Long DEFAULT_CREATESTAFFID = 0L;

  public static final String DEFAULT_CREATESTAFFNAME = "";

  public static final Long DEFAULT_ORGID = 0L;

  public static final String DEFAULT_ORGNAME = "";

  public static final Long DEFAULT_BRANCHID = 0L;

  public static final String DEFAULT_BRANCHNAME = "";

  public static final Long DEFAULT_DAMAGEDTIME = 0L;

  public static final String DEFAULT_SERIALNUMBER = "";

  @WireField(
      tag = 1,
      adapter = "com.squareup.wire.ProtoAdapter#UINT64"
  )
  public final Long id;

  /**
   * 门禁卡号
   */
  @WireField(
      tag = 2,
      adapter = "com.squareup.wire.ProtoAdapter#STRING"
  )
  public final String extraNO;

  /**
   * 状态 -1-删除 0-使用中 1-已归还 2-已挂失 3-已作废 4-已解绑
   */
  @WireField(
      tag = 3,
      adapter = "com.squareup.wire.ProtoAdapter#INT32"
  )
  public final Integer status;

  /**
   * 挂失时间
   */
  @WireField(
      tag = 4,
      adapter = "com.squareup.wire.ProtoAdapter#UINT64"
  )
  public final Long lossTime;

  /**
   * 取消挂失时间
   */
  @WireField(
      tag = 5,
      adapter = "com.squareup.wire.ProtoAdapter#UINT64"
  )
  public final Long cancelTime;

  /**
   * 退还时间
   */
  @WireField(
      tag = 6,
      adapter = "com.squareup.wire.ProtoAdapter#UINT64"
  )
  public final Long returnTime;

  /**
   * 创建时间
   */
  @WireField(
      tag = 7,
      adapter = "com.squareup.wire.ProtoAdapter#UINT64"
  )
  public final Long createTime;

  /**
   * 创建员工ID
   */
  @WireField(
      tag = 8,
      adapter = "com.squareup.wire.ProtoAdapter#UINT64"
  )
  public final Long createStaffId;

  /**
   * 创建员工名称
   */
  @WireField(
      tag = 9,
      adapter = "com.squareup.wire.ProtoAdapter#STRING"
  )
  public final String createStaffName;

  /**
   * 机构id
   */
  @WireField(
      tag = 10,
      adapter = "com.squareup.wire.ProtoAdapter#UINT64"
  )
  public final Long orgId;

  /**
   * 机构名
   */
  @WireField(
      tag = 11,
      adapter = "com.squareup.wire.ProtoAdapter#STRING"
  )
  public final String orgName;

  /**
   * 科室id
   */
  @WireField(
      tag = 12,
      adapter = "com.squareup.wire.ProtoAdapter#UINT64"
  )
  public final Long branchId;

  /**
   * 科室名
   */
  @WireField(
      tag = 13,
      adapter = "com.squareup.wire.ProtoAdapter#STRING"
  )
  public final String branchName;

  /**
   * 作废时间
   */
  @WireField(
      tag = 14,
      adapter = "com.squareup.wire.ProtoAdapter#UINT64"
  )
  public final Long damagedTime;

  /**
   * 门禁卡编号
   */
  @WireField(
      tag = 15,
      adapter = "com.squareup.wire.ProtoAdapter#STRING"
  )
  public final String serialNumber;

  public Extra(Long id, String extraNO, Integer status, Long lossTime, Long cancelTime, Long returnTime, Long createTime, Long createStaffId, String createStaffName, Long orgId, String orgName, Long branchId, String branchName, Long damagedTime, String serialNumber) {
    this(id, extraNO, status, lossTime, cancelTime, returnTime, createTime, createStaffId, createStaffName, orgId, orgName, branchId, branchName, damagedTime, serialNumber, ByteString.EMPTY);
  }

  public Extra(Long id, String extraNO, Integer status, Long lossTime, Long cancelTime, Long returnTime, Long createTime, Long createStaffId, String createStaffName, Long orgId, String orgName, Long branchId, String branchName, Long damagedTime, String serialNumber, ByteString unknownFields) {
    super(ADAPTER, unknownFields);
    this.id = id;
    this.extraNO = extraNO;
    this.status = status;
    this.lossTime = lossTime;
    this.cancelTime = cancelTime;
    this.returnTime = returnTime;
    this.createTime = createTime;
    this.createStaffId = createStaffId;
    this.createStaffName = createStaffName;
    this.orgId = orgId;
    this.orgName = orgName;
    this.branchId = branchId;
    this.branchName = branchName;
    this.damagedTime = damagedTime;
    this.serialNumber = serialNumber;
  }

  @Override
  public Builder newBuilder() {
    Builder builder = new Builder();
    builder.id = id;
    builder.extraNO = extraNO;
    builder.status = status;
    builder.lossTime = lossTime;
    builder.cancelTime = cancelTime;
    builder.returnTime = returnTime;
    builder.createTime = createTime;
    builder.createStaffId = createStaffId;
    builder.createStaffName = createStaffName;
    builder.orgId = orgId;
    builder.orgName = orgName;
    builder.branchId = branchId;
    builder.branchName = branchName;
    builder.damagedTime = damagedTime;
    builder.serialNumber = serialNumber;
    builder.addUnknownFields(unknownFields());
    return builder;
  }

  @Override
  public boolean equals(Object other) {
    if (other == this) return true;
    if (!(other instanceof Extra)) return false;
    Extra o = (Extra) other;
    return unknownFields().equals(o.unknownFields())
        && Internal.equals(id, o.id)
        && Internal.equals(extraNO, o.extraNO)
        && Internal.equals(status, o.status)
        && Internal.equals(lossTime, o.lossTime)
        && Internal.equals(cancelTime, o.cancelTime)
        && Internal.equals(returnTime, o.returnTime)
        && Internal.equals(createTime, o.createTime)
        && Internal.equals(createStaffId, o.createStaffId)
        && Internal.equals(createStaffName, o.createStaffName)
        && Internal.equals(orgId, o.orgId)
        && Internal.equals(orgName, o.orgName)
        && Internal.equals(branchId, o.branchId)
        && Internal.equals(branchName, o.branchName)
        && Internal.equals(damagedTime, o.damagedTime)
        && Internal.equals(serialNumber, o.serialNumber);
  }

  @Override
  public int hashCode() {
    int result = super.hashCode;
    if (result == 0) {
      result = unknownFields().hashCode();
      result = result * 37 + (id != null ? id.hashCode() : 0);
      result = result * 37 + (extraNO != null ? extraNO.hashCode() : 0);
      result = result * 37 + (status != null ? status.hashCode() : 0);
      result = result * 37 + (lossTime != null ? lossTime.hashCode() : 0);
      result = result * 37 + (cancelTime != null ? cancelTime.hashCode() : 0);
      result = result * 37 + (returnTime != null ? returnTime.hashCode() : 0);
      result = result * 37 + (createTime != null ? createTime.hashCode() : 0);
      result = result * 37 + (createStaffId != null ? createStaffId.hashCode() : 0);
      result = result * 37 + (createStaffName != null ? createStaffName.hashCode() : 0);
      result = result * 37 + (orgId != null ? orgId.hashCode() : 0);
      result = result * 37 + (orgName != null ? orgName.hashCode() : 0);
      result = result * 37 + (branchId != null ? branchId.hashCode() : 0);
      result = result * 37 + (branchName != null ? branchName.hashCode() : 0);
      result = result * 37 + (damagedTime != null ? damagedTime.hashCode() : 0);
      result = result * 37 + (serialNumber != null ? serialNumber.hashCode() : 0);
      super.hashCode = result;
    }
    return result;
  }

  @Override
  public String toString() {
    StringBuilder builder = new StringBuilder();
    if (id != null) builder.append(", id=").append(id);
    if (extraNO != null) builder.append(", extraNO=").append(extraNO);
    if (status != null) builder.append(", status=").append(status);
    if (lossTime != null) builder.append(", lossTime=").append(lossTime);
    if (cancelTime != null) builder.append(", cancelTime=").append(cancelTime);
    if (returnTime != null) builder.append(", returnTime=").append(returnTime);
    if (createTime != null) builder.append(", createTime=").append(createTime);
    if (createStaffId != null) builder.append(", createStaffId=").append(createStaffId);
    if (createStaffName != null) builder.append(", createStaffName=").append(createStaffName);
    if (orgId != null) builder.append(", orgId=").append(orgId);
    if (orgName != null) builder.append(", orgName=").append(orgName);
    if (branchId != null) builder.append(", branchId=").append(branchId);
    if (branchName != null) builder.append(", branchName=").append(branchName);
    if (damagedTime != null) builder.append(", damagedTime=").append(damagedTime);
    if (serialNumber != null) builder.append(", serialNumber=").append(serialNumber);
    return builder.replace(0, 2, "Extra{").append('}').toString();
  }

  public static final class Builder extends Message.Builder<Extra, Builder> {
    public Long id;

    public String extraNO;

    public Integer status;

    public Long lossTime;

    public Long cancelTime;

    public Long returnTime;

    public Long createTime;

    public Long createStaffId;

    public String createStaffName;

    public Long orgId;

    public String orgName;

    public Long branchId;

    public String branchName;

    public Long damagedTime;

    public String serialNumber;

    public Builder() {
    }

    public Builder id(Long id) {
      this.id = id;
      return this;
    }

    /**
     * 门禁卡号
     */
    public Builder extraNO(String extraNO) {
      this.extraNO = extraNO;
      return this;
    }

    /**
     * 状态 -1-删除 0-使用中 1-已归还 2-已挂失 3-已作废 4-已解绑
     */
    public Builder status(Integer status) {
      this.status = status;
      return this;
    }

    /**
     * 挂失时间
     */
    public Builder lossTime(Long lossTime) {
      this.lossTime = lossTime;
      return this;
    }

    /**
     * 取消挂失时间
     */
    public Builder cancelTime(Long cancelTime) {
      this.cancelTime = cancelTime;
      return this;
    }

    /**
     * 退还时间
     */
    public Builder returnTime(Long returnTime) {
      this.returnTime = returnTime;
      return this;
    }

    /**
     * 创建时间
     */
    public Builder createTime(Long createTime) {
      this.createTime = createTime;
      return this;
    }

    /**
     * 创建员工ID
     */
    public Builder createStaffId(Long createStaffId) {
      this.createStaffId = createStaffId;
      return this;
    }

    /**
     * 创建员工名称
     */
    public Builder createStaffName(String createStaffName) {
      this.createStaffName = createStaffName;
      return this;
    }

    /**
     * 机构id
     */
    public Builder orgId(Long orgId) {
      this.orgId = orgId;
      return this;
    }

    /**
     * 机构名
     */
    public Builder orgName(String orgName) {
      this.orgName = orgName;
      return this;
    }

    /**
     * 科室id
     */
    public Builder branchId(Long branchId) {
      this.branchId = branchId;
      return this;
    }

    /**
     * 科室名
     */
    public Builder branchName(String branchName) {
      this.branchName = branchName;
      return this;
    }

    /**
     * 作废时间
     */
    public Builder damagedTime(Long damagedTime) {
      this.damagedTime = damagedTime;
      return this;
    }

    /**
     * 门禁卡编号
     */
    public Builder serialNumber(String serialNumber) {
      this.serialNumber = serialNumber;
      return this;
    }

    @Override
    public Extra build() {
      return new Extra(id, extraNO, status, lossTime, cancelTime, returnTime, createTime, createStaffId, createStaffName, orgId, orgName, branchId, branchName, damagedTime, serialNumber, super.buildUnknownFields());
    }
  }

  private static final class ProtoAdapter_Extra extends ProtoAdapter<Extra> {
    ProtoAdapter_Extra() {
      super(FieldEncoding.LENGTH_DELIMITED, Extra.class);
    }

    @Override
    public int encodedSize(Extra value) {
      return (value.id != null ? ProtoAdapter.UINT64.encodedSizeWithTag(1, value.id) : 0)
          + (value.extraNO != null ? ProtoAdapter.STRING.encodedSizeWithTag(2, value.extraNO) : 0)
          + (value.status != null ? ProtoAdapter.INT32.encodedSizeWithTag(3, value.status) : 0)
          + (value.lossTime != null ? ProtoAdapter.UINT64.encodedSizeWithTag(4, value.lossTime) : 0)
          + (value.cancelTime != null ? ProtoAdapter.UINT64.encodedSizeWithTag(5, value.cancelTime) : 0)
          + (value.returnTime != null ? ProtoAdapter.UINT64.encodedSizeWithTag(6, value.returnTime) : 0)
          + (value.createTime != null ? ProtoAdapter.UINT64.encodedSizeWithTag(7, value.createTime) : 0)
          + (value.createStaffId != null ? ProtoAdapter.UINT64.encodedSizeWithTag(8, value.createStaffId) : 0)
          + (value.createStaffName != null ? ProtoAdapter.STRING.encodedSizeWithTag(9, value.createStaffName) : 0)
          + (value.orgId != null ? ProtoAdapter.UINT64.encodedSizeWithTag(10, value.orgId) : 0)
          + (value.orgName != null ? ProtoAdapter.STRING.encodedSizeWithTag(11, value.orgName) : 0)
          + (value.branchId != null ? ProtoAdapter.UINT64.encodedSizeWithTag(12, value.branchId) : 0)
          + (value.branchName != null ? ProtoAdapter.STRING.encodedSizeWithTag(13, value.branchName) : 0)
          + (value.damagedTime != null ? ProtoAdapter.UINT64.encodedSizeWithTag(14, value.damagedTime) : 0)
          + (value.serialNumber != null ? ProtoAdapter.STRING.encodedSizeWithTag(15, value.serialNumber) : 0)
          + value.unknownFields().size();
    }

    @Override
    public void encode(ProtoWriter writer, Extra value) throws IOException {
      if (value.id != null) ProtoAdapter.UINT64.encodeWithTag(writer, 1, value.id);
      if (value.extraNO != null) ProtoAdapter.STRING.encodeWithTag(writer, 2, value.extraNO);
      if (value.status != null) ProtoAdapter.INT32.encodeWithTag(writer, 3, value.status);
      if (value.lossTime != null) ProtoAdapter.UINT64.encodeWithTag(writer, 4, value.lossTime);
      if (value.cancelTime != null) ProtoAdapter.UINT64.encodeWithTag(writer, 5, value.cancelTime);
      if (value.returnTime != null) ProtoAdapter.UINT64.encodeWithTag(writer, 6, value.returnTime);
      if (value.createTime != null) ProtoAdapter.UINT64.encodeWithTag(writer, 7, value.createTime);
      if (value.createStaffId != null) ProtoAdapter.UINT64.encodeWithTag(writer, 8, value.createStaffId);
      if (value.createStaffName != null) ProtoAdapter.STRING.encodeWithTag(writer, 9, value.createStaffName);
      if (value.orgId != null) ProtoAdapter.UINT64.encodeWithTag(writer, 10, value.orgId);
      if (value.orgName != null) ProtoAdapter.STRING.encodeWithTag(writer, 11, value.orgName);
      if (value.branchId != null) ProtoAdapter.UINT64.encodeWithTag(writer, 12, value.branchId);
      if (value.branchName != null) ProtoAdapter.STRING.encodeWithTag(writer, 13, value.branchName);
      if (value.damagedTime != null) ProtoAdapter.UINT64.encodeWithTag(writer, 14, value.damagedTime);
      if (value.serialNumber != null) ProtoAdapter.STRING.encodeWithTag(writer, 15, value.serialNumber);
      writer.writeBytes(value.unknownFields());
    }

    @Override
    public Extra decode(ProtoReader reader) throws IOException {
      Builder builder = new Builder();
      long token = reader.beginMessage();
      for (int tag; (tag = reader.nextTag()) != -1;) {
        switch (tag) {
          case 1: builder.id(ProtoAdapter.UINT64.decode(reader)); break;
          case 2: builder.extraNO(ProtoAdapter.STRING.decode(reader)); break;
          case 3: builder.status(ProtoAdapter.INT32.decode(reader)); break;
          case 4: builder.lossTime(ProtoAdapter.UINT64.decode(reader)); break;
          case 5: builder.cancelTime(ProtoAdapter.UINT64.decode(reader)); break;
          case 6: builder.returnTime(ProtoAdapter.UINT64.decode(reader)); break;
          case 7: builder.createTime(ProtoAdapter.UINT64.decode(reader)); break;
          case 8: builder.createStaffId(ProtoAdapter.UINT64.decode(reader)); break;
          case 9: builder.createStaffName(ProtoAdapter.STRING.decode(reader)); break;
          case 10: builder.orgId(ProtoAdapter.UINT64.decode(reader)); break;
          case 11: builder.orgName(ProtoAdapter.STRING.decode(reader)); break;
          case 12: builder.branchId(ProtoAdapter.UINT64.decode(reader)); break;
          case 13: builder.branchName(ProtoAdapter.STRING.decode(reader)); break;
          case 14: builder.damagedTime(ProtoAdapter.UINT64.decode(reader)); break;
          case 15: builder.serialNumber(ProtoAdapter.STRING.decode(reader)); break;
          default: {
            FieldEncoding fieldEncoding = reader.peekFieldEncoding();
            Object value = fieldEncoding.rawProtoAdapter().decode(reader);
            builder.addUnknownField(tag, fieldEncoding, value);
          }
        }
      }
      reader.endMessage(token);
      return builder.build();
    }

    @Override
    public Extra redact(Extra value) {
      Builder builder = value.newBuilder();
      builder.clearUnknownFields();
      return builder.build();
    }
  }
}
