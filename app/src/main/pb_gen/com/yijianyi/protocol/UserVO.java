// Code generated by Wire protocol buffer compiler, do not edit.
// Source file: SaasModel.proto at 539:1
package com.yijianyi.protocol;

import com.squareup.wire.FieldEncoding;
import com.squareup.wire.Message;
import com.squareup.wire.ProtoAdapter;
import com.squareup.wire.ProtoReader;
import com.squareup.wire.ProtoWriter;
import com.squareup.wire.WireField;
import com.squareup.wire.internal.Internal;
import java.io.IOException;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.Long;
import java.lang.Object;
import java.lang.Override;
import java.lang.String;
import java.lang.StringBuilder;
import okio.ByteString;

public final class UserVO extends Message<UserVO, UserVO.Builder> {
  public static final ProtoAdapter<UserVO> ADAPTER = new ProtoAdapter_UserVO();

  private static final long serialVersionUID = 0L;

  public static final Long DEFAULT_ID = 0L;

  public static final String DEFAULT_NAME = "";

  public static final String DEFAULT_PHONE = "";

  public static final Integer DEFAULT_SEX = 0;

  public static final Long DEFAULT_ACCOUNT = 0L;

  public static final Long DEFAULT_PRESENT = 0L;

  public static final Long DEFAULT_INTEGRAL = 0L;

  public static final Long DEFAULT_CREATETIME = 0L;

  public static final String DEFAULT_HEADIMG = "";

  public static final String DEFAULT_HEADIMGURL = "";

  public static final Integer DEFAULT_COUPONNUM = 0;

  public static final Integer DEFAULT_MSGNUM = 0;

  public static final String DEFAULT_BIRTHDAY = "";

  public static final String DEFAULT_REALNAME = "";

  public static final String DEFAULT_IDCARD = "";

  public static final Boolean DEFAULT_ISREAL = false;

  public static final Integer DEFAULT_BANKNUM = 0;

  public static final Boolean DEFAULT_HASCASH = false;

  /**
   * 用户ID
   */
  @WireField(
      tag = 1,
      adapter = "com.squareup.wire.ProtoAdapter#UINT64"
  )
  public final Long id;

  /**
   * 用户名
   */
  @WireField(
      tag = 2,
      adapter = "com.squareup.wire.ProtoAdapter#STRING"
  )
  public final String name;

  /**
   * 手机号
   */
  @WireField(
      tag = 3,
      adapter = "com.squareup.wire.ProtoAdapter#STRING"
  )
  public final String phone;

  /**
   * 用户性别 1-男 2-女
   */
  @WireField(
      tag = 4,
      adapter = "com.squareup.wire.ProtoAdapter#UINT32"
  )
  public final Integer sex;

  /**
   * 用户账户余额
   */
  @WireField(
      tag = 5,
      adapter = "com.squareup.wire.ProtoAdapter#UINT64"
  )
  public final Long account;

  /**
   * 用户赠送账户余额
   */
  @WireField(
      tag = 6,
      adapter = "com.squareup.wire.ProtoAdapter#UINT64"
  )
  public final Long present;

  /**
   * 用户积分
   */
  @WireField(
      tag = 7,
      adapter = "com.squareup.wire.ProtoAdapter#UINT64"
  )
  public final Long integral;

  /**
   * 用户创建时间
   */
  @WireField(
      tag = 8,
      adapter = "com.squareup.wire.ProtoAdapter#UINT64"
  )
  public final Long createTime;

  /**
   * 用户头像
   */
  @WireField(
      tag = 9,
      adapter = "com.squareup.wire.ProtoAdapter#STRING"
  )
  public final String headImg;

  /**
   * 用户头像地址
   */
  @WireField(
      tag = 10,
      adapter = "com.squareup.wire.ProtoAdapter#STRING"
  )
  public final String headImgUrl;

  /**
   * 用户优惠券数量
   */
  @WireField(
      tag = 11,
      adapter = "com.squareup.wire.ProtoAdapter#UINT32"
  )
  public final Integer couponNum;

  /**
   * 未读消息数量
   */
  @WireField(
      tag = 12,
      adapter = "com.squareup.wire.ProtoAdapter#UINT32"
  )
  public final Integer msgNum;

  /**
   * 生日
   */
  @WireField(
      tag = 13,
      adapter = "com.squareup.wire.ProtoAdapter#STRING"
  )
  public final String birthday;

  /**
   * 实名制姓名
   */
  @WireField(
      tag = 14,
      adapter = "com.squareup.wire.ProtoAdapter#STRING"
  )
  public final String realName;

  /**
   * 实名制身份证
   */
  @WireField(
      tag = 15,
      adapter = "com.squareup.wire.ProtoAdapter#STRING"
  )
  public final String idcard;

  /**
   * 是否已实名制
   */
  @WireField(
      tag = 16,
      adapter = "com.squareup.wire.ProtoAdapter#BOOL"
  )
  public final Boolean isReal;

  /**
   * 银行卡数
   */
  @WireField(
      tag = 17,
      adapter = "com.squareup.wire.ProtoAdapter#UINT32"
  )
  public final Integer bankNum;

  /**
   * 是否有现金过账
   */
  @WireField(
      tag = 18,
      adapter = "com.squareup.wire.ProtoAdapter#BOOL"
  )
  public final Boolean hasCash;

  public UserVO(Long id, String name, String phone, Integer sex, Long account, Long present, Long integral, Long createTime, String headImg, String headImgUrl, Integer couponNum, Integer msgNum, String birthday, String realName, String idcard, Boolean isReal, Integer bankNum, Boolean hasCash) {
    this(id, name, phone, sex, account, present, integral, createTime, headImg, headImgUrl, couponNum, msgNum, birthday, realName, idcard, isReal, bankNum, hasCash, ByteString.EMPTY);
  }

  public UserVO(Long id, String name, String phone, Integer sex, Long account, Long present, Long integral, Long createTime, String headImg, String headImgUrl, Integer couponNum, Integer msgNum, String birthday, String realName, String idcard, Boolean isReal, Integer bankNum, Boolean hasCash, ByteString unknownFields) {
    super(ADAPTER, unknownFields);
    this.id = id;
    this.name = name;
    this.phone = phone;
    this.sex = sex;
    this.account = account;
    this.present = present;
    this.integral = integral;
    this.createTime = createTime;
    this.headImg = headImg;
    this.headImgUrl = headImgUrl;
    this.couponNum = couponNum;
    this.msgNum = msgNum;
    this.birthday = birthday;
    this.realName = realName;
    this.idcard = idcard;
    this.isReal = isReal;
    this.bankNum = bankNum;
    this.hasCash = hasCash;
  }

  @Override
  public Builder newBuilder() {
    Builder builder = new Builder();
    builder.id = id;
    builder.name = name;
    builder.phone = phone;
    builder.sex = sex;
    builder.account = account;
    builder.present = present;
    builder.integral = integral;
    builder.createTime = createTime;
    builder.headImg = headImg;
    builder.headImgUrl = headImgUrl;
    builder.couponNum = couponNum;
    builder.msgNum = msgNum;
    builder.birthday = birthday;
    builder.realName = realName;
    builder.idcard = idcard;
    builder.isReal = isReal;
    builder.bankNum = bankNum;
    builder.hasCash = hasCash;
    builder.addUnknownFields(unknownFields());
    return builder;
  }

  @Override
  public boolean equals(Object other) {
    if (other == this) return true;
    if (!(other instanceof UserVO)) return false;
    UserVO o = (UserVO) other;
    return unknownFields().equals(o.unknownFields())
        && Internal.equals(id, o.id)
        && Internal.equals(name, o.name)
        && Internal.equals(phone, o.phone)
        && Internal.equals(sex, o.sex)
        && Internal.equals(account, o.account)
        && Internal.equals(present, o.present)
        && Internal.equals(integral, o.integral)
        && Internal.equals(createTime, o.createTime)
        && Internal.equals(headImg, o.headImg)
        && Internal.equals(headImgUrl, o.headImgUrl)
        && Internal.equals(couponNum, o.couponNum)
        && Internal.equals(msgNum, o.msgNum)
        && Internal.equals(birthday, o.birthday)
        && Internal.equals(realName, o.realName)
        && Internal.equals(idcard, o.idcard)
        && Internal.equals(isReal, o.isReal)
        && Internal.equals(bankNum, o.bankNum)
        && Internal.equals(hasCash, o.hasCash);
  }

  @Override
  public int hashCode() {
    int result = super.hashCode;
    if (result == 0) {
      result = unknownFields().hashCode();
      result = result * 37 + (id != null ? id.hashCode() : 0);
      result = result * 37 + (name != null ? name.hashCode() : 0);
      result = result * 37 + (phone != null ? phone.hashCode() : 0);
      result = result * 37 + (sex != null ? sex.hashCode() : 0);
      result = result * 37 + (account != null ? account.hashCode() : 0);
      result = result * 37 + (present != null ? present.hashCode() : 0);
      result = result * 37 + (integral != null ? integral.hashCode() : 0);
      result = result * 37 + (createTime != null ? createTime.hashCode() : 0);
      result = result * 37 + (headImg != null ? headImg.hashCode() : 0);
      result = result * 37 + (headImgUrl != null ? headImgUrl.hashCode() : 0);
      result = result * 37 + (couponNum != null ? couponNum.hashCode() : 0);
      result = result * 37 + (msgNum != null ? msgNum.hashCode() : 0);
      result = result * 37 + (birthday != null ? birthday.hashCode() : 0);
      result = result * 37 + (realName != null ? realName.hashCode() : 0);
      result = result * 37 + (idcard != null ? idcard.hashCode() : 0);
      result = result * 37 + (isReal != null ? isReal.hashCode() : 0);
      result = result * 37 + (bankNum != null ? bankNum.hashCode() : 0);
      result = result * 37 + (hasCash != null ? hasCash.hashCode() : 0);
      super.hashCode = result;
    }
    return result;
  }

  @Override
  public String toString() {
    StringBuilder builder = new StringBuilder();
    if (id != null) builder.append(", id=").append(id);
    if (name != null) builder.append(", name=").append(name);
    if (phone != null) builder.append(", phone=").append(phone);
    if (sex != null) builder.append(", sex=").append(sex);
    if (account != null) builder.append(", account=").append(account);
    if (present != null) builder.append(", present=").append(present);
    if (integral != null) builder.append(", integral=").append(integral);
    if (createTime != null) builder.append(", createTime=").append(createTime);
    if (headImg != null) builder.append(", headImg=").append(headImg);
    if (headImgUrl != null) builder.append(", headImgUrl=").append(headImgUrl);
    if (couponNum != null) builder.append(", couponNum=").append(couponNum);
    if (msgNum != null) builder.append(", msgNum=").append(msgNum);
    if (birthday != null) builder.append(", birthday=").append(birthday);
    if (realName != null) builder.append(", realName=").append(realName);
    if (idcard != null) builder.append(", idcard=").append(idcard);
    if (isReal != null) builder.append(", isReal=").append(isReal);
    if (bankNum != null) builder.append(", bankNum=").append(bankNum);
    if (hasCash != null) builder.append(", hasCash=").append(hasCash);
    return builder.replace(0, 2, "UserVO{").append('}').toString();
  }

  public static final class Builder extends Message.Builder<UserVO, Builder> {
    public Long id;

    public String name;

    public String phone;

    public Integer sex;

    public Long account;

    public Long present;

    public Long integral;

    public Long createTime;

    public String headImg;

    public String headImgUrl;

    public Integer couponNum;

    public Integer msgNum;

    public String birthday;

    public String realName;

    public String idcard;

    public Boolean isReal;

    public Integer bankNum;

    public Boolean hasCash;

    public Builder() {
    }

    /**
     * 用户ID
     */
    public Builder id(Long id) {
      this.id = id;
      return this;
    }

    /**
     * 用户名
     */
    public Builder name(String name) {
      this.name = name;
      return this;
    }

    /**
     * 手机号
     */
    public Builder phone(String phone) {
      this.phone = phone;
      return this;
    }

    /**
     * 用户性别 1-男 2-女
     */
    public Builder sex(Integer sex) {
      this.sex = sex;
      return this;
    }

    /**
     * 用户账户余额
     */
    public Builder account(Long account) {
      this.account = account;
      return this;
    }

    /**
     * 用户赠送账户余额
     */
    public Builder present(Long present) {
      this.present = present;
      return this;
    }

    /**
     * 用户积分
     */
    public Builder integral(Long integral) {
      this.integral = integral;
      return this;
    }

    /**
     * 用户创建时间
     */
    public Builder createTime(Long createTime) {
      this.createTime = createTime;
      return this;
    }

    /**
     * 用户头像
     */
    public Builder headImg(String headImg) {
      this.headImg = headImg;
      return this;
    }

    /**
     * 用户头像地址
     */
    public Builder headImgUrl(String headImgUrl) {
      this.headImgUrl = headImgUrl;
      return this;
    }

    /**
     * 用户优惠券数量
     */
    public Builder couponNum(Integer couponNum) {
      this.couponNum = couponNum;
      return this;
    }

    /**
     * 未读消息数量
     */
    public Builder msgNum(Integer msgNum) {
      this.msgNum = msgNum;
      return this;
    }

    /**
     * 生日
     */
    public Builder birthday(String birthday) {
      this.birthday = birthday;
      return this;
    }

    /**
     * 实名制姓名
     */
    public Builder realName(String realName) {
      this.realName = realName;
      return this;
    }

    /**
     * 实名制身份证
     */
    public Builder idcard(String idcard) {
      this.idcard = idcard;
      return this;
    }

    /**
     * 是否已实名制
     */
    public Builder isReal(Boolean isReal) {
      this.isReal = isReal;
      return this;
    }

    /**
     * 银行卡数
     */
    public Builder bankNum(Integer bankNum) {
      this.bankNum = bankNum;
      return this;
    }

    /**
     * 是否有现金过账
     */
    public Builder hasCash(Boolean hasCash) {
      this.hasCash = hasCash;
      return this;
    }

    @Override
    public UserVO build() {
      return new UserVO(id, name, phone, sex, account, present, integral, createTime, headImg, headImgUrl, couponNum, msgNum, birthday, realName, idcard, isReal, bankNum, hasCash, super.buildUnknownFields());
    }
  }

  private static final class ProtoAdapter_UserVO extends ProtoAdapter<UserVO> {
    ProtoAdapter_UserVO() {
      super(FieldEncoding.LENGTH_DELIMITED, UserVO.class);
    }

    @Override
    public int encodedSize(UserVO value) {
      return (value.id != null ? ProtoAdapter.UINT64.encodedSizeWithTag(1, value.id) : 0)
          + (value.name != null ? ProtoAdapter.STRING.encodedSizeWithTag(2, value.name) : 0)
          + (value.phone != null ? ProtoAdapter.STRING.encodedSizeWithTag(3, value.phone) : 0)
          + (value.sex != null ? ProtoAdapter.UINT32.encodedSizeWithTag(4, value.sex) : 0)
          + (value.account != null ? ProtoAdapter.UINT64.encodedSizeWithTag(5, value.account) : 0)
          + (value.present != null ? ProtoAdapter.UINT64.encodedSizeWithTag(6, value.present) : 0)
          + (value.integral != null ? ProtoAdapter.UINT64.encodedSizeWithTag(7, value.integral) : 0)
          + (value.createTime != null ? ProtoAdapter.UINT64.encodedSizeWithTag(8, value.createTime) : 0)
          + (value.headImg != null ? ProtoAdapter.STRING.encodedSizeWithTag(9, value.headImg) : 0)
          + (value.headImgUrl != null ? ProtoAdapter.STRING.encodedSizeWithTag(10, value.headImgUrl) : 0)
          + (value.couponNum != null ? ProtoAdapter.UINT32.encodedSizeWithTag(11, value.couponNum) : 0)
          + (value.msgNum != null ? ProtoAdapter.UINT32.encodedSizeWithTag(12, value.msgNum) : 0)
          + (value.birthday != null ? ProtoAdapter.STRING.encodedSizeWithTag(13, value.birthday) : 0)
          + (value.realName != null ? ProtoAdapter.STRING.encodedSizeWithTag(14, value.realName) : 0)
          + (value.idcard != null ? ProtoAdapter.STRING.encodedSizeWithTag(15, value.idcard) : 0)
          + (value.isReal != null ? ProtoAdapter.BOOL.encodedSizeWithTag(16, value.isReal) : 0)
          + (value.bankNum != null ? ProtoAdapter.UINT32.encodedSizeWithTag(17, value.bankNum) : 0)
          + (value.hasCash != null ? ProtoAdapter.BOOL.encodedSizeWithTag(18, value.hasCash) : 0)
          + value.unknownFields().size();
    }

    @Override
    public void encode(ProtoWriter writer, UserVO value) throws IOException {
      if (value.id != null) ProtoAdapter.UINT64.encodeWithTag(writer, 1, value.id);
      if (value.name != null) ProtoAdapter.STRING.encodeWithTag(writer, 2, value.name);
      if (value.phone != null) ProtoAdapter.STRING.encodeWithTag(writer, 3, value.phone);
      if (value.sex != null) ProtoAdapter.UINT32.encodeWithTag(writer, 4, value.sex);
      if (value.account != null) ProtoAdapter.UINT64.encodeWithTag(writer, 5, value.account);
      if (value.present != null) ProtoAdapter.UINT64.encodeWithTag(writer, 6, value.present);
      if (value.integral != null) ProtoAdapter.UINT64.encodeWithTag(writer, 7, value.integral);
      if (value.createTime != null) ProtoAdapter.UINT64.encodeWithTag(writer, 8, value.createTime);
      if (value.headImg != null) ProtoAdapter.STRING.encodeWithTag(writer, 9, value.headImg);
      if (value.headImgUrl != null) ProtoAdapter.STRING.encodeWithTag(writer, 10, value.headImgUrl);
      if (value.couponNum != null) ProtoAdapter.UINT32.encodeWithTag(writer, 11, value.couponNum);
      if (value.msgNum != null) ProtoAdapter.UINT32.encodeWithTag(writer, 12, value.msgNum);
      if (value.birthday != null) ProtoAdapter.STRING.encodeWithTag(writer, 13, value.birthday);
      if (value.realName != null) ProtoAdapter.STRING.encodeWithTag(writer, 14, value.realName);
      if (value.idcard != null) ProtoAdapter.STRING.encodeWithTag(writer, 15, value.idcard);
      if (value.isReal != null) ProtoAdapter.BOOL.encodeWithTag(writer, 16, value.isReal);
      if (value.bankNum != null) ProtoAdapter.UINT32.encodeWithTag(writer, 17, value.bankNum);
      if (value.hasCash != null) ProtoAdapter.BOOL.encodeWithTag(writer, 18, value.hasCash);
      writer.writeBytes(value.unknownFields());
    }

    @Override
    public UserVO decode(ProtoReader reader) throws IOException {
      Builder builder = new Builder();
      long token = reader.beginMessage();
      for (int tag; (tag = reader.nextTag()) != -1;) {
        switch (tag) {
          case 1: builder.id(ProtoAdapter.UINT64.decode(reader)); break;
          case 2: builder.name(ProtoAdapter.STRING.decode(reader)); break;
          case 3: builder.phone(ProtoAdapter.STRING.decode(reader)); break;
          case 4: builder.sex(ProtoAdapter.UINT32.decode(reader)); break;
          case 5: builder.account(ProtoAdapter.UINT64.decode(reader)); break;
          case 6: builder.present(ProtoAdapter.UINT64.decode(reader)); break;
          case 7: builder.integral(ProtoAdapter.UINT64.decode(reader)); break;
          case 8: builder.createTime(ProtoAdapter.UINT64.decode(reader)); break;
          case 9: builder.headImg(ProtoAdapter.STRING.decode(reader)); break;
          case 10: builder.headImgUrl(ProtoAdapter.STRING.decode(reader)); break;
          case 11: builder.couponNum(ProtoAdapter.UINT32.decode(reader)); break;
          case 12: builder.msgNum(ProtoAdapter.UINT32.decode(reader)); break;
          case 13: builder.birthday(ProtoAdapter.STRING.decode(reader)); break;
          case 14: builder.realName(ProtoAdapter.STRING.decode(reader)); break;
          case 15: builder.idcard(ProtoAdapter.STRING.decode(reader)); break;
          case 16: builder.isReal(ProtoAdapter.BOOL.decode(reader)); break;
          case 17: builder.bankNum(ProtoAdapter.UINT32.decode(reader)); break;
          case 18: builder.hasCash(ProtoAdapter.BOOL.decode(reader)); break;
          default: {
            FieldEncoding fieldEncoding = reader.peekFieldEncoding();
            Object value = fieldEncoding.rawProtoAdapter().decode(reader);
            builder.addUnknownField(tag, fieldEncoding, value);
          }
        }
      }
      reader.endMessage(token);
      return builder.build();
    }

    @Override
    public UserVO redact(UserVO value) {
      Builder builder = value.newBuilder();
      builder.clearUnknownFields();
      return builder.build();
    }
  }
}
