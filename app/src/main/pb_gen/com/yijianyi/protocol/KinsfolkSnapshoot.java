// Code generated by Wire protocol buffer compiler, do not edit.
// Source file: SaasModel.proto at 584:1
package com.yijianyi.protocol;

import com.squareup.wire.FieldEncoding;
import com.squareup.wire.Message;
import com.squareup.wire.ProtoAdapter;
import com.squareup.wire.ProtoReader;
import com.squareup.wire.ProtoWriter;
import com.squareup.wire.WireField;
import com.squareup.wire.internal.Internal;
import java.io.IOException;
import java.lang.Integer;
import java.lang.Long;
import java.lang.Object;
import java.lang.Override;
import java.lang.String;
import java.lang.StringBuilder;
import java.util.List;
import okio.ByteString;

/**
 * 被陪护人日志信息
 */
public final class KinsfolkSnapshoot extends Message<KinsfolkSnapshoot, KinsfolkSnapshoot.Builder> {
  public static final ProtoAdapter<KinsfolkSnapshoot> ADAPTER = new ProtoAdapter_KinsfolkSnapshoot();

  private static final long serialVersionUID = 0L;

  public static final Long DEFAULT_ID = 0L;

  public static final Long DEFAULT_KINSID = 0L;

  public static final Long DEFAULT_USERID = 0L;

  public static final String DEFAULT_NAME = "";

  public static final Integer DEFAULT_SEX = 0;

  public static final Integer DEFAULT_AGE = 0;

  public static final Long DEFAULT_IDCARDPIC = 0L;

  public static final String DEFAULT_IDCARDNO = "";

  public static final String DEFAULT_MEDICALNO = "";

  public static final String DEFAULT_HEIGHT = "";

  public static final String DEFAULT_WEIGHT = "";

  public static final Integer DEFAULT_ACTABILITY = 0;

  public static final String DEFAULT_MEMOINFO = "";

  public static final Integer DEFAULT_CREATETYPE = 0;

  public static final Long DEFAULT_CREATESTAFFID = 0L;

  public static final String DEFAULT_CREATECHANNEL = "";

  public static final String DEFAULT_CREATESTAFFNAME = "";

  public static final String DEFAULT_CREATETIME = "";

  public static final Integer DEFAULT_MEDICARETYPE = 0;

  public static final String DEFAULT_HEALTHCARENO = "";

  @WireField(
      tag = 1,
      adapter = "com.squareup.wire.ProtoAdapter#UINT64"
  )
  public final Long id;

  /**
   * 被陪护人ID
   */
  @WireField(
      tag = 2,
      adapter = "com.squareup.wire.ProtoAdapter#UINT64"
  )
  public final Long kinsId;

  /**
   * 关联的用户ID
   */
  @WireField(
      tag = 3,
      adapter = "com.squareup.wire.ProtoAdapter#UINT64"
  )
  public final Long userId;

  /**
   * 被陪护人的姓名
   */
  @WireField(
      tag = 4,
      adapter = "com.squareup.wire.ProtoAdapter#STRING"
  )
  public final String name;

  /**
   * 性别
   */
  @WireField(
      tag = 5,
      adapter = "com.squareup.wire.ProtoAdapter#UINT32"
  )
  public final Integer sex;

  /**
   * 年龄
   */
  @WireField(
      tag = 6,
      adapter = "com.squareup.wire.ProtoAdapter#UINT32"
  )
  public final Integer age;

  /**
   * 身份证照片
   */
  @WireField(
      tag = 7,
      adapter = "com.squareup.wire.ProtoAdapter#UINT64"
  )
  public final Long idCardPic;

  /**
   * 被陪护人的身份证号
   */
  @WireField(
      tag = 8,
      adapter = "com.squareup.wire.ProtoAdapter#STRING"
  )
  public final String idcardNo;

  /**
   * 就诊卡号
   */
  @WireField(
      tag = 9,
      adapter = "com.squareup.wire.ProtoAdapter#STRING"
  )
  public final String medicalNO;

  /**
   * 身高
   */
  @WireField(
      tag = 10,
      adapter = "com.squareup.wire.ProtoAdapter#STRING"
  )
  public final String height;

  /**
   * 体重
   */
  @WireField(
      tag = 11,
      adapter = "com.squareup.wire.ProtoAdapter#STRING"
  )
  public final String weight;

  /**
   * 行动能力
   */
  @WireField(
      tag = 12,
      adapter = "com.squareup.wire.ProtoAdapter#UINT32"
  )
  public final Integer actAbility;

  /**
   * 语言
   */
  @WireField(
      tag = 13,
      adapter = "com.squareup.wire.ProtoAdapter#UINT32",
      label = WireField.Label.REPEATED
  )
  public final List<Integer> language;

  /**
   * 备注信息
   */
  @WireField(
      tag = 14,
      adapter = "com.squareup.wire.ProtoAdapter#STRING"
  )
  public final String memoInfo;

  /**
   * 创建类型 1 - 用户APP创建,  2 - 护工APP创建, 3 - SAAS创建
   */
  @WireField(
      tag = 15,
      adapter = "com.squareup.wire.ProtoAdapter#UINT32"
  )
  public final Integer createType;

  /**
   * 创建者ID
   */
  @WireField(
      tag = 16,
      adapter = "com.squareup.wire.ProtoAdapter#UINT64"
  )
  public final Long createStaffId;

  /**
   * 创建渠道
   */
  @WireField(
      tag = 17,
      adapter = "com.squareup.wire.ProtoAdapter#STRING"
  )
  public final String createChannel;

  /**
   * 创建员工
   */
  @WireField(
      tag = 18,
      adapter = "com.squareup.wire.ProtoAdapter#STRING"
  )
  public final String createStaffName;

  /**
   * 创建时间
   */
  @WireField(
      tag = 19,
      adapter = "com.squareup.wire.ProtoAdapter#STRING"
  )
  public final String createTime;

  /**
   * 医保类型
   */
  @WireField(
      tag = 20,
      adapter = "com.squareup.wire.ProtoAdapter#UINT32"
  )
  public final Integer medicareType;

  /**
   * 医保类型
   */
  @WireField(
      tag = 21,
      adapter = "com.squareup.wire.ProtoAdapter#STRING"
  )
  public final String healthCareNO;

  public KinsfolkSnapshoot(Long id, Long kinsId, Long userId, String name, Integer sex, Integer age, Long idCardPic, String idcardNo, String medicalNO, String height, String weight, Integer actAbility, List<Integer> language, String memoInfo, Integer createType, Long createStaffId, String createChannel, String createStaffName, String createTime, Integer medicareType, String healthCareNO) {
    this(id, kinsId, userId, name, sex, age, idCardPic, idcardNo, medicalNO, height, weight, actAbility, language, memoInfo, createType, createStaffId, createChannel, createStaffName, createTime, medicareType, healthCareNO, ByteString.EMPTY);
  }

  public KinsfolkSnapshoot(Long id, Long kinsId, Long userId, String name, Integer sex, Integer age, Long idCardPic, String idcardNo, String medicalNO, String height, String weight, Integer actAbility, List<Integer> language, String memoInfo, Integer createType, Long createStaffId, String createChannel, String createStaffName, String createTime, Integer medicareType, String healthCareNO, ByteString unknownFields) {
    super(ADAPTER, unknownFields);
    this.id = id;
    this.kinsId = kinsId;
    this.userId = userId;
    this.name = name;
    this.sex = sex;
    this.age = age;
    this.idCardPic = idCardPic;
    this.idcardNo = idcardNo;
    this.medicalNO = medicalNO;
    this.height = height;
    this.weight = weight;
    this.actAbility = actAbility;
    this.language = Internal.immutableCopyOf("language", language);
    this.memoInfo = memoInfo;
    this.createType = createType;
    this.createStaffId = createStaffId;
    this.createChannel = createChannel;
    this.createStaffName = createStaffName;
    this.createTime = createTime;
    this.medicareType = medicareType;
    this.healthCareNO = healthCareNO;
  }

  @Override
  public Builder newBuilder() {
    Builder builder = new Builder();
    builder.id = id;
    builder.kinsId = kinsId;
    builder.userId = userId;
    builder.name = name;
    builder.sex = sex;
    builder.age = age;
    builder.idCardPic = idCardPic;
    builder.idcardNo = idcardNo;
    builder.medicalNO = medicalNO;
    builder.height = height;
    builder.weight = weight;
    builder.actAbility = actAbility;
    builder.language = Internal.copyOf("language", language);
    builder.memoInfo = memoInfo;
    builder.createType = createType;
    builder.createStaffId = createStaffId;
    builder.createChannel = createChannel;
    builder.createStaffName = createStaffName;
    builder.createTime = createTime;
    builder.medicareType = medicareType;
    builder.healthCareNO = healthCareNO;
    builder.addUnknownFields(unknownFields());
    return builder;
  }

  @Override
  public boolean equals(Object other) {
    if (other == this) return true;
    if (!(other instanceof KinsfolkSnapshoot)) return false;
    KinsfolkSnapshoot o = (KinsfolkSnapshoot) other;
    return unknownFields().equals(o.unknownFields())
        && Internal.equals(id, o.id)
        && Internal.equals(kinsId, o.kinsId)
        && Internal.equals(userId, o.userId)
        && Internal.equals(name, o.name)
        && Internal.equals(sex, o.sex)
        && Internal.equals(age, o.age)
        && Internal.equals(idCardPic, o.idCardPic)
        && Internal.equals(idcardNo, o.idcardNo)
        && Internal.equals(medicalNO, o.medicalNO)
        && Internal.equals(height, o.height)
        && Internal.equals(weight, o.weight)
        && Internal.equals(actAbility, o.actAbility)
        && language.equals(o.language)
        && Internal.equals(memoInfo, o.memoInfo)
        && Internal.equals(createType, o.createType)
        && Internal.equals(createStaffId, o.createStaffId)
        && Internal.equals(createChannel, o.createChannel)
        && Internal.equals(createStaffName, o.createStaffName)
        && Internal.equals(createTime, o.createTime)
        && Internal.equals(medicareType, o.medicareType)
        && Internal.equals(healthCareNO, o.healthCareNO);
  }

  @Override
  public int hashCode() {
    int result = super.hashCode;
    if (result == 0) {
      result = unknownFields().hashCode();
      result = result * 37 + (id != null ? id.hashCode() : 0);
      result = result * 37 + (kinsId != null ? kinsId.hashCode() : 0);
      result = result * 37 + (userId != null ? userId.hashCode() : 0);
      result = result * 37 + (name != null ? name.hashCode() : 0);
      result = result * 37 + (sex != null ? sex.hashCode() : 0);
      result = result * 37 + (age != null ? age.hashCode() : 0);
      result = result * 37 + (idCardPic != null ? idCardPic.hashCode() : 0);
      result = result * 37 + (idcardNo != null ? idcardNo.hashCode() : 0);
      result = result * 37 + (medicalNO != null ? medicalNO.hashCode() : 0);
      result = result * 37 + (height != null ? height.hashCode() : 0);
      result = result * 37 + (weight != null ? weight.hashCode() : 0);
      result = result * 37 + (actAbility != null ? actAbility.hashCode() : 0);
      result = result * 37 + language.hashCode();
      result = result * 37 + (memoInfo != null ? memoInfo.hashCode() : 0);
      result = result * 37 + (createType != null ? createType.hashCode() : 0);
      result = result * 37 + (createStaffId != null ? createStaffId.hashCode() : 0);
      result = result * 37 + (createChannel != null ? createChannel.hashCode() : 0);
      result = result * 37 + (createStaffName != null ? createStaffName.hashCode() : 0);
      result = result * 37 + (createTime != null ? createTime.hashCode() : 0);
      result = result * 37 + (medicareType != null ? medicareType.hashCode() : 0);
      result = result * 37 + (healthCareNO != null ? healthCareNO.hashCode() : 0);
      super.hashCode = result;
    }
    return result;
  }

  @Override
  public String toString() {
    StringBuilder builder = new StringBuilder();
    if (id != null) builder.append(", id=").append(id);
    if (kinsId != null) builder.append(", kinsId=").append(kinsId);
    if (userId != null) builder.append(", userId=").append(userId);
    if (name != null) builder.append(", name=").append(name);
    if (sex != null) builder.append(", sex=").append(sex);
    if (age != null) builder.append(", age=").append(age);
    if (idCardPic != null) builder.append(", idCardPic=").append(idCardPic);
    if (idcardNo != null) builder.append(", idcardNo=").append(idcardNo);
    if (medicalNO != null) builder.append(", medicalNO=").append(medicalNO);
    if (height != null) builder.append(", height=").append(height);
    if (weight != null) builder.append(", weight=").append(weight);
    if (actAbility != null) builder.append(", actAbility=").append(actAbility);
    if (!language.isEmpty()) builder.append(", language=").append(language);
    if (memoInfo != null) builder.append(", memoInfo=").append(memoInfo);
    if (createType != null) builder.append(", createType=").append(createType);
    if (createStaffId != null) builder.append(", createStaffId=").append(createStaffId);
    if (createChannel != null) builder.append(", createChannel=").append(createChannel);
    if (createStaffName != null) builder.append(", createStaffName=").append(createStaffName);
    if (createTime != null) builder.append(", createTime=").append(createTime);
    if (medicareType != null) builder.append(", medicareType=").append(medicareType);
    if (healthCareNO != null) builder.append(", healthCareNO=").append(healthCareNO);
    return builder.replace(0, 2, "KinsfolkSnapshoot{").append('}').toString();
  }

  public static final class Builder extends Message.Builder<KinsfolkSnapshoot, Builder> {
    public Long id;

    public Long kinsId;

    public Long userId;

    public String name;

    public Integer sex;

    public Integer age;

    public Long idCardPic;

    public String idcardNo;

    public String medicalNO;

    public String height;

    public String weight;

    public Integer actAbility;

    public List<Integer> language;

    public String memoInfo;

    public Integer createType;

    public Long createStaffId;

    public String createChannel;

    public String createStaffName;

    public String createTime;

    public Integer medicareType;

    public String healthCareNO;

    public Builder() {
      language = Internal.newMutableList();
    }

    public Builder id(Long id) {
      this.id = id;
      return this;
    }

    /**
     * 被陪护人ID
     */
    public Builder kinsId(Long kinsId) {
      this.kinsId = kinsId;
      return this;
    }

    /**
     * 关联的用户ID
     */
    public Builder userId(Long userId) {
      this.userId = userId;
      return this;
    }

    /**
     * 被陪护人的姓名
     */
    public Builder name(String name) {
      this.name = name;
      return this;
    }

    /**
     * 性别
     */
    public Builder sex(Integer sex) {
      this.sex = sex;
      return this;
    }

    /**
     * 年龄
     */
    public Builder age(Integer age) {
      this.age = age;
      return this;
    }

    /**
     * 身份证照片
     */
    public Builder idCardPic(Long idCardPic) {
      this.idCardPic = idCardPic;
      return this;
    }

    /**
     * 被陪护人的身份证号
     */
    public Builder idcardNo(String idcardNo) {
      this.idcardNo = idcardNo;
      return this;
    }

    /**
     * 就诊卡号
     */
    public Builder medicalNO(String medicalNO) {
      this.medicalNO = medicalNO;
      return this;
    }

    /**
     * 身高
     */
    public Builder height(String height) {
      this.height = height;
      return this;
    }

    /**
     * 体重
     */
    public Builder weight(String weight) {
      this.weight = weight;
      return this;
    }

    /**
     * 行动能力
     */
    public Builder actAbility(Integer actAbility) {
      this.actAbility = actAbility;
      return this;
    }

    /**
     * 语言
     */
    public Builder language(List<Integer> language) {
      Internal.checkElementsNotNull(language);
      this.language = language;
      return this;
    }

    /**
     * 备注信息
     */
    public Builder memoInfo(String memoInfo) {
      this.memoInfo = memoInfo;
      return this;
    }

    /**
     * 创建类型 1 - 用户APP创建,  2 - 护工APP创建, 3 - SAAS创建
     */
    public Builder createType(Integer createType) {
      this.createType = createType;
      return this;
    }

    /**
     * 创建者ID
     */
    public Builder createStaffId(Long createStaffId) {
      this.createStaffId = createStaffId;
      return this;
    }

    /**
     * 创建渠道
     */
    public Builder createChannel(String createChannel) {
      this.createChannel = createChannel;
      return this;
    }

    /**
     * 创建员工
     */
    public Builder createStaffName(String createStaffName) {
      this.createStaffName = createStaffName;
      return this;
    }

    /**
     * 创建时间
     */
    public Builder createTime(String createTime) {
      this.createTime = createTime;
      return this;
    }

    /**
     * 医保类型
     */
    public Builder medicareType(Integer medicareType) {
      this.medicareType = medicareType;
      return this;
    }

    /**
     * 医保类型
     */
    public Builder healthCareNO(String healthCareNO) {
      this.healthCareNO = healthCareNO;
      return this;
    }

    @Override
    public KinsfolkSnapshoot build() {
      return new KinsfolkSnapshoot(id, kinsId, userId, name, sex, age, idCardPic, idcardNo, medicalNO, height, weight, actAbility, language, memoInfo, createType, createStaffId, createChannel, createStaffName, createTime, medicareType, healthCareNO, super.buildUnknownFields());
    }
  }

  private static final class ProtoAdapter_KinsfolkSnapshoot extends ProtoAdapter<KinsfolkSnapshoot> {
    ProtoAdapter_KinsfolkSnapshoot() {
      super(FieldEncoding.LENGTH_DELIMITED, KinsfolkSnapshoot.class);
    }

    @Override
    public int encodedSize(KinsfolkSnapshoot value) {
      return (value.id != null ? ProtoAdapter.UINT64.encodedSizeWithTag(1, value.id) : 0)
          + (value.kinsId != null ? ProtoAdapter.UINT64.encodedSizeWithTag(2, value.kinsId) : 0)
          + (value.userId != null ? ProtoAdapter.UINT64.encodedSizeWithTag(3, value.userId) : 0)
          + (value.name != null ? ProtoAdapter.STRING.encodedSizeWithTag(4, value.name) : 0)
          + (value.sex != null ? ProtoAdapter.UINT32.encodedSizeWithTag(5, value.sex) : 0)
          + (value.age != null ? ProtoAdapter.UINT32.encodedSizeWithTag(6, value.age) : 0)
          + (value.idCardPic != null ? ProtoAdapter.UINT64.encodedSizeWithTag(7, value.idCardPic) : 0)
          + (value.idcardNo != null ? ProtoAdapter.STRING.encodedSizeWithTag(8, value.idcardNo) : 0)
          + (value.medicalNO != null ? ProtoAdapter.STRING.encodedSizeWithTag(9, value.medicalNO) : 0)
          + (value.height != null ? ProtoAdapter.STRING.encodedSizeWithTag(10, value.height) : 0)
          + (value.weight != null ? ProtoAdapter.STRING.encodedSizeWithTag(11, value.weight) : 0)
          + (value.actAbility != null ? ProtoAdapter.UINT32.encodedSizeWithTag(12, value.actAbility) : 0)
          + ProtoAdapter.UINT32.asRepeated().encodedSizeWithTag(13, value.language)
          + (value.memoInfo != null ? ProtoAdapter.STRING.encodedSizeWithTag(14, value.memoInfo) : 0)
          + (value.createType != null ? ProtoAdapter.UINT32.encodedSizeWithTag(15, value.createType) : 0)
          + (value.createStaffId != null ? ProtoAdapter.UINT64.encodedSizeWithTag(16, value.createStaffId) : 0)
          + (value.createChannel != null ? ProtoAdapter.STRING.encodedSizeWithTag(17, value.createChannel) : 0)
          + (value.createStaffName != null ? ProtoAdapter.STRING.encodedSizeWithTag(18, value.createStaffName) : 0)
          + (value.createTime != null ? ProtoAdapter.STRING.encodedSizeWithTag(19, value.createTime) : 0)
          + (value.medicareType != null ? ProtoAdapter.UINT32.encodedSizeWithTag(20, value.medicareType) : 0)
          + (value.healthCareNO != null ? ProtoAdapter.STRING.encodedSizeWithTag(21, value.healthCareNO) : 0)
          + value.unknownFields().size();
    }

    @Override
    public void encode(ProtoWriter writer, KinsfolkSnapshoot value) throws IOException {
      if (value.id != null) ProtoAdapter.UINT64.encodeWithTag(writer, 1, value.id);
      if (value.kinsId != null) ProtoAdapter.UINT64.encodeWithTag(writer, 2, value.kinsId);
      if (value.userId != null) ProtoAdapter.UINT64.encodeWithTag(writer, 3, value.userId);
      if (value.name != null) ProtoAdapter.STRING.encodeWithTag(writer, 4, value.name);
      if (value.sex != null) ProtoAdapter.UINT32.encodeWithTag(writer, 5, value.sex);
      if (value.age != null) ProtoAdapter.UINT32.encodeWithTag(writer, 6, value.age);
      if (value.idCardPic != null) ProtoAdapter.UINT64.encodeWithTag(writer, 7, value.idCardPic);
      if (value.idcardNo != null) ProtoAdapter.STRING.encodeWithTag(writer, 8, value.idcardNo);
      if (value.medicalNO != null) ProtoAdapter.STRING.encodeWithTag(writer, 9, value.medicalNO);
      if (value.height != null) ProtoAdapter.STRING.encodeWithTag(writer, 10, value.height);
      if (value.weight != null) ProtoAdapter.STRING.encodeWithTag(writer, 11, value.weight);
      if (value.actAbility != null) ProtoAdapter.UINT32.encodeWithTag(writer, 12, value.actAbility);
      ProtoAdapter.UINT32.asRepeated().encodeWithTag(writer, 13, value.language);
      if (value.memoInfo != null) ProtoAdapter.STRING.encodeWithTag(writer, 14, value.memoInfo);
      if (value.createType != null) ProtoAdapter.UINT32.encodeWithTag(writer, 15, value.createType);
      if (value.createStaffId != null) ProtoAdapter.UINT64.encodeWithTag(writer, 16, value.createStaffId);
      if (value.createChannel != null) ProtoAdapter.STRING.encodeWithTag(writer, 17, value.createChannel);
      if (value.createStaffName != null) ProtoAdapter.STRING.encodeWithTag(writer, 18, value.createStaffName);
      if (value.createTime != null) ProtoAdapter.STRING.encodeWithTag(writer, 19, value.createTime);
      if (value.medicareType != null) ProtoAdapter.UINT32.encodeWithTag(writer, 20, value.medicareType);
      if (value.healthCareNO != null) ProtoAdapter.STRING.encodeWithTag(writer, 21, value.healthCareNO);
      writer.writeBytes(value.unknownFields());
    }

    @Override
    public KinsfolkSnapshoot decode(ProtoReader reader) throws IOException {
      Builder builder = new Builder();
      long token = reader.beginMessage();
      for (int tag; (tag = reader.nextTag()) != -1;) {
        switch (tag) {
          case 1: builder.id(ProtoAdapter.UINT64.decode(reader)); break;
          case 2: builder.kinsId(ProtoAdapter.UINT64.decode(reader)); break;
          case 3: builder.userId(ProtoAdapter.UINT64.decode(reader)); break;
          case 4: builder.name(ProtoAdapter.STRING.decode(reader)); break;
          case 5: builder.sex(ProtoAdapter.UINT32.decode(reader)); break;
          case 6: builder.age(ProtoAdapter.UINT32.decode(reader)); break;
          case 7: builder.idCardPic(ProtoAdapter.UINT64.decode(reader)); break;
          case 8: builder.idcardNo(ProtoAdapter.STRING.decode(reader)); break;
          case 9: builder.medicalNO(ProtoAdapter.STRING.decode(reader)); break;
          case 10: builder.height(ProtoAdapter.STRING.decode(reader)); break;
          case 11: builder.weight(ProtoAdapter.STRING.decode(reader)); break;
          case 12: builder.actAbility(ProtoAdapter.UINT32.decode(reader)); break;
          case 13: builder.language.add(ProtoAdapter.UINT32.decode(reader)); break;
          case 14: builder.memoInfo(ProtoAdapter.STRING.decode(reader)); break;
          case 15: builder.createType(ProtoAdapter.UINT32.decode(reader)); break;
          case 16: builder.createStaffId(ProtoAdapter.UINT64.decode(reader)); break;
          case 17: builder.createChannel(ProtoAdapter.STRING.decode(reader)); break;
          case 18: builder.createStaffName(ProtoAdapter.STRING.decode(reader)); break;
          case 19: builder.createTime(ProtoAdapter.STRING.decode(reader)); break;
          case 20: builder.medicareType(ProtoAdapter.UINT32.decode(reader)); break;
          case 21: builder.healthCareNO(ProtoAdapter.STRING.decode(reader)); break;
          default: {
            FieldEncoding fieldEncoding = reader.peekFieldEncoding();
            Object value = fieldEncoding.rawProtoAdapter().decode(reader);
            builder.addUnknownField(tag, fieldEncoding, value);
          }
        }
      }
      reader.endMessage(token);
      return builder.build();
    }

    @Override
    public KinsfolkSnapshoot redact(KinsfolkSnapshoot value) {
      Builder builder = value.newBuilder();
      builder.clearUnknownFields();
      return builder.build();
    }
  }
}
