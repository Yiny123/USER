// Code generated by Wire protocol buffer compiler, do not edit.
// Source file: AppInterface.proto at 1222:1
package com.yijianyi.protocol;

import com.squareup.wire.FieldEncoding;
import com.squareup.wire.Message;
import com.squareup.wire.ProtoAdapter;
import com.squareup.wire.ProtoReader;
import com.squareup.wire.ProtoWriter;
import com.squareup.wire.WireField;
import com.squareup.wire.internal.Internal;
import java.io.IOException;
import java.lang.Object;
import java.lang.Override;
import java.lang.String;
import java.lang.StringBuilder;
import okio.ByteString;

/**
 * 新增用户银行卡
 */
public final class AddUserBankReq extends Message<AddUserBankReq, AddUserBankReq.Builder> {
  public static final ProtoAdapter<AddUserBankReq> ADAPTER = new ProtoAdapter_AddUserBankReq();

  private static final long serialVersionUID = 0L;

  public static final String DEFAULT_CARDHOLDERNAME = "";

  public static final String DEFAULT_CARDNO = "";

  public static final String DEFAULT_BANKBRANCH = "";

  /**
   * 持卡人姓名
   */
  @WireField(
      tag = 1,
      adapter = "com.squareup.wire.ProtoAdapter#STRING"
  )
  public final String cardholderName;

  /**
   * 银行卡号
   */
  @WireField(
      tag = 2,
      adapter = "com.squareup.wire.ProtoAdapter#STRING"
  )
  public final String cardNO;

  /**
   * 银行支行
   */
  @WireField(
      tag = 3,
      adapter = "com.squareup.wire.ProtoAdapter#STRING"
  )
  public final String bankBranch;

  public AddUserBankReq(String cardholderName, String cardNO, String bankBranch) {
    this(cardholderName, cardNO, bankBranch, ByteString.EMPTY);
  }

  public AddUserBankReq(String cardholderName, String cardNO, String bankBranch, ByteString unknownFields) {
    super(ADAPTER, unknownFields);
    this.cardholderName = cardholderName;
    this.cardNO = cardNO;
    this.bankBranch = bankBranch;
  }

  @Override
  public Builder newBuilder() {
    Builder builder = new Builder();
    builder.cardholderName = cardholderName;
    builder.cardNO = cardNO;
    builder.bankBranch = bankBranch;
    builder.addUnknownFields(unknownFields());
    return builder;
  }

  @Override
  public boolean equals(Object other) {
    if (other == this) return true;
    if (!(other instanceof AddUserBankReq)) return false;
    AddUserBankReq o = (AddUserBankReq) other;
    return unknownFields().equals(o.unknownFields())
        && Internal.equals(cardholderName, o.cardholderName)
        && Internal.equals(cardNO, o.cardNO)
        && Internal.equals(bankBranch, o.bankBranch);
  }

  @Override
  public int hashCode() {
    int result = super.hashCode;
    if (result == 0) {
      result = unknownFields().hashCode();
      result = result * 37 + (cardholderName != null ? cardholderName.hashCode() : 0);
      result = result * 37 + (cardNO != null ? cardNO.hashCode() : 0);
      result = result * 37 + (bankBranch != null ? bankBranch.hashCode() : 0);
      super.hashCode = result;
    }
    return result;
  }

  @Override
  public String toString() {
    StringBuilder builder = new StringBuilder();
    if (cardholderName != null) builder.append(", cardholderName=").append(cardholderName);
    if (cardNO != null) builder.append(", cardNO=").append(cardNO);
    if (bankBranch != null) builder.append(", bankBranch=").append(bankBranch);
    return builder.replace(0, 2, "AddUserBankReq{").append('}').toString();
  }

  public static final class Builder extends Message.Builder<AddUserBankReq, Builder> {
    public String cardholderName;

    public String cardNO;

    public String bankBranch;

    public Builder() {
    }

    /**
     * 持卡人姓名
     */
    public Builder cardholderName(String cardholderName) {
      this.cardholderName = cardholderName;
      return this;
    }

    /**
     * 银行卡号
     */
    public Builder cardNO(String cardNO) {
      this.cardNO = cardNO;
      return this;
    }

    /**
     * 银行支行
     */
    public Builder bankBranch(String bankBranch) {
      this.bankBranch = bankBranch;
      return this;
    }

    @Override
    public AddUserBankReq build() {
      return new AddUserBankReq(cardholderName, cardNO, bankBranch, super.buildUnknownFields());
    }
  }

  private static final class ProtoAdapter_AddUserBankReq extends ProtoAdapter<AddUserBankReq> {
    ProtoAdapter_AddUserBankReq() {
      super(FieldEncoding.LENGTH_DELIMITED, AddUserBankReq.class);
    }

    @Override
    public int encodedSize(AddUserBankReq value) {
      return (value.cardholderName != null ? ProtoAdapter.STRING.encodedSizeWithTag(1, value.cardholderName) : 0)
          + (value.cardNO != null ? ProtoAdapter.STRING.encodedSizeWithTag(2, value.cardNO) : 0)
          + (value.bankBranch != null ? ProtoAdapter.STRING.encodedSizeWithTag(3, value.bankBranch) : 0)
          + value.unknownFields().size();
    }

    @Override
    public void encode(ProtoWriter writer, AddUserBankReq value) throws IOException {
      if (value.cardholderName != null) ProtoAdapter.STRING.encodeWithTag(writer, 1, value.cardholderName);
      if (value.cardNO != null) ProtoAdapter.STRING.encodeWithTag(writer, 2, value.cardNO);
      if (value.bankBranch != null) ProtoAdapter.STRING.encodeWithTag(writer, 3, value.bankBranch);
      writer.writeBytes(value.unknownFields());
    }

    @Override
    public AddUserBankReq decode(ProtoReader reader) throws IOException {
      Builder builder = new Builder();
      long token = reader.beginMessage();
      for (int tag; (tag = reader.nextTag()) != -1;) {
        switch (tag) {
          case 1: builder.cardholderName(ProtoAdapter.STRING.decode(reader)); break;
          case 2: builder.cardNO(ProtoAdapter.STRING.decode(reader)); break;
          case 3: builder.bankBranch(ProtoAdapter.STRING.decode(reader)); break;
          default: {
            FieldEncoding fieldEncoding = reader.peekFieldEncoding();
            Object value = fieldEncoding.rawProtoAdapter().decode(reader);
            builder.addUnknownField(tag, fieldEncoding, value);
          }
        }
      }
      reader.endMessage(token);
      return builder.build();
    }

    @Override
    public AddUserBankReq redact(AddUserBankReq value) {
      Builder builder = value.newBuilder();
      builder.clearUnknownFields();
      return builder.build();
    }
  }
}
