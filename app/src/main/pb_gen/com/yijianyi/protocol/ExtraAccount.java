// Code generated by Wire protocol buffer compiler, do not edit.
// Source file: SaasModel.proto at 1290:1
package com.yijianyi.protocol;

import com.squareup.wire.FieldEncoding;
import com.squareup.wire.Message;
import com.squareup.wire.ProtoAdapter;
import com.squareup.wire.ProtoReader;
import com.squareup.wire.ProtoWriter;
import com.squareup.wire.WireField;
import com.squareup.wire.internal.Internal;
import java.io.IOException;
import java.lang.Long;
import java.lang.Object;
import java.lang.Override;
import java.lang.String;
import java.lang.StringBuilder;
import okio.ByteString;

/**
 *  门禁卡押金总费用表
 */
public final class ExtraAccount extends Message<ExtraAccount, ExtraAccount.Builder> {
  public static final ProtoAdapter<ExtraAccount> ADAPTER = new ProtoAdapter_ExtraAccount();

  private static final long serialVersionUID = 0L;

  public static final Long DEFAULT_ID = 0L;

  public static final Long DEFAULT_ORGID = 0L;

  public static final Long DEFAULT_FEE = 0L;

  public static final Long DEFAULT_CASHFEE = 0L;

  /**
   * id
   */
  @WireField(
      tag = 1,
      adapter = "com.squareup.wire.ProtoAdapter#UINT64"
  )
  public final Long id;

  /**
   * 机构id
   */
  @WireField(
      tag = 2,
      adapter = "com.squareup.wire.ProtoAdapter#UINT64"
  )
  public final Long orgId;

  /**
   * 门禁卡费用
   */
  @WireField(
      tag = 3,
      adapter = "com.squareup.wire.ProtoAdapter#INT64"
  )
  public final Long fee;

  /**
   * 门禁卡现金费用
   */
  @WireField(
      tag = 4,
      adapter = "com.squareup.wire.ProtoAdapter#INT64"
  )
  public final Long cashFee;

  public ExtraAccount(Long id, Long orgId, Long fee, Long cashFee) {
    this(id, orgId, fee, cashFee, ByteString.EMPTY);
  }

  public ExtraAccount(Long id, Long orgId, Long fee, Long cashFee, ByteString unknownFields) {
    super(ADAPTER, unknownFields);
    this.id = id;
    this.orgId = orgId;
    this.fee = fee;
    this.cashFee = cashFee;
  }

  @Override
  public Builder newBuilder() {
    Builder builder = new Builder();
    builder.id = id;
    builder.orgId = orgId;
    builder.fee = fee;
    builder.cashFee = cashFee;
    builder.addUnknownFields(unknownFields());
    return builder;
  }

  @Override
  public boolean equals(Object other) {
    if (other == this) return true;
    if (!(other instanceof ExtraAccount)) return false;
    ExtraAccount o = (ExtraAccount) other;
    return unknownFields().equals(o.unknownFields())
        && Internal.equals(id, o.id)
        && Internal.equals(orgId, o.orgId)
        && Internal.equals(fee, o.fee)
        && Internal.equals(cashFee, o.cashFee);
  }

  @Override
  public int hashCode() {
    int result = super.hashCode;
    if (result == 0) {
      result = unknownFields().hashCode();
      result = result * 37 + (id != null ? id.hashCode() : 0);
      result = result * 37 + (orgId != null ? orgId.hashCode() : 0);
      result = result * 37 + (fee != null ? fee.hashCode() : 0);
      result = result * 37 + (cashFee != null ? cashFee.hashCode() : 0);
      super.hashCode = result;
    }
    return result;
  }

  @Override
  public String toString() {
    StringBuilder builder = new StringBuilder();
    if (id != null) builder.append(", id=").append(id);
    if (orgId != null) builder.append(", orgId=").append(orgId);
    if (fee != null) builder.append(", fee=").append(fee);
    if (cashFee != null) builder.append(", cashFee=").append(cashFee);
    return builder.replace(0, 2, "ExtraAccount{").append('}').toString();
  }

  public static final class Builder extends Message.Builder<ExtraAccount, Builder> {
    public Long id;

    public Long orgId;

    public Long fee;

    public Long cashFee;

    public Builder() {
    }

    /**
     * id
     */
    public Builder id(Long id) {
      this.id = id;
      return this;
    }

    /**
     * 机构id
     */
    public Builder orgId(Long orgId) {
      this.orgId = orgId;
      return this;
    }

    /**
     * 门禁卡费用
     */
    public Builder fee(Long fee) {
      this.fee = fee;
      return this;
    }

    /**
     * 门禁卡现金费用
     */
    public Builder cashFee(Long cashFee) {
      this.cashFee = cashFee;
      return this;
    }

    @Override
    public ExtraAccount build() {
      return new ExtraAccount(id, orgId, fee, cashFee, super.buildUnknownFields());
    }
  }

  private static final class ProtoAdapter_ExtraAccount extends ProtoAdapter<ExtraAccount> {
    ProtoAdapter_ExtraAccount() {
      super(FieldEncoding.LENGTH_DELIMITED, ExtraAccount.class);
    }

    @Override
    public int encodedSize(ExtraAccount value) {
      return (value.id != null ? ProtoAdapter.UINT64.encodedSizeWithTag(1, value.id) : 0)
          + (value.orgId != null ? ProtoAdapter.UINT64.encodedSizeWithTag(2, value.orgId) : 0)
          + (value.fee != null ? ProtoAdapter.INT64.encodedSizeWithTag(3, value.fee) : 0)
          + (value.cashFee != null ? ProtoAdapter.INT64.encodedSizeWithTag(4, value.cashFee) : 0)
          + value.unknownFields().size();
    }

    @Override
    public void encode(ProtoWriter writer, ExtraAccount value) throws IOException {
      if (value.id != null) ProtoAdapter.UINT64.encodeWithTag(writer, 1, value.id);
      if (value.orgId != null) ProtoAdapter.UINT64.encodeWithTag(writer, 2, value.orgId);
      if (value.fee != null) ProtoAdapter.INT64.encodeWithTag(writer, 3, value.fee);
      if (value.cashFee != null) ProtoAdapter.INT64.encodeWithTag(writer, 4, value.cashFee);
      writer.writeBytes(value.unknownFields());
    }

    @Override
    public ExtraAccount decode(ProtoReader reader) throws IOException {
      Builder builder = new Builder();
      long token = reader.beginMessage();
      for (int tag; (tag = reader.nextTag()) != -1;) {
        switch (tag) {
          case 1: builder.id(ProtoAdapter.UINT64.decode(reader)); break;
          case 2: builder.orgId(ProtoAdapter.UINT64.decode(reader)); break;
          case 3: builder.fee(ProtoAdapter.INT64.decode(reader)); break;
          case 4: builder.cashFee(ProtoAdapter.INT64.decode(reader)); break;
          default: {
            FieldEncoding fieldEncoding = reader.peekFieldEncoding();
            Object value = fieldEncoding.rawProtoAdapter().decode(reader);
            builder.addUnknownField(tag, fieldEncoding, value);
          }
        }
      }
      reader.endMessage(token);
      return builder.build();
    }

    @Override
    public ExtraAccount redact(ExtraAccount value) {
      Builder builder = value.newBuilder();
      builder.clearUnknownFields();
      return builder.build();
    }
  }
}
