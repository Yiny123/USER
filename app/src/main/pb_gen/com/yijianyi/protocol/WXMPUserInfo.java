// Code generated by Wire protocol buffer compiler, do not edit.
// Source file: Model.proto at 75:1
package com.yijianyi.protocol;

import com.squareup.wire.FieldEncoding;
import com.squareup.wire.Message;
import com.squareup.wire.ProtoAdapter;
import com.squareup.wire.ProtoReader;
import com.squareup.wire.ProtoWriter;
import com.squareup.wire.WireField;
import com.squareup.wire.internal.Internal;
import java.io.IOException;
import java.lang.Integer;
import java.lang.Long;
import java.lang.Object;
import java.lang.Override;
import java.lang.String;
import java.lang.StringBuilder;
import okio.ByteString;

public final class WXMPUserInfo extends Message<WXMPUserInfo, WXMPUserInfo.Builder> {
  public static final ProtoAdapter<WXMPUserInfo> ADAPTER = new ProtoAdapter_WXMPUserInfo();

  private static final long serialVersionUID = 0L;

  public static final String DEFAULT_OPENID = "";

  public static final String DEFAULT_UNIONID = "";

  public static final Long DEFAULT_USERID = 0L;

  public static final Integer DEFAULT_ACTTYPE = 0;

  public static final Integer DEFAULT_CHANNELID = 0;

  public static final Long DEFAULT_CREATETIME = 0L;

  @WireField(
      tag = 1,
      adapter = "com.squareup.wire.ProtoAdapter#STRING"
  )
  public final String openId;

  @WireField(
      tag = 2,
      adapter = "com.squareup.wire.ProtoAdapter#STRING"
  )
  public final String unionid;

  @WireField(
      tag = 3,
      adapter = "com.squareup.wire.ProtoAdapter#UINT64"
  )
  public final Long userId;

  @WireField(
      tag = 4,
      adapter = "com.squareup.wire.ProtoAdapter#UINT32"
  )
  public final Integer actType;

  @WireField(
      tag = 5,
      adapter = "com.squareup.wire.ProtoAdapter#UINT32"
  )
  public final Integer channelId;

  @WireField(
      tag = 6,
      adapter = "com.squareup.wire.ProtoAdapter#UINT64"
  )
  public final Long createTime;

  public WXMPUserInfo(String openId, String unionid, Long userId, Integer actType, Integer channelId, Long createTime) {
    this(openId, unionid, userId, actType, channelId, createTime, ByteString.EMPTY);
  }

  public WXMPUserInfo(String openId, String unionid, Long userId, Integer actType, Integer channelId, Long createTime, ByteString unknownFields) {
    super(ADAPTER, unknownFields);
    this.openId = openId;
    this.unionid = unionid;
    this.userId = userId;
    this.actType = actType;
    this.channelId = channelId;
    this.createTime = createTime;
  }

  @Override
  public Builder newBuilder() {
    Builder builder = new Builder();
    builder.openId = openId;
    builder.unionid = unionid;
    builder.userId = userId;
    builder.actType = actType;
    builder.channelId = channelId;
    builder.createTime = createTime;
    builder.addUnknownFields(unknownFields());
    return builder;
  }

  @Override
  public boolean equals(Object other) {
    if (other == this) return true;
    if (!(other instanceof WXMPUserInfo)) return false;
    WXMPUserInfo o = (WXMPUserInfo) other;
    return unknownFields().equals(o.unknownFields())
        && Internal.equals(openId, o.openId)
        && Internal.equals(unionid, o.unionid)
        && Internal.equals(userId, o.userId)
        && Internal.equals(actType, o.actType)
        && Internal.equals(channelId, o.channelId)
        && Internal.equals(createTime, o.createTime);
  }

  @Override
  public int hashCode() {
    int result = super.hashCode;
    if (result == 0) {
      result = unknownFields().hashCode();
      result = result * 37 + (openId != null ? openId.hashCode() : 0);
      result = result * 37 + (unionid != null ? unionid.hashCode() : 0);
      result = result * 37 + (userId != null ? userId.hashCode() : 0);
      result = result * 37 + (actType != null ? actType.hashCode() : 0);
      result = result * 37 + (channelId != null ? channelId.hashCode() : 0);
      result = result * 37 + (createTime != null ? createTime.hashCode() : 0);
      super.hashCode = result;
    }
    return result;
  }

  @Override
  public String toString() {
    StringBuilder builder = new StringBuilder();
    if (openId != null) builder.append(", openId=").append(openId);
    if (unionid != null) builder.append(", unionid=").append(unionid);
    if (userId != null) builder.append(", userId=").append(userId);
    if (actType != null) builder.append(", actType=").append(actType);
    if (channelId != null) builder.append(", channelId=").append(channelId);
    if (createTime != null) builder.append(", createTime=").append(createTime);
    return builder.replace(0, 2, "WXMPUserInfo{").append('}').toString();
  }

  public static final class Builder extends Message.Builder<WXMPUserInfo, Builder> {
    public String openId;

    public String unionid;

    public Long userId;

    public Integer actType;

    public Integer channelId;

    public Long createTime;

    public Builder() {
    }

    public Builder openId(String openId) {
      this.openId = openId;
      return this;
    }

    public Builder unionid(String unionid) {
      this.unionid = unionid;
      return this;
    }

    public Builder userId(Long userId) {
      this.userId = userId;
      return this;
    }

    public Builder actType(Integer actType) {
      this.actType = actType;
      return this;
    }

    public Builder channelId(Integer channelId) {
      this.channelId = channelId;
      return this;
    }

    public Builder createTime(Long createTime) {
      this.createTime = createTime;
      return this;
    }

    @Override
    public WXMPUserInfo build() {
      return new WXMPUserInfo(openId, unionid, userId, actType, channelId, createTime, super.buildUnknownFields());
    }
  }

  private static final class ProtoAdapter_WXMPUserInfo extends ProtoAdapter<WXMPUserInfo> {
    ProtoAdapter_WXMPUserInfo() {
      super(FieldEncoding.LENGTH_DELIMITED, WXMPUserInfo.class);
    }

    @Override
    public int encodedSize(WXMPUserInfo value) {
      return (value.openId != null ? ProtoAdapter.STRING.encodedSizeWithTag(1, value.openId) : 0)
          + (value.unionid != null ? ProtoAdapter.STRING.encodedSizeWithTag(2, value.unionid) : 0)
          + (value.userId != null ? ProtoAdapter.UINT64.encodedSizeWithTag(3, value.userId) : 0)
          + (value.actType != null ? ProtoAdapter.UINT32.encodedSizeWithTag(4, value.actType) : 0)
          + (value.channelId != null ? ProtoAdapter.UINT32.encodedSizeWithTag(5, value.channelId) : 0)
          + (value.createTime != null ? ProtoAdapter.UINT64.encodedSizeWithTag(6, value.createTime) : 0)
          + value.unknownFields().size();
    }

    @Override
    public void encode(ProtoWriter writer, WXMPUserInfo value) throws IOException {
      if (value.openId != null) ProtoAdapter.STRING.encodeWithTag(writer, 1, value.openId);
      if (value.unionid != null) ProtoAdapter.STRING.encodeWithTag(writer, 2, value.unionid);
      if (value.userId != null) ProtoAdapter.UINT64.encodeWithTag(writer, 3, value.userId);
      if (value.actType != null) ProtoAdapter.UINT32.encodeWithTag(writer, 4, value.actType);
      if (value.channelId != null) ProtoAdapter.UINT32.encodeWithTag(writer, 5, value.channelId);
      if (value.createTime != null) ProtoAdapter.UINT64.encodeWithTag(writer, 6, value.createTime);
      writer.writeBytes(value.unknownFields());
    }

    @Override
    public WXMPUserInfo decode(ProtoReader reader) throws IOException {
      Builder builder = new Builder();
      long token = reader.beginMessage();
      for (int tag; (tag = reader.nextTag()) != -1;) {
        switch (tag) {
          case 1: builder.openId(ProtoAdapter.STRING.decode(reader)); break;
          case 2: builder.unionid(ProtoAdapter.STRING.decode(reader)); break;
          case 3: builder.userId(ProtoAdapter.UINT64.decode(reader)); break;
          case 4: builder.actType(ProtoAdapter.UINT32.decode(reader)); break;
          case 5: builder.channelId(ProtoAdapter.UINT32.decode(reader)); break;
          case 6: builder.createTime(ProtoAdapter.UINT64.decode(reader)); break;
          default: {
            FieldEncoding fieldEncoding = reader.peekFieldEncoding();
            Object value = fieldEncoding.rawProtoAdapter().decode(reader);
            builder.addUnknownField(tag, fieldEncoding, value);
          }
        }
      }
      reader.endMessage(token);
      return builder.build();
    }

    @Override
    public WXMPUserInfo redact(WXMPUserInfo value) {
      Builder builder = value.newBuilder();
      builder.clearUnknownFields();
      return builder.build();
    }
  }
}
