// Code generated by Wire protocol buffer compiler, do not edit.
// Source file: SaasModel.proto at 170:1
package com.yijianyi.protocol;

import com.squareup.wire.FieldEncoding;
import com.squareup.wire.Message;
import com.squareup.wire.ProtoAdapter;
import com.squareup.wire.ProtoReader;
import com.squareup.wire.ProtoWriter;
import com.squareup.wire.WireField;
import com.squareup.wire.internal.Internal;
import java.io.IOException;
import java.lang.Integer;
import java.lang.Long;
import java.lang.Object;
import java.lang.Override;
import java.lang.String;
import java.lang.StringBuilder;
import okio.ByteString;

public final class RoomModel extends Message<RoomModel, RoomModel.Builder> {
  public static final ProtoAdapter<RoomModel> ADAPTER = new ProtoAdapter_RoomModel();

  private static final long serialVersionUID = 0L;

  public static final Long DEFAULT_ROOMID = 0L;

  public static final Long DEFAULT_COMPANYID = 0L;

  public static final Long DEFAULT_ORGID = 0L;

  public static final Long DEFAULT_BRANCHID = 0L;

  public static final String DEFAULT_ROOMNO = "";

  public static final Integer DEFAULT_STATE = 0;

  public static final Long DEFAULT_CREATETIME = 0L;

  public static final Integer DEFAULT_CREATETYPE = 0;

  public static final String DEFAULT_CREATECHANNEL = "";

  public static final Long DEFAULT_CREATESTAFFID = 0L;

  public static final String DEFAULT_CREATESTAFFNAME = "";

  /**
   * 房间ID
   */
  @WireField(
      tag = 1,
      adapter = "com.squareup.wire.ProtoAdapter#UINT64"
  )
  public final Long roomId;

  /**
   * 公司ID
   */
  @WireField(
      tag = 2,
      adapter = "com.squareup.wire.ProtoAdapter#UINT64"
  )
  public final Long companyId;

  /**
   * 机构ID
   */
  @WireField(
      tag = 3,
      adapter = "com.squareup.wire.ProtoAdapter#UINT64"
  )
  public final Long orgId;

  /**
   * 科室ID
   */
  @WireField(
      tag = 4,
      adapter = "com.squareup.wire.ProtoAdapter#UINT64"
  )
  public final Long branchId;

  /**
   * 房号
   */
  @WireField(
      tag = 5,
      adapter = "com.squareup.wire.ProtoAdapter#STRING"
  )
  public final String roomNo;

  /**
   *  房间的状态 -1 已删除 0 正常
   */
  @WireField(
      tag = 6,
      adapter = "com.squareup.wire.ProtoAdapter#UINT32"
  )
  public final Integer state;

  /**
   * 创建时间
   */
  @WireField(
      tag = 7,
      adapter = "com.squareup.wire.ProtoAdapter#UINT64"
  )
  public final Long createTime;

  /**
   * 1-自己注册  2-公司添加
   */
  @WireField(
      tag = 8,
      adapter = "com.squareup.wire.ProtoAdapter#UINT32"
  )
  public final Integer createType;

  /**
   * 创建渠道
   */
  @WireField(
      tag = 9,
      adapter = "com.squareup.wire.ProtoAdapter#STRING"
  )
  public final String createChannel;

  /**
   * 创建员工ID
   */
  @WireField(
      tag = 10,
      adapter = "com.squareup.wire.ProtoAdapter#UINT64"
  )
  public final Long createStaffId;

  /**
   * 创建员工名称
   */
  @WireField(
      tag = 11,
      adapter = "com.squareup.wire.ProtoAdapter#STRING"
  )
  public final String createStaffName;

  public RoomModel(Long roomId, Long companyId, Long orgId, Long branchId, String roomNo, Integer state, Long createTime, Integer createType, String createChannel, Long createStaffId, String createStaffName) {
    this(roomId, companyId, orgId, branchId, roomNo, state, createTime, createType, createChannel, createStaffId, createStaffName, ByteString.EMPTY);
  }

  public RoomModel(Long roomId, Long companyId, Long orgId, Long branchId, String roomNo, Integer state, Long createTime, Integer createType, String createChannel, Long createStaffId, String createStaffName, ByteString unknownFields) {
    super(ADAPTER, unknownFields);
    this.roomId = roomId;
    this.companyId = companyId;
    this.orgId = orgId;
    this.branchId = branchId;
    this.roomNo = roomNo;
    this.state = state;
    this.createTime = createTime;
    this.createType = createType;
    this.createChannel = createChannel;
    this.createStaffId = createStaffId;
    this.createStaffName = createStaffName;
  }

  @Override
  public Builder newBuilder() {
    Builder builder = new Builder();
    builder.roomId = roomId;
    builder.companyId = companyId;
    builder.orgId = orgId;
    builder.branchId = branchId;
    builder.roomNo = roomNo;
    builder.state = state;
    builder.createTime = createTime;
    builder.createType = createType;
    builder.createChannel = createChannel;
    builder.createStaffId = createStaffId;
    builder.createStaffName = createStaffName;
    builder.addUnknownFields(unknownFields());
    return builder;
  }

  @Override
  public boolean equals(Object other) {
    if (other == this) return true;
    if (!(other instanceof RoomModel)) return false;
    RoomModel o = (RoomModel) other;
    return unknownFields().equals(o.unknownFields())
        && Internal.equals(roomId, o.roomId)
        && Internal.equals(companyId, o.companyId)
        && Internal.equals(orgId, o.orgId)
        && Internal.equals(branchId, o.branchId)
        && Internal.equals(roomNo, o.roomNo)
        && Internal.equals(state, o.state)
        && Internal.equals(createTime, o.createTime)
        && Internal.equals(createType, o.createType)
        && Internal.equals(createChannel, o.createChannel)
        && Internal.equals(createStaffId, o.createStaffId)
        && Internal.equals(createStaffName, o.createStaffName);
  }

  @Override
  public int hashCode() {
    int result = super.hashCode;
    if (result == 0) {
      result = unknownFields().hashCode();
      result = result * 37 + (roomId != null ? roomId.hashCode() : 0);
      result = result * 37 + (companyId != null ? companyId.hashCode() : 0);
      result = result * 37 + (orgId != null ? orgId.hashCode() : 0);
      result = result * 37 + (branchId != null ? branchId.hashCode() : 0);
      result = result * 37 + (roomNo != null ? roomNo.hashCode() : 0);
      result = result * 37 + (state != null ? state.hashCode() : 0);
      result = result * 37 + (createTime != null ? createTime.hashCode() : 0);
      result = result * 37 + (createType != null ? createType.hashCode() : 0);
      result = result * 37 + (createChannel != null ? createChannel.hashCode() : 0);
      result = result * 37 + (createStaffId != null ? createStaffId.hashCode() : 0);
      result = result * 37 + (createStaffName != null ? createStaffName.hashCode() : 0);
      super.hashCode = result;
    }
    return result;
  }

  @Override
  public String toString() {
    StringBuilder builder = new StringBuilder();
    if (roomId != null) builder.append(", roomId=").append(roomId);
    if (companyId != null) builder.append(", companyId=").append(companyId);
    if (orgId != null) builder.append(", orgId=").append(orgId);
    if (branchId != null) builder.append(", branchId=").append(branchId);
    if (roomNo != null) builder.append(", roomNo=").append(roomNo);
    if (state != null) builder.append(", state=").append(state);
    if (createTime != null) builder.append(", createTime=").append(createTime);
    if (createType != null) builder.append(", createType=").append(createType);
    if (createChannel != null) builder.append(", createChannel=").append(createChannel);
    if (createStaffId != null) builder.append(", createStaffId=").append(createStaffId);
    if (createStaffName != null) builder.append(", createStaffName=").append(createStaffName);
    return builder.replace(0, 2, "RoomModel{").append('}').toString();
  }

  public static final class Builder extends Message.Builder<RoomModel, Builder> {
    public Long roomId;

    public Long companyId;

    public Long orgId;

    public Long branchId;

    public String roomNo;

    public Integer state;

    public Long createTime;

    public Integer createType;

    public String createChannel;

    public Long createStaffId;

    public String createStaffName;

    public Builder() {
    }

    /**
     * 房间ID
     */
    public Builder roomId(Long roomId) {
      this.roomId = roomId;
      return this;
    }

    /**
     * 公司ID
     */
    public Builder companyId(Long companyId) {
      this.companyId = companyId;
      return this;
    }

    /**
     * 机构ID
     */
    public Builder orgId(Long orgId) {
      this.orgId = orgId;
      return this;
    }

    /**
     * 科室ID
     */
    public Builder branchId(Long branchId) {
      this.branchId = branchId;
      return this;
    }

    /**
     * 房号
     */
    public Builder roomNo(String roomNo) {
      this.roomNo = roomNo;
      return this;
    }

    /**
     *  房间的状态 -1 已删除 0 正常
     */
    public Builder state(Integer state) {
      this.state = state;
      return this;
    }

    /**
     * 创建时间
     */
    public Builder createTime(Long createTime) {
      this.createTime = createTime;
      return this;
    }

    /**
     * 1-自己注册  2-公司添加
     */
    public Builder createType(Integer createType) {
      this.createType = createType;
      return this;
    }

    /**
     * 创建渠道
     */
    public Builder createChannel(String createChannel) {
      this.createChannel = createChannel;
      return this;
    }

    /**
     * 创建员工ID
     */
    public Builder createStaffId(Long createStaffId) {
      this.createStaffId = createStaffId;
      return this;
    }

    /**
     * 创建员工名称
     */
    public Builder createStaffName(String createStaffName) {
      this.createStaffName = createStaffName;
      return this;
    }

    @Override
    public RoomModel build() {
      return new RoomModel(roomId, companyId, orgId, branchId, roomNo, state, createTime, createType, createChannel, createStaffId, createStaffName, super.buildUnknownFields());
    }
  }

  private static final class ProtoAdapter_RoomModel extends ProtoAdapter<RoomModel> {
    ProtoAdapter_RoomModel() {
      super(FieldEncoding.LENGTH_DELIMITED, RoomModel.class);
    }

    @Override
    public int encodedSize(RoomModel value) {
      return (value.roomId != null ? ProtoAdapter.UINT64.encodedSizeWithTag(1, value.roomId) : 0)
          + (value.companyId != null ? ProtoAdapter.UINT64.encodedSizeWithTag(2, value.companyId) : 0)
          + (value.orgId != null ? ProtoAdapter.UINT64.encodedSizeWithTag(3, value.orgId) : 0)
          + (value.branchId != null ? ProtoAdapter.UINT64.encodedSizeWithTag(4, value.branchId) : 0)
          + (value.roomNo != null ? ProtoAdapter.STRING.encodedSizeWithTag(5, value.roomNo) : 0)
          + (value.state != null ? ProtoAdapter.UINT32.encodedSizeWithTag(6, value.state) : 0)
          + (value.createTime != null ? ProtoAdapter.UINT64.encodedSizeWithTag(7, value.createTime) : 0)
          + (value.createType != null ? ProtoAdapter.UINT32.encodedSizeWithTag(8, value.createType) : 0)
          + (value.createChannel != null ? ProtoAdapter.STRING.encodedSizeWithTag(9, value.createChannel) : 0)
          + (value.createStaffId != null ? ProtoAdapter.UINT64.encodedSizeWithTag(10, value.createStaffId) : 0)
          + (value.createStaffName != null ? ProtoAdapter.STRING.encodedSizeWithTag(11, value.createStaffName) : 0)
          + value.unknownFields().size();
    }

    @Override
    public void encode(ProtoWriter writer, RoomModel value) throws IOException {
      if (value.roomId != null) ProtoAdapter.UINT64.encodeWithTag(writer, 1, value.roomId);
      if (value.companyId != null) ProtoAdapter.UINT64.encodeWithTag(writer, 2, value.companyId);
      if (value.orgId != null) ProtoAdapter.UINT64.encodeWithTag(writer, 3, value.orgId);
      if (value.branchId != null) ProtoAdapter.UINT64.encodeWithTag(writer, 4, value.branchId);
      if (value.roomNo != null) ProtoAdapter.STRING.encodeWithTag(writer, 5, value.roomNo);
      if (value.state != null) ProtoAdapter.UINT32.encodeWithTag(writer, 6, value.state);
      if (value.createTime != null) ProtoAdapter.UINT64.encodeWithTag(writer, 7, value.createTime);
      if (value.createType != null) ProtoAdapter.UINT32.encodeWithTag(writer, 8, value.createType);
      if (value.createChannel != null) ProtoAdapter.STRING.encodeWithTag(writer, 9, value.createChannel);
      if (value.createStaffId != null) ProtoAdapter.UINT64.encodeWithTag(writer, 10, value.createStaffId);
      if (value.createStaffName != null) ProtoAdapter.STRING.encodeWithTag(writer, 11, value.createStaffName);
      writer.writeBytes(value.unknownFields());
    }

    @Override
    public RoomModel decode(ProtoReader reader) throws IOException {
      Builder builder = new Builder();
      long token = reader.beginMessage();
      for (int tag; (tag = reader.nextTag()) != -1;) {
        switch (tag) {
          case 1: builder.roomId(ProtoAdapter.UINT64.decode(reader)); break;
          case 2: builder.companyId(ProtoAdapter.UINT64.decode(reader)); break;
          case 3: builder.orgId(ProtoAdapter.UINT64.decode(reader)); break;
          case 4: builder.branchId(ProtoAdapter.UINT64.decode(reader)); break;
          case 5: builder.roomNo(ProtoAdapter.STRING.decode(reader)); break;
          case 6: builder.state(ProtoAdapter.UINT32.decode(reader)); break;
          case 7: builder.createTime(ProtoAdapter.UINT64.decode(reader)); break;
          case 8: builder.createType(ProtoAdapter.UINT32.decode(reader)); break;
          case 9: builder.createChannel(ProtoAdapter.STRING.decode(reader)); break;
          case 10: builder.createStaffId(ProtoAdapter.UINT64.decode(reader)); break;
          case 11: builder.createStaffName(ProtoAdapter.STRING.decode(reader)); break;
          default: {
            FieldEncoding fieldEncoding = reader.peekFieldEncoding();
            Object value = fieldEncoding.rawProtoAdapter().decode(reader);
            builder.addUnknownField(tag, fieldEncoding, value);
          }
        }
      }
      reader.endMessage(token);
      return builder.build();
    }

    @Override
    public RoomModel redact(RoomModel value) {
      Builder builder = value.newBuilder();
      builder.clearUnknownFields();
      return builder.build();
    }
  }
}
