// Code generated by Wire protocol buffer compiler, do not edit.
// Source file: AppInterface.proto at 1118:1
package com.yijianyi.protocol;

import com.squareup.wire.FieldEncoding;
import com.squareup.wire.Message;
import com.squareup.wire.ProtoAdapter;
import com.squareup.wire.ProtoReader;
import com.squareup.wire.ProtoWriter;
import com.squareup.wire.WireField;
import com.squareup.wire.internal.Internal;
import java.io.IOException;
import java.lang.Double;
import java.lang.Integer;
import java.lang.Long;
import java.lang.Object;
import java.lang.Override;
import java.lang.String;
import java.lang.StringBuilder;
import okio.ByteString;

/**
 * 添加用户地址
 */
public final class AddUserAddrReq extends Message<AddUserAddrReq, AddUserAddrReq.Builder> {
  public static final ProtoAdapter<AddUserAddrReq> ADAPTER = new ProtoAdapter_AddUserAddrReq();

  private static final long serialVersionUID = 0L;

  public static final Long DEFAULT_ADDRID = 0L;

  public static final String DEFAULT_ADDRDETAIL = "";

  public static final String DEFAULT_ADCODE = "";

  public static final String DEFAULT_STREET = "";

  public static final String DEFAULT_BUILDING = "";

  public static final Integer DEFAULT_GPSTYPE = 0;

  public static final Double DEFAULT_LNG = 0.0d;

  public static final Double DEFAULT_LAT = 0.0d;

  public static final Integer DEFAULT_DEFAULTUSE = 0;

  public static final String DEFAULT_PHONE = "";

  public static final String DEFAULT_CONTACTS = "";

  public static final Long DEFAULT_USERID = 0L;

  /**
   * 地址id
   */
  @WireField(
      tag = 1,
      adapter = "com.squareup.wire.ProtoAdapter#UINT64"
  )
  public final Long addrId;

  /**
   * 详细地址
   */
  @WireField(
      tag = 2,
      adapter = "com.squareup.wire.ProtoAdapter#STRING"
  )
  public final String addrDetail;

  /**
   * 地区编码
   */
  @WireField(
      tag = 3,
      adapter = "com.squareup.wire.ProtoAdapter#STRING"
  )
  public final String adCode;

  /**
   * 街道地址
   */
  @WireField(
      tag = 4,
      adapter = "com.squareup.wire.ProtoAdapter#STRING"
  )
  public final String street;

  /**
   * 小区信息
   */
  @WireField(
      tag = 5,
      adapter = "com.squareup.wire.ProtoAdapter#STRING"
  )
  public final String building;

  /**
   * 导航数据类型 1-百度 2-高德
   */
  @WireField(
      tag = 6,
      adapter = "com.squareup.wire.ProtoAdapter#UINT32"
  )
  public final Integer gpsType;

  /**
   * 经度
   */
  @WireField(
      tag = 7,
      adapter = "com.squareup.wire.ProtoAdapter#DOUBLE"
  )
  public final Double lng;

  /**
   * 维度
   */
  @WireField(
      tag = 8,
      adapter = "com.squareup.wire.ProtoAdapter#DOUBLE"
  )
  public final Double lat;

  /**
   * 是否设置为默认地址 1-设置默认地址 0-不设置
   */
  @WireField(
      tag = 9,
      adapter = "com.squareup.wire.ProtoAdapter#UINT32"
  )
  public final Integer defaultUse;

  /**
   * 联系手机号
   */
  @WireField(
      tag = 10,
      adapter = "com.squareup.wire.ProtoAdapter#STRING"
  )
  public final String phone;

  /**
   * 联系人
   */
  @WireField(
      tag = 11,
      adapter = "com.squareup.wire.ProtoAdapter#STRING"
  )
  public final String contacts;

  /**
   * 用户id
   */
  @WireField(
      tag = 12,
      adapter = "com.squareup.wire.ProtoAdapter#UINT64"
  )
  public final Long userId;

  public AddUserAddrReq(Long addrId, String addrDetail, String adCode, String street, String building, Integer gpsType, Double lng, Double lat, Integer defaultUse, String phone, String contacts, Long userId) {
    this(addrId, addrDetail, adCode, street, building, gpsType, lng, lat, defaultUse, phone, contacts, userId, ByteString.EMPTY);
  }

  public AddUserAddrReq(Long addrId, String addrDetail, String adCode, String street, String building, Integer gpsType, Double lng, Double lat, Integer defaultUse, String phone, String contacts, Long userId, ByteString unknownFields) {
    super(ADAPTER, unknownFields);
    this.addrId = addrId;
    this.addrDetail = addrDetail;
    this.adCode = adCode;
    this.street = street;
    this.building = building;
    this.gpsType = gpsType;
    this.lng = lng;
    this.lat = lat;
    this.defaultUse = defaultUse;
    this.phone = phone;
    this.contacts = contacts;
    this.userId = userId;
  }

  @Override
  public Builder newBuilder() {
    Builder builder = new Builder();
    builder.addrId = addrId;
    builder.addrDetail = addrDetail;
    builder.adCode = adCode;
    builder.street = street;
    builder.building = building;
    builder.gpsType = gpsType;
    builder.lng = lng;
    builder.lat = lat;
    builder.defaultUse = defaultUse;
    builder.phone = phone;
    builder.contacts = contacts;
    builder.userId = userId;
    builder.addUnknownFields(unknownFields());
    return builder;
  }

  @Override
  public boolean equals(Object other) {
    if (other == this) return true;
    if (!(other instanceof AddUserAddrReq)) return false;
    AddUserAddrReq o = (AddUserAddrReq) other;
    return unknownFields().equals(o.unknownFields())
        && Internal.equals(addrId, o.addrId)
        && Internal.equals(addrDetail, o.addrDetail)
        && Internal.equals(adCode, o.adCode)
        && Internal.equals(street, o.street)
        && Internal.equals(building, o.building)
        && Internal.equals(gpsType, o.gpsType)
        && Internal.equals(lng, o.lng)
        && Internal.equals(lat, o.lat)
        && Internal.equals(defaultUse, o.defaultUse)
        && Internal.equals(phone, o.phone)
        && Internal.equals(contacts, o.contacts)
        && Internal.equals(userId, o.userId);
  }

  @Override
  public int hashCode() {
    int result = super.hashCode;
    if (result == 0) {
      result = unknownFields().hashCode();
      result = result * 37 + (addrId != null ? addrId.hashCode() : 0);
      result = result * 37 + (addrDetail != null ? addrDetail.hashCode() : 0);
      result = result * 37 + (adCode != null ? adCode.hashCode() : 0);
      result = result * 37 + (street != null ? street.hashCode() : 0);
      result = result * 37 + (building != null ? building.hashCode() : 0);
      result = result * 37 + (gpsType != null ? gpsType.hashCode() : 0);
      result = result * 37 + (lng != null ? lng.hashCode() : 0);
      result = result * 37 + (lat != null ? lat.hashCode() : 0);
      result = result * 37 + (defaultUse != null ? defaultUse.hashCode() : 0);
      result = result * 37 + (phone != null ? phone.hashCode() : 0);
      result = result * 37 + (contacts != null ? contacts.hashCode() : 0);
      result = result * 37 + (userId != null ? userId.hashCode() : 0);
      super.hashCode = result;
    }
    return result;
  }

  @Override
  public String toString() {
    StringBuilder builder = new StringBuilder();
    if (addrId != null) builder.append(", addrId=").append(addrId);
    if (addrDetail != null) builder.append(", addrDetail=").append(addrDetail);
    if (adCode != null) builder.append(", adCode=").append(adCode);
    if (street != null) builder.append(", street=").append(street);
    if (building != null) builder.append(", building=").append(building);
    if (gpsType != null) builder.append(", gpsType=").append(gpsType);
    if (lng != null) builder.append(", lng=").append(lng);
    if (lat != null) builder.append(", lat=").append(lat);
    if (defaultUse != null) builder.append(", defaultUse=").append(defaultUse);
    if (phone != null) builder.append(", phone=").append(phone);
    if (contacts != null) builder.append(", contacts=").append(contacts);
    if (userId != null) builder.append(", userId=").append(userId);
    return builder.replace(0, 2, "AddUserAddrReq{").append('}').toString();
  }

  public static final class Builder extends Message.Builder<AddUserAddrReq, Builder> {
    public Long addrId;

    public String addrDetail;

    public String adCode;

    public String street;

    public String building;

    public Integer gpsType;

    public Double lng;

    public Double lat;

    public Integer defaultUse;

    public String phone;

    public String contacts;

    public Long userId;

    public Builder() {
    }

    /**
     * 地址id
     */
    public Builder addrId(Long addrId) {
      this.addrId = addrId;
      return this;
    }

    /**
     * 详细地址
     */
    public Builder addrDetail(String addrDetail) {
      this.addrDetail = addrDetail;
      return this;
    }

    /**
     * 地区编码
     */
    public Builder adCode(String adCode) {
      this.adCode = adCode;
      return this;
    }

    /**
     * 街道地址
     */
    public Builder street(String street) {
      this.street = street;
      return this;
    }

    /**
     * 小区信息
     */
    public Builder building(String building) {
      this.building = building;
      return this;
    }

    /**
     * 导航数据类型 1-百度 2-高德
     */
    public Builder gpsType(Integer gpsType) {
      this.gpsType = gpsType;
      return this;
    }

    /**
     * 经度
     */
    public Builder lng(Double lng) {
      this.lng = lng;
      return this;
    }

    /**
     * 维度
     */
    public Builder lat(Double lat) {
      this.lat = lat;
      return this;
    }

    /**
     * 是否设置为默认地址 1-设置默认地址 0-不设置
     */
    public Builder defaultUse(Integer defaultUse) {
      this.defaultUse = defaultUse;
      return this;
    }

    /**
     * 联系手机号
     */
    public Builder phone(String phone) {
      this.phone = phone;
      return this;
    }

    /**
     * 联系人
     */
    public Builder contacts(String contacts) {
      this.contacts = contacts;
      return this;
    }

    /**
     * 用户id
     */
    public Builder userId(Long userId) {
      this.userId = userId;
      return this;
    }

    @Override
    public AddUserAddrReq build() {
      return new AddUserAddrReq(addrId, addrDetail, adCode, street, building, gpsType, lng, lat, defaultUse, phone, contacts, userId, super.buildUnknownFields());
    }
  }

  private static final class ProtoAdapter_AddUserAddrReq extends ProtoAdapter<AddUserAddrReq> {
    ProtoAdapter_AddUserAddrReq() {
      super(FieldEncoding.LENGTH_DELIMITED, AddUserAddrReq.class);
    }

    @Override
    public int encodedSize(AddUserAddrReq value) {
      return (value.addrId != null ? ProtoAdapter.UINT64.encodedSizeWithTag(1, value.addrId) : 0)
          + (value.addrDetail != null ? ProtoAdapter.STRING.encodedSizeWithTag(2, value.addrDetail) : 0)
          + (value.adCode != null ? ProtoAdapter.STRING.encodedSizeWithTag(3, value.adCode) : 0)
          + (value.street != null ? ProtoAdapter.STRING.encodedSizeWithTag(4, value.street) : 0)
          + (value.building != null ? ProtoAdapter.STRING.encodedSizeWithTag(5, value.building) : 0)
          + (value.gpsType != null ? ProtoAdapter.UINT32.encodedSizeWithTag(6, value.gpsType) : 0)
          + (value.lng != null ? ProtoAdapter.DOUBLE.encodedSizeWithTag(7, value.lng) : 0)
          + (value.lat != null ? ProtoAdapter.DOUBLE.encodedSizeWithTag(8, value.lat) : 0)
          + (value.defaultUse != null ? ProtoAdapter.UINT32.encodedSizeWithTag(9, value.defaultUse) : 0)
          + (value.phone != null ? ProtoAdapter.STRING.encodedSizeWithTag(10, value.phone) : 0)
          + (value.contacts != null ? ProtoAdapter.STRING.encodedSizeWithTag(11, value.contacts) : 0)
          + (value.userId != null ? ProtoAdapter.UINT64.encodedSizeWithTag(12, value.userId) : 0)
          + value.unknownFields().size();
    }

    @Override
    public void encode(ProtoWriter writer, AddUserAddrReq value) throws IOException {
      if (value.addrId != null) ProtoAdapter.UINT64.encodeWithTag(writer, 1, value.addrId);
      if (value.addrDetail != null) ProtoAdapter.STRING.encodeWithTag(writer, 2, value.addrDetail);
      if (value.adCode != null) ProtoAdapter.STRING.encodeWithTag(writer, 3, value.adCode);
      if (value.street != null) ProtoAdapter.STRING.encodeWithTag(writer, 4, value.street);
      if (value.building != null) ProtoAdapter.STRING.encodeWithTag(writer, 5, value.building);
      if (value.gpsType != null) ProtoAdapter.UINT32.encodeWithTag(writer, 6, value.gpsType);
      if (value.lng != null) ProtoAdapter.DOUBLE.encodeWithTag(writer, 7, value.lng);
      if (value.lat != null) ProtoAdapter.DOUBLE.encodeWithTag(writer, 8, value.lat);
      if (value.defaultUse != null) ProtoAdapter.UINT32.encodeWithTag(writer, 9, value.defaultUse);
      if (value.phone != null) ProtoAdapter.STRING.encodeWithTag(writer, 10, value.phone);
      if (value.contacts != null) ProtoAdapter.STRING.encodeWithTag(writer, 11, value.contacts);
      if (value.userId != null) ProtoAdapter.UINT64.encodeWithTag(writer, 12, value.userId);
      writer.writeBytes(value.unknownFields());
    }

    @Override
    public AddUserAddrReq decode(ProtoReader reader) throws IOException {
      Builder builder = new Builder();
      long token = reader.beginMessage();
      for (int tag; (tag = reader.nextTag()) != -1;) {
        switch (tag) {
          case 1: builder.addrId(ProtoAdapter.UINT64.decode(reader)); break;
          case 2: builder.addrDetail(ProtoAdapter.STRING.decode(reader)); break;
          case 3: builder.adCode(ProtoAdapter.STRING.decode(reader)); break;
          case 4: builder.street(ProtoAdapter.STRING.decode(reader)); break;
          case 5: builder.building(ProtoAdapter.STRING.decode(reader)); break;
          case 6: builder.gpsType(ProtoAdapter.UINT32.decode(reader)); break;
          case 7: builder.lng(ProtoAdapter.DOUBLE.decode(reader)); break;
          case 8: builder.lat(ProtoAdapter.DOUBLE.decode(reader)); break;
          case 9: builder.defaultUse(ProtoAdapter.UINT32.decode(reader)); break;
          case 10: builder.phone(ProtoAdapter.STRING.decode(reader)); break;
          case 11: builder.contacts(ProtoAdapter.STRING.decode(reader)); break;
          case 12: builder.userId(ProtoAdapter.UINT64.decode(reader)); break;
          default: {
            FieldEncoding fieldEncoding = reader.peekFieldEncoding();
            Object value = fieldEncoding.rawProtoAdapter().decode(reader);
            builder.addUnknownField(tag, fieldEncoding, value);
          }
        }
      }
      reader.endMessage(token);
      return builder.build();
    }

    @Override
    public AddUserAddrReq redact(AddUserAddrReq value) {
      Builder builder = value.newBuilder();
      builder.clearUnknownFields();
      return builder.build();
    }
  }
}
