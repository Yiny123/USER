// Code generated by Wire protocol buffer compiler, do not edit.
// Source file: Area.proto at 32:1
package com.yijianyi.protocol;

import com.squareup.wire.FieldEncoding;
import com.squareup.wire.Message;
import com.squareup.wire.ProtoAdapter;
import com.squareup.wire.ProtoReader;
import com.squareup.wire.ProtoWriter;
import com.squareup.wire.WireField;
import com.squareup.wire.internal.Internal;
import java.io.IOException;
import java.lang.Integer;
import java.lang.Object;
import java.lang.Override;
import java.lang.String;
import java.lang.StringBuilder;
import okio.ByteString;

public final class ProvinceDetailInfo extends Message<ProvinceDetailInfo, ProvinceDetailInfo.Builder> {
  public static final ProtoAdapter<ProvinceDetailInfo> ADAPTER = new ProtoAdapter_ProvinceDetailInfo();

  private static final long serialVersionUID = 0L;

  public static final Integer DEFAULT_PROVINCEID = 0;

  public static final String DEFAULT_PROVINCENAME = "";

  @WireField(
      tag = 1,
      adapter = "com.squareup.wire.ProtoAdapter#UINT32"
  )
  public final Integer provinceId;

  @WireField(
      tag = 2,
      adapter = "com.squareup.wire.ProtoAdapter#STRING"
  )
  public final String provinceName;

  public ProvinceDetailInfo(Integer provinceId, String provinceName) {
    this(provinceId, provinceName, ByteString.EMPTY);
  }

  public ProvinceDetailInfo(Integer provinceId, String provinceName, ByteString unknownFields) {
    super(ADAPTER, unknownFields);
    this.provinceId = provinceId;
    this.provinceName = provinceName;
  }

  @Override
  public Builder newBuilder() {
    Builder builder = new Builder();
    builder.provinceId = provinceId;
    builder.provinceName = provinceName;
    builder.addUnknownFields(unknownFields());
    return builder;
  }

  @Override
  public boolean equals(Object other) {
    if (other == this) return true;
    if (!(other instanceof ProvinceDetailInfo)) return false;
    ProvinceDetailInfo o = (ProvinceDetailInfo) other;
    return unknownFields().equals(o.unknownFields())
        && Internal.equals(provinceId, o.provinceId)
        && Internal.equals(provinceName, o.provinceName);
  }

  @Override
  public int hashCode() {
    int result = super.hashCode;
    if (result == 0) {
      result = unknownFields().hashCode();
      result = result * 37 + (provinceId != null ? provinceId.hashCode() : 0);
      result = result * 37 + (provinceName != null ? provinceName.hashCode() : 0);
      super.hashCode = result;
    }
    return result;
  }

  @Override
  public String toString() {
    StringBuilder builder = new StringBuilder();
    if (provinceId != null) builder.append(", provinceId=").append(provinceId);
    if (provinceName != null) builder.append(", provinceName=").append(provinceName);
    return builder.replace(0, 2, "ProvinceDetailInfo{").append('}').toString();
  }

  public static final class Builder extends Message.Builder<ProvinceDetailInfo, Builder> {
    public Integer provinceId;

    public String provinceName;

    public Builder() {
    }

    public Builder provinceId(Integer provinceId) {
      this.provinceId = provinceId;
      return this;
    }

    public Builder provinceName(String provinceName) {
      this.provinceName = provinceName;
      return this;
    }

    @Override
    public ProvinceDetailInfo build() {
      return new ProvinceDetailInfo(provinceId, provinceName, super.buildUnknownFields());
    }
  }

  private static final class ProtoAdapter_ProvinceDetailInfo extends ProtoAdapter<ProvinceDetailInfo> {
    ProtoAdapter_ProvinceDetailInfo() {
      super(FieldEncoding.LENGTH_DELIMITED, ProvinceDetailInfo.class);
    }

    @Override
    public int encodedSize(ProvinceDetailInfo value) {
      return (value.provinceId != null ? ProtoAdapter.UINT32.encodedSizeWithTag(1, value.provinceId) : 0)
          + (value.provinceName != null ? ProtoAdapter.STRING.encodedSizeWithTag(2, value.provinceName) : 0)
          + value.unknownFields().size();
    }

    @Override
    public void encode(ProtoWriter writer, ProvinceDetailInfo value) throws IOException {
      if (value.provinceId != null) ProtoAdapter.UINT32.encodeWithTag(writer, 1, value.provinceId);
      if (value.provinceName != null) ProtoAdapter.STRING.encodeWithTag(writer, 2, value.provinceName);
      writer.writeBytes(value.unknownFields());
    }

    @Override
    public ProvinceDetailInfo decode(ProtoReader reader) throws IOException {
      Builder builder = new Builder();
      long token = reader.beginMessage();
      for (int tag; (tag = reader.nextTag()) != -1;) {
        switch (tag) {
          case 1: builder.provinceId(ProtoAdapter.UINT32.decode(reader)); break;
          case 2: builder.provinceName(ProtoAdapter.STRING.decode(reader)); break;
          default: {
            FieldEncoding fieldEncoding = reader.peekFieldEncoding();
            Object value = fieldEncoding.rawProtoAdapter().decode(reader);
            builder.addUnknownField(tag, fieldEncoding, value);
          }
        }
      }
      reader.endMessage(token);
      return builder.build();
    }

    @Override
    public ProvinceDetailInfo redact(ProvinceDetailInfo value) {
      Builder builder = value.newBuilder();
      builder.clearUnknownFields();
      return builder.build();
    }
  }
}
