// Code generated by Wire protocol buffer compiler, do not edit.
// Source file: SaasModel.proto at 730:1
package com.yijianyi.protocol;

import com.squareup.wire.FieldEncoding;
import com.squareup.wire.Message;
import com.squareup.wire.ProtoAdapter;
import com.squareup.wire.ProtoReader;
import com.squareup.wire.ProtoWriter;
import com.squareup.wire.WireField;
import com.squareup.wire.internal.Internal;
import java.io.IOException;
import java.lang.Integer;
import java.lang.Long;
import java.lang.Object;
import java.lang.Override;
import java.lang.String;
import java.lang.StringBuilder;
import okio.ByteString;

public final class CompanyPrepay extends Message<CompanyPrepay, CompanyPrepay.Builder> {
  public static final ProtoAdapter<CompanyPrepay> ADAPTER = new ProtoAdapter_CompanyPrepay();

  private static final long serialVersionUID = 0L;

  public static final Long DEFAULT_COMPANYID = 0L;

  public static final Integer DEFAULT_SERVICETYPE = 0;

  public static final String DEFAULT_SERVICETYPENAME = "";

  public static final String DEFAULT_COMPANYNAME = "";

  public static final Long DEFAULT_PREPAYAMOUNT = 0L;

  public static final Long DEFAULT_CREATESTAFFID = 0L;

  public static final String DEFAULT_CREATESTAFFNAME = "";

  public static final Long DEFAULT_CREATETIME = 0L;

  /**
   * 公司ID
   */
  @WireField(
      tag = 1,
      adapter = "com.squareup.wire.ProtoAdapter#UINT64"
  )
  public final Long companyId;

  /**
   * 服务类型  101 居家照护 102家庭护士 103 康复护理 104 中医理疗 105 金牌月嫂 106 就医陪护 107 心理慰藉 108 产后恢复 109 育婴幼教 110 临终关怀',
   */
  @WireField(
      tag = 2,
      adapter = "com.squareup.wire.ProtoAdapter#UINT32"
  )
  public final Integer serviceType;

  /**
   * 服务类型名称
   */
  @WireField(
      tag = 3,
      adapter = "com.squareup.wire.ProtoAdapter#STRING"
  )
  public final String serviceTypeName;

  /**
   * 公司名
   */
  @WireField(
      tag = 4,
      adapter = "com.squareup.wire.ProtoAdapter#STRING"
  )
  public final String companyName;

  /**
   * 预付金
   */
  @WireField(
      tag = 5,
      adapter = "com.squareup.wire.ProtoAdapter#UINT64"
  )
  public final Long prepayAmount;

  /**
   * 创建员工id
   */
  @WireField(
      tag = 6,
      adapter = "com.squareup.wire.ProtoAdapter#UINT64"
  )
  public final Long createStaffId;

  /**
   * 创建员工姓名
   */
  @WireField(
      tag = 7,
      adapter = "com.squareup.wire.ProtoAdapter#STRING"
  )
  public final String createStaffName;

  /**
   * 创建时间
   */
  @WireField(
      tag = 8,
      adapter = "com.squareup.wire.ProtoAdapter#UINT64"
  )
  public final Long createTime;

  public CompanyPrepay(Long companyId, Integer serviceType, String serviceTypeName, String companyName, Long prepayAmount, Long createStaffId, String createStaffName, Long createTime) {
    this(companyId, serviceType, serviceTypeName, companyName, prepayAmount, createStaffId, createStaffName, createTime, ByteString.EMPTY);
  }

  public CompanyPrepay(Long companyId, Integer serviceType, String serviceTypeName, String companyName, Long prepayAmount, Long createStaffId, String createStaffName, Long createTime, ByteString unknownFields) {
    super(ADAPTER, unknownFields);
    this.companyId = companyId;
    this.serviceType = serviceType;
    this.serviceTypeName = serviceTypeName;
    this.companyName = companyName;
    this.prepayAmount = prepayAmount;
    this.createStaffId = createStaffId;
    this.createStaffName = createStaffName;
    this.createTime = createTime;
  }

  @Override
  public Builder newBuilder() {
    Builder builder = new Builder();
    builder.companyId = companyId;
    builder.serviceType = serviceType;
    builder.serviceTypeName = serviceTypeName;
    builder.companyName = companyName;
    builder.prepayAmount = prepayAmount;
    builder.createStaffId = createStaffId;
    builder.createStaffName = createStaffName;
    builder.createTime = createTime;
    builder.addUnknownFields(unknownFields());
    return builder;
  }

  @Override
  public boolean equals(Object other) {
    if (other == this) return true;
    if (!(other instanceof CompanyPrepay)) return false;
    CompanyPrepay o = (CompanyPrepay) other;
    return unknownFields().equals(o.unknownFields())
        && Internal.equals(companyId, o.companyId)
        && Internal.equals(serviceType, o.serviceType)
        && Internal.equals(serviceTypeName, o.serviceTypeName)
        && Internal.equals(companyName, o.companyName)
        && Internal.equals(prepayAmount, o.prepayAmount)
        && Internal.equals(createStaffId, o.createStaffId)
        && Internal.equals(createStaffName, o.createStaffName)
        && Internal.equals(createTime, o.createTime);
  }

  @Override
  public int hashCode() {
    int result = super.hashCode;
    if (result == 0) {
      result = unknownFields().hashCode();
      result = result * 37 + (companyId != null ? companyId.hashCode() : 0);
      result = result * 37 + (serviceType != null ? serviceType.hashCode() : 0);
      result = result * 37 + (serviceTypeName != null ? serviceTypeName.hashCode() : 0);
      result = result * 37 + (companyName != null ? companyName.hashCode() : 0);
      result = result * 37 + (prepayAmount != null ? prepayAmount.hashCode() : 0);
      result = result * 37 + (createStaffId != null ? createStaffId.hashCode() : 0);
      result = result * 37 + (createStaffName != null ? createStaffName.hashCode() : 0);
      result = result * 37 + (createTime != null ? createTime.hashCode() : 0);
      super.hashCode = result;
    }
    return result;
  }

  @Override
  public String toString() {
    StringBuilder builder = new StringBuilder();
    if (companyId != null) builder.append(", companyId=").append(companyId);
    if (serviceType != null) builder.append(", serviceType=").append(serviceType);
    if (serviceTypeName != null) builder.append(", serviceTypeName=").append(serviceTypeName);
    if (companyName != null) builder.append(", companyName=").append(companyName);
    if (prepayAmount != null) builder.append(", prepayAmount=").append(prepayAmount);
    if (createStaffId != null) builder.append(", createStaffId=").append(createStaffId);
    if (createStaffName != null) builder.append(", createStaffName=").append(createStaffName);
    if (createTime != null) builder.append(", createTime=").append(createTime);
    return builder.replace(0, 2, "CompanyPrepay{").append('}').toString();
  }

  public static final class Builder extends Message.Builder<CompanyPrepay, Builder> {
    public Long companyId;

    public Integer serviceType;

    public String serviceTypeName;

    public String companyName;

    public Long prepayAmount;

    public Long createStaffId;

    public String createStaffName;

    public Long createTime;

    public Builder() {
    }

    /**
     * 公司ID
     */
    public Builder companyId(Long companyId) {
      this.companyId = companyId;
      return this;
    }

    /**
     * 服务类型  101 居家照护 102家庭护士 103 康复护理 104 中医理疗 105 金牌月嫂 106 就医陪护 107 心理慰藉 108 产后恢复 109 育婴幼教 110 临终关怀',
     */
    public Builder serviceType(Integer serviceType) {
      this.serviceType = serviceType;
      return this;
    }

    /**
     * 服务类型名称
     */
    public Builder serviceTypeName(String serviceTypeName) {
      this.serviceTypeName = serviceTypeName;
      return this;
    }

    /**
     * 公司名
     */
    public Builder companyName(String companyName) {
      this.companyName = companyName;
      return this;
    }

    /**
     * 预付金
     */
    public Builder prepayAmount(Long prepayAmount) {
      this.prepayAmount = prepayAmount;
      return this;
    }

    /**
     * 创建员工id
     */
    public Builder createStaffId(Long createStaffId) {
      this.createStaffId = createStaffId;
      return this;
    }

    /**
     * 创建员工姓名
     */
    public Builder createStaffName(String createStaffName) {
      this.createStaffName = createStaffName;
      return this;
    }

    /**
     * 创建时间
     */
    public Builder createTime(Long createTime) {
      this.createTime = createTime;
      return this;
    }

    @Override
    public CompanyPrepay build() {
      return new CompanyPrepay(companyId, serviceType, serviceTypeName, companyName, prepayAmount, createStaffId, createStaffName, createTime, super.buildUnknownFields());
    }
  }

  private static final class ProtoAdapter_CompanyPrepay extends ProtoAdapter<CompanyPrepay> {
    ProtoAdapter_CompanyPrepay() {
      super(FieldEncoding.LENGTH_DELIMITED, CompanyPrepay.class);
    }

    @Override
    public int encodedSize(CompanyPrepay value) {
      return (value.companyId != null ? ProtoAdapter.UINT64.encodedSizeWithTag(1, value.companyId) : 0)
          + (value.serviceType != null ? ProtoAdapter.UINT32.encodedSizeWithTag(2, value.serviceType) : 0)
          + (value.serviceTypeName != null ? ProtoAdapter.STRING.encodedSizeWithTag(3, value.serviceTypeName) : 0)
          + (value.companyName != null ? ProtoAdapter.STRING.encodedSizeWithTag(4, value.companyName) : 0)
          + (value.prepayAmount != null ? ProtoAdapter.UINT64.encodedSizeWithTag(5, value.prepayAmount) : 0)
          + (value.createStaffId != null ? ProtoAdapter.UINT64.encodedSizeWithTag(6, value.createStaffId) : 0)
          + (value.createStaffName != null ? ProtoAdapter.STRING.encodedSizeWithTag(7, value.createStaffName) : 0)
          + (value.createTime != null ? ProtoAdapter.UINT64.encodedSizeWithTag(8, value.createTime) : 0)
          + value.unknownFields().size();
    }

    @Override
    public void encode(ProtoWriter writer, CompanyPrepay value) throws IOException {
      if (value.companyId != null) ProtoAdapter.UINT64.encodeWithTag(writer, 1, value.companyId);
      if (value.serviceType != null) ProtoAdapter.UINT32.encodeWithTag(writer, 2, value.serviceType);
      if (value.serviceTypeName != null) ProtoAdapter.STRING.encodeWithTag(writer, 3, value.serviceTypeName);
      if (value.companyName != null) ProtoAdapter.STRING.encodeWithTag(writer, 4, value.companyName);
      if (value.prepayAmount != null) ProtoAdapter.UINT64.encodeWithTag(writer, 5, value.prepayAmount);
      if (value.createStaffId != null) ProtoAdapter.UINT64.encodeWithTag(writer, 6, value.createStaffId);
      if (value.createStaffName != null) ProtoAdapter.STRING.encodeWithTag(writer, 7, value.createStaffName);
      if (value.createTime != null) ProtoAdapter.UINT64.encodeWithTag(writer, 8, value.createTime);
      writer.writeBytes(value.unknownFields());
    }

    @Override
    public CompanyPrepay decode(ProtoReader reader) throws IOException {
      Builder builder = new Builder();
      long token = reader.beginMessage();
      for (int tag; (tag = reader.nextTag()) != -1;) {
        switch (tag) {
          case 1: builder.companyId(ProtoAdapter.UINT64.decode(reader)); break;
          case 2: builder.serviceType(ProtoAdapter.UINT32.decode(reader)); break;
          case 3: builder.serviceTypeName(ProtoAdapter.STRING.decode(reader)); break;
          case 4: builder.companyName(ProtoAdapter.STRING.decode(reader)); break;
          case 5: builder.prepayAmount(ProtoAdapter.UINT64.decode(reader)); break;
          case 6: builder.createStaffId(ProtoAdapter.UINT64.decode(reader)); break;
          case 7: builder.createStaffName(ProtoAdapter.STRING.decode(reader)); break;
          case 8: builder.createTime(ProtoAdapter.UINT64.decode(reader)); break;
          default: {
            FieldEncoding fieldEncoding = reader.peekFieldEncoding();
            Object value = fieldEncoding.rawProtoAdapter().decode(reader);
            builder.addUnknownField(tag, fieldEncoding, value);
          }
        }
      }
      reader.endMessage(token);
      return builder.build();
    }

    @Override
    public CompanyPrepay redact(CompanyPrepay value) {
      Builder builder = value.newBuilder();
      builder.clearUnknownFields();
      return builder.build();
    }
  }
}
