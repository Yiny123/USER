// Code generated by Wire protocol buffer compiler, do not edit.
// Source file: SaasModel.proto at 1245:1
package com.yijianyi.protocol;

import com.squareup.wire.FieldEncoding;
import com.squareup.wire.Message;
import com.squareup.wire.ProtoAdapter;
import com.squareup.wire.ProtoReader;
import com.squareup.wire.ProtoWriter;
import com.squareup.wire.WireField;
import com.squareup.wire.internal.Internal;
import java.io.IOException;
import java.lang.Integer;
import java.lang.Long;
import java.lang.Object;
import java.lang.Override;
import java.lang.String;
import java.lang.StringBuilder;
import okio.ByteString;

/**
 * 消费记录表
 */
public final class Expenditure extends Message<Expenditure, Expenditure.Builder> {
  public static final ProtoAdapter<Expenditure> ADAPTER = new ProtoAdapter_Expenditure();

  private static final long serialVersionUID = 0L;

  public static final String DEFAULT_EXPENDITURETIME = "";

  public static final String DEFAULT_EXPENDITUREFEE = "";

  public static final String DEFAULT_EXPENDITUREONEFEE = "";

  public static final String DEFAULT_EXPENDITURENFEE = "";

  public static final String DEFAULT_EXPENDITUREADDITIONFEE = "";

  public static final String DEFAULT_EXPENDITUREJJZGFEE = "";

  public static final String DEFAULT_EXPENDITUREJTHSFEE = "";

  public static final String DEFAULT_EXPENDITUREJKHLFEE = "";

  public static final String DEFAULT_EXPENDITUREZYLLFEE = "";

  public static final String DEFAULT_EXPENDITUREJPYSFEE = "";

  public static final String DEFAULT_EXPENDITUREJYHLFEE = "";

  public static final String DEFAULT_EXPENDITUREXLWJFEE = "";

  public static final String DEFAULT_EXPENDITURECHHFFEE = "";

  public static final String DEFAULT_EXPENDITUREYYYJFEE = "";

  public static final String DEFAULT_EXPENDITURELZGHFEE = "";

  public static final String DEFAULT_EXPENDITURECHXFEE = "";

  public static final String DEFAULT_EXPENDITUREFJXFEE = "";

  public static final String DEFAULT_HGREBATEFEE = "";

  public static final String DEFAULT_NEEDPAY = "";

  public static final Long DEFAULT_COMPANYID = 0L;

  public static final Long DEFAULT_ORGID = 0L;

  public static final Long DEFAULT_BRANCHID = 0L;

  public static final String DEFAULT_STARTDATE = "";

  public static final String DEFAULT_ENDDATE = "";

  public static final Integer DEFAULT_EXPENDITURETYPE = 0;

  public static final Integer DEFAULT_EXPENDITUREONETYPE = 0;

  public static final Integer DEFAULT_EXPENDITURENTYPE = 0;

  public static final Integer DEFAULT_EXPENDITUREADDITIONTYPE = 0;

  public static final Integer DEFAULT_EXPENDITUREJJZGTYPE = 0;

  public static final Integer DEFAULT_EXPENDITUREJTHSTYPE = 0;

  public static final Integer DEFAULT_EXPENDITUREJKHLTYPE = 0;

  public static final Integer DEFAULT_EXPENDITUREZYLLTYPE = 0;

  public static final Integer DEFAULT_EXPENDITUREJPYSTYPE = 0;

  public static final Integer DEFAULT_EXPENDITUREJYHLTYPE = 0;

  public static final Integer DEFAULT_EXPENDITUREXLWJTYPE = 0;

  public static final Integer DEFAULT_EXPENDITURECHHFTYPE = 0;

  public static final Integer DEFAULT_EXPENDITUREYYYJTYPE = 0;

  public static final Integer DEFAULT_EXPENDITURELZGHTYPE = 0;

  public static final Integer DEFAULT_EXPENDITURECHXTYPE = 0;

  public static final Integer DEFAULT_EXPENDITUREFJXTYPE = 0;

  /**
   * 消费时间
   */
  @WireField(
      tag = 1,
      adapter = "com.squareup.wire.ProtoAdapter#STRING"
  )
  public final String expenditureTime;

  /**
   * 消费总额
   */
  @WireField(
      tag = 2,
      adapter = "com.squareup.wire.ProtoAdapter#STRING"
  )
  public final String expenditureFee;

  /**
   * 专陪费用
   */
  @WireField(
      tag = 3,
      adapter = "com.squareup.wire.ProtoAdapter#STRING"
  )
  public final String expenditureONEFee;

  /**
   * 普陪费用
   */
  @WireField(
      tag = 4,
      adapter = "com.squareup.wire.ProtoAdapter#STRING"
  )
  public final String expenditureNFee;

  /**
   * 附加项费用
   */
  @WireField(
      tag = 5,
      adapter = "com.squareup.wire.ProtoAdapter#STRING"
  )
  public final String expenditureAdditionFee;

  /**
   * 居家照护
   */
  @WireField(
      tag = 6,
      adapter = "com.squareup.wire.ProtoAdapter#STRING"
  )
  public final String expenditureJJZGFee;

  /**
   * 家庭护士
   */
  @WireField(
      tag = 7,
      adapter = "com.squareup.wire.ProtoAdapter#STRING"
  )
  public final String expenditureJTHSFee;

  /**
   * 健康护理
   */
  @WireField(
      tag = 8,
      adapter = "com.squareup.wire.ProtoAdapter#STRING"
  )
  public final String expenditureJKHLFee;

  /**
   * 中医理疗
   */
  @WireField(
      tag = 9,
      adapter = "com.squareup.wire.ProtoAdapter#STRING"
  )
  public final String expenditureZYLLFee;

  /**
   * 金牌月嫂
   */
  @WireField(
      tag = 10,
      adapter = "com.squareup.wire.ProtoAdapter#STRING"
  )
  public final String expenditureJPYSFee;

  /**
   * 就医护理
   */
  @WireField(
      tag = 11,
      adapter = "com.squareup.wire.ProtoAdapter#STRING"
  )
  public final String expenditureJYHLFee;

  /**
   * 心理慰藉
   */
  @WireField(
      tag = 12,
      adapter = "com.squareup.wire.ProtoAdapter#STRING"
  )
  public final String expenditureXLWJFee;

  /**
   * 产后恢复
   */
  @WireField(
      tag = 13,
      adapter = "com.squareup.wire.ProtoAdapter#STRING"
  )
  public final String expenditureCHHFFee;

  /**
   * 育婴幼教
   */
  @WireField(
      tag = 14,
      adapter = "com.squareup.wire.ProtoAdapter#STRING"
  )
  public final String expenditureYYYJFee;

  /**
   * 临终关怀
   */
  @WireField(
      tag = 15,
      adapter = "com.squareup.wire.ProtoAdapter#STRING"
  )
  public final String expenditureLZGHFee;

  /**
   * 长护险生活照料
   */
  @WireField(
      tag = 16,
      adapter = "com.squareup.wire.ProtoAdapter#STRING"
  )
  public final String expenditureCHXFee;

  /**
   * 普通附加项费用
   */
  @WireField(
      tag = 17,
      adapter = "com.squareup.wire.ProtoAdapter#STRING"
  )
  public final String expenditureFJXFee;

  /**
   * 优惠金额
   */
  @WireField(
      tag = 18,
      adapter = "com.squareup.wire.ProtoAdapter#STRING"
  )
  public final String hgRebateFee;

  /**
   * 实收金额
   */
  @WireField(
      tag = 19,
      adapter = "com.squareup.wire.ProtoAdapter#STRING"
  )
  public final String needPay;

  /**
   * 公司id
   */
  @WireField(
      tag = 20,
      adapter = "com.squareup.wire.ProtoAdapter#UINT64"
  )
  public final Long companyId;

  /**
   * 机构id
   */
  @WireField(
      tag = 21,
      adapter = "com.squareup.wire.ProtoAdapter#UINT64"
  )
  public final Long orgId;

  /**
   * 科室id
   */
  @WireField(
      tag = 22,
      adapter = "com.squareup.wire.ProtoAdapter#UINT64"
  )
  public final Long branchId;

  /**
   * 开始时间
   */
  @WireField(
      tag = 23,
      adapter = "com.squareup.wire.ProtoAdapter#STRING"
  )
  public final String startDate;

  /**
   * 结束时间
   */
  @WireField(
      tag = 24,
      adapter = "com.squareup.wire.ProtoAdapter#STRING"
  )
  public final String endDate;

  /**
   * 状态
   * 消费总额
   */
  @WireField(
      tag = 25,
      adapter = "com.squareup.wire.ProtoAdapter#UINT32"
  )
  public final Integer expenditureType;

  /**
   * 专陪费用
   */
  @WireField(
      tag = 26,
      adapter = "com.squareup.wire.ProtoAdapter#UINT32"
  )
  public final Integer expenditureONEType;

  /**
   * 普陪费用
   */
  @WireField(
      tag = 27,
      adapter = "com.squareup.wire.ProtoAdapter#UINT32"
  )
  public final Integer expenditureNType;

  /**
   * 附加项费用
   */
  @WireField(
      tag = 28,
      adapter = "com.squareup.wire.ProtoAdapter#UINT32"
  )
  public final Integer expenditureAdditionType;

  /**
   * 居家照护
   */
  @WireField(
      tag = 29,
      adapter = "com.squareup.wire.ProtoAdapter#UINT32"
  )
  public final Integer expenditureJJZGType;

  /**
   * 家庭护士
   */
  @WireField(
      tag = 30,
      adapter = "com.squareup.wire.ProtoAdapter#UINT32"
  )
  public final Integer expenditureJTHSType;

  /**
   * 健康护理
   */
  @WireField(
      tag = 31,
      adapter = "com.squareup.wire.ProtoAdapter#UINT32"
  )
  public final Integer expenditureJKHLType;

  /**
   * 中医理疗
   */
  @WireField(
      tag = 32,
      adapter = "com.squareup.wire.ProtoAdapter#UINT32"
  )
  public final Integer expenditureZYLLType;

  /**
   * 金牌月嫂
   */
  @WireField(
      tag = 33,
      adapter = "com.squareup.wire.ProtoAdapter#UINT32"
  )
  public final Integer expenditureJPYSType;

  /**
   * 就医护理
   */
  @WireField(
      tag = 34,
      adapter = "com.squareup.wire.ProtoAdapter#UINT32"
  )
  public final Integer expenditureJYHLType;

  /**
   * 心理慰藉
   */
  @WireField(
      tag = 35,
      adapter = "com.squareup.wire.ProtoAdapter#UINT32"
  )
  public final Integer expenditureXLWJType;

  /**
   * 产后恢复
   */
  @WireField(
      tag = 36,
      adapter = "com.squareup.wire.ProtoAdapter#UINT32"
  )
  public final Integer expenditureCHHFType;

  /**
   * 育婴幼教
   */
  @WireField(
      tag = 37,
      adapter = "com.squareup.wire.ProtoAdapter#UINT32"
  )
  public final Integer expenditureYYYJType;

  /**
   * 临终关怀
   */
  @WireField(
      tag = 38,
      adapter = "com.squareup.wire.ProtoAdapter#UINT32"
  )
  public final Integer expenditureLZGHType;

  /**
   * 长护险生活照料
   */
  @WireField(
      tag = 39,
      adapter = "com.squareup.wire.ProtoAdapter#UINT32"
  )
  public final Integer expenditureCHXType;

  /**
   * 普通附加项费用
   */
  @WireField(
      tag = 40,
      adapter = "com.squareup.wire.ProtoAdapter#UINT32"
  )
  public final Integer expenditureFJXType;

  public Expenditure(String expenditureTime, String expenditureFee, String expenditureONEFee, String expenditureNFee, String expenditureAdditionFee, String expenditureJJZGFee, String expenditureJTHSFee, String expenditureJKHLFee, String expenditureZYLLFee, String expenditureJPYSFee, String expenditureJYHLFee, String expenditureXLWJFee, String expenditureCHHFFee, String expenditureYYYJFee, String expenditureLZGHFee, String expenditureCHXFee, String expenditureFJXFee, String hgRebateFee, String needPay, Long companyId, Long orgId, Long branchId, String startDate, String endDate, Integer expenditureType, Integer expenditureONEType, Integer expenditureNType, Integer expenditureAdditionType, Integer expenditureJJZGType, Integer expenditureJTHSType, Integer expenditureJKHLType, Integer expenditureZYLLType, Integer expenditureJPYSType, Integer expenditureJYHLType, Integer expenditureXLWJType, Integer expenditureCHHFType, Integer expenditureYYYJType, Integer expenditureLZGHType, Integer expenditureCHXType, Integer expenditureFJXType) {
    this(expenditureTime, expenditureFee, expenditureONEFee, expenditureNFee, expenditureAdditionFee, expenditureJJZGFee, expenditureJTHSFee, expenditureJKHLFee, expenditureZYLLFee, expenditureJPYSFee, expenditureJYHLFee, expenditureXLWJFee, expenditureCHHFFee, expenditureYYYJFee, expenditureLZGHFee, expenditureCHXFee, expenditureFJXFee, hgRebateFee, needPay, companyId, orgId, branchId, startDate, endDate, expenditureType, expenditureONEType, expenditureNType, expenditureAdditionType, expenditureJJZGType, expenditureJTHSType, expenditureJKHLType, expenditureZYLLType, expenditureJPYSType, expenditureJYHLType, expenditureXLWJType, expenditureCHHFType, expenditureYYYJType, expenditureLZGHType, expenditureCHXType, expenditureFJXType, ByteString.EMPTY);
  }

  public Expenditure(String expenditureTime, String expenditureFee, String expenditureONEFee, String expenditureNFee, String expenditureAdditionFee, String expenditureJJZGFee, String expenditureJTHSFee, String expenditureJKHLFee, String expenditureZYLLFee, String expenditureJPYSFee, String expenditureJYHLFee, String expenditureXLWJFee, String expenditureCHHFFee, String expenditureYYYJFee, String expenditureLZGHFee, String expenditureCHXFee, String expenditureFJXFee, String hgRebateFee, String needPay, Long companyId, Long orgId, Long branchId, String startDate, String endDate, Integer expenditureType, Integer expenditureONEType, Integer expenditureNType, Integer expenditureAdditionType, Integer expenditureJJZGType, Integer expenditureJTHSType, Integer expenditureJKHLType, Integer expenditureZYLLType, Integer expenditureJPYSType, Integer expenditureJYHLType, Integer expenditureXLWJType, Integer expenditureCHHFType, Integer expenditureYYYJType, Integer expenditureLZGHType, Integer expenditureCHXType, Integer expenditureFJXType, ByteString unknownFields) {
    super(ADAPTER, unknownFields);
    this.expenditureTime = expenditureTime;
    this.expenditureFee = expenditureFee;
    this.expenditureONEFee = expenditureONEFee;
    this.expenditureNFee = expenditureNFee;
    this.expenditureAdditionFee = expenditureAdditionFee;
    this.expenditureJJZGFee = expenditureJJZGFee;
    this.expenditureJTHSFee = expenditureJTHSFee;
    this.expenditureJKHLFee = expenditureJKHLFee;
    this.expenditureZYLLFee = expenditureZYLLFee;
    this.expenditureJPYSFee = expenditureJPYSFee;
    this.expenditureJYHLFee = expenditureJYHLFee;
    this.expenditureXLWJFee = expenditureXLWJFee;
    this.expenditureCHHFFee = expenditureCHHFFee;
    this.expenditureYYYJFee = expenditureYYYJFee;
    this.expenditureLZGHFee = expenditureLZGHFee;
    this.expenditureCHXFee = expenditureCHXFee;
    this.expenditureFJXFee = expenditureFJXFee;
    this.hgRebateFee = hgRebateFee;
    this.needPay = needPay;
    this.companyId = companyId;
    this.orgId = orgId;
    this.branchId = branchId;
    this.startDate = startDate;
    this.endDate = endDate;
    this.expenditureType = expenditureType;
    this.expenditureONEType = expenditureONEType;
    this.expenditureNType = expenditureNType;
    this.expenditureAdditionType = expenditureAdditionType;
    this.expenditureJJZGType = expenditureJJZGType;
    this.expenditureJTHSType = expenditureJTHSType;
    this.expenditureJKHLType = expenditureJKHLType;
    this.expenditureZYLLType = expenditureZYLLType;
    this.expenditureJPYSType = expenditureJPYSType;
    this.expenditureJYHLType = expenditureJYHLType;
    this.expenditureXLWJType = expenditureXLWJType;
    this.expenditureCHHFType = expenditureCHHFType;
    this.expenditureYYYJType = expenditureYYYJType;
    this.expenditureLZGHType = expenditureLZGHType;
    this.expenditureCHXType = expenditureCHXType;
    this.expenditureFJXType = expenditureFJXType;
  }

  @Override
  public Builder newBuilder() {
    Builder builder = new Builder();
    builder.expenditureTime = expenditureTime;
    builder.expenditureFee = expenditureFee;
    builder.expenditureONEFee = expenditureONEFee;
    builder.expenditureNFee = expenditureNFee;
    builder.expenditureAdditionFee = expenditureAdditionFee;
    builder.expenditureJJZGFee = expenditureJJZGFee;
    builder.expenditureJTHSFee = expenditureJTHSFee;
    builder.expenditureJKHLFee = expenditureJKHLFee;
    builder.expenditureZYLLFee = expenditureZYLLFee;
    builder.expenditureJPYSFee = expenditureJPYSFee;
    builder.expenditureJYHLFee = expenditureJYHLFee;
    builder.expenditureXLWJFee = expenditureXLWJFee;
    builder.expenditureCHHFFee = expenditureCHHFFee;
    builder.expenditureYYYJFee = expenditureYYYJFee;
    builder.expenditureLZGHFee = expenditureLZGHFee;
    builder.expenditureCHXFee = expenditureCHXFee;
    builder.expenditureFJXFee = expenditureFJXFee;
    builder.hgRebateFee = hgRebateFee;
    builder.needPay = needPay;
    builder.companyId = companyId;
    builder.orgId = orgId;
    builder.branchId = branchId;
    builder.startDate = startDate;
    builder.endDate = endDate;
    builder.expenditureType = expenditureType;
    builder.expenditureONEType = expenditureONEType;
    builder.expenditureNType = expenditureNType;
    builder.expenditureAdditionType = expenditureAdditionType;
    builder.expenditureJJZGType = expenditureJJZGType;
    builder.expenditureJTHSType = expenditureJTHSType;
    builder.expenditureJKHLType = expenditureJKHLType;
    builder.expenditureZYLLType = expenditureZYLLType;
    builder.expenditureJPYSType = expenditureJPYSType;
    builder.expenditureJYHLType = expenditureJYHLType;
    builder.expenditureXLWJType = expenditureXLWJType;
    builder.expenditureCHHFType = expenditureCHHFType;
    builder.expenditureYYYJType = expenditureYYYJType;
    builder.expenditureLZGHType = expenditureLZGHType;
    builder.expenditureCHXType = expenditureCHXType;
    builder.expenditureFJXType = expenditureFJXType;
    builder.addUnknownFields(unknownFields());
    return builder;
  }

  @Override
  public boolean equals(Object other) {
    if (other == this) return true;
    if (!(other instanceof Expenditure)) return false;
    Expenditure o = (Expenditure) other;
    return unknownFields().equals(o.unknownFields())
        && Internal.equals(expenditureTime, o.expenditureTime)
        && Internal.equals(expenditureFee, o.expenditureFee)
        && Internal.equals(expenditureONEFee, o.expenditureONEFee)
        && Internal.equals(expenditureNFee, o.expenditureNFee)
        && Internal.equals(expenditureAdditionFee, o.expenditureAdditionFee)
        && Internal.equals(expenditureJJZGFee, o.expenditureJJZGFee)
        && Internal.equals(expenditureJTHSFee, o.expenditureJTHSFee)
        && Internal.equals(expenditureJKHLFee, o.expenditureJKHLFee)
        && Internal.equals(expenditureZYLLFee, o.expenditureZYLLFee)
        && Internal.equals(expenditureJPYSFee, o.expenditureJPYSFee)
        && Internal.equals(expenditureJYHLFee, o.expenditureJYHLFee)
        && Internal.equals(expenditureXLWJFee, o.expenditureXLWJFee)
        && Internal.equals(expenditureCHHFFee, o.expenditureCHHFFee)
        && Internal.equals(expenditureYYYJFee, o.expenditureYYYJFee)
        && Internal.equals(expenditureLZGHFee, o.expenditureLZGHFee)
        && Internal.equals(expenditureCHXFee, o.expenditureCHXFee)
        && Internal.equals(expenditureFJXFee, o.expenditureFJXFee)
        && Internal.equals(hgRebateFee, o.hgRebateFee)
        && Internal.equals(needPay, o.needPay)
        && Internal.equals(companyId, o.companyId)
        && Internal.equals(orgId, o.orgId)
        && Internal.equals(branchId, o.branchId)
        && Internal.equals(startDate, o.startDate)
        && Internal.equals(endDate, o.endDate)
        && Internal.equals(expenditureType, o.expenditureType)
        && Internal.equals(expenditureONEType, o.expenditureONEType)
        && Internal.equals(expenditureNType, o.expenditureNType)
        && Internal.equals(expenditureAdditionType, o.expenditureAdditionType)
        && Internal.equals(expenditureJJZGType, o.expenditureJJZGType)
        && Internal.equals(expenditureJTHSType, o.expenditureJTHSType)
        && Internal.equals(expenditureJKHLType, o.expenditureJKHLType)
        && Internal.equals(expenditureZYLLType, o.expenditureZYLLType)
        && Internal.equals(expenditureJPYSType, o.expenditureJPYSType)
        && Internal.equals(expenditureJYHLType, o.expenditureJYHLType)
        && Internal.equals(expenditureXLWJType, o.expenditureXLWJType)
        && Internal.equals(expenditureCHHFType, o.expenditureCHHFType)
        && Internal.equals(expenditureYYYJType, o.expenditureYYYJType)
        && Internal.equals(expenditureLZGHType, o.expenditureLZGHType)
        && Internal.equals(expenditureCHXType, o.expenditureCHXType)
        && Internal.equals(expenditureFJXType, o.expenditureFJXType);
  }

  @Override
  public int hashCode() {
    int result = super.hashCode;
    if (result == 0) {
      result = unknownFields().hashCode();
      result = result * 37 + (expenditureTime != null ? expenditureTime.hashCode() : 0);
      result = result * 37 + (expenditureFee != null ? expenditureFee.hashCode() : 0);
      result = result * 37 + (expenditureONEFee != null ? expenditureONEFee.hashCode() : 0);
      result = result * 37 + (expenditureNFee != null ? expenditureNFee.hashCode() : 0);
      result = result * 37 + (expenditureAdditionFee != null ? expenditureAdditionFee.hashCode() : 0);
      result = result * 37 + (expenditureJJZGFee != null ? expenditureJJZGFee.hashCode() : 0);
      result = result * 37 + (expenditureJTHSFee != null ? expenditureJTHSFee.hashCode() : 0);
      result = result * 37 + (expenditureJKHLFee != null ? expenditureJKHLFee.hashCode() : 0);
      result = result * 37 + (expenditureZYLLFee != null ? expenditureZYLLFee.hashCode() : 0);
      result = result * 37 + (expenditureJPYSFee != null ? expenditureJPYSFee.hashCode() : 0);
      result = result * 37 + (expenditureJYHLFee != null ? expenditureJYHLFee.hashCode() : 0);
      result = result * 37 + (expenditureXLWJFee != null ? expenditureXLWJFee.hashCode() : 0);
      result = result * 37 + (expenditureCHHFFee != null ? expenditureCHHFFee.hashCode() : 0);
      result = result * 37 + (expenditureYYYJFee != null ? expenditureYYYJFee.hashCode() : 0);
      result = result * 37 + (expenditureLZGHFee != null ? expenditureLZGHFee.hashCode() : 0);
      result = result * 37 + (expenditureCHXFee != null ? expenditureCHXFee.hashCode() : 0);
      result = result * 37 + (expenditureFJXFee != null ? expenditureFJXFee.hashCode() : 0);
      result = result * 37 + (hgRebateFee != null ? hgRebateFee.hashCode() : 0);
      result = result * 37 + (needPay != null ? needPay.hashCode() : 0);
      result = result * 37 + (companyId != null ? companyId.hashCode() : 0);
      result = result * 37 + (orgId != null ? orgId.hashCode() : 0);
      result = result * 37 + (branchId != null ? branchId.hashCode() : 0);
      result = result * 37 + (startDate != null ? startDate.hashCode() : 0);
      result = result * 37 + (endDate != null ? endDate.hashCode() : 0);
      result = result * 37 + (expenditureType != null ? expenditureType.hashCode() : 0);
      result = result * 37 + (expenditureONEType != null ? expenditureONEType.hashCode() : 0);
      result = result * 37 + (expenditureNType != null ? expenditureNType.hashCode() : 0);
      result = result * 37 + (expenditureAdditionType != null ? expenditureAdditionType.hashCode() : 0);
      result = result * 37 + (expenditureJJZGType != null ? expenditureJJZGType.hashCode() : 0);
      result = result * 37 + (expenditureJTHSType != null ? expenditureJTHSType.hashCode() : 0);
      result = result * 37 + (expenditureJKHLType != null ? expenditureJKHLType.hashCode() : 0);
      result = result * 37 + (expenditureZYLLType != null ? expenditureZYLLType.hashCode() : 0);
      result = result * 37 + (expenditureJPYSType != null ? expenditureJPYSType.hashCode() : 0);
      result = result * 37 + (expenditureJYHLType != null ? expenditureJYHLType.hashCode() : 0);
      result = result * 37 + (expenditureXLWJType != null ? expenditureXLWJType.hashCode() : 0);
      result = result * 37 + (expenditureCHHFType != null ? expenditureCHHFType.hashCode() : 0);
      result = result * 37 + (expenditureYYYJType != null ? expenditureYYYJType.hashCode() : 0);
      result = result * 37 + (expenditureLZGHType != null ? expenditureLZGHType.hashCode() : 0);
      result = result * 37 + (expenditureCHXType != null ? expenditureCHXType.hashCode() : 0);
      result = result * 37 + (expenditureFJXType != null ? expenditureFJXType.hashCode() : 0);
      super.hashCode = result;
    }
    return result;
  }

  @Override
  public String toString() {
    StringBuilder builder = new StringBuilder();
    if (expenditureTime != null) builder.append(", expenditureTime=").append(expenditureTime);
    if (expenditureFee != null) builder.append(", expenditureFee=").append(expenditureFee);
    if (expenditureONEFee != null) builder.append(", expenditureONEFee=").append(expenditureONEFee);
    if (expenditureNFee != null) builder.append(", expenditureNFee=").append(expenditureNFee);
    if (expenditureAdditionFee != null) builder.append(", expenditureAdditionFee=").append(expenditureAdditionFee);
    if (expenditureJJZGFee != null) builder.append(", expenditureJJZGFee=").append(expenditureJJZGFee);
    if (expenditureJTHSFee != null) builder.append(", expenditureJTHSFee=").append(expenditureJTHSFee);
    if (expenditureJKHLFee != null) builder.append(", expenditureJKHLFee=").append(expenditureJKHLFee);
    if (expenditureZYLLFee != null) builder.append(", expenditureZYLLFee=").append(expenditureZYLLFee);
    if (expenditureJPYSFee != null) builder.append(", expenditureJPYSFee=").append(expenditureJPYSFee);
    if (expenditureJYHLFee != null) builder.append(", expenditureJYHLFee=").append(expenditureJYHLFee);
    if (expenditureXLWJFee != null) builder.append(", expenditureXLWJFee=").append(expenditureXLWJFee);
    if (expenditureCHHFFee != null) builder.append(", expenditureCHHFFee=").append(expenditureCHHFFee);
    if (expenditureYYYJFee != null) builder.append(", expenditureYYYJFee=").append(expenditureYYYJFee);
    if (expenditureLZGHFee != null) builder.append(", expenditureLZGHFee=").append(expenditureLZGHFee);
    if (expenditureCHXFee != null) builder.append(", expenditureCHXFee=").append(expenditureCHXFee);
    if (expenditureFJXFee != null) builder.append(", expenditureFJXFee=").append(expenditureFJXFee);
    if (hgRebateFee != null) builder.append(", hgRebateFee=").append(hgRebateFee);
    if (needPay != null) builder.append(", needPay=").append(needPay);
    if (companyId != null) builder.append(", companyId=").append(companyId);
    if (orgId != null) builder.append(", orgId=").append(orgId);
    if (branchId != null) builder.append(", branchId=").append(branchId);
    if (startDate != null) builder.append(", startDate=").append(startDate);
    if (endDate != null) builder.append(", endDate=").append(endDate);
    if (expenditureType != null) builder.append(", expenditureType=").append(expenditureType);
    if (expenditureONEType != null) builder.append(", expenditureONEType=").append(expenditureONEType);
    if (expenditureNType != null) builder.append(", expenditureNType=").append(expenditureNType);
    if (expenditureAdditionType != null) builder.append(", expenditureAdditionType=").append(expenditureAdditionType);
    if (expenditureJJZGType != null) builder.append(", expenditureJJZGType=").append(expenditureJJZGType);
    if (expenditureJTHSType != null) builder.append(", expenditureJTHSType=").append(expenditureJTHSType);
    if (expenditureJKHLType != null) builder.append(", expenditureJKHLType=").append(expenditureJKHLType);
    if (expenditureZYLLType != null) builder.append(", expenditureZYLLType=").append(expenditureZYLLType);
    if (expenditureJPYSType != null) builder.append(", expenditureJPYSType=").append(expenditureJPYSType);
    if (expenditureJYHLType != null) builder.append(", expenditureJYHLType=").append(expenditureJYHLType);
    if (expenditureXLWJType != null) builder.append(", expenditureXLWJType=").append(expenditureXLWJType);
    if (expenditureCHHFType != null) builder.append(", expenditureCHHFType=").append(expenditureCHHFType);
    if (expenditureYYYJType != null) builder.append(", expenditureYYYJType=").append(expenditureYYYJType);
    if (expenditureLZGHType != null) builder.append(", expenditureLZGHType=").append(expenditureLZGHType);
    if (expenditureCHXType != null) builder.append(", expenditureCHXType=").append(expenditureCHXType);
    if (expenditureFJXType != null) builder.append(", expenditureFJXType=").append(expenditureFJXType);
    return builder.replace(0, 2, "Expenditure{").append('}').toString();
  }

  public static final class Builder extends Message.Builder<Expenditure, Builder> {
    public String expenditureTime;

    public String expenditureFee;

    public String expenditureONEFee;

    public String expenditureNFee;

    public String expenditureAdditionFee;

    public String expenditureJJZGFee;

    public String expenditureJTHSFee;

    public String expenditureJKHLFee;

    public String expenditureZYLLFee;

    public String expenditureJPYSFee;

    public String expenditureJYHLFee;

    public String expenditureXLWJFee;

    public String expenditureCHHFFee;

    public String expenditureYYYJFee;

    public String expenditureLZGHFee;

    public String expenditureCHXFee;

    public String expenditureFJXFee;

    public String hgRebateFee;

    public String needPay;

    public Long companyId;

    public Long orgId;

    public Long branchId;

    public String startDate;

    public String endDate;

    public Integer expenditureType;

    public Integer expenditureONEType;

    public Integer expenditureNType;

    public Integer expenditureAdditionType;

    public Integer expenditureJJZGType;

    public Integer expenditureJTHSType;

    public Integer expenditureJKHLType;

    public Integer expenditureZYLLType;

    public Integer expenditureJPYSType;

    public Integer expenditureJYHLType;

    public Integer expenditureXLWJType;

    public Integer expenditureCHHFType;

    public Integer expenditureYYYJType;

    public Integer expenditureLZGHType;

    public Integer expenditureCHXType;

    public Integer expenditureFJXType;

    public Builder() {
    }

    /**
     * 消费时间
     */
    public Builder expenditureTime(String expenditureTime) {
      this.expenditureTime = expenditureTime;
      return this;
    }

    /**
     * 消费总额
     */
    public Builder expenditureFee(String expenditureFee) {
      this.expenditureFee = expenditureFee;
      return this;
    }

    /**
     * 专陪费用
     */
    public Builder expenditureONEFee(String expenditureONEFee) {
      this.expenditureONEFee = expenditureONEFee;
      return this;
    }

    /**
     * 普陪费用
     */
    public Builder expenditureNFee(String expenditureNFee) {
      this.expenditureNFee = expenditureNFee;
      return this;
    }

    /**
     * 附加项费用
     */
    public Builder expenditureAdditionFee(String expenditureAdditionFee) {
      this.expenditureAdditionFee = expenditureAdditionFee;
      return this;
    }

    /**
     * 居家照护
     */
    public Builder expenditureJJZGFee(String expenditureJJZGFee) {
      this.expenditureJJZGFee = expenditureJJZGFee;
      return this;
    }

    /**
     * 家庭护士
     */
    public Builder expenditureJTHSFee(String expenditureJTHSFee) {
      this.expenditureJTHSFee = expenditureJTHSFee;
      return this;
    }

    /**
     * 健康护理
     */
    public Builder expenditureJKHLFee(String expenditureJKHLFee) {
      this.expenditureJKHLFee = expenditureJKHLFee;
      return this;
    }

    /**
     * 中医理疗
     */
    public Builder expenditureZYLLFee(String expenditureZYLLFee) {
      this.expenditureZYLLFee = expenditureZYLLFee;
      return this;
    }

    /**
     * 金牌月嫂
     */
    public Builder expenditureJPYSFee(String expenditureJPYSFee) {
      this.expenditureJPYSFee = expenditureJPYSFee;
      return this;
    }

    /**
     * 就医护理
     */
    public Builder expenditureJYHLFee(String expenditureJYHLFee) {
      this.expenditureJYHLFee = expenditureJYHLFee;
      return this;
    }

    /**
     * 心理慰藉
     */
    public Builder expenditureXLWJFee(String expenditureXLWJFee) {
      this.expenditureXLWJFee = expenditureXLWJFee;
      return this;
    }

    /**
     * 产后恢复
     */
    public Builder expenditureCHHFFee(String expenditureCHHFFee) {
      this.expenditureCHHFFee = expenditureCHHFFee;
      return this;
    }

    /**
     * 育婴幼教
     */
    public Builder expenditureYYYJFee(String expenditureYYYJFee) {
      this.expenditureYYYJFee = expenditureYYYJFee;
      return this;
    }

    /**
     * 临终关怀
     */
    public Builder expenditureLZGHFee(String expenditureLZGHFee) {
      this.expenditureLZGHFee = expenditureLZGHFee;
      return this;
    }

    /**
     * 长护险生活照料
     */
    public Builder expenditureCHXFee(String expenditureCHXFee) {
      this.expenditureCHXFee = expenditureCHXFee;
      return this;
    }

    /**
     * 普通附加项费用
     */
    public Builder expenditureFJXFee(String expenditureFJXFee) {
      this.expenditureFJXFee = expenditureFJXFee;
      return this;
    }

    /**
     * 优惠金额
     */
    public Builder hgRebateFee(String hgRebateFee) {
      this.hgRebateFee = hgRebateFee;
      return this;
    }

    /**
     * 实收金额
     */
    public Builder needPay(String needPay) {
      this.needPay = needPay;
      return this;
    }

    /**
     * 公司id
     */
    public Builder companyId(Long companyId) {
      this.companyId = companyId;
      return this;
    }

    /**
     * 机构id
     */
    public Builder orgId(Long orgId) {
      this.orgId = orgId;
      return this;
    }

    /**
     * 科室id
     */
    public Builder branchId(Long branchId) {
      this.branchId = branchId;
      return this;
    }

    /**
     * 开始时间
     */
    public Builder startDate(String startDate) {
      this.startDate = startDate;
      return this;
    }

    /**
     * 结束时间
     */
    public Builder endDate(String endDate) {
      this.endDate = endDate;
      return this;
    }

    /**
     * 状态
     * 消费总额
     */
    public Builder expenditureType(Integer expenditureType) {
      this.expenditureType = expenditureType;
      return this;
    }

    /**
     * 专陪费用
     */
    public Builder expenditureONEType(Integer expenditureONEType) {
      this.expenditureONEType = expenditureONEType;
      return this;
    }

    /**
     * 普陪费用
     */
    public Builder expenditureNType(Integer expenditureNType) {
      this.expenditureNType = expenditureNType;
      return this;
    }

    /**
     * 附加项费用
     */
    public Builder expenditureAdditionType(Integer expenditureAdditionType) {
      this.expenditureAdditionType = expenditureAdditionType;
      return this;
    }

    /**
     * 居家照护
     */
    public Builder expenditureJJZGType(Integer expenditureJJZGType) {
      this.expenditureJJZGType = expenditureJJZGType;
      return this;
    }

    /**
     * 家庭护士
     */
    public Builder expenditureJTHSType(Integer expenditureJTHSType) {
      this.expenditureJTHSType = expenditureJTHSType;
      return this;
    }

    /**
     * 健康护理
     */
    public Builder expenditureJKHLType(Integer expenditureJKHLType) {
      this.expenditureJKHLType = expenditureJKHLType;
      return this;
    }

    /**
     * 中医理疗
     */
    public Builder expenditureZYLLType(Integer expenditureZYLLType) {
      this.expenditureZYLLType = expenditureZYLLType;
      return this;
    }

    /**
     * 金牌月嫂
     */
    public Builder expenditureJPYSType(Integer expenditureJPYSType) {
      this.expenditureJPYSType = expenditureJPYSType;
      return this;
    }

    /**
     * 就医护理
     */
    public Builder expenditureJYHLType(Integer expenditureJYHLType) {
      this.expenditureJYHLType = expenditureJYHLType;
      return this;
    }

    /**
     * 心理慰藉
     */
    public Builder expenditureXLWJType(Integer expenditureXLWJType) {
      this.expenditureXLWJType = expenditureXLWJType;
      return this;
    }

    /**
     * 产后恢复
     */
    public Builder expenditureCHHFType(Integer expenditureCHHFType) {
      this.expenditureCHHFType = expenditureCHHFType;
      return this;
    }

    /**
     * 育婴幼教
     */
    public Builder expenditureYYYJType(Integer expenditureYYYJType) {
      this.expenditureYYYJType = expenditureYYYJType;
      return this;
    }

    /**
     * 临终关怀
     */
    public Builder expenditureLZGHType(Integer expenditureLZGHType) {
      this.expenditureLZGHType = expenditureLZGHType;
      return this;
    }

    /**
     * 长护险生活照料
     */
    public Builder expenditureCHXType(Integer expenditureCHXType) {
      this.expenditureCHXType = expenditureCHXType;
      return this;
    }

    /**
     * 普通附加项费用
     */
    public Builder expenditureFJXType(Integer expenditureFJXType) {
      this.expenditureFJXType = expenditureFJXType;
      return this;
    }

    @Override
    public Expenditure build() {
      return new Expenditure(expenditureTime, expenditureFee, expenditureONEFee, expenditureNFee, expenditureAdditionFee, expenditureJJZGFee, expenditureJTHSFee, expenditureJKHLFee, expenditureZYLLFee, expenditureJPYSFee, expenditureJYHLFee, expenditureXLWJFee, expenditureCHHFFee, expenditureYYYJFee, expenditureLZGHFee, expenditureCHXFee, expenditureFJXFee, hgRebateFee, needPay, companyId, orgId, branchId, startDate, endDate, expenditureType, expenditureONEType, expenditureNType, expenditureAdditionType, expenditureJJZGType, expenditureJTHSType, expenditureJKHLType, expenditureZYLLType, expenditureJPYSType, expenditureJYHLType, expenditureXLWJType, expenditureCHHFType, expenditureYYYJType, expenditureLZGHType, expenditureCHXType, expenditureFJXType, super.buildUnknownFields());
    }
  }

  private static final class ProtoAdapter_Expenditure extends ProtoAdapter<Expenditure> {
    ProtoAdapter_Expenditure() {
      super(FieldEncoding.LENGTH_DELIMITED, Expenditure.class);
    }

    @Override
    public int encodedSize(Expenditure value) {
      return (value.expenditureTime != null ? ProtoAdapter.STRING.encodedSizeWithTag(1, value.expenditureTime) : 0)
          + (value.expenditureFee != null ? ProtoAdapter.STRING.encodedSizeWithTag(2, value.expenditureFee) : 0)
          + (value.expenditureONEFee != null ? ProtoAdapter.STRING.encodedSizeWithTag(3, value.expenditureONEFee) : 0)
          + (value.expenditureNFee != null ? ProtoAdapter.STRING.encodedSizeWithTag(4, value.expenditureNFee) : 0)
          + (value.expenditureAdditionFee != null ? ProtoAdapter.STRING.encodedSizeWithTag(5, value.expenditureAdditionFee) : 0)
          + (value.expenditureJJZGFee != null ? ProtoAdapter.STRING.encodedSizeWithTag(6, value.expenditureJJZGFee) : 0)
          + (value.expenditureJTHSFee != null ? ProtoAdapter.STRING.encodedSizeWithTag(7, value.expenditureJTHSFee) : 0)
          + (value.expenditureJKHLFee != null ? ProtoAdapter.STRING.encodedSizeWithTag(8, value.expenditureJKHLFee) : 0)
          + (value.expenditureZYLLFee != null ? ProtoAdapter.STRING.encodedSizeWithTag(9, value.expenditureZYLLFee) : 0)
          + (value.expenditureJPYSFee != null ? ProtoAdapter.STRING.encodedSizeWithTag(10, value.expenditureJPYSFee) : 0)
          + (value.expenditureJYHLFee != null ? ProtoAdapter.STRING.encodedSizeWithTag(11, value.expenditureJYHLFee) : 0)
          + (value.expenditureXLWJFee != null ? ProtoAdapter.STRING.encodedSizeWithTag(12, value.expenditureXLWJFee) : 0)
          + (value.expenditureCHHFFee != null ? ProtoAdapter.STRING.encodedSizeWithTag(13, value.expenditureCHHFFee) : 0)
          + (value.expenditureYYYJFee != null ? ProtoAdapter.STRING.encodedSizeWithTag(14, value.expenditureYYYJFee) : 0)
          + (value.expenditureLZGHFee != null ? ProtoAdapter.STRING.encodedSizeWithTag(15, value.expenditureLZGHFee) : 0)
          + (value.expenditureCHXFee != null ? ProtoAdapter.STRING.encodedSizeWithTag(16, value.expenditureCHXFee) : 0)
          + (value.expenditureFJXFee != null ? ProtoAdapter.STRING.encodedSizeWithTag(17, value.expenditureFJXFee) : 0)
          + (value.hgRebateFee != null ? ProtoAdapter.STRING.encodedSizeWithTag(18, value.hgRebateFee) : 0)
          + (value.needPay != null ? ProtoAdapter.STRING.encodedSizeWithTag(19, value.needPay) : 0)
          + (value.companyId != null ? ProtoAdapter.UINT64.encodedSizeWithTag(20, value.companyId) : 0)
          + (value.orgId != null ? ProtoAdapter.UINT64.encodedSizeWithTag(21, value.orgId) : 0)
          + (value.branchId != null ? ProtoAdapter.UINT64.encodedSizeWithTag(22, value.branchId) : 0)
          + (value.startDate != null ? ProtoAdapter.STRING.encodedSizeWithTag(23, value.startDate) : 0)
          + (value.endDate != null ? ProtoAdapter.STRING.encodedSizeWithTag(24, value.endDate) : 0)
          + (value.expenditureType != null ? ProtoAdapter.UINT32.encodedSizeWithTag(25, value.expenditureType) : 0)
          + (value.expenditureONEType != null ? ProtoAdapter.UINT32.encodedSizeWithTag(26, value.expenditureONEType) : 0)
          + (value.expenditureNType != null ? ProtoAdapter.UINT32.encodedSizeWithTag(27, value.expenditureNType) : 0)
          + (value.expenditureAdditionType != null ? ProtoAdapter.UINT32.encodedSizeWithTag(28, value.expenditureAdditionType) : 0)
          + (value.expenditureJJZGType != null ? ProtoAdapter.UINT32.encodedSizeWithTag(29, value.expenditureJJZGType) : 0)
          + (value.expenditureJTHSType != null ? ProtoAdapter.UINT32.encodedSizeWithTag(30, value.expenditureJTHSType) : 0)
          + (value.expenditureJKHLType != null ? ProtoAdapter.UINT32.encodedSizeWithTag(31, value.expenditureJKHLType) : 0)
          + (value.expenditureZYLLType != null ? ProtoAdapter.UINT32.encodedSizeWithTag(32, value.expenditureZYLLType) : 0)
          + (value.expenditureJPYSType != null ? ProtoAdapter.UINT32.encodedSizeWithTag(33, value.expenditureJPYSType) : 0)
          + (value.expenditureJYHLType != null ? ProtoAdapter.UINT32.encodedSizeWithTag(34, value.expenditureJYHLType) : 0)
          + (value.expenditureXLWJType != null ? ProtoAdapter.UINT32.encodedSizeWithTag(35, value.expenditureXLWJType) : 0)
          + (value.expenditureCHHFType != null ? ProtoAdapter.UINT32.encodedSizeWithTag(36, value.expenditureCHHFType) : 0)
          + (value.expenditureYYYJType != null ? ProtoAdapter.UINT32.encodedSizeWithTag(37, value.expenditureYYYJType) : 0)
          + (value.expenditureLZGHType != null ? ProtoAdapter.UINT32.encodedSizeWithTag(38, value.expenditureLZGHType) : 0)
          + (value.expenditureCHXType != null ? ProtoAdapter.UINT32.encodedSizeWithTag(39, value.expenditureCHXType) : 0)
          + (value.expenditureFJXType != null ? ProtoAdapter.UINT32.encodedSizeWithTag(40, value.expenditureFJXType) : 0)
          + value.unknownFields().size();
    }

    @Override
    public void encode(ProtoWriter writer, Expenditure value) throws IOException {
      if (value.expenditureTime != null) ProtoAdapter.STRING.encodeWithTag(writer, 1, value.expenditureTime);
      if (value.expenditureFee != null) ProtoAdapter.STRING.encodeWithTag(writer, 2, value.expenditureFee);
      if (value.expenditureONEFee != null) ProtoAdapter.STRING.encodeWithTag(writer, 3, value.expenditureONEFee);
      if (value.expenditureNFee != null) ProtoAdapter.STRING.encodeWithTag(writer, 4, value.expenditureNFee);
      if (value.expenditureAdditionFee != null) ProtoAdapter.STRING.encodeWithTag(writer, 5, value.expenditureAdditionFee);
      if (value.expenditureJJZGFee != null) ProtoAdapter.STRING.encodeWithTag(writer, 6, value.expenditureJJZGFee);
      if (value.expenditureJTHSFee != null) ProtoAdapter.STRING.encodeWithTag(writer, 7, value.expenditureJTHSFee);
      if (value.expenditureJKHLFee != null) ProtoAdapter.STRING.encodeWithTag(writer, 8, value.expenditureJKHLFee);
      if (value.expenditureZYLLFee != null) ProtoAdapter.STRING.encodeWithTag(writer, 9, value.expenditureZYLLFee);
      if (value.expenditureJPYSFee != null) ProtoAdapter.STRING.encodeWithTag(writer, 10, value.expenditureJPYSFee);
      if (value.expenditureJYHLFee != null) ProtoAdapter.STRING.encodeWithTag(writer, 11, value.expenditureJYHLFee);
      if (value.expenditureXLWJFee != null) ProtoAdapter.STRING.encodeWithTag(writer, 12, value.expenditureXLWJFee);
      if (value.expenditureCHHFFee != null) ProtoAdapter.STRING.encodeWithTag(writer, 13, value.expenditureCHHFFee);
      if (value.expenditureYYYJFee != null) ProtoAdapter.STRING.encodeWithTag(writer, 14, value.expenditureYYYJFee);
      if (value.expenditureLZGHFee != null) ProtoAdapter.STRING.encodeWithTag(writer, 15, value.expenditureLZGHFee);
      if (value.expenditureCHXFee != null) ProtoAdapter.STRING.encodeWithTag(writer, 16, value.expenditureCHXFee);
      if (value.expenditureFJXFee != null) ProtoAdapter.STRING.encodeWithTag(writer, 17, value.expenditureFJXFee);
      if (value.hgRebateFee != null) ProtoAdapter.STRING.encodeWithTag(writer, 18, value.hgRebateFee);
      if (value.needPay != null) ProtoAdapter.STRING.encodeWithTag(writer, 19, value.needPay);
      if (value.companyId != null) ProtoAdapter.UINT64.encodeWithTag(writer, 20, value.companyId);
      if (value.orgId != null) ProtoAdapter.UINT64.encodeWithTag(writer, 21, value.orgId);
      if (value.branchId != null) ProtoAdapter.UINT64.encodeWithTag(writer, 22, value.branchId);
      if (value.startDate != null) ProtoAdapter.STRING.encodeWithTag(writer, 23, value.startDate);
      if (value.endDate != null) ProtoAdapter.STRING.encodeWithTag(writer, 24, value.endDate);
      if (value.expenditureType != null) ProtoAdapter.UINT32.encodeWithTag(writer, 25, value.expenditureType);
      if (value.expenditureONEType != null) ProtoAdapter.UINT32.encodeWithTag(writer, 26, value.expenditureONEType);
      if (value.expenditureNType != null) ProtoAdapter.UINT32.encodeWithTag(writer, 27, value.expenditureNType);
      if (value.expenditureAdditionType != null) ProtoAdapter.UINT32.encodeWithTag(writer, 28, value.expenditureAdditionType);
      if (value.expenditureJJZGType != null) ProtoAdapter.UINT32.encodeWithTag(writer, 29, value.expenditureJJZGType);
      if (value.expenditureJTHSType != null) ProtoAdapter.UINT32.encodeWithTag(writer, 30, value.expenditureJTHSType);
      if (value.expenditureJKHLType != null) ProtoAdapter.UINT32.encodeWithTag(writer, 31, value.expenditureJKHLType);
      if (value.expenditureZYLLType != null) ProtoAdapter.UINT32.encodeWithTag(writer, 32, value.expenditureZYLLType);
      if (value.expenditureJPYSType != null) ProtoAdapter.UINT32.encodeWithTag(writer, 33, value.expenditureJPYSType);
      if (value.expenditureJYHLType != null) ProtoAdapter.UINT32.encodeWithTag(writer, 34, value.expenditureJYHLType);
      if (value.expenditureXLWJType != null) ProtoAdapter.UINT32.encodeWithTag(writer, 35, value.expenditureXLWJType);
      if (value.expenditureCHHFType != null) ProtoAdapter.UINT32.encodeWithTag(writer, 36, value.expenditureCHHFType);
      if (value.expenditureYYYJType != null) ProtoAdapter.UINT32.encodeWithTag(writer, 37, value.expenditureYYYJType);
      if (value.expenditureLZGHType != null) ProtoAdapter.UINT32.encodeWithTag(writer, 38, value.expenditureLZGHType);
      if (value.expenditureCHXType != null) ProtoAdapter.UINT32.encodeWithTag(writer, 39, value.expenditureCHXType);
      if (value.expenditureFJXType != null) ProtoAdapter.UINT32.encodeWithTag(writer, 40, value.expenditureFJXType);
      writer.writeBytes(value.unknownFields());
    }

    @Override
    public Expenditure decode(ProtoReader reader) throws IOException {
      Builder builder = new Builder();
      long token = reader.beginMessage();
      for (int tag; (tag = reader.nextTag()) != -1;) {
        switch (tag) {
          case 1: builder.expenditureTime(ProtoAdapter.STRING.decode(reader)); break;
          case 2: builder.expenditureFee(ProtoAdapter.STRING.decode(reader)); break;
          case 3: builder.expenditureONEFee(ProtoAdapter.STRING.decode(reader)); break;
          case 4: builder.expenditureNFee(ProtoAdapter.STRING.decode(reader)); break;
          case 5: builder.expenditureAdditionFee(ProtoAdapter.STRING.decode(reader)); break;
          case 6: builder.expenditureJJZGFee(ProtoAdapter.STRING.decode(reader)); break;
          case 7: builder.expenditureJTHSFee(ProtoAdapter.STRING.decode(reader)); break;
          case 8: builder.expenditureJKHLFee(ProtoAdapter.STRING.decode(reader)); break;
          case 9: builder.expenditureZYLLFee(ProtoAdapter.STRING.decode(reader)); break;
          case 10: builder.expenditureJPYSFee(ProtoAdapter.STRING.decode(reader)); break;
          case 11: builder.expenditureJYHLFee(ProtoAdapter.STRING.decode(reader)); break;
          case 12: builder.expenditureXLWJFee(ProtoAdapter.STRING.decode(reader)); break;
          case 13: builder.expenditureCHHFFee(ProtoAdapter.STRING.decode(reader)); break;
          case 14: builder.expenditureYYYJFee(ProtoAdapter.STRING.decode(reader)); break;
          case 15: builder.expenditureLZGHFee(ProtoAdapter.STRING.decode(reader)); break;
          case 16: builder.expenditureCHXFee(ProtoAdapter.STRING.decode(reader)); break;
          case 17: builder.expenditureFJXFee(ProtoAdapter.STRING.decode(reader)); break;
          case 18: builder.hgRebateFee(ProtoAdapter.STRING.decode(reader)); break;
          case 19: builder.needPay(ProtoAdapter.STRING.decode(reader)); break;
          case 20: builder.companyId(ProtoAdapter.UINT64.decode(reader)); break;
          case 21: builder.orgId(ProtoAdapter.UINT64.decode(reader)); break;
          case 22: builder.branchId(ProtoAdapter.UINT64.decode(reader)); break;
          case 23: builder.startDate(ProtoAdapter.STRING.decode(reader)); break;
          case 24: builder.endDate(ProtoAdapter.STRING.decode(reader)); break;
          case 25: builder.expenditureType(ProtoAdapter.UINT32.decode(reader)); break;
          case 26: builder.expenditureONEType(ProtoAdapter.UINT32.decode(reader)); break;
          case 27: builder.expenditureNType(ProtoAdapter.UINT32.decode(reader)); break;
          case 28: builder.expenditureAdditionType(ProtoAdapter.UINT32.decode(reader)); break;
          case 29: builder.expenditureJJZGType(ProtoAdapter.UINT32.decode(reader)); break;
          case 30: builder.expenditureJTHSType(ProtoAdapter.UINT32.decode(reader)); break;
          case 31: builder.expenditureJKHLType(ProtoAdapter.UINT32.decode(reader)); break;
          case 32: builder.expenditureZYLLType(ProtoAdapter.UINT32.decode(reader)); break;
          case 33: builder.expenditureJPYSType(ProtoAdapter.UINT32.decode(reader)); break;
          case 34: builder.expenditureJYHLType(ProtoAdapter.UINT32.decode(reader)); break;
          case 35: builder.expenditureXLWJType(ProtoAdapter.UINT32.decode(reader)); break;
          case 36: builder.expenditureCHHFType(ProtoAdapter.UINT32.decode(reader)); break;
          case 37: builder.expenditureYYYJType(ProtoAdapter.UINT32.decode(reader)); break;
          case 38: builder.expenditureLZGHType(ProtoAdapter.UINT32.decode(reader)); break;
          case 39: builder.expenditureCHXType(ProtoAdapter.UINT32.decode(reader)); break;
          case 40: builder.expenditureFJXType(ProtoAdapter.UINT32.decode(reader)); break;
          default: {
            FieldEncoding fieldEncoding = reader.peekFieldEncoding();
            Object value = fieldEncoding.rawProtoAdapter().decode(reader);
            builder.addUnknownField(tag, fieldEncoding, value);
          }
        }
      }
      reader.endMessage(token);
      return builder.build();
    }

    @Override
    public Expenditure redact(Expenditure value) {
      Builder builder = value.newBuilder();
      builder.clearUnknownFields();
      return builder.build();
    }
  }
}
