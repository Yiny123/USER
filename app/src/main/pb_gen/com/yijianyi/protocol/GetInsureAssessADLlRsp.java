// Code generated by Wire protocol buffer compiler, do not edit.
// Source file: AppInterface.proto at 765:1
package com.yijianyi.protocol;

import com.squareup.wire.FieldEncoding;
import com.squareup.wire.Message;
import com.squareup.wire.ProtoAdapter;
import com.squareup.wire.ProtoReader;
import com.squareup.wire.ProtoWriter;
import com.squareup.wire.WireField;
import com.squareup.wire.internal.Internal;
import java.io.IOException;
import java.lang.Integer;
import java.lang.Long;
import java.lang.Object;
import java.lang.Override;
import java.lang.String;
import java.lang.StringBuilder;
import okio.ByteString;

/**
 * 	获取ADL评估
 */
public final class GetInsureAssessADLlRsp extends Message<GetInsureAssessADLlRsp, GetInsureAssessADLlRsp.Builder> {
  public static final ProtoAdapter<GetInsureAssessADLlRsp> ADAPTER = new ProtoAdapter_GetInsureAssessADLlRsp();

  private static final long serialVersionUID = 0L;

  public static final String DEFAULT_INSURENO = "";

  public static final Integer DEFAULT_JUDGE = 0;

  public static final Long DEFAULT_TIMESORT = 0L;

  public static final Long DEFAULT_ID = 0L;

  public static final Long DEFAULT_CREATESTAFFID = 0L;

  public static final String DEFAULT_CREATESTAFFNAME = "";

  public static final String DEFAULT_IDCARD = "";

  public static final Long DEFAULT_USERID = 0L;

  public static final Long DEFAULT_ASSESSTYPE = 0L;

  public static final String DEFAULT_CREATETIME = "";

  public static final Long DEFAULT_SCORE = 0L;

  /**
   * 订单唯一id
   */
  @WireField(
      tag = 1,
      adapter = "com.squareup.wire.ProtoAdapter#STRING"
  )
  public final String insureNO;

  @WireField(
      tag = 2,
      adapter = "com.squareup.wire.ProtoAdapter#UINT32"
  )
  public final Integer judge;

  /**
   * 时间
   */
  @WireField(
      tag = 3,
      adapter = "com.squareup.wire.ProtoAdapter#UINT64"
  )
  public final Long timeSort;

  /**
   * id
   */
  @WireField(
      tag = 4,
      adapter = "com.squareup.wire.ProtoAdapter#UINT64"
  )
  public final Long id;

  /**
   * 评分人id
   */
  @WireField(
      tag = 5,
      adapter = "com.squareup.wire.ProtoAdapter#UINT64"
  )
  public final Long createStaffId;

  /**
   * 评分人昵称
   */
  @WireField(
      tag = 6,
      adapter = "com.squareup.wire.ProtoAdapter#STRING"
  )
  public final String createStaffName;

  /**
   * 身份证
   */
  @WireField(
      tag = 7,
      adapter = "com.squareup.wire.ProtoAdapter#STRING"
  )
  public final String idcard;

  /**
   * 用户id
   */
  @WireField(
      tag = 8,
      adapter = "com.squareup.wire.ProtoAdapter#UINT64"
  )
  public final Long userId;

  /**
   * 状态0-用户自评 1-初审评估 2-复审评估 3-终审评估
   */
  @WireField(
      tag = 9,
      adapter = "com.squareup.wire.ProtoAdapter#UINT64"
  )
  public final Long assessType;

  /**
   * 时间
   */
  @WireField(
      tag = 10,
      adapter = "com.squareup.wire.ProtoAdapter#STRING"
  )
  public final String createTime;

  /**
   * 进食
   */
  @WireField(
      tag = 11,
      adapter = "com.yijianyi.protocol.AdlAssessItem#ADAPTER"
  )
  public final AdlAssessItem eat;

  /**
   * 洗澡
   */
  @WireField(
      tag = 12,
      adapter = "com.yijianyi.protocol.AdlAssessItem#ADAPTER"
  )
  public final AdlAssessItem water;

  /**
   * 修饰
   */
  @WireField(
      tag = 13,
      adapter = "com.yijianyi.protocol.AdlAssessItem#ADAPTER"
  )
  public final AdlAssessItem face;

  /**
   * 穿衣
   */
  @WireField(
      tag = 14,
      adapter = "com.yijianyi.protocol.AdlAssessItem#ADAPTER"
  )
  public final AdlAssessItem wear;

  /**
   * 控制大便
   */
  @WireField(
      tag = 15,
      adapter = "com.yijianyi.protocol.AdlAssessItem#ADAPTER"
  )
  public final AdlAssessItem faec;

  /**
   * 控制小便
   */
  @WireField(
      tag = 16,
      adapter = "com.yijianyi.protocol.AdlAssessItem#ADAPTER"
  )
  public final AdlAssessItem pee;

  /**
   * 上厕所
   */
  @WireField(
      tag = 17,
      adapter = "com.yijianyi.protocol.AdlAssessItem#ADAPTER"
  )
  public final AdlAssessItem toilet;

  /**
   * 床椅转移
   */
  @WireField(
      tag = 18,
      adapter = "com.yijianyi.protocol.AdlAssessItem#ADAPTER"
  )
  public final AdlAssessItem carry;

  /**
   * 行走
   */
  @WireField(
      tag = 19,
      adapter = "com.yijianyi.protocol.AdlAssessItem#ADAPTER"
  )
  public final AdlAssessItem walk;

  /**
   * 上下楼梯
   */
  @WireField(
      tag = 20,
      adapter = "com.yijianyi.protocol.AdlAssessItem#ADAPTER"
  )
  public final AdlAssessItem stair;

  /**
   * 分数
   */
  @WireField(
      tag = 21,
      adapter = "com.squareup.wire.ProtoAdapter#UINT64"
  )
  public final Long score;

  public GetInsureAssessADLlRsp(String insureNO, Integer judge, Long timeSort, Long id, Long createStaffId, String createStaffName, String idcard, Long userId, Long assessType, String createTime, AdlAssessItem eat, AdlAssessItem water, AdlAssessItem face, AdlAssessItem wear, AdlAssessItem faec, AdlAssessItem pee, AdlAssessItem toilet, AdlAssessItem carry, AdlAssessItem walk, AdlAssessItem stair, Long score) {
    this(insureNO, judge, timeSort, id, createStaffId, createStaffName, idcard, userId, assessType, createTime, eat, water, face, wear, faec, pee, toilet, carry, walk, stair, score, ByteString.EMPTY);
  }

  public GetInsureAssessADLlRsp(String insureNO, Integer judge, Long timeSort, Long id, Long createStaffId, String createStaffName, String idcard, Long userId, Long assessType, String createTime, AdlAssessItem eat, AdlAssessItem water, AdlAssessItem face, AdlAssessItem wear, AdlAssessItem faec, AdlAssessItem pee, AdlAssessItem toilet, AdlAssessItem carry, AdlAssessItem walk, AdlAssessItem stair, Long score, ByteString unknownFields) {
    super(ADAPTER, unknownFields);
    this.insureNO = insureNO;
    this.judge = judge;
    this.timeSort = timeSort;
    this.id = id;
    this.createStaffId = createStaffId;
    this.createStaffName = createStaffName;
    this.idcard = idcard;
    this.userId = userId;
    this.assessType = assessType;
    this.createTime = createTime;
    this.eat = eat;
    this.water = water;
    this.face = face;
    this.wear = wear;
    this.faec = faec;
    this.pee = pee;
    this.toilet = toilet;
    this.carry = carry;
    this.walk = walk;
    this.stair = stair;
    this.score = score;
  }

  @Override
  public Builder newBuilder() {
    Builder builder = new Builder();
    builder.insureNO = insureNO;
    builder.judge = judge;
    builder.timeSort = timeSort;
    builder.id = id;
    builder.createStaffId = createStaffId;
    builder.createStaffName = createStaffName;
    builder.idcard = idcard;
    builder.userId = userId;
    builder.assessType = assessType;
    builder.createTime = createTime;
    builder.eat = eat;
    builder.water = water;
    builder.face = face;
    builder.wear = wear;
    builder.faec = faec;
    builder.pee = pee;
    builder.toilet = toilet;
    builder.carry = carry;
    builder.walk = walk;
    builder.stair = stair;
    builder.score = score;
    builder.addUnknownFields(unknownFields());
    return builder;
  }

  @Override
  public boolean equals(Object other) {
    if (other == this) return true;
    if (!(other instanceof GetInsureAssessADLlRsp)) return false;
    GetInsureAssessADLlRsp o = (GetInsureAssessADLlRsp) other;
    return unknownFields().equals(o.unknownFields())
        && Internal.equals(insureNO, o.insureNO)
        && Internal.equals(judge, o.judge)
        && Internal.equals(timeSort, o.timeSort)
        && Internal.equals(id, o.id)
        && Internal.equals(createStaffId, o.createStaffId)
        && Internal.equals(createStaffName, o.createStaffName)
        && Internal.equals(idcard, o.idcard)
        && Internal.equals(userId, o.userId)
        && Internal.equals(assessType, o.assessType)
        && Internal.equals(createTime, o.createTime)
        && Internal.equals(eat, o.eat)
        && Internal.equals(water, o.water)
        && Internal.equals(face, o.face)
        && Internal.equals(wear, o.wear)
        && Internal.equals(faec, o.faec)
        && Internal.equals(pee, o.pee)
        && Internal.equals(toilet, o.toilet)
        && Internal.equals(carry, o.carry)
        && Internal.equals(walk, o.walk)
        && Internal.equals(stair, o.stair)
        && Internal.equals(score, o.score);
  }

  @Override
  public int hashCode() {
    int result = super.hashCode;
    if (result == 0) {
      result = unknownFields().hashCode();
      result = result * 37 + (insureNO != null ? insureNO.hashCode() : 0);
      result = result * 37 + (judge != null ? judge.hashCode() : 0);
      result = result * 37 + (timeSort != null ? timeSort.hashCode() : 0);
      result = result * 37 + (id != null ? id.hashCode() : 0);
      result = result * 37 + (createStaffId != null ? createStaffId.hashCode() : 0);
      result = result * 37 + (createStaffName != null ? createStaffName.hashCode() : 0);
      result = result * 37 + (idcard != null ? idcard.hashCode() : 0);
      result = result * 37 + (userId != null ? userId.hashCode() : 0);
      result = result * 37 + (assessType != null ? assessType.hashCode() : 0);
      result = result * 37 + (createTime != null ? createTime.hashCode() : 0);
      result = result * 37 + (eat != null ? eat.hashCode() : 0);
      result = result * 37 + (water != null ? water.hashCode() : 0);
      result = result * 37 + (face != null ? face.hashCode() : 0);
      result = result * 37 + (wear != null ? wear.hashCode() : 0);
      result = result * 37 + (faec != null ? faec.hashCode() : 0);
      result = result * 37 + (pee != null ? pee.hashCode() : 0);
      result = result * 37 + (toilet != null ? toilet.hashCode() : 0);
      result = result * 37 + (carry != null ? carry.hashCode() : 0);
      result = result * 37 + (walk != null ? walk.hashCode() : 0);
      result = result * 37 + (stair != null ? stair.hashCode() : 0);
      result = result * 37 + (score != null ? score.hashCode() : 0);
      super.hashCode = result;
    }
    return result;
  }

  @Override
  public String toString() {
    StringBuilder builder = new StringBuilder();
    if (insureNO != null) builder.append(", insureNO=").append(insureNO);
    if (judge != null) builder.append(", judge=").append(judge);
    if (timeSort != null) builder.append(", timeSort=").append(timeSort);
    if (id != null) builder.append(", id=").append(id);
    if (createStaffId != null) builder.append(", createStaffId=").append(createStaffId);
    if (createStaffName != null) builder.append(", createStaffName=").append(createStaffName);
    if (idcard != null) builder.append(", idcard=").append(idcard);
    if (userId != null) builder.append(", userId=").append(userId);
    if (assessType != null) builder.append(", assessType=").append(assessType);
    if (createTime != null) builder.append(", createTime=").append(createTime);
    if (eat != null) builder.append(", eat=").append(eat);
    if (water != null) builder.append(", water=").append(water);
    if (face != null) builder.append(", face=").append(face);
    if (wear != null) builder.append(", wear=").append(wear);
    if (faec != null) builder.append(", faec=").append(faec);
    if (pee != null) builder.append(", pee=").append(pee);
    if (toilet != null) builder.append(", toilet=").append(toilet);
    if (carry != null) builder.append(", carry=").append(carry);
    if (walk != null) builder.append(", walk=").append(walk);
    if (stair != null) builder.append(", stair=").append(stair);
    if (score != null) builder.append(", score=").append(score);
    return builder.replace(0, 2, "GetInsureAssessADLlRsp{").append('}').toString();
  }

  public static final class Builder extends Message.Builder<GetInsureAssessADLlRsp, Builder> {
    public String insureNO;

    public Integer judge;

    public Long timeSort;

    public Long id;

    public Long createStaffId;

    public String createStaffName;

    public String idcard;

    public Long userId;

    public Long assessType;

    public String createTime;

    public AdlAssessItem eat;

    public AdlAssessItem water;

    public AdlAssessItem face;

    public AdlAssessItem wear;

    public AdlAssessItem faec;

    public AdlAssessItem pee;

    public AdlAssessItem toilet;

    public AdlAssessItem carry;

    public AdlAssessItem walk;

    public AdlAssessItem stair;

    public Long score;

    public Builder() {
    }

    /**
     * 订单唯一id
     */
    public Builder insureNO(String insureNO) {
      this.insureNO = insureNO;
      return this;
    }

    public Builder judge(Integer judge) {
      this.judge = judge;
      return this;
    }

    /**
     * 时间
     */
    public Builder timeSort(Long timeSort) {
      this.timeSort = timeSort;
      return this;
    }

    /**
     * id
     */
    public Builder id(Long id) {
      this.id = id;
      return this;
    }

    /**
     * 评分人id
     */
    public Builder createStaffId(Long createStaffId) {
      this.createStaffId = createStaffId;
      return this;
    }

    /**
     * 评分人昵称
     */
    public Builder createStaffName(String createStaffName) {
      this.createStaffName = createStaffName;
      return this;
    }

    /**
     * 身份证
     */
    public Builder idcard(String idcard) {
      this.idcard = idcard;
      return this;
    }

    /**
     * 用户id
     */
    public Builder userId(Long userId) {
      this.userId = userId;
      return this;
    }

    /**
     * 状态0-用户自评 1-初审评估 2-复审评估 3-终审评估
     */
    public Builder assessType(Long assessType) {
      this.assessType = assessType;
      return this;
    }

    /**
     * 时间
     */
    public Builder createTime(String createTime) {
      this.createTime = createTime;
      return this;
    }

    /**
     * 进食
     */
    public Builder eat(AdlAssessItem eat) {
      this.eat = eat;
      return this;
    }

    /**
     * 洗澡
     */
    public Builder water(AdlAssessItem water) {
      this.water = water;
      return this;
    }

    /**
     * 修饰
     */
    public Builder face(AdlAssessItem face) {
      this.face = face;
      return this;
    }

    /**
     * 穿衣
     */
    public Builder wear(AdlAssessItem wear) {
      this.wear = wear;
      return this;
    }

    /**
     * 控制大便
     */
    public Builder faec(AdlAssessItem faec) {
      this.faec = faec;
      return this;
    }

    /**
     * 控制小便
     */
    public Builder pee(AdlAssessItem pee) {
      this.pee = pee;
      return this;
    }

    /**
     * 上厕所
     */
    public Builder toilet(AdlAssessItem toilet) {
      this.toilet = toilet;
      return this;
    }

    /**
     * 床椅转移
     */
    public Builder carry(AdlAssessItem carry) {
      this.carry = carry;
      return this;
    }

    /**
     * 行走
     */
    public Builder walk(AdlAssessItem walk) {
      this.walk = walk;
      return this;
    }

    /**
     * 上下楼梯
     */
    public Builder stair(AdlAssessItem stair) {
      this.stair = stair;
      return this;
    }

    /**
     * 分数
     */
    public Builder score(Long score) {
      this.score = score;
      return this;
    }

    @Override
    public GetInsureAssessADLlRsp build() {
      return new GetInsureAssessADLlRsp(insureNO, judge, timeSort, id, createStaffId, createStaffName, idcard, userId, assessType, createTime, eat, water, face, wear, faec, pee, toilet, carry, walk, stair, score, super.buildUnknownFields());
    }
  }

  private static final class ProtoAdapter_GetInsureAssessADLlRsp extends ProtoAdapter<GetInsureAssessADLlRsp> {
    ProtoAdapter_GetInsureAssessADLlRsp() {
      super(FieldEncoding.LENGTH_DELIMITED, GetInsureAssessADLlRsp.class);
    }

    @Override
    public int encodedSize(GetInsureAssessADLlRsp value) {
      return (value.insureNO != null ? ProtoAdapter.STRING.encodedSizeWithTag(1, value.insureNO) : 0)
          + (value.judge != null ? ProtoAdapter.UINT32.encodedSizeWithTag(2, value.judge) : 0)
          + (value.timeSort != null ? ProtoAdapter.UINT64.encodedSizeWithTag(3, value.timeSort) : 0)
          + (value.id != null ? ProtoAdapter.UINT64.encodedSizeWithTag(4, value.id) : 0)
          + (value.createStaffId != null ? ProtoAdapter.UINT64.encodedSizeWithTag(5, value.createStaffId) : 0)
          + (value.createStaffName != null ? ProtoAdapter.STRING.encodedSizeWithTag(6, value.createStaffName) : 0)
          + (value.idcard != null ? ProtoAdapter.STRING.encodedSizeWithTag(7, value.idcard) : 0)
          + (value.userId != null ? ProtoAdapter.UINT64.encodedSizeWithTag(8, value.userId) : 0)
          + (value.assessType != null ? ProtoAdapter.UINT64.encodedSizeWithTag(9, value.assessType) : 0)
          + (value.createTime != null ? ProtoAdapter.STRING.encodedSizeWithTag(10, value.createTime) : 0)
          + (value.eat != null ? AdlAssessItem.ADAPTER.encodedSizeWithTag(11, value.eat) : 0)
          + (value.water != null ? AdlAssessItem.ADAPTER.encodedSizeWithTag(12, value.water) : 0)
          + (value.face != null ? AdlAssessItem.ADAPTER.encodedSizeWithTag(13, value.face) : 0)
          + (value.wear != null ? AdlAssessItem.ADAPTER.encodedSizeWithTag(14, value.wear) : 0)
          + (value.faec != null ? AdlAssessItem.ADAPTER.encodedSizeWithTag(15, value.faec) : 0)
          + (value.pee != null ? AdlAssessItem.ADAPTER.encodedSizeWithTag(16, value.pee) : 0)
          + (value.toilet != null ? AdlAssessItem.ADAPTER.encodedSizeWithTag(17, value.toilet) : 0)
          + (value.carry != null ? AdlAssessItem.ADAPTER.encodedSizeWithTag(18, value.carry) : 0)
          + (value.walk != null ? AdlAssessItem.ADAPTER.encodedSizeWithTag(19, value.walk) : 0)
          + (value.stair != null ? AdlAssessItem.ADAPTER.encodedSizeWithTag(20, value.stair) : 0)
          + (value.score != null ? ProtoAdapter.UINT64.encodedSizeWithTag(21, value.score) : 0)
          + value.unknownFields().size();
    }

    @Override
    public void encode(ProtoWriter writer, GetInsureAssessADLlRsp value) throws IOException {
      if (value.insureNO != null) ProtoAdapter.STRING.encodeWithTag(writer, 1, value.insureNO);
      if (value.judge != null) ProtoAdapter.UINT32.encodeWithTag(writer, 2, value.judge);
      if (value.timeSort != null) ProtoAdapter.UINT64.encodeWithTag(writer, 3, value.timeSort);
      if (value.id != null) ProtoAdapter.UINT64.encodeWithTag(writer, 4, value.id);
      if (value.createStaffId != null) ProtoAdapter.UINT64.encodeWithTag(writer, 5, value.createStaffId);
      if (value.createStaffName != null) ProtoAdapter.STRING.encodeWithTag(writer, 6, value.createStaffName);
      if (value.idcard != null) ProtoAdapter.STRING.encodeWithTag(writer, 7, value.idcard);
      if (value.userId != null) ProtoAdapter.UINT64.encodeWithTag(writer, 8, value.userId);
      if (value.assessType != null) ProtoAdapter.UINT64.encodeWithTag(writer, 9, value.assessType);
      if (value.createTime != null) ProtoAdapter.STRING.encodeWithTag(writer, 10, value.createTime);
      if (value.eat != null) AdlAssessItem.ADAPTER.encodeWithTag(writer, 11, value.eat);
      if (value.water != null) AdlAssessItem.ADAPTER.encodeWithTag(writer, 12, value.water);
      if (value.face != null) AdlAssessItem.ADAPTER.encodeWithTag(writer, 13, value.face);
      if (value.wear != null) AdlAssessItem.ADAPTER.encodeWithTag(writer, 14, value.wear);
      if (value.faec != null) AdlAssessItem.ADAPTER.encodeWithTag(writer, 15, value.faec);
      if (value.pee != null) AdlAssessItem.ADAPTER.encodeWithTag(writer, 16, value.pee);
      if (value.toilet != null) AdlAssessItem.ADAPTER.encodeWithTag(writer, 17, value.toilet);
      if (value.carry != null) AdlAssessItem.ADAPTER.encodeWithTag(writer, 18, value.carry);
      if (value.walk != null) AdlAssessItem.ADAPTER.encodeWithTag(writer, 19, value.walk);
      if (value.stair != null) AdlAssessItem.ADAPTER.encodeWithTag(writer, 20, value.stair);
      if (value.score != null) ProtoAdapter.UINT64.encodeWithTag(writer, 21, value.score);
      writer.writeBytes(value.unknownFields());
    }

    @Override
    public GetInsureAssessADLlRsp decode(ProtoReader reader) throws IOException {
      Builder builder = new Builder();
      long token = reader.beginMessage();
      for (int tag; (tag = reader.nextTag()) != -1;) {
        switch (tag) {
          case 1: builder.insureNO(ProtoAdapter.STRING.decode(reader)); break;
          case 2: builder.judge(ProtoAdapter.UINT32.decode(reader)); break;
          case 3: builder.timeSort(ProtoAdapter.UINT64.decode(reader)); break;
          case 4: builder.id(ProtoAdapter.UINT64.decode(reader)); break;
          case 5: builder.createStaffId(ProtoAdapter.UINT64.decode(reader)); break;
          case 6: builder.createStaffName(ProtoAdapter.STRING.decode(reader)); break;
          case 7: builder.idcard(ProtoAdapter.STRING.decode(reader)); break;
          case 8: builder.userId(ProtoAdapter.UINT64.decode(reader)); break;
          case 9: builder.assessType(ProtoAdapter.UINT64.decode(reader)); break;
          case 10: builder.createTime(ProtoAdapter.STRING.decode(reader)); break;
          case 11: builder.eat(AdlAssessItem.ADAPTER.decode(reader)); break;
          case 12: builder.water(AdlAssessItem.ADAPTER.decode(reader)); break;
          case 13: builder.face(AdlAssessItem.ADAPTER.decode(reader)); break;
          case 14: builder.wear(AdlAssessItem.ADAPTER.decode(reader)); break;
          case 15: builder.faec(AdlAssessItem.ADAPTER.decode(reader)); break;
          case 16: builder.pee(AdlAssessItem.ADAPTER.decode(reader)); break;
          case 17: builder.toilet(AdlAssessItem.ADAPTER.decode(reader)); break;
          case 18: builder.carry(AdlAssessItem.ADAPTER.decode(reader)); break;
          case 19: builder.walk(AdlAssessItem.ADAPTER.decode(reader)); break;
          case 20: builder.stair(AdlAssessItem.ADAPTER.decode(reader)); break;
          case 21: builder.score(ProtoAdapter.UINT64.decode(reader)); break;
          default: {
            FieldEncoding fieldEncoding = reader.peekFieldEncoding();
            Object value = fieldEncoding.rawProtoAdapter().decode(reader);
            builder.addUnknownField(tag, fieldEncoding, value);
          }
        }
      }
      reader.endMessage(token);
      return builder.build();
    }

    @Override
    public GetInsureAssessADLlRsp redact(GetInsureAssessADLlRsp value) {
      Builder builder = value.newBuilder();
      if (builder.eat != null) builder.eat = AdlAssessItem.ADAPTER.redact(builder.eat);
      if (builder.water != null) builder.water = AdlAssessItem.ADAPTER.redact(builder.water);
      if (builder.face != null) builder.face = AdlAssessItem.ADAPTER.redact(builder.face);
      if (builder.wear != null) builder.wear = AdlAssessItem.ADAPTER.redact(builder.wear);
      if (builder.faec != null) builder.faec = AdlAssessItem.ADAPTER.redact(builder.faec);
      if (builder.pee != null) builder.pee = AdlAssessItem.ADAPTER.redact(builder.pee);
      if (builder.toilet != null) builder.toilet = AdlAssessItem.ADAPTER.redact(builder.toilet);
      if (builder.carry != null) builder.carry = AdlAssessItem.ADAPTER.redact(builder.carry);
      if (builder.walk != null) builder.walk = AdlAssessItem.ADAPTER.redact(builder.walk);
      if (builder.stair != null) builder.stair = AdlAssessItem.ADAPTER.redact(builder.stair);
      builder.clearUnknownFields();
      return builder.build();
    }
  }
}
