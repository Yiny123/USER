// Code generated by Wire protocol buffer compiler, do not edit.
// Source file: AppInterface.proto at 196:1
package com.yijianyi.protocol;

import com.squareup.wire.FieldEncoding;
import com.squareup.wire.Message;
import com.squareup.wire.ProtoAdapter;
import com.squareup.wire.ProtoReader;
import com.squareup.wire.ProtoWriter;
import com.squareup.wire.WireField;
import com.squareup.wire.internal.Internal;
import java.io.IOException;
import java.lang.Boolean;
import java.lang.Object;
import java.lang.Override;
import java.lang.String;
import java.lang.StringBuilder;
import java.util.List;
import okio.ByteString;

public final class GetOrgListRsp extends Message<GetOrgListRsp, GetOrgListRsp.Builder> {
  public static final ProtoAdapter<GetOrgListRsp> ADAPTER = new ProtoAdapter_GetOrgListRsp();

  private static final long serialVersionUID = 0L;

  public static final Boolean DEFAULT_ISLOCATIONVALID = false;

  /**
   * 机构和距离封装体 列表
   */
  @WireField(
      tag = 1,
      adapter = "com.yijianyi.protocol.OrgDistanceModel#ADAPTER",
      label = WireField.Label.REPEATED
  )
  public final List<OrgDistanceModel> orgList;

  /**
   * 定位信息是否可用 如果false 则不显示最近的一家医院
   */
  @WireField(
      tag = 2,
      adapter = "com.squareup.wire.ProtoAdapter#BOOL"
  )
  public final Boolean isLocationValid;

  public GetOrgListRsp(List<OrgDistanceModel> orgList, Boolean isLocationValid) {
    this(orgList, isLocationValid, ByteString.EMPTY);
  }

  public GetOrgListRsp(List<OrgDistanceModel> orgList, Boolean isLocationValid, ByteString unknownFields) {
    super(ADAPTER, unknownFields);
    this.orgList = Internal.immutableCopyOf("orgList", orgList);
    this.isLocationValid = isLocationValid;
  }

  @Override
  public Builder newBuilder() {
    Builder builder = new Builder();
    builder.orgList = Internal.copyOf("orgList", orgList);
    builder.isLocationValid = isLocationValid;
    builder.addUnknownFields(unknownFields());
    return builder;
  }

  @Override
  public boolean equals(Object other) {
    if (other == this) return true;
    if (!(other instanceof GetOrgListRsp)) return false;
    GetOrgListRsp o = (GetOrgListRsp) other;
    return unknownFields().equals(o.unknownFields())
        && orgList.equals(o.orgList)
        && Internal.equals(isLocationValid, o.isLocationValid);
  }

  @Override
  public int hashCode() {
    int result = super.hashCode;
    if (result == 0) {
      result = unknownFields().hashCode();
      result = result * 37 + orgList.hashCode();
      result = result * 37 + (isLocationValid != null ? isLocationValid.hashCode() : 0);
      super.hashCode = result;
    }
    return result;
  }

  @Override
  public String toString() {
    StringBuilder builder = new StringBuilder();
    if (!orgList.isEmpty()) builder.append(", orgList=").append(orgList);
    if (isLocationValid != null) builder.append(", isLocationValid=").append(isLocationValid);
    return builder.replace(0, 2, "GetOrgListRsp{").append('}').toString();
  }

  public static final class Builder extends Message.Builder<GetOrgListRsp, Builder> {
    public List<OrgDistanceModel> orgList;

    public Boolean isLocationValid;

    public Builder() {
      orgList = Internal.newMutableList();
    }

    /**
     * 机构和距离封装体 列表
     */
    public Builder orgList(List<OrgDistanceModel> orgList) {
      Internal.checkElementsNotNull(orgList);
      this.orgList = orgList;
      return this;
    }

    /**
     * 定位信息是否可用 如果false 则不显示最近的一家医院
     */
    public Builder isLocationValid(Boolean isLocationValid) {
      this.isLocationValid = isLocationValid;
      return this;
    }

    @Override
    public GetOrgListRsp build() {
      return new GetOrgListRsp(orgList, isLocationValid, super.buildUnknownFields());
    }
  }

  private static final class ProtoAdapter_GetOrgListRsp extends ProtoAdapter<GetOrgListRsp> {
    ProtoAdapter_GetOrgListRsp() {
      super(FieldEncoding.LENGTH_DELIMITED, GetOrgListRsp.class);
    }

    @Override
    public int encodedSize(GetOrgListRsp value) {
      return OrgDistanceModel.ADAPTER.asRepeated().encodedSizeWithTag(1, value.orgList)
          + (value.isLocationValid != null ? ProtoAdapter.BOOL.encodedSizeWithTag(2, value.isLocationValid) : 0)
          + value.unknownFields().size();
    }

    @Override
    public void encode(ProtoWriter writer, GetOrgListRsp value) throws IOException {
      OrgDistanceModel.ADAPTER.asRepeated().encodeWithTag(writer, 1, value.orgList);
      if (value.isLocationValid != null) ProtoAdapter.BOOL.encodeWithTag(writer, 2, value.isLocationValid);
      writer.writeBytes(value.unknownFields());
    }

    @Override
    public GetOrgListRsp decode(ProtoReader reader) throws IOException {
      Builder builder = new Builder();
      long token = reader.beginMessage();
      for (int tag; (tag = reader.nextTag()) != -1;) {
        switch (tag) {
          case 1: builder.orgList.add(OrgDistanceModel.ADAPTER.decode(reader)); break;
          case 2: builder.isLocationValid(ProtoAdapter.BOOL.decode(reader)); break;
          default: {
            FieldEncoding fieldEncoding = reader.peekFieldEncoding();
            Object value = fieldEncoding.rawProtoAdapter().decode(reader);
            builder.addUnknownField(tag, fieldEncoding, value);
          }
        }
      }
      reader.endMessage(token);
      return builder.build();
    }

    @Override
    public GetOrgListRsp redact(GetOrgListRsp value) {
      Builder builder = value.newBuilder();
      Internal.redactElements(builder.orgList, OrgDistanceModel.ADAPTER);
      builder.clearUnknownFields();
      return builder.build();
    }
  }
}
