// Code generated by Wire protocol buffer compiler, do not edit.
// Source file: OrderModel.proto at 454:1
package com.yijianyi.protocol;

import com.squareup.wire.FieldEncoding;
import com.squareup.wire.Message;
import com.squareup.wire.ProtoAdapter;
import com.squareup.wire.ProtoReader;
import com.squareup.wire.ProtoWriter;
import com.squareup.wire.WireField;
import com.squareup.wire.internal.Internal;
import java.io.IOException;
import java.lang.Long;
import java.lang.Object;
import java.lang.Override;
import java.lang.String;
import java.lang.StringBuilder;
import java.util.List;
import okio.ByteString;

/**
 * 用于支付详情页展示套餐明细
 */
public final class OrderItemVO3 extends Message<OrderItemVO3, OrderItemVO3.Builder> {
  public static final ProtoAdapter<OrderItemVO3> ADAPTER = new ProtoAdapter_OrderItemVO3();

  private static final long serialVersionUID = 0L;

  public static final String DEFAULT_SERVICE = "";

  public static final Long DEFAULT_TOTALCOST = 0L;

  public static final String DEFAULT_TOTALCOSTSTR = "";

  /**
   * 服务内容
   */
  @WireField(
      tag = 1,
      adapter = "com.squareup.wire.ProtoAdapter#STRING"
  )
  public final String service;

  /**
   * 总费用
   */
  @WireField(
      tag = 2,
      adapter = "com.squareup.wire.ProtoAdapter#UINT64"
  )
  public final Long totalCost;

  /**
   * 总费用
   */
  @WireField(
      tag = 3,
      adapter = "com.squareup.wire.ProtoAdapter#STRING"
  )
  public final String totalCostStr;

  /**
   * 基础服务
   */
  @WireField(
      tag = 4,
      adapter = "com.yijianyi.protocol.OrderItemVO2#ADAPTER",
      label = WireField.Label.REPEATED
  )
  public final List<OrderItemVO2> serviceList;

  public OrderItemVO3(String service, Long totalCost, String totalCostStr, List<OrderItemVO2> serviceList) {
    this(service, totalCost, totalCostStr, serviceList, ByteString.EMPTY);
  }

  public OrderItemVO3(String service, Long totalCost, String totalCostStr, List<OrderItemVO2> serviceList, ByteString unknownFields) {
    super(ADAPTER, unknownFields);
    this.service = service;
    this.totalCost = totalCost;
    this.totalCostStr = totalCostStr;
    this.serviceList = Internal.immutableCopyOf("serviceList", serviceList);
  }

  @Override
  public Builder newBuilder() {
    Builder builder = new Builder();
    builder.service = service;
    builder.totalCost = totalCost;
    builder.totalCostStr = totalCostStr;
    builder.serviceList = Internal.copyOf("serviceList", serviceList);
    builder.addUnknownFields(unknownFields());
    return builder;
  }

  @Override
  public boolean equals(Object other) {
    if (other == this) return true;
    if (!(other instanceof OrderItemVO3)) return false;
    OrderItemVO3 o = (OrderItemVO3) other;
    return unknownFields().equals(o.unknownFields())
        && Internal.equals(service, o.service)
        && Internal.equals(totalCost, o.totalCost)
        && Internal.equals(totalCostStr, o.totalCostStr)
        && serviceList.equals(o.serviceList);
  }

  @Override
  public int hashCode() {
    int result = super.hashCode;
    if (result == 0) {
      result = unknownFields().hashCode();
      result = result * 37 + (service != null ? service.hashCode() : 0);
      result = result * 37 + (totalCost != null ? totalCost.hashCode() : 0);
      result = result * 37 + (totalCostStr != null ? totalCostStr.hashCode() : 0);
      result = result * 37 + serviceList.hashCode();
      super.hashCode = result;
    }
    return result;
  }

  @Override
  public String toString() {
    StringBuilder builder = new StringBuilder();
    if (service != null) builder.append(", service=").append(service);
    if (totalCost != null) builder.append(", totalCost=").append(totalCost);
    if (totalCostStr != null) builder.append(", totalCostStr=").append(totalCostStr);
    if (!serviceList.isEmpty()) builder.append(", serviceList=").append(serviceList);
    return builder.replace(0, 2, "OrderItemVO3{").append('}').toString();
  }

  public static final class Builder extends Message.Builder<OrderItemVO3, Builder> {
    public String service;

    public Long totalCost;

    public String totalCostStr;

    public List<OrderItemVO2> serviceList;

    public Builder() {
      serviceList = Internal.newMutableList();
    }

    /**
     * 服务内容
     */
    public Builder service(String service) {
      this.service = service;
      return this;
    }

    /**
     * 总费用
     */
    public Builder totalCost(Long totalCost) {
      this.totalCost = totalCost;
      return this;
    }

    /**
     * 总费用
     */
    public Builder totalCostStr(String totalCostStr) {
      this.totalCostStr = totalCostStr;
      return this;
    }

    /**
     * 基础服务
     */
    public Builder serviceList(List<OrderItemVO2> serviceList) {
      Internal.checkElementsNotNull(serviceList);
      this.serviceList = serviceList;
      return this;
    }

    @Override
    public OrderItemVO3 build() {
      return new OrderItemVO3(service, totalCost, totalCostStr, serviceList, super.buildUnknownFields());
    }
  }

  private static final class ProtoAdapter_OrderItemVO3 extends ProtoAdapter<OrderItemVO3> {
    ProtoAdapter_OrderItemVO3() {
      super(FieldEncoding.LENGTH_DELIMITED, OrderItemVO3.class);
    }

    @Override
    public int encodedSize(OrderItemVO3 value) {
      return (value.service != null ? ProtoAdapter.STRING.encodedSizeWithTag(1, value.service) : 0)
          + (value.totalCost != null ? ProtoAdapter.UINT64.encodedSizeWithTag(2, value.totalCost) : 0)
          + (value.totalCostStr != null ? ProtoAdapter.STRING.encodedSizeWithTag(3, value.totalCostStr) : 0)
          + OrderItemVO2.ADAPTER.asRepeated().encodedSizeWithTag(4, value.serviceList)
          + value.unknownFields().size();
    }

    @Override
    public void encode(ProtoWriter writer, OrderItemVO3 value) throws IOException {
      if (value.service != null) ProtoAdapter.STRING.encodeWithTag(writer, 1, value.service);
      if (value.totalCost != null) ProtoAdapter.UINT64.encodeWithTag(writer, 2, value.totalCost);
      if (value.totalCostStr != null) ProtoAdapter.STRING.encodeWithTag(writer, 3, value.totalCostStr);
      OrderItemVO2.ADAPTER.asRepeated().encodeWithTag(writer, 4, value.serviceList);
      writer.writeBytes(value.unknownFields());
    }

    @Override
    public OrderItemVO3 decode(ProtoReader reader) throws IOException {
      Builder builder = new Builder();
      long token = reader.beginMessage();
      for (int tag; (tag = reader.nextTag()) != -1;) {
        switch (tag) {
          case 1: builder.service(ProtoAdapter.STRING.decode(reader)); break;
          case 2: builder.totalCost(ProtoAdapter.UINT64.decode(reader)); break;
          case 3: builder.totalCostStr(ProtoAdapter.STRING.decode(reader)); break;
          case 4: builder.serviceList.add(OrderItemVO2.ADAPTER.decode(reader)); break;
          default: {
            FieldEncoding fieldEncoding = reader.peekFieldEncoding();
            Object value = fieldEncoding.rawProtoAdapter().decode(reader);
            builder.addUnknownField(tag, fieldEncoding, value);
          }
        }
      }
      reader.endMessage(token);
      return builder.build();
    }

    @Override
    public OrderItemVO3 redact(OrderItemVO3 value) {
      Builder builder = value.newBuilder();
      Internal.redactElements(builder.serviceList, OrderItemVO2.ADAPTER);
      builder.clearUnknownFields();
      return builder.build();
    }
  }
}
